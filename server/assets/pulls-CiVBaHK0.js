var pulls_default = JSON.parse("[{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/1\",\"id\":2656202951,\"node_id\":\"PR_kwDOPJuWzM6eUnDH\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/1\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/1.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/1.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/1\",\"number\":1,\"state\":\"open\",\"locked\":false,\"title\":\"[9팀 학습메이트] [Chapter 1-2] 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"susmisc14\",\"id\":215831300,\"node_id\":\"U_kgDODN1TBA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/215831300?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/susmisc14\",\"html_url\":\"https://github.com/susmisc14\",\"followers_url\":\"https://api.github.com/users/susmisc14/followers\",\"following_url\":\"https://api.github.com/users/susmisc14/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/susmisc14/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/susmisc14/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/susmisc14/subscriptions\",\"organizations_url\":\"https://api.github.com/users/susmisc14/orgs\",\"repos_url\":\"https://api.github.com/users/susmisc14/repos\",\"events_url\":\"https://api.github.com/users/susmisc14/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/susmisc14/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-10T14:39:40Z\",\"updated_at\":\"2025-07-17T06:58:13Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":null,\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/1/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/1/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/1/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/d617e3eb08befe5d9c8620b20718bbf72838e6a4\",\"head\":{\"label\":\"susmisc14:main\",\"ref\":\"main\",\"sha\":\"d617e3eb08befe5d9c8620b20718bbf72838e6a4\",\"user\":{\"login\":\"susmisc14\",\"id\":215831300,\"node_id\":\"U_kgDODN1TBA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/215831300?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/susmisc14\",\"html_url\":\"https://github.com/susmisc14\",\"followers_url\":\"https://api.github.com/users/susmisc14/followers\",\"following_url\":\"https://api.github.com/users/susmisc14/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/susmisc14/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/susmisc14/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/susmisc14/subscriptions\",\"organizations_url\":\"https://api.github.com/users/susmisc14/orgs\",\"repos_url\":\"https://api.github.com/users/susmisc14/repos\",\"events_url\":\"https://api.github.com/users/susmisc14/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/susmisc14/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1017434279,\"node_id\":\"R_kgDOPKTQpw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"susmisc14/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"susmisc14\",\"id\":215831300,\"node_id\":\"U_kgDODN1TBA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/215831300?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/susmisc14\",\"html_url\":\"https://github.com/susmisc14\",\"followers_url\":\"https://api.github.com/users/susmisc14/followers\",\"following_url\":\"https://api.github.com/users/susmisc14/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/susmisc14/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/susmisc14/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/susmisc14/subscriptions\",\"organizations_url\":\"https://api.github.com/users/susmisc14/orgs\",\"repos_url\":\"https://api.github.com/users/susmisc14/repos\",\"events_url\":\"https://api.github.com/users/susmisc14/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/susmisc14/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/susmisc14/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/susmisc14/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-10T14:24:04Z\",\"updated_at\":\"2025-07-17T13:55:31Z\",\"pushed_at\":\"2025-07-17T13:54:34Z\",\"git_url\":\"git://github.com/susmisc14/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:susmisc14/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/susmisc14/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/susmisc14/front_6th_chapter1-2\",\"homepage\":\"https://susmisc14.github.io/front_6th_chapter1-2/\",\"size\":312,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/1\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/1\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/1\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/1/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/1/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/1/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/d617e3eb08befe5d9c8620b20718bbf72838e6a4\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/2\",\"id\":2660976773,\"node_id\":\"PR_kwDOPJuWzM6em0iF\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/2\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/2.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/2.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/2\",\"number\":2,\"state\":\"open\",\"locked\":false,\"title\":\"[9팀 신홍준] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"jun17183\",\"id\":64164782,\"node_id\":\"MDQ6VXNlcjY0MTY0Nzgy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/64164782?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/jun17183\",\"html_url\":\"https://github.com/jun17183\",\"followers_url\":\"https://api.github.com/users/jun17183/followers\",\"following_url\":\"https://api.github.com/users/jun17183/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jun17183/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jun17183/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jun17183/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jun17183/orgs\",\"repos_url\":\"https://api.github.com/users/jun17183/repos\",\"events_url\":\"https://api.github.com/users/jun17183/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jun17183/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://jun17183.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n---\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n이번 과제는 테스트 코드를 요구사항 명세서처럼 참고하며 순차적으로 진행하면 수월하게 통과할 수 있는 과제였습니다. 난이도가 상대적으로 이전 주차보다 쉽고 진행방향이 명확하기에 1주차보다 좀 더 체계적이면서 개념을 잘 익힐 수 있도록 문서로 정리해 가며 진행하기로 했습니다.\\r\\n\\r\\n우선 AI에게 과제의 주제와 목표에 대해 설명했습니다. 가상 돔을 구현하는 과제로, UI나 서비스 등은 미리 구현이 되어 있는 템플릿이 주어지며 내용이 비어있는 함수를 구현하면 된다고 알려주었습니다. 목표는 basic 테스트를 우선으로 advanced를 거쳐 e2e 테스트까지 성공하는 것이며, 하나의 테스트 케이스씩 통과하기 위해 코드를 추가하는 방향으로 진행해 달라고 하였습니다. 또한 각 함수 구현에 앞서 중요한 개념 학습을 먼저 거친 후에 코드를 작성하였습니다.\\r\\n\\r\\n예시)\\r\\nQ. createVNode를 구현하기 전에 이해가 부족한 거 같아. 가상 돔을 만들기 위한 객체를 만드는 역할 정도로만 이해하고 있어. 하지만 왜 평탄화가 필요한지, 언제 호출되는지 등은 모르겠어.\\r\\nA. (평탄화가 필요한 이유...) (JSX (설계도) → createVNode (부품 정리) → createElement (실제 조립)...)\\r\\n\\r\\nQ. 평탄화를 하지 않은 채로 createElement를 호출한다면?\\r\\nA. 매번 타입을 체크할 필요 없이 일관되게 처리 가능. 성능에 큰 차이는 없지만 불변 조건을 만들어 단순성을 보장하고 버그를 방지\\r\\n\\r\\n테스트 코드) null, undefined, boolean 값은 빈 문자열로 변환되어야 한다.\\r\\n코드 추가) \\r\\n```js\\r\\nif (vNode === null || vNode === undefined || typeof vNode === 'boolean') {\\r\\n  return \\\"\\\";\\r\\n}\\r\\n// 여기까지 추가하고 다음 테스트 진행\\r\\n```\\r\\n\\r\\n코드 작성 진행 전 아래와 같이 문서를 작성하였고, 테스트 코드를 하나씩 통과하며 문서를 업데이트 하였습니다.\\r\\n\\r\\n<details>\\r\\n<summary>createVNode</summary>\\r\\ncreateVNode는 파싱된 jsx로부터 노드 정보를 받아 가상 노드 객체로 바꾸어 주는 함수\\r\\n\\r\\n#### 구성 요소\\r\\n\\r\\n1. type: text나 div와 같은 태그명\\r\\n2. props: 태그 속성\\r\\n3. children: 자식 node\\r\\n\\r\\n#### 평탄화\\r\\n\\r\\n평탄화는 중첩된 배열을 하나의 평평한 배열로 만드는 과정을 말한다.\\r\\n\\r\\n```jsx\\r\\nconst items = ['apple', 'banana'];\\r\\n\\r\\n<ul> \\r\\n\\t{items.map(item => <li key={item}>{item}</li>)} \\r\\n</ul>\\r\\n```\\r\\n\\r\\n위와 같은 jsx가 있을 때 평탄화 하기 전 객체는 아래와 같다.\\r\\n\\r\\n```js\\r\\n{\\r\\n  \\\"type\\\": \\\"ul\\\",\\r\\n  \\\"props\\\": null,\\r\\n  \\\"children\\\": [\\r\\n    [\\r\\n      {\\r\\n        \\\"type\\\": \\\"li\\\",\\r\\n        \\\"props\\\": null,\\r\\n        \\\"children\\\": [\\r\\n          \\\"apple\\\"\\r\\n        ]\\r\\n      },\\r\\n      {\\r\\n        \\\"type\\\": \\\"li\\\",\\r\\n        \\\"props\\\": null,\\r\\n        \\\"children\\\": [\\r\\n          \\\"banana\\\"\\r\\n        ]\\r\\n      }\\r\\n    ]\\r\\n  ]\\r\\n}\\r\\n```\\r\\n\\r\\n이 객체를 평탄화하지 않은 채로 실제 DOM에 적용하려면 아래와 같이 코드가 복잡해진다.\\r\\n\\r\\n```js\\r\\n// 1. 평탄화 없는 createVNode \\r\\nfunction createVNodeWithoutFlatten(type, props, ...children) { \\r\\n\\treturn { type, props, children }; \\r\\n}\\r\\n\\r\\n// 3. createElement 함수 (평탄화 X) \\r\\nfunction createElement(vNode) { \\r\\n\\tconsole.log('createElement 호출:', vNode); \\r\\n\\t\\r\\n\\tif (typeof vNode === 'string' || typeof vNode === 'number') { \\r\\n\\t\\treturn document.createTextNode(vNode); \\r\\n\\t} \\r\\n\\t\\r\\n\\tif (Array.isArray(vNode)) { \\r\\n\\t\\t// 복잡한 로직 필요 \\r\\n\\t\\tconst fragment = document.createDocumentFragment(); \\r\\n\\t\\tvNode.forEach(child => { \\r\\n\\t\\t\\tfragment.appendChild(createElement(child)); \\r\\n\\t\\t}); \\r\\n\\t\\treturn fragment; \\r\\n\\t} \\r\\n\\t\\r\\n\\tconst element = document.createElement(vNode.type); \\r\\n\\t\\r\\n\\t// 속성 처리 \\r\\n\\tif (vNode.props) { \\r\\n\\t\\tObject.entries(vNode.props).forEach(([key, value]) => { \\r\\n\\t\\t\\tif (key === 'className') { \\r\\n\\t\\t\\t\\telement.className = value; \\r\\n\\t\\t\\t} else { \\r\\n\\t\\t\\t\\telement.setAttribute(key, value); \\r\\n\\t\\t\\t} \\r\\n\\t\\t}); \\r\\n\\t} \\r\\n\\t\\r\\n\\t// 자식 처리\\r\\n\\tvNode.children.forEach(child => { \\r\\n\\t\\ttry { \\r\\n\\t\\t\\telement.appendChild(createElement(child)); \\r\\n\\t\\t} catch (error) { \\r\\n\\t\\t\\tconsole.error('createElement 에러:', error.message);\\r\\n\\t\\t\\telement.appendChild(document.createTextNode(`[ERROR:${error.message}]`)); \\r\\n\\t\\t} \\r\\n\\t}); \\r\\n\\t\\t\\t\\r\\n\\treturn element; \\r\\n}\\r\\n```\\r\\n\\r\\n하지만 평탄화가 되어 있다면 아래와 같이 코드가 간단해진다.\\r\\n\\r\\n```js\\r\\n// 평탄화\\r\\nfunction flattenArray(arr) { \\r\\n\\tconst result = []; \\r\\n\\t\\r\\n\\tfor (const item of arr) { \\r\\n\\t\\tif (Array.isArray(item)) { \\r\\n\\t\\t\\tresult.push(...flattenArray(item)); \\r\\n\\t\\t} else { \\r\\n\\t\\t\\tresult.push(item); \\r\\n\\t\\t} \\r\\n\\t} \\r\\n\\t\\r\\n\\treturn result; \\r\\n}\\r\\n\\r\\n// vNode 생성\\r\\nfunction createVNodeWithFlatten(type, props, ...children) { \\r\\n\\treturn { \\r\\n\\t\\ttype, \\r\\n\\t\\tprops, \\r\\n\\t\\tchildren: flattenArray(children) \\r\\n\\t}; \\r\\n}\\r\\n\\r\\n// DOM 생성이 단순해짐 \\r\\nfunction createElement(vNode) { \\r\\n\\tif (typeof vNode === 'string') { \\r\\n\\t\\treturn document.createTextNode(vNode); \\r\\n\\t} \\r\\n\\t\\r\\n\\tconst element = document.createElement(vNode.type); \\r\\n\\t\\r\\n\\t// 배열 중첩 걱정 없이 단순하게 처리 \\r\\n\\tvNode.children.forEach(child => { \\r\\n\\t\\telement.appendChild(createElement(child)); \\r\\n\\t}); \\r\\n\\t\\r\\n\\treturn element; \\r\\n}\\r\\n```\\r\\n\\r\\n#### 구현 코드\\r\\n\\r\\n```js\\r\\nfunction flattenArray(arr) { \\r\\n\\tconst result = []; \\r\\n\\t\\r\\n\\tfor (const item of arr) { \\r\\n\\t\\tif (Array.isArray(item)) { \\r\\n\\t\\t\\tresult.push(...flattenArray(item)); \\r\\n\\t\\t} \\r\\n\\t\\t// jsx 파싱 결과 null, undefined, false가 arr에 들어갈 수도 있기에\\r\\n\\t\\t// 이를 걸러준다.\\r\\n\\t\\telse if (item !== null && item !== undefined && item !== false) {\\r\\n\\t\\t    result.push(item); \\r\\n\\t    }\\r\\n\\t} \\r\\n\\t\\r\\n\\treturn result; \\r\\n}\\r\\n\\r\\nexport function createVNode(type, props, ...children) {\\r\\n\\treturn {\\r\\n\\t\xA0 \xA0 type,\\r\\n\\t\xA0 \xA0 props,\\r\\n\\t\xA0 \xA0 children: flattenArray(children),\\r\\n\\t};\\r\\n}\\r\\n```\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>normalizeVNode</summary>\\r\\n\\r\\ncreateVNode가 jsx를 가상 노드(vNode)로 바꾸어 주는 함수라면 normalizeVNode는 vNode를 렌더링 가능한 형태로 변환하는 역할이다.\\r\\n\\r\\ncreateVNode 호출 시점은 컴파일 타임으로 배열 평탄화만을 담당하지만, normalizeVNode는 런타임(렌더링 직전) 시 호출하여 함수 컴포넌트 실행, 타입 변환, 재귀 정규화를 담당한다. 이때 함수 컴포넌트는 HTML 태그로 변환된다.\\r\\n\\r\\n> JSX → createVNode → normalizeVNode → createElement → DOM\\r\\n\\r\\n#### JSX와 함수형 컴포넌트\\r\\n\\r\\nnormalizeVNode 시 주의해야 할 점 첫 번째, 함수형 컴포넌트는 JSX의 children을 props로 받는다. 상세한 변환 과정은 아래와 같다.\\r\\n\\r\\n```jsx\\r\\n// JSX 원본\\r\\n<UnorderedList>\\r\\n\\t<li>Item 1</li>\\r\\n\\t<li>Item 2</li>\\r\\n</UnorderedList>\\r\\n```\\r\\n```jsx\\r\\n// 함수 컴포넌트 정의\\r\\nconst UnorderedList = ({ children }) => {\\r\\n\\t// children = [<li>Item 1</li>, <li>Item 2</li>]\\r\\n\\treturn <ul>{children}</ul>;\\r\\n};\\r\\n```\\r\\n```js\\r\\n// 1. JSX → createVNode 변환\\r\\ncreateVNode(UnorderedList, null,\\r\\n\\tcreateVNode('li', null, 'Item 1'),\\r\\n\\tcreateVNode('li', null, 'Item 2')\\r\\n);\\r\\n\\r\\n// 2. 결과 vNode 구조\\r\\n{\\r\\n\\ttype: UnorderedList,  // 함수\\r\\n\\tprops: null,\\r\\n\\tchildren: [           \\r\\n\\t\\t{ type: 'li', children: ['Item 1'] },\\r\\n\\t    { type: 'li', children: ['Item 2'] }\\r\\n\\t]\\r\\n}\\r\\n\\r\\n// 3. 함수 호출 시 children을 props로 전달\\r\\nUnorderedList({\\r\\n\\tchildren: [           // props.children으로 전달\\r\\n\\t    { type: 'li', children: ['Item 1'] },\\r\\n\\t    { type: 'li', children: ['Item 2'] }\\r\\n\\t]\\r\\n});\\r\\n```\\r\\n\\r\\n두 번째, 함수형 컴포넌트에서 children이 1개라면 배열 그대로 props에 넘겨줄 필요 없이 children 1개만 넘겨주면 처리를 줄일 수 있다.\\r\\n\\r\\n그래서 만약 vNode가 함수라면 아래와 같은 조건을 작성할 수 있다.\\r\\n\\r\\n```js\\r\\nif (vNode && typeof vNode === 'object' && typeof vNode.type === 'function') {\\r\\n    const props = vNode.props || {};\\r\\n    \\r\\n    // children을 props로 전달해야 함\\r\\n    if (vNode.children && vNode.children.length > 0) {\\r\\n\\t    // children이 있으면 props.children으로 전달\\r\\n\\t    props.children = vNode.children.length === 1 \\r\\n\\t\\t    ? vNode.children[0] \\r\\n\\t\\t    : vNode.children;\\r\\n    }\\r\\n\\r\\n    const result = vNode.type(props);\\r\\n    return normalizeVNode(result);\\r\\n}\\r\\n```\\r\\n\\r\\n#### 구현 코드\\r\\n\\r\\n```js\\r\\nexport function normalizeVNode(vNode) {\\r\\n\\t// 1. null, undefined, boolean → \\\"\\\"\\r\\n\\tif (vNode === null || vNode === undefined || typeof vNode === 'boolean') {\\r\\n\\t\\treturn \\\"\\\";\\r\\n\\t}\\r\\n\\r\\n\\t// 2. 문자열, 숫자 → 문자열\\r\\n\\tif (typeof vNode === 'string' || typeof vNode === 'number') {\\r\\n\\t    return String(vNode);\\r\\n\\t}\\r\\n\\r\\n\\t// 3. 함수형 컴포넌트 처리\\r\\n\\tif (vNode && typeof vNode === 'object' && typeof vNode.type === 'function') {\\r\\n\\t    const props = vNode.props || {};\\r\\n    \\r\\n\\t    // children을 props로 전달해야 함\\r\\n\\t    if (vNode.children && vNode.children.length > 0) {\\r\\n\\t\\t    // children이 있으면 props.children으로 전달\\r\\n\\t\\t\\tprops.children = vNode.children.length === 1 \\r\\n\\t\\t\\t\\t? vNode.children[0] \\r\\n\\t\\t\\t\\t: vNode.children;\\r\\n\\t\\t}\\r\\n\\t    \\r\\n\\t\\tconst result = vNode.type(props);\\r\\n\\t\\treturn normalizeVNode(result);\\r\\n\\t}\\r\\n  \\r\\n\\t// 4. 일반 vNode 객체 처리 (children 정규화)\\r\\n\\tif (vNode && typeof vNode === 'object' && vNode.children) {\\r\\n\\t    return {\\r\\n\\t\\t    ...vNode,\\r\\n\\t\\t    children: vNode.children\\r\\n\\t\\t        .map(child => normalizeVNode(child))\\r\\n\\t\\t        .filter(child => child !== \\\"\\\") // 빈 문자열 제거\\r\\n\\t    };\\r\\n\\t}\\r\\n\\r\\n\\treturn vNode;\\r\\n}\\r\\n```\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>createElement</summary>\\r\\n\\r\\nnormalizeVNode를 통해 변환된 정보를 가지고 DOM 요소로 변환하는 함수\\r\\n\\r\\n```js\\r\\n```js\\r\\n// vNode (메모리) → DOM 요소 (브라우저) \\r\\n{ type: \\\"div\\\", props: {...}, children: [...] } \\r\\n→ <div class=\\\"...\\\">...</div>\\r\\n```\\r\\n\\r\\n- `document.createElement()` - HTML 요소 생성\\r\\n- `document.createTextNode()` - 텍스트 노드 생성\\r\\n- `document.createDocumentFragment()` - 여러 요소 컨테이너\\r\\n- `element.appendChild()` - 자식 요소 추가\\r\\n- `element.setAttribute()` - 속성 설정\\r\\n\\r\\n#### DocumentFragment\\r\\n\\r\\n실제 DOM에 연결되지 않은 메모리 상의 노드로 임시 컨테이너 역할을 한다. DOM에 추가될 때 자신은 사라지고 내용만 남긴다.\\r\\n\\r\\n> 왜 사용하는가?\\r\\n\\r\\n1. 성능 최적화\\r\\n\\r\\n```js\\r\\n// ❌ 비효율 (3번의 리플로우)\\r\\ncontainer.appendChild(div1);\\r\\ncontainer.appendChild(div2);  \\r\\ncontainer.appendChild(div3);\\r\\n\\r\\n// ✅ 효율 (1번의 리플로우)\\r\\nfragment.appendChild(div1);\\r\\nfragment.appendChild(div2);\\r\\nfragment.appendChild(div3);\\r\\ncontainer.appendChild(fragment);\\r\\n```\\r\\n\\r\\n2. 배열 처리\\r\\n\\r\\n```js\\r\\n// 가상 DOM에서 배열을 어떻게 DOM 노드로 변환할까?\\r\\n[vNode1, vNode2, vNode3]  // ← 이걸 뭘로 변환?\\r\\n\\r\\n// ❌ div로 감싸면 불필요한 태그 추가\\r\\n// ✅ Fragment 사용하면 깔끔하게 여러 요소 반환\\r\\n```\\r\\n\\r\\n3. 자기  소멸 특성\\r\\n\\r\\n```js\\r\\nfragment.appendChild(div1);\\r\\nfragment.appendChild(div2);\\r\\nconsole.log(fragment.childNodes.length); // 2\\r\\n\\r\\ndocument.body.appendChild(fragment);\\r\\nconsole.log(fragment.childNodes.length); // 0 (비워짐!)\\r\\n// div1, div2만 body에 남음, fragment는 사라짐\\r\\n```\\r\\n\\r\\n#### 구현 코드\\r\\n\\r\\n```js\\r\\nimport { addEvent } from \\\"./eventManager\\\";\\r\\n\\r\\nfunction updateAttributes($el, props) {\\r\\n  if (!props) return;\\r\\n  \\r\\n  Object.entries(props).forEach(([key, value]) => {\\r\\n    if (key.startsWith('on') && typeof value === 'function') {\\r\\n      // 이벤트는 addEvent 함수 사용\\r\\n      const eventType = key.slice(2).toLowerCase(); // onClick → click\\r\\n      addEvent($el, eventType, value);\\r\\n    } else if (key === 'className') {\\r\\n      $el.className = value;\\r\\n    } else if (key === 'style' && typeof value === 'object') {\\r\\n      Object.entries(value).forEach(([styleKey, styleValue]) => {\\r\\n        $el.style[styleKey] = styleValue;\\r\\n      });\\r\\n    } else if (typeof value === 'boolean') {\\r\\n      if (value) {\\r\\n        $el.setAttribute(key, '');\\r\\n      }\\r\\n    } else if (value != null) {\\r\\n      $el.setAttribute(key, String(value));\\r\\n    }\\r\\n  });\\r\\n}\\r\\n\\r\\nexport function createElement(vNode) {\\r\\n  // 1. Falsy 값 처리\\r\\n  if (vNode == null || typeof vNode === 'boolean') {\\r\\n    return document.createTextNode(\\\"\\\");\\r\\n  }\\r\\n  \\r\\n  // 2. 원시값 처리\\r\\n  if (typeof vNode === 'string' || typeof vNode === 'number') {\\r\\n    return document.createTextNode(String(vNode));\\r\\n  }\\r\\n\\r\\n  // 3. 배열 처리 - DocumentFragment 생성\\r\\n  if (Array.isArray(vNode)) {\\r\\n    const fragment = document.createDocumentFragment();\\r\\n    vNode.forEach(child => {\\r\\n      fragment.appendChild(createElement(child)); // 재귀 호출\\r\\n    });\\r\\n    return fragment;\\r\\n  }\\r\\n\\r\\n  // 4. 함수 컴포넌트 오류\\r\\n  if (vNode && typeof vNode === 'object' && typeof vNode.type === 'function') {\\r\\n    throw new Error('함수 컴포넌트는 normalizeVNode로 먼저 변환해야 합니다.');\\r\\n  }\\r\\n  \\r\\n  // 5. 일반 vNode\\r\\n  if (vNode && typeof vNode === 'object' && typeof vNode.type === 'string') {\\r\\n    const $el = document.createElement(vNode.type);\\r\\n    \\r\\n    // 기존 updateAttributes 함수 사용\\r\\n    updateAttributes($el, vNode.props);\\r\\n    \\r\\n    // children 처리\\r\\n    if (vNode.children) {\\r\\n      vNode.children.forEach(child => {\\r\\n        $el.appendChild(createElement(child));\\r\\n      });\\r\\n    }\\r\\n    \\r\\n    return $el;\\r\\n  }\\r\\n  \\r\\n  return document.createTextNode(\\\"\\\");\\r\\n}\\r\\n```\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>eventManager</summary>\\r\\n\\r\\neventManager는 이벤트 위임을 관리하는 함수\\r\\n\\r\\n1. `addEvent`: 핸들러를 eventStore에 저장\\r\\n2. `setupEventListeners`: 루트에 위임 리스너 등록\\r\\n3. 클릭 발생 → 버블링으로 루트까지 전파\\r\\n4. 위임 리스너가 e.target 확인 → eventStore에서 핸들러 찾아 실행\\r\\n5. `eventStore` 조회: 해당 요소의 핸들러 찾기\\r\\n6. 핸들러 실행: 모든 등록된 핸들러 호출\\r\\n\\r\\n> 이벤트 위임이란?\\r\\n\\r\\n개별 요소마나 이벤트 리스너를 등록하지 않고 공통 조상에 하나의 리스너만 등록하는 방식\\r\\n\\r\\n```js\\r\\n// ❌ 기존 방식 (개별 등록)\\r\\n<div id=\\\"container\\\">\\r\\n  <button id=\\\"btn1\\\">Button 1</button>\\r\\n  <button id=\\\"btn2\\\">Button 2</button>\\r\\n  <button id=\\\"btn3\\\">Button 3</button>\\r\\n</div>\\r\\n\\r\\n// 각각 개별 등록\\r\\nbtn1.addEventListener('click', handler1);\\r\\nbtn2.addEventListener('click', handler2);\\r\\nbtn3.addEventListener('click', handler3);\\r\\n\\r\\n// ✅ 이벤트 위임\\r\\n<div id=\\\"container\\\">\\r\\n  <button id=\\\"btn1\\\">Button 1</button>\\r\\n  <button id=\\\"btn2\\\">Button 2</button>\\r\\n  <button id=\\\"btn3\\\">Button 3</button>\\r\\n</div>\\r\\n\\r\\n// 조상에 하나만 등록\\r\\ncontainer.addEventListener('click', (e) => {\\r\\n  if (e.target.id === 'btn1') handler1(e);\\r\\n  if (e.target.id === 'btn2') handler2(e);\\r\\n  if (e.target.id === 'btn3') handler3(e);\\r\\n});\\r\\n\\r\\n```\\r\\n```html\\r\\n<!-- 이벤트 전파 과정 -->\\r\\n<div id=\\\"root\\\">   <!-- 여기서 이벤트 감지 -->\\r\\n  <section>\\r\\n    <article>\\r\\n      <button>클릭!</button>  <!-- 실제 클릭 -->\\r\\n    </article>\\r\\n  </section>\\r\\n</div>\\r\\n\\r\\n<!-- 이벤트 전파: button → article → section → div#root -->\\r\\n```\\r\\n\\r\\n#### 구현 코드\\r\\n\\r\\n```js\\r\\n// 전역 저장소들\\r\\nconst eventStore = new WeakMap();\\r\\nconst registeredRoots = new WeakSet();\\r\\n\\r\\nexport function setupEventListeners(root) {\\r\\n  // 이미 등록된 루트면 종료\\r\\n  if (registeredRoots.has(root)) return;\\r\\n  registeredRoots.add(root);\\r\\n\\r\\n  const eventTypes = [\\r\\n    'click',\\r\\n    'input', \\r\\n    'change',\\r\\n    'keydown',\\r\\n    'keyup',\\r\\n    'submit',\\r\\n    'mouseover',\\r\\n    'mouseout',\\r\\n    'mousedown',\\r\\n    'mouseup', \\r\\n    'focus',\\r\\n    'blur'\\r\\n  ];\\r\\n  \\r\\n  eventTypes.forEach(eventType => {\\r\\n    // 이벤트 위임 리스너 등록\\r\\n    root.addEventListener(eventType, (e) => {\\r\\n      let currentElement = e.target;\\r\\n      \\r\\n      // 타겟에서 루트까지 거슬러 올라가며 핸들러 찾기\\r\\n      while (currentElement && currentElement !== root.parentNode) {\\r\\n        const elementEvents = eventStore.get(currentElement);\\r\\n        \\r\\n        if (elementEvents) {\\r\\n          const handlers = elementEvents.get(eventType);\\r\\n          \\r\\n          if (handlers && handlers.size > 0) {\\r\\n            // 등록된 모든 핸들러 실행\\r\\n            handlers.forEach(handler => handler(e));\\r\\n            return; // 핸들러 발견시 즉시 중단\\r\\n          }\\r\\n        }\\r\\n        \\r\\n        currentElement = currentElement.parentNode;\\r\\n      }\\r\\n    }, false); // 버블링 단계에서 처리\\r\\n  });\\r\\n}\\r\\n\\r\\nexport function addEvent(element, eventType, handler) {\\r\\n  // 요소별 이벤트 맵 초기화\\r\\n  if (!eventStore.has(element)) {\\r\\n    eventStore.set(element, new Map());\\r\\n  }\\r\\n  \\r\\n  const elementEvents = eventStore.get(element);\\r\\n  \\r\\n  // 이벤트 타입별 핸들러 Set 초기화\\r\\n  if (!elementEvents.has(eventType)) {\\r\\n    elementEvents.set(eventType, new Set());\\r\\n  }\\r\\n  \\r\\n  // 핸들러 추가 (Set이 자동으로 중복 방지)\\r\\n  elementEvents.get(eventType).add(handler);\\r\\n}\\r\\n\\r\\nexport function removeEvent(element, eventType, handler) {\\r\\n  const elementEvents = eventStore.get(element);\\r\\n  if (!elementEvents) return;\\r\\n  \\r\\n  const handlers = elementEvents.get(eventType);\\r\\n  if (!handlers) return;\\r\\n  \\r\\n  // 핸들러 제거\\r\\n  handlers.delete(handler);\\r\\n  \\r\\n  // 메모리 정리: 빈 구조 제거\\r\\n  if (handlers.size === 0) {\\r\\n    elementEvents.delete(eventType);\\r\\n    if (elementEvents.size === 0) {\\r\\n      eventStore.delete(element);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>renderElement</summary>\\r\\n\\r\\nrenderElement는 지금까지의 가상 DOM 시스템의 최종 실행자. 모든 것을 통합하여 실제 화면을 만드는 핵심 함수\\r\\n\\r\\n> 지금까지의 흐름\\r\\n\\r\\nJSX → babel로 파싱 → createVNode(자동) → renderElement(App 렌더링 시 개발자가 호출) → 내부에서 normalizeVNode → createElement → setupEventListeners\\r\\n\\r\\n#### 구현 코드\\r\\n\\r\\n```js\\r\\nimport { setupEventListeners } from \\\"./eventManager\\\";\\r\\nimport { createElement } from \\\"./createElement\\\";\\r\\nimport { normalizeVNode } from \\\"./normalizeVNode\\\";\\r\\nimport { updateElement } from \\\"./updateElement\\\";\\r\\n\\r\\nexport function renderElement(vNode, container) {\\r\\n  // 1. vNode 정규화\\r\\n  const normalizedVNode = normalizeVNode(vNode);\\r\\n  \\r\\n  // 2. 초기 렌더링 여부 확인\\r\\n  const isInitialRender = !container._vNode;\\r\\n  \\r\\n  if (isInitialRender) {\\r\\n    // 3. 최초 렌더링\\r\\n    container.innerHTML = '';\\r\\n    const domElement = createElement(normalizedVNode);\\r\\n    container.appendChild(domElement);\\r\\n  } else {\\r\\n    // 4. 업데이트 렌더링: updateElement 사용\\r\\n    updateElement(container, normalizedVNode, container._vNode, 0);\\r\\n  }\\r\\n  \\r\\n  // 5. 이전 vNode 저장\\r\\n  container._vNode = normalizedVNode;\\r\\n  \\r\\n  // 6. 이벤트 위임 설정\\r\\n  setupEventListeners(container);\\r\\n}\\r\\n```\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>updateAttributes</summary>\\r\\n\\r\\nDOM 요소의 속성들을 이전 상태와 새로운 상태를 비교해서 필요한 부분만 업데이트 하는 함수\\r\\n\\r\\n1. 일반 속성\\r\\n\\r\\n```js\\r\\n// 예시: id, data-*, aria-* 등\\r\\noldProps: { id: \\\"old-id\\\" }\\r\\nnewProps: { id: \\\"new-id\\\" }\\r\\n→ element.setAttribute('id', 'new-id')\\r\\n```\\r\\n\\r\\n2. className 속성\\r\\n\\r\\n```js\\r\\n// 특별 처리 필요\\r\\noldProps: { className: \\\"old-class\\\" }\\r\\nnewProps: { className: \\\"new-class\\\" }\\r\\n→ element.className = \\\"new-class\\\"\\r\\n\\r\\n// 제거 시\\r\\nnewProps: {} // className 없음\\r\\n→ element.removeAttribute('class')\\r\\n```\\r\\n\\r\\n3. checked, selected\\r\\n\\r\\n```js\\r\\noldProps: { checked: false }\\r\\nnewProps: { checked: true }\\r\\n→ element.checked = true   // property 설정\\r\\n```\\r\\n\\r\\n4. disabled, readonly\\r\\n\\r\\n```js\\r\\noldProps: { disabled: false }\\r\\nnewProps: { disabled: true }\\r\\n→ element.disabled= true        // property 설정\\r\\n→ element.setAttribute('disabled', '')  // attribute 설정\\r\\n```\\r\\n\\r\\n5. 이벤트 핸들러\\r\\n\\r\\n```js\\r\\n// onClick, onMouseOver 등\\r\\noldProps: { onClick: oldHandler }\\r\\nnewProps: { onClick: newHandler }\\r\\n→ removeEvent(element, 'click', oldHandler)\\r\\n→ addEvent(element, 'click', newHandler)\\r\\n```\\r\\n\\r\\n6. 변경 감지\\r\\n\\r\\n```js\\r\\nconst allKeys = new Set([\\r\\n  ...Object.keys(oldProps || {}),\\r\\n  ...Object.keys(newProps || {})\\r\\n]);\\r\\n\\r\\nallKeys.forEach(key => {\\r\\n  const newValue = newProps?.[key];\\r\\n  const oldValue = oldProps?.[key];\\r\\n  \\r\\n  if (newValue === oldValue) return; // 변경 없음 - 건너뛰기\\r\\n  \\r\\n  // 변경된 속성만 처리\\r\\n});\\r\\n```\\r\\n\\r\\n7. 속성 제거\\r\\n\\r\\n```js\\r\\n// 이전에 있었지만 새로운 props에는 없는 경우\\r\\nif (oldValue !== undefined && newValue === undefined) {\\r\\n  element.removeAttribute(key);\\r\\n}\\r\\n```\\r\\n\\r\\n#### 구현 코드\\r\\n\\r\\n```js\\r\\n// 속성 업데이트\\r\\nfunction updateAttributes(target, newProps, oldProps) {\\r\\n  const allKeys = new Set([\\r\\n    ...Object.keys(oldProps || {}),\\r\\n    ...Object.keys(newProps || {})\\r\\n  ]);\\r\\n  \\r\\n  allKeys.forEach(key => {\\r\\n    const newValue = newProps?.[key];\\r\\n    const oldValue = oldProps?.[key];\\r\\n    \\r\\n    if (newValue === oldValue) return;\\r\\n    \\r\\n    // 이벤트 핸들러 처리\\r\\n    if (key.startsWith('on') && typeof oldValue === 'function') {\\r\\n      const eventType = key.slice(2).toLowerCase();\\r\\n      removeEvent(target, eventType, oldValue);\\r\\n    }\\r\\n    if (key.startsWith('on') && typeof newValue === 'function') {\\r\\n      const eventType = key.slice(2).toLowerCase();\\r\\n      addEvent(target, eventType, newValue);\\r\\n      return;\\r\\n    }\\r\\n    \\r\\n    // className 처리\\r\\n    if (key === 'className') {\\r\\n      if (newValue) {\\r\\n        target.className = newValue;\\r\\n      } else {\\r\\n        target.removeAttribute('class');\\r\\n      }\\r\\n      return;\\r\\n    }\\r\\n    \\r\\n    // checked와 selected는 property만 설정 (attribute 건드리지 않음)\\r\\n    if (key === 'checked' || key === 'selected') {\\r\\n      target[key] = !!newValue;\\r\\n      return;\\r\\n    }\\r\\n    \\r\\n    // 다른 Boolean 속성들 (disabled, readOnly)\\r\\n    const otherBooleanProps = ['disabled', 'readOnly'];\\r\\n    if (otherBooleanProps.includes(key)) {\\r\\n      target[key] = !!newValue;\\r\\n      if (newValue) {\\r\\n        target.setAttribute(key, '');\\r\\n      } else {\\r\\n        target.removeAttribute(key);\\r\\n      }\\r\\n      return;\\r\\n    }\\r\\n    \\r\\n    // 일반 속성 처리\\r\\n    if (newValue == null || newValue === false) {\\r\\n      target.removeAttribute(key);\\r\\n    } else {\\r\\n      target.setAttribute(key, String(newValue));\\r\\n    }\\r\\n  });\\r\\n}\\r\\n```\\r\\n</details>\\r\\n\\r\\n<details>\\r\\n<summary>updateElement</summary>\\r\\n\\r\\n이전 가상 DOM과 새로운 가상 DOM을 비교하여 실제 DOM을 최소한으로 변경하는 함수\\r\\n\\r\\n- `parentElement` : 부모 DOM 요소\\r\\n- `newNode` : 새로운 가상 DOM 노드\\r\\n- `oldNode` : 이전 가상 DOM 노드\\r\\n- `index` : 부모 내에서의 위치\\r\\n\\r\\n#### 비교 전략\\r\\n\\r\\n1. 노드 존재 여부 체크\\r\\n\\r\\n```js\\r\\n// 새 노드가 없으면 기존 노드 제거\\r\\nif (!newNode && oldNode) {\\r\\n  const childToRemove = parentElement.childNodes[index];\\r\\n  if (childToRemove) {\\r\\n    parentElement.removeChild(childToRemove);\\r\\n  }\\r\\n  return;\\r\\n}\\r\\n\\r\\n// 기존 노드가 없으면 새 노드 추가\\r\\nif (newNode && !oldNode) {\\r\\n  const newElement = createElement(newNode);\\r\\n  parentElement.appendChild(newElement);\\r\\n  return;\\r\\n}\\r\\n```\\r\\n\\r\\n2. 텍스트 노드 처리\\r\\n\\r\\n```js\\r\\n// 둘 다 텍스트 노드면서 다를 경우 업데이트\\r\\nif (typeof newNode === 'string' && typeof oldNode === 'string') {\\r\\n  if (newNode !== oldNode) {\\r\\n    parentElement.childNodes[index].textContent = newNode;\\r\\n  }\\r\\n  return;\\r\\n}\\r\\n```\\r\\n\\r\\n3. 요소 타입 비교\\r\\n\\r\\n```js\\r\\n// 노드 타입이 다르면 교체\\r\\nif (newNode.type !== oldNode.type) {\\r\\n  const newElement = createElement(newNode);\\r\\n  const oldElement = parentElement.childNodes[index];\\r\\n  parentElement.replaceChild(newElement, oldElement);\\r\\n  return;\\r\\n}\\r\\n```\\r\\n\\r\\n4. 같은 타입 요소 업데이트\\r\\n\\r\\n```js\\r\\n// 같은 타입이면 속성과 자식만 업데이트\\r\\nconst currentElement = parentElement.childNodes[index];\\r\\nupdateAttributes(currentElement, newNode.props, oldNode.props);\\r\\n```\\r\\n\\r\\n5. 자식 노드\\r\\n\\r\\n```js\\r\\n// 같은 타입이면 속성과 자식만 업데이트\\r\\nconst currentElement = parentElement.childNodes[index];\\r\\nupdateAttributes(currentElement, newNode.props, oldNode.props);\\r\\n\\r\\n// 자식 노드들 업데이트\\r\\nconst newChildren = newNode.children || [];\\r\\nconst oldChildren = oldNode.children || [];\\r\\nconst maxLength = Math.max(newChildren.length, oldChildren.length);\\r\\n\\r\\n// 먼저 기존 자식들을 새로운 자식들과 비교/업데이트\\r\\nfor (let i = 0; i < Math.min(newChildren.length, oldChildren.length); i++) {\\r\\n  updateElement(currentElement, newChildren[i], oldChildren[i], i);\\r\\n}\\r\\n\\r\\n// 새로운 자식이 더 많으면 추가\\r\\nfor (let i = oldChildren.length; i < newChildren.length; i++) {\\r\\n  const newElement = createElement(newChildren[i]);\\r\\n  currentElement.appendChild(newElement);\\r\\n}\\r\\n\\r\\n// 기존 자식이 더 많으면 제거\\r\\n// 인덱스 관리를 위해 역순으로 처리\\r\\nfor (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n  const childToRemove = currentElement.childNodes[i];\\r\\n  if (childToRemove) {\\r\\n    currentElement.removeChild(childToRemove);\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 구현 코드\\r\\n\\r\\n```js\\r\\n// 엘리먼트 업데이트\\r\\nexport function updateElement(parentElement, newNode, oldNode, index = 0) {\\r\\n  // 1. 새 노드가 없으면 기존 노드 제거\\r\\n  if (!newNode && oldNode) {\\r\\n    const childToRemove = parentElement.childNodes[index];\\r\\n    if (childToRemove) {\\r\\n      parentElement.removeChild(childToRemove);\\r\\n    }\\r\\n    return;\\r\\n  }\\r\\n  \\r\\n  // 2. 기존 노드가 없으면 새 노드 추가\\r\\n  if (newNode && !oldNode) {\\r\\n    const newElement = createElement(newNode);\\r\\n    parentElement.appendChild(newElement);\\r\\n    return;\\r\\n  }\\r\\n  \\r\\n  // 3. 둘 다 텍스트 노드면서 다를 경우 업데이트\\r\\n  if (typeof newNode === 'string' && typeof oldNode === 'string') {\\r\\n    if (newNode !== oldNode) {\\r\\n      parentElement.childNodes[index].textContent = newNode;\\r\\n    }\\r\\n    return;\\r\\n  }\\r\\n  \\r\\n  // 4. 노드 타입이 다르면 교체\\r\\n  if (newNode.type !== oldNode.type) {\\r\\n    const newElement = createElement(newNode);\\r\\n    const oldElement = parentElement.childNodes[index];\\r\\n    parentElement.replaceChild(newElement, oldElement);\\r\\n    return;\\r\\n  }\\r\\n  \\r\\n  // 5. 같은 타입이면 속성과 자식만 업데이트\\r\\n  const currentElement = parentElement.childNodes[index];\\r\\n  updateAttributes(currentElement, newNode.props, oldNode.props);\\r\\n  \\r\\n  // 6. 자식 노드들 업데이트\\r\\n  const newChildren = newNode.children || [];\\r\\n  const oldChildren = oldNode.children || [];\\r\\n  const maxLength = Math.max(newChildren.length, oldChildren.length);\\r\\n  \\r\\n  // 7. 먼저 기존 자식들을 새로운 자식들과 비교/업데이트\\r\\n  for (let i = 0; i < Math.min(newChildren.length, oldChildren.length); i++) {\\r\\n    updateElement(currentElement, newChildren[i], oldChildren[i], i);\\r\\n  }\\r\\n  \\r\\n  // 8. 새로운 자식이 더 많으면 추가\\r\\n  for (let i = oldChildren.length; i < newChildren.length; i++) {\\r\\n    const newElement = createElement(newChildren[i]);\\r\\n    currentElement.appendChild(newElement);\\r\\n  }\\r\\n  \\r\\n  // 9. 기존 자식이 더 많으면 제거\\r\\n  // 인덱스 관리를 위해 역순으로 처리\\r\\n  for (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n    const childToRemove = currentElement.childNodes[i];\\r\\n    if (childToRemove) {\\r\\n      currentElement.removeChild(childToRemove);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n</details>\\r\\n\\r\\n이전 주차보다 AI 사용이 훨씬 원활하긴 했지만 작은 문제가 하나 생겼었습니다. 채팅을 이어가던 중 채팅 길이가 너무 길어져 새 채팅을 열어야 하는 상황. 문제는 이전 채팅의 정보를 가져갈 수가 없었습니다.\\r\\n\\r\\n다행히 문서를 남기며 작업 중이었기에 너무 어렵지 않게 다음 채팅을 이어나갈 수는 있었지만 그럼에도 테스트 코드나 지금까지 작성한 코드를 다시 붙여 넣는 과정이 필요했습니다.\\r\\n\\r\\n그래서 두 번째 채팅부터는 채팅 길이를 지속적으로 감지하여 일정 길이가 되면 지금까지의 과정, 진행사항, 다음 진행 단계, 그리고 다음 채팅에서 어떤 문장과 함께 시작하면 되는지를 정리한 문서를 달라고 했습니다.\\r\\n\\r\\n<details>\\r\\n<summary>진행사항 정리 문서 예시</summary>\\r\\n# 가상 DOM 프로젝트 진행 상황 및 컨텍스트\\r\\n\\r\\n## 📋 프로젝트 개요\\r\\n\\r\\n가상 DOM을 직접 구현하며 테스트를 통과하는 과제를 수행 중\\r\\n\\r\\n### 주요 구현 함수들\\r\\n\\r\\n- `createVNode` - 가상 노드 생성\\r\\n- `normalizeVNode` - 가상 노드 정규화 (컴포넌트 → HTML 요소 변환)\\r\\n- `createElement` - 가상 노드 → 실제 DOM 요소 변환\\r\\n- `addEvent`, `removeEvent`, `setupEventListeners` - 이벤트 위임 시스템\\r\\n- `renderElement` - 최종 렌더링 (정규화 + DOM 생성 + 이벤트 설정)\\r\\n\\r\\n## 🎯 현재 진행 상황\\r\\n\\r\\n### ✅ 완료된 단계\\r\\n\\r\\n- **Basic 테스트 통과** ✅ - 기본적인 가상 DOM 생성 및 렌더링 구현\\r\\n- **Advanced 테스트 통과** ✅ - Diff 알고리즘 및 최적화된 업데이트 로직 구현\\r\\n- **E2E 테스트 통과** ✅ - UI 테스트 완료\\r\\n- **필수 과제 완료** 🎉\\r\\n\\r\\n### 🔄 현재 단계\\r\\n\\r\\n- **추가 기능 구현 계획 중** - React와 비교하여 업그레이드 방향 검토\\r\\n\\r\\n### 📅 향후 계획\\r\\n\\r\\n1. **React와 비교 분석** - 현재 구현과의 차이점 파악\\r\\n2. **상태 관리 시스템 구현** - useState, useEffect 등\\r\\n3. **성능 최적화** - 더 정교한 reconciliation 알고리즘\\r\\n4. **컴포넌트 라이프사이클** - mount, update, unmount 처리\\r\\n\\r\\n## 🧪 Advanced 테스트 요구사항\\r\\n\\r\\n### 핵심 기능들\\r\\n\\r\\n1. **Diff 알고리즘**\\r\\n    - 변경된 부분만 업데이트\\r\\n    - DOM 요소 재사용 (같은 타입의 요소는 새로 생성하지 않음)\\r\\n    - 효율적인 자식 노드 관리\\r\\n2. **특수 속성 처리**\\r\\n    - `className` → `class` 속성 매핑\\r\\n    - Boolean 속성들: `checked`, `disabled`, `selected`, `readOnly`\\r\\n    - 속성 제거 시 DOM에서도 완전 제거\\r\\n3. **컴포넌트 업데이트**\\r\\n    - 함수형 컴포넌트의 효율적인 리렌더링\\r\\n    - 중첩된 컴포넌트에서 깊은 레벨 변경사항만 업데이트\\r\\n4. **엣지케이스 처리**\\r\\n    - 자식 배열 크기 변경 (많은 자식 → 적은 자식)\\r\\n    - 빈 배열로 모든 자식 제거\\r\\n    - 복잡한 중첩 구조에서의 업데이트\\r\\n\\r\\n### 주요 테스트 케이스\\r\\n\\r\\n- `diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다`\\r\\n- `새로운 요소를 추가하고 불필요한 요소를 제거해야 한다`\\r\\n- `요소의 속성만 변경되었을 때 요소를 재사용해야 한다`\\r\\n- `요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다`\\r\\n- `className이 props에서 제거될 때 class 속성이 올바르게 제거되어야 한다`\\r\\n- `boolean type props가 property로 직접 업데이트되어야 한다`\\r\\n\\r\\n## 🛠️ 완성된 핵심 구현\\r\\n\\r\\n### 1. createVNode - 가상 노드 생성\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\nfunction createVNode(type, props, ...children) {\\r\\n  return {\\r\\n    type,\\r\\n    props,\\r\\n    children: flattenArray(children), // 중첩 배열 평탄화 + falsy 값 필터링\\r\\n  };\\r\\n}\\r\\n```\\r\\n\\r\\n### 2. normalizeVNode - 함수형 컴포넌트 정규화\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\nfunction normalizeVNode(vNode) {\\r\\n  // 함수형 컴포넌트 → HTML 요소로 변환\\r\\n  // children을 props로 전달하여 컴포넌트 호출\\r\\n}\\r\\n```\\r\\n\\r\\n### 3. createElement - Virtual DOM → Real DOM\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\nfunction createElement(vNode) {\\r\\n  // 배열 → DocumentFragment\\r\\n  // 함수 컴포넌트 처리 (에러 발생)\\r\\n  // 일반 vNode → DOM 요소 + 속성 + 자식\\r\\n}\\r\\n```\\r\\n\\r\\n### 4. updateElement - Diff 알고리즘 핵심\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\nfunction updateElement(parentElement, newNode, oldNode, index = 0) {\\r\\n  // 1. 노드 추가/제거 처리\\r\\n  // 2. 타입 변경 시 교체\\r\\n  // 3. 같은 타입 시 속성/자식 업데이트\\r\\n  // 4. 자식 노드 재귀적 처리 (역순 제거)\\r\\n}\\r\\n```\\r\\n\\r\\n### 5. updateAttributes - 효율적 속성 업데이트\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\nfunction updateAttributes(target, newProps, oldProps) {\\r\\n  // className 특별 처리\\r\\n  // checked, selected → property만 설정\\r\\n  // disabled, readOnly → property + attribute 설정\\r\\n  // 이벤트 핸들러 교체\\r\\n}\\r\\n```\\r\\n\\r\\n### 6. 이벤트 위임 시스템\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// WeakMap + WeakSet으로 메모리 효율적 관리\\r\\n// 부모에서 위임 처리로 성능 최적화\\r\\n```\\r\\n\\r\\n## 🐛 발생한 에러와 해결 과정\\r\\n\\r\\n### 1. Boolean 속성 처리 에러\\r\\n\\r\\n#### 🚨 문제: `checked` 속성 테스트 실패\\r\\n\\r\\n```\\r\\nexpect(checkbox.getAttribute(\\\"checked\\\")).toBe(null);\\r\\n실제: [빈값] != null\\r\\n```\\r\\n\\r\\n#### ❌ 문제가 있던 코드\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// 모든 boolean 속성을 동일하게 처리\\r\\nconst booleanProps = ['checked', 'disabled', 'selected', 'readOnly'];\\r\\nif (booleanProps.includes(key)) {\\r\\n  target[key] = !!newValue;\\r\\n  if (newValue) {\\r\\n    target.setAttribute(key, '');  // ← checked에서는 문제!\\r\\n  } else {\\r\\n    target.removeAttribute(key);\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n#### ✅ 해결된 코드\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// checked와 selected는 property만 설정\\r\\nif (key === 'checked' || key === 'selected') {\\r\\n  target[key] = !!newValue;\\r\\n  // attribute는 건드리지 않음!\\r\\n  return;\\r\\n}\\r\\n\\r\\n// 다른 Boolean 속성들은 property + attribute 설정\\r\\nconst otherBooleanProps = ['disabled', 'readOnly'];\\r\\nif (otherBooleanProps.includes(key)) {\\r\\n  target[key] = !!newValue;\\r\\n  if (newValue) {\\r\\n    target.setAttribute(key, '');\\r\\n  } else {\\r\\n    target.removeAttribute(key);\\r\\n  }\\r\\n  return;\\r\\n}\\r\\n```\\r\\n\\r\\n**해결 핵심**: `checked`와 `selected`는 React에서 property로만 제어하며 attribute는 건드리지 않음\\r\\n\\r\\n---\\r\\n\\r\\n### 2. 자식 노드 제거 에러\\r\\n\\r\\n#### 🚨 문제: 초과 자식 제거 시 개수 불일치\\r\\n\\r\\n```\\r\\nexpect(container.firstChild.children.length).toBe(2);\\r\\n실제: 3 != 2\\r\\n```\\r\\n\\r\\n#### ❌ 문제가 있던 코드\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// 순서대로 제거하면 인덱스가 변경됨\\r\\nconst maxLength = Math.max(newChildren.length, oldChildren.length);\\r\\nfor (let i = 0; i < maxLength; i++) {\\r\\n  updateElement(currentElement, newChildren[i], oldChildren[i], i);\\r\\n}\\r\\n```\\r\\n\\r\\n#### ✅ 해결된 코드\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// 1. 공통 부분 업데이트\\r\\nfor (let i = 0; i < Math.min(newChildren.length, oldChildren.length); i++) {\\r\\n  updateElement(currentElement, newChildren[i], oldChildren[i], i);\\r\\n}\\r\\n\\r\\n// 2. 새로운 자식 추가\\r\\nfor (let i = oldChildren.length; i < newChildren.length; i++) {\\r\\n  const newElement = createElement(newChildren[i]);\\r\\n  currentElement.appendChild(newElement);\\r\\n}\\r\\n\\r\\n// 3. 초과하는 기존 자식 제거 (역순으로!)\\r\\nfor (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n  const childToRemove = currentElement.childNodes[i];\\r\\n  if (childToRemove) {\\r\\n    currentElement.removeChild(childToRemove);\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n**해결 핵심**: 자식 제거는 반드시 역순으로 처리하여 인덱스 안정성 유지\\r\\n\\r\\n---\\r\\n\\r\\n### 3. 이벤트 핸들러 미동작 에러\\r\\n\\r\\n#### 🚨 문제: 전체 테스트 실행 시 이벤트 핸들러 0번 호출\\r\\n\\r\\n```\\r\\nexpect(clickHandler).toHaveBeenCalledTimes(1);\\r\\n실제: 0번 호출됨\\r\\n```\\r\\n\\r\\n#### ❌ 문제가 있던 코드\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// 문자열 변환으로 인한 중복 키 문제\\r\\nconst registeredEvents = new Set();\\r\\n\\r\\nexport function setupEventListeners(root) {\\r\\n  eventTypes.forEach(eventType => {\\r\\n    const eventKey = `${root}_${eventType}`;  // \\\"[object HTMLDivElement]_click\\\"\\r\\n    if (registeredEvents.has(eventKey)) return;  // 모든 div가 같은 키!\\r\\n    registeredEvents.add(eventKey);\\r\\n    // ... 이벤트 등록\\r\\n  });\\r\\n}\\r\\n```\\r\\n\\r\\n#### ✅ 해결된 코드\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// WeakSet으로 객체 참조 직접 비교\\r\\nconst registeredRoots = new WeakSet();\\r\\n\\r\\nexport function setupEventListeners(root) {\\r\\n  if (registeredRoots.has(root)) return;  // 객체 참조로 정확히 비교\\r\\n  registeredRoots.add(root);\\r\\n  \\r\\n  eventTypes.forEach(eventType => {\\r\\n    root.addEventListener(eventType, (e) => {\\r\\n      // ... 이벤트 위임 로직\\r\\n    });\\r\\n  });\\r\\n}\\r\\n```\\r\\n\\r\\n**해결 핵심**: WeakSet으로 DOM 요소 객체 자체를 추적하여 각 컨테이너를 정확히 구분\\r\\n\\r\\n---\\r\\n\\r\\n### 4. ReferenceError 에러\\r\\n\\r\\n#### 🚨 문제: 변수 선언 누락\\r\\n\\r\\n```\\r\\nReferenceError: registeredRoots is not defined\\r\\n```\\r\\n\\r\\n#### ❌ 문제가 있던 코드\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// 변수 선언 없이 사용\\r\\nexport function setupEventListeners(root) {\\r\\n  if (registeredRoots.has(root)) return;  // ← registeredRoots 선언 안됨!\\r\\n}\\r\\n```\\r\\n\\r\\n#### ✅ 해결된 코드\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// 파일 상단에 변수 선언 추가\\r\\nconst eventStore = new WeakMap();\\r\\nconst registeredRoots = new WeakSet();  // ← 이 줄 추가!\\r\\n\\r\\nexport function setupEventListeners(root) {\\r\\n  if (registeredRoots.has(root)) return;\\r\\n  registeredRoots.add(root);\\r\\n  // ...\\r\\n}\\r\\n```\\r\\n\\r\\n**해결 핵심**: 전역 변수는 사용 전에 반드시 선언\\r\\n\\r\\n## 🔧 해결한 주요 기술적 도전과제\\r\\n\\r\\n### 1. Diff 알고리즘 구현\\r\\n\\r\\n- **DOM 요소 재사용**: 같은 타입 요소는 새로 생성하지 않고 업데이트\\r\\n- **효율적 자식 관리**: 역순 제거로 인덱스 안정성 유지\\r\\n- **메모리 최적화**: 불필요한 DOM 조작 최소화\\r\\n\\r\\n### 2. 특수 속성 처리\\r\\n\\r\\n- **Boolean 속성 분류**: `checked`/`selected` vs `disabled`/`readOnly`\\r\\n- **className 매핑**: `props.className` → `element.className`\\r\\n- **이벤트 핸들러**: 동적 추가/제거\\r\\n\\r\\n### 3. 이벤트 관리 시스템\\r\\n\\r\\n- **위임 패턴**: 성능 최적화\\r\\n- **메모리 누수 방지**: WeakMap/WeakSet 활용\\r\\n- **테스트 격리**: 각 컨테이너별 독립적 관리\\r\\n\\r\\n### 4. 컴포넌트 시스템\\r\\n\\r\\n- **함수형 컴포넌트**: props + children 전달\\r\\n- **정규화 과정**: 컴포넌트 → HTML 요소 변환\\r\\n- **중첩 처리**: 깊은 컴포넌트 트리 지원\\r\\n\\r\\n## 🚀 다음 단계: React 수준으로 업그레이드\\r\\n\\r\\n### 1. 상태 관리 시스템\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// useState 훅 구현\\r\\nfunction useState(initialValue) {\\r\\n  // 상태 저장소\\r\\n  // setter 함수\\r\\n  // 리렌더링 트리거\\r\\n}\\r\\n\\r\\n// useEffect 훅 구현  \\r\\nfunction useEffect(effect, dependencies) {\\r\\n  // 의존성 배열 비교\\r\\n  // 마운트/언마운트/업데이트 처리\\r\\n  // 클린업 함수 관리\\r\\n}\\r\\n```\\r\\n\\r\\n### 2. 컴포넌트 라이프사이클\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// 마운트/언마운트 감지\\r\\n// 의존성 변화 추적\\r\\n// 효과(effect) 실행 시점 관리\\r\\n```\\r\\n\\r\\n### 3. 성능 최적화\\r\\n\\r\\njavascript\\r\\n\\r\\n```javascript\\r\\n// React.memo 같은 메모이제이션\\r\\n// useMemo, useCallback 구현\\r\\n// 더 정교한 reconciliation\\r\\n```\\r\\n\\r\\n### 4. 추가 기능들\\r\\n\\r\\n- **Context API**: 프롭 드릴링 해결\\r\\n- **Ref 시스템**: DOM 직접 접근\\r\\n- **조건부 렌더링**: Suspense, ErrorBoundary\\r\\n- **Key 기반 리스트**: 더 효율적인 배열 렌더링\\r\\n\\r\\n## 💡 분석할 React와의 차이점\\r\\n\\r\\n### 현재 구현의 한계\\r\\n\\r\\n1. **상태 없음**: 함수형 컴포넌트에 상태 저장 불가\\r\\n2. **라이프사이클 없음**: 마운트/언마운트 감지 불가\\r\\n3. **단순한 Diff**: key 기반 최적화 없음\\r\\n4. **효과 시스템 없음**: 사이드 이펙트 관리 불가\\r\\n\\r\\n### React의 고급 기능들\\r\\n\\r\\n1. **Fiber 아키텍처**: 작업 분할 및 우선순위\\r\\n2. **Concurrent Rendering**: 논블로킹 렌더링\\r\\n3. **Time Slicing**: 큰 작업을 작은 단위로 분할\\r\\n4. **Suspense**: 비동기 컴포넌트 로딩\\r\\n\\r\\n## 💡 참고사항\\r\\n\\r\\n### 중요한 구현 포인트\\r\\n\\r\\n- DOM 요소 참조 유지 (같은 요소는 재사용)\\r\\n- 이벤트 리스너 유지/업데이트\\r\\n- 메모리 누수 방지 (제거된 요소의 이벤트 정리)\\r\\n- 성능 최적화 (불필요한 DOM 조작 최소화)\\r\\n\\r\\n### React와의 차이점 분석 예정\\r\\n\\r\\n- 상태 관리 (useState, useEffect 등)\\r\\n- 컴포넌트 라이프사이클\\r\\n- 더 정교한 reconciliation 알고리즘\\r\\n- 가상 DOM 트리 비교 최적화\\r\\n\\r\\n---\\r\\n\\r\\n**다음 대화 시작 시**: 이 문서를 첨부하고 \\\"필수 과제를 완료했으니 React 수준의 고급 기능 구현을 시작하겠습니다\\\" 라고 말하면 됩니다.\\r\\n\\r\\n**우선순위 추천 순서**:\\r\\n\\r\\n1. useState 훅 구현 (상태 관리의 기초)\\r\\n2. useEffect 훅 구현 (라이프사이클 관리)\\r\\n3. 컴포넌트 재렌더링 최적화\\r\\n4. Context API 또는 추가 훅들\\r\\n\\r\\n**현재 성취**: 기본적인 Virtual DOM과 Diff 알고리즘을 성공적으로 구현하여 모든 테스트를 통과했습니다! 🎉\\r\\n</details>\\r\\n\\r\\n\\r\\n---\\r\\n\\r\\n\\r\\n## 기술적 성장\\r\\n\\r\\n과제 특성상 코드 품질이 많이 다르진 않겠지만 다른 것보다 주석을 잘 단 것 같습니다. 또한 normalizeVNode에서 아래와 같이 과정을 조금이라도 줄여보려 한 부분이 좋지 않았나 생각합니다. (children이 하나만 있다면 배열로 넘기지 않기 등등...)\\r\\n\\r\\n```js\\r\\n// 3. 함수형 컴포넌트 처리\\r\\nif (vNode && typeof vNode === 'object' && typeof vNode.type === 'function') {\\r\\n  const props = vNode.props || {};\\r\\n  \\r\\n  // children을 props로 전달\\r\\n  if (vNode.children && vNode.children.length > 0) {\\r\\n    // children이 있으면 props.children으로 전달\\r\\n    props.children = vNode.children.length === 1 ? vNode.children[0] : vNode.children;\\r\\n  }\\r\\n  \\r\\n  const result = vNode.type(props);\\r\\n  return normalizeVNode(result);\\r\\n}\\r\\n```\\r\\n\\r\\n가장 만족스러운 부분은 코드 구현은 아니지만 AI 사용입니다. 지난 주차에서 배운 AI 사용 경험을 토대로 문서 정리부터 개념 학습까지 아주 AI를 알차게 쏙쏙 빼먹지 않았나 생각합니다. (AI에게 화낸 적이 한 번도 없다니)\\r\\n\\r\\n특히 현재 채팅의 사용량을 감지하고 새 채팅을 이어나갈 수 있도록 문서로 정리하는 것이 직접 깨우친 쏠쏠한 꿀팁이지 않나 생각합니다.\\r\\n\\r\\n\\r\\n## 학습 효과 분석\\r\\n\\r\\n말로만 듣던 가상 돔에 대한 이해도가 가장 큰 수확이었습니다. 가상 돔이 어떻게 구현되어 있는지, 어떤 식으로 흘러가는지 알 수 있었습니다. \\r\\n\\r\\n추가로 과제에 상태 관리 코드를 적용한다면 어떻게 적용할 수 있을지, 다른 프레임워크들은 어떤 식으로 구성되어 있는지 학습을 해볼까 합니다.\\r\\n\\r\\n## 과제 피드백\\r\\n\\r\\n1주차에 이어서 이번 과제도 PT하듯 밀린 공부를 하게 된 느낌이라 큰 도움이 되었습니다. 바닐라 JS로 SPA, 라우터, 가상 돔 등을 직접 만들어 보는 것이 이해도를 높이는 가장 효율적인 방법이라고 피부로 느꼈습니다.\\r\\n\\r\\n(과제 특성상 테스트코드가 지난 주차보다 깔끔해서 좋았습니다... ㅎ)\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n1. eventManager.js의 addEvent, removeEvent를 지금처럼 createElement나 updateElement에서 사용하는 것이 아니라 직접 사용할 일이 있을까요? 저는 어떤 데이터를 비동기로 조회 후 이 데이터로 state를 업데이트 하여 리렌더링이 발생하는 것이 아닌, 비동기로 조회한 데이터 결과에 따라 바로 어떤 이벤트를 적용하거나 지워야 하는 경우 직접 addEvent, removeEvent 함수를 호출할 수도 있겠다 생각했습니다.\\r\\n\\r\\n2. 기술적인 내용이 아니라 적절치 못한 질문일 수도 있을 것 같습니다. 1, 2주차를 거치며 AI 사용이 점점 익숙해지고 있습니다. 특히 이번 주차는 질문의 단위도 작게 나누어 코드 이해도를 높였고, 개념 정리도 틈틈히 진행했습니다. 하지만 결국 구현능력은 조금 떨어지는 느낌이 듭니다. 내가 이미 알고 있는 것이지만 귀찮은 작업이기에 맡기는 그림이 맞는지, AI의 도움을 적극적으로 받아 큰 맥락, 주요 개념 위주로 익히며 진행해도 되는지 궁금합니다. (+ \\\"AI 없이 코딩하기 수련\\\"이 필요할까요?)\\r\\n\\r\\n\",\"created_at\":\"2025-07-12T07:03:06Z\",\"updated_at\":\"2025-07-18T17:48:50Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"0389392bf7181b3650e3fa675cff9eb794d2aa64\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/2/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/2/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/2/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/d639d484b6a8807ebeb3b5335b2aa9b664fbcee9\",\"head\":{\"label\":\"jun17183:main\",\"ref\":\"main\",\"sha\":\"d639d484b6a8807ebeb3b5335b2aa9b664fbcee9\",\"user\":{\"login\":\"jun17183\",\"id\":64164782,\"node_id\":\"MDQ6VXNlcjY0MTY0Nzgy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/64164782?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/jun17183\",\"html_url\":\"https://github.com/jun17183\",\"followers_url\":\"https://api.github.com/users/jun17183/followers\",\"following_url\":\"https://api.github.com/users/jun17183/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jun17183/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jun17183/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jun17183/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jun17183/orgs\",\"repos_url\":\"https://api.github.com/users/jun17183/repos\",\"events_url\":\"https://api.github.com/users/jun17183/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jun17183/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018393514,\"node_id\":\"R_kgDOPLNzqg\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"jun17183/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"jun17183\",\"id\":64164782,\"node_id\":\"MDQ6VXNlcjY0MTY0Nzgy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/64164782?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/jun17183\",\"html_url\":\"https://github.com/jun17183\",\"followers_url\":\"https://api.github.com/users/jun17183/followers\",\"following_url\":\"https://api.github.com/users/jun17183/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jun17183/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jun17183/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jun17183/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jun17183/orgs\",\"repos_url\":\"https://api.github.com/users/jun17183/repos\",\"events_url\":\"https://api.github.com/users/jun17183/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jun17183/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/jun17183/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/jun17183/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T06:56:23Z\",\"updated_at\":\"2025-07-15T16:58:10Z\",\"pushed_at\":\"2025-07-15T16:58:05Z\",\"git_url\":\"git://github.com/jun17183/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:jun17183/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/jun17183/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/jun17183/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":154,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/2\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/2\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/2\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/2/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/2/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/2/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/d639d484b6a8807ebeb3b5335b2aa9b664fbcee9\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/3\",\"id\":2661009517,\"node_id\":\"PR_kwDOPJuWzM6em8ht\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/3\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/3.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/3.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/3\",\"number\":3,\"state\":\"open\",\"locked\":false,\"title\":\"[6팀 이민재] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"minjaeleee\",\"id\":81751091,\"node_id\":\"MDQ6VXNlcjgxNzUxMDkx\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/81751091?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/minjaeleee\",\"html_url\":\"https://github.com/minjaeleee\",\"followers_url\":\"https://api.github.com/users/minjaeleee/followers\",\"following_url\":\"https://api.github.com/users/minjaeleee/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/minjaeleee/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/minjaeleee/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/minjaeleee/subscriptions\",\"organizations_url\":\"https://api.github.com/users/minjaeleee/orgs\",\"repos_url\":\"https://api.github.com/users/minjaeleee/repos\",\"events_url\":\"https://api.github.com/users/minjaeleee/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/minjaeleee/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://minjaeleee.github.io/front_6th_chapter1-2/\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n1. JSX의 트랜스파일링 과정 학습 \\r\\n- 막연하게 Babel과 같은 트랜스파일러 덕에 jsx를 적용할 수 있다는 개념만 알고 있었습니다. 이번 학습을 통해서 더 자세하고 정교하게 공부할 수 있었습니다. 또한, 가상 DOM이  jsx -> createVNode -> createElement -> renderElement ( + updateElement) 과정을 통해 실제 DOM에 적용되는 과정을 학습했습니다.\\r\\n\\r\\n2. esbuild.jsxFactory의 역할 ([상세 보기](https://github.com/minjaeleee/front_6th_chapter1-2/issues/1))\\r\\n- 처음에 이 JSX 파일들을 어디서부터 과정을 시작해야할지 몰라 막막했고, createVNode 함수가 왜 실행이 되어야 하는지 이해하지 못했습니다. esbuildjsxFactory의 역할을 통해서 결국엔 createVNode를 통해 jsx가 js로 변환하는 과정을 학습했습니다.\\r\\n\\r\\n3. createVNode ([상세 보기](https://github.com/minjaeleee/front_6th_chapter1-2/issues/2))\\r\\n- JSX를 가상 DOM 객체로 변환하는 역할에 대해서 학습했습니다. 특히 객체 내부의 type, props, children의 의미와 리턴 값들을 보면서 노드가 어떻게 구조화하는지 이해할 수 있었습니다. 직접 모든 노드 요소에 대해서 console.log()를 실행해가며 노드와 객체로 리턴된 값들을 비교하며 더 구체적으로 학습할 수 있었습니다.\\r\\n\\r\\n4. normalizeVNode ([상세 보기](https://github.com/minjaeleee/front_6th_chapter1-2/issues/3))\\r\\n- vNode를 일관된 형태로 정규화하기 위한 함수의 역할을 이해했습니다. 특히나, jsx를 작성하기만 하다보니 다양한 형태의 vNode에 대한 이해가 많이 부족했는데 불필요하게 생성되는 값들을 제거하고, 함수형 vNode들을 실행시키는 등을 직접 경험하면서 전처리의 핵심 역할을 담당한다는 것을 학습할 수 있었습니다.\\r\\n\\r\\n5. createElement([상세 보기](https://github.com/minjaeleee/front_6th_chapter1-2/issues/4))\\r\\n- createVNode와 normalizeVNode를 기반으로 실제 DOM 노드를 생성하는 함수에 대해서 이해할 수 있었습니다. 특히나 DOM의 attributes 들을 직접 조작하고 렌더링하는 것이 이해하기 어려웠습니다. 책이나 문서로는 리액트의 등장 배경에 대해서 설명할 때, 선언형의 장점, 직접 DOM을 조작하지 않아서 생기는 장점, 상태와 UI의 분리적 구조에 대해서 외우고 있었는데 실제로 효율적으로 관리하는 경험을 할 수 있었습니다.\\r\\n\\r\\n6. renderElement([상세 보기](https://github.com/minjaeleee/front_6th_chapter1-2/issues/5))\\r\\n- React의 ReactDOM.render 기능과 유사한 역할을 하는 renderElement 함수를 직접 작성해보며 가상 DOM을 실제 DOM에 렌더링하는 과정에 대해서 학습할 수 있었습니다.\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n가상 DOM 렌더링 원리를 직접 구현함으로써 JSX transform, VNode 생성, 실제 DOM 생성 구조 등에 대해서 깊숙이 이해할 수 있었습니다.\\r\\n개인적으로는 지난주 과제보다 이번주 과제가 더 어려웠습니다. 노드의 type과 props, children의 구조와 케이스를 모두 이해해야하며 attributes, element들을 모두 조작하고 렌더링시켜야 하기 때문에 많이 어려웠습니다. 초기 구현은 ai의 도움을 받았고 develop과 완성도는 테스트 코드를 수정하며 높였습니다… \\r\\n기능 완성 -> 테스트 코드 수정 -> 다른 기능 수정 -> 기능 완성 -> 테스트 코드 수정의 반복이었습니다..\\r\\n\\r\\n또한, 이벤트 위임 구조를 작성하며 root 기반 등록 방식 메모리 제어 구조를 배울 수 있었습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n1. updateElement 함수에서 children 요소들을 아래와 같이 index로 구분하는 것이 비효율적일 것 같다는 생각이 드는데, 만약에 요소의 순서만 변경해도 모두 변경되었다고 감지하고 diff 업데이트를 할 것 같습니다. 더 효율적으로 개선할 수 있는 방법이 있을까요??\\r\\n\\r\\n```jsx\\r\\n // 6. newNode와 oldNode의 모든 자식 태그를 순회하며 1 ~ 5의 내용을 반복한다.\\r\\n  const newChildren = newNode.children || [];\\r\\n  const oldChildren = oldNode.children || [];\\r\\n\\r\\n  // 먼저 공통된 자식들을 처리\\r\\n  for (let i = 0; i < Math.min(newChildren.length, oldChildren.length); i++) {\\r\\n    updateElement(parent.childNodes[index], newChildren[i], oldChildren[i], i);\\r\\n  }\\r\\n```\\r\\n\\r\\n2. 루트 요소에 한 번만 이벤트 리스너를 등록하고, 요소별 핸들러는 addEvent로 Map에 저장하는 이벤트 위임 구조를 사용하고 있는데 예를 들어서 addEvent()를 호출하지 않고 DOM에만 append된 요소라든지, e.stopPropagation()이 중간에 호출되어서 루트까지 도달하지 못 하는 경우가 생길 수 있을 것 같은데 벤트 구조를 확장하면서도 안정적으로 관리할 수 있는 구조적/전략적 개선 방안을 조언받고 싶습니다.\",\"created_at\":\"2025-07-12T07:45:26Z\",\"updated_at\":\"2025-07-22T04:04:50Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"050bafd86b9940f8a4ad8a620d7cb6742b7c947d\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/3/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/3/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/3/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/50f522d5439859ad5f566b7d1311c7a693022470\",\"head\":{\"label\":\"minjaeleee:main\",\"ref\":\"main\",\"sha\":\"50f522d5439859ad5f566b7d1311c7a693022470\",\"user\":{\"login\":\"minjaeleee\",\"id\":81751091,\"node_id\":\"MDQ6VXNlcjgxNzUxMDkx\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/81751091?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/minjaeleee\",\"html_url\":\"https://github.com/minjaeleee\",\"followers_url\":\"https://api.github.com/users/minjaeleee/followers\",\"following_url\":\"https://api.github.com/users/minjaeleee/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/minjaeleee/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/minjaeleee/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/minjaeleee/subscriptions\",\"organizations_url\":\"https://api.github.com/users/minjaeleee/orgs\",\"repos_url\":\"https://api.github.com/users/minjaeleee/repos\",\"events_url\":\"https://api.github.com/users/minjaeleee/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/minjaeleee/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018410313,\"node_id\":\"R_kgDOPLO1SQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"minjaeleee/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"minjaeleee\",\"id\":81751091,\"node_id\":\"MDQ6VXNlcjgxNzUxMDkx\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/81751091?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/minjaeleee\",\"html_url\":\"https://github.com/minjaeleee\",\"followers_url\":\"https://api.github.com/users/minjaeleee/followers\",\"following_url\":\"https://api.github.com/users/minjaeleee/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/minjaeleee/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/minjaeleee/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/minjaeleee/subscriptions\",\"organizations_url\":\"https://api.github.com/users/minjaeleee/orgs\",\"repos_url\":\"https://api.github.com/users/minjaeleee/repos\",\"events_url\":\"https://api.github.com/users/minjaeleee/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/minjaeleee/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/minjaeleee/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/minjaeleee/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T07:43:34Z\",\"updated_at\":\"2025-07-17T15:11:43Z\",\"pushed_at\":\"2025-07-17T15:22:42Z\",\"git_url\":\"git://github.com/minjaeleee/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:minjaeleee/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/minjaeleee/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/minjaeleee/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":193,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":6,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":6,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/3\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/3\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/3\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/3/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/3/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/3/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/50f522d5439859ad5f566b7d1311c7a693022470\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/4\",\"id\":2661242420,\"node_id\":\"PR_kwDOPJuWzM6en1Y0\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/4\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/4.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/4.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/4\",\"number\":4,\"state\":\"open\",\"locked\":false,\"title\":\"[1팀 김휘린] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"Hwirin-Kim\",\"id\":113874038,\"node_id\":\"U_kgDOBsmUdg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/113874038?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Hwirin-Kim\",\"html_url\":\"https://github.com/Hwirin-Kim\",\"followers_url\":\"https://api.github.com/users/Hwirin-Kim/followers\",\"following_url\":\"https://api.github.com/users/Hwirin-Kim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Hwirin-Kim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Hwirin-Kim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Hwirin-Kim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Hwirin-Kim/orgs\",\"repos_url\":\"https://api.github.com/users/Hwirin-Kim/repos\",\"events_url\":\"https://api.github.com/users/Hwirin-Kim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Hwirin-Kim/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n\\r\\n### 배포 링크\\r\\n\\r\\nhttps://hwirin-kim.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n### 기술적 성장\\r\\n지난번 과제가 SPA를 어떻게든 구현해냈다면, 이번 과제는 SPA의 최적화된 렌더링을 위해 가상돔을 사용하는 방법을 이해했다고 생각한다.\\r\\n구현 과정에서 제대로 이해하지 못했던 DOM의 지식들도 있었다.\\r\\n\\r\\n- DOM의 attribute와 property의 차이\\r\\n  - DOM요소에는 HTML의 attribute와 자바스크립트 property가 따로 존재한다.\\r\\n  - 예시로 `<input checked>` 처럼 HTML에 명시된 값은 input.getAttribute(\\\"checked\\\")로 접근하면 해당 값이 true이건 false이건 \\\"\\\" 로 나온다.\\r\\n  - 따라서 실제 동작 여부는 input.checked처럼 property를 통해 확인하고 제어해야 한다.\\r\\n  ```\\r\\n  if (BOOLEAN_PROPS.includes(key)) {\\r\\n      dom[key] = Boolean(newVal); // checked, disable, selected 같은 boolean 속성들은 프로퍼티로 처리!\\r\\n  } else if (key in dom && key !== \\\"children\\\") {\\r\\n       dom[key] = newVal;           // 일반적인 property 처리\\r\\n  } else {\\r\\n      dom.setAttribute(key, newVal); // 둘 다 해당하지 않으면 attribute로 처리\\r\\n  }\\r\\n  ```\\r\\n- childNodes.length와 children.length의 차이\\r\\n  - 초과된 자식을 제거하려고 childNodes.length를 사용했었는데, 테스트 코드에서 children.length를 비교하는 부분이 있어서 찾아보게 되었다.\\r\\n  - childNodes.length는 텍스트 노드나 주석 노드까지 포함한다. (모든 자식 노드!)\\r\\n  - children.length는 오직 element 노드만 포함한다.\\r\\n\\r\\n- children은 읽기 전용이다!\\r\\n  - basic과 advanced 테스트를 모두 통과하고나서 e2e를 돌렸는데 바로 실패했다.\\r\\n  - 원인의 에러는 다음과 같았다.\\r\\n\\r\\n  ```\\r\\n  Uncaught TypeError: Cannot set property children of #<Element> which has only a getter\\r\\n  at updateAttributes (updateElement.js:26:18)\\r\\n  ```\\r\\n\\r\\n  - 위 에러 메시지는 children은 getter only이므로 속성값을 직접 할당할수없다는 내용이였다.\\r\\n  - 원인은 `dom[key] = newVal;` 이렇게 작성한 코드 때문이였는데, key가 \\\"children\\\"일때도 할당되면서 발생된 에러였다.\\r\\n  - 그래서 else if에 조건문으로 `key in dom && key !== \\\"children\\\"`을 넣어서 updateAttributes에서는 children을 아예 건너 뛰도록 하였다.\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n코드 품질에서 만족스러웠던 구현은 딱히 없는것 같다. \\r\\n뭔가 테스트 코드를 보고 이렇게 구현하면 되겠구나.. 하는 힌트를 많이 얻었고, 방향이 이미 잘 제시되어 있다고 느껴저서 나는 그저 그에 알맞게 구현했다고 생각이 든다.\\r\\n\\r\\n리팩토링이 필요한 부분이라기 보다 리액트에서는 key값이 존재하는데, 이번 과제에는 key가 구현되어있지 않아서 이걸 구현해보면 재밌지 않을까 생각이 든다. \\r\\nkey 값이 존재하면 만약 같은 엘리먼트가 순서만 달라진 경우 기존 DOM을 재사용하고 위치만 바꿔주었을 것이다.\\r\\n그렇게 되면 내부 상태도 유지 될것이니 더 효율적이라고 생각이 든다.\\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n이번 과제의 가장 큰 학습 효과는 가상DOM을 어떻게 만들어 내고, 어떻게 변화된 부분만 변경시키는지를 몸소 체험했다는 것이다. \\r\\n특히 단순하게 \\\"DOM구조를 가진 가상의 객체를 만들어서 변경된 부분만 바꿔주면돼!\\\" 라고만 알았던것을 직접 구현해보니, 그보다 훨씬 많은 부분이 고려되고있었다는것을 알게 되었다.\\r\\n특히 다양한 노드 타입들에 대한 처리들이 필요했고, 이벤트를 어떻게 위임할것인지도 매우 중요한 부분이였다는것이 느껴졌다.\\r\\n이벤트를 모든 DOM에 부여하지 않고, 공통 상위 요소에 하나의 이벤트 핸들러로 등록하고, 버블링을 이용해 실제 이벤트 발생 요소를 추적하는 방식으로 구현이 되어있다.\\r\\n메모리 절약도 될 것이고, 동적으로 생성된 엘리먼트에도 이벤트가 잘 적용될 것이다. 또한 요소가 제거될 때도 따로 신경 쓸 필요가 없다는 것을 알게 되었다.\\r\\n\\r\\n\\r\\n### 과제 피드백\\r\\n개인적으로 이번 과제가 지난 과제보다 약간 더 어려웠다.\\r\\nJSX를 vNode로 만들고, vNode를 정규화 시킨 뒤, 실제 돔으로 변경하는 부분 까지는 아주 쉽게 따라왔던것 같다. \\r\\n\\r\\n그 이후에 이벤트를 위임하는 단계, Diff 알고리즘을 구현하는 단계에서 많은 시간을 소모했다.\\r\\n이 부분은 테스트가 통과하지 전까지 직접 수정 -> AI로 수정 -> 또 직접 수정 -> AI로 수정.. 이 과정을 굉장히 여러번 거치면서 조금씩 감이 잡히기 시작했다. (사실 이 시간이 거의 하루가 넘는 시간이 걸렸다.)\\r\\n\\r\\n이런 시행착오를 거치고 나니 지난번 진행했던 과제에서 내가 궁금했었던 가상돔을 사용하여 변경된 부분을 찾고 해당 부분만 재 렌더링 시키는 방식이 이제는 머릿속에 큰그림으로 잘 그려지고 있다.\\r\\n물론 상세하게는 코드를 봐야만 기억이 난다..\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\ncreateElement를 만들때, 테스트에 명시적으로 VNode가 숫자이면 문자열로 바꾸라는 테스트가 있었습니다.\\r\\n그런데 normalizeVNode에서 이미 숫자를 문자열로 변환하였는데 createElement에서 왜 다시 필요한지 궁금합니다.\\r\\n혹시 normalizeVNode를 지나도 숫자가 나오는 경우가 있는걸까요..? 아니면 createElement가 정규화를 거치지 않은 다른 vNode를 사용하는 일이 생기는걸까요?\\r\\n\",\"created_at\":\"2025-07-12T12:23:57Z\",\"updated_at\":\"2025-07-17T20:48:36Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"a2734dcd8931b72f558b24b46610d328f1157d5f\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/4/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/4/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/4/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/6cf10e31d0efb186223069ade728af0b5f96d296\",\"head\":{\"label\":\"Hwirin-Kim:main\",\"ref\":\"main\",\"sha\":\"6cf10e31d0efb186223069ade728af0b5f96d296\",\"user\":{\"login\":\"Hwirin-Kim\",\"id\":113874038,\"node_id\":\"U_kgDOBsmUdg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/113874038?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Hwirin-Kim\",\"html_url\":\"https://github.com/Hwirin-Kim\",\"followers_url\":\"https://api.github.com/users/Hwirin-Kim/followers\",\"following_url\":\"https://api.github.com/users/Hwirin-Kim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Hwirin-Kim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Hwirin-Kim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Hwirin-Kim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Hwirin-Kim/orgs\",\"repos_url\":\"https://api.github.com/users/Hwirin-Kim/repos\",\"events_url\":\"https://api.github.com/users/Hwirin-Kim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Hwirin-Kim/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018510767,\"node_id\":\"R_kgDOPLU9rw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"Hwirin-Kim/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"Hwirin-Kim\",\"id\":113874038,\"node_id\":\"U_kgDOBsmUdg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/113874038?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Hwirin-Kim\",\"html_url\":\"https://github.com/Hwirin-Kim\",\"followers_url\":\"https://api.github.com/users/Hwirin-Kim/followers\",\"following_url\":\"https://api.github.com/users/Hwirin-Kim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Hwirin-Kim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Hwirin-Kim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Hwirin-Kim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Hwirin-Kim/orgs\",\"repos_url\":\"https://api.github.com/users/Hwirin-Kim/repos\",\"events_url\":\"https://api.github.com/users/Hwirin-Kim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Hwirin-Kim/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/Hwirin-Kim/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/Hwirin-Kim/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T12:19:52Z\",\"updated_at\":\"2025-07-17T19:48:13Z\",\"pushed_at\":\"2025-07-17T19:48:26Z\",\"git_url\":\"git://github.com/Hwirin-Kim/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:Hwirin-Kim/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/Hwirin-Kim/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/Hwirin-Kim/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":204,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/4\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/4\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/4\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/4/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/4/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/4/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/6cf10e31d0efb186223069ade728af0b5f96d296\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/5\",\"id\":2661283310,\"node_id\":\"PR_kwDOPJuWzM6en_Xu\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/5\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/5.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/5.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/5\",\"number\":5,\"state\":\"open\",\"locked\":false,\"title\":\"[7팀 양창훈] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"yangchanghun\",\"id\":162554010,\"node_id\":\"U_kgDOCbBgmg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/162554010?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yangchanghun\",\"html_url\":\"https://github.com/yangchanghun\",\"followers_url\":\"https://api.github.com/users/yangchanghun/followers\",\"following_url\":\"https://api.github.com/users/yangchanghun/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yangchanghun/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yangchanghun/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yangchanghun/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yangchanghun/orgs\",\"repos_url\":\"https://api.github.com/users/yangchanghun/repos\",\"events_url\":\"https://api.github.com/users/yangchanghun/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yangchanghun/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://yangchanghun.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [ ] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [ ] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [ ] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [ ] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [ ] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n제가 회고를 써본적이 없어서 글이 중구난방입니다. 이해해주시면 감사하겠습니다 .,ㅠ_ㅠ\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n##### 새로 학습한 개념\\r\\n- 가상DOM -> 실제DOM 변환\\r\\n- DOM메서드와 노드조작 API\\r\\n- weakSet() \\r\\n\\r\\n\\r\\n##### \\r\\n가상DOM이 뭐고 실제DOM은 어떤것인지 알게되었고 가상DOM에서 어떤 과정을 통해 DOM으로 변하는지 이해하게된거 같습니다\\r\\n\\r\\n\\r\\neventManager.js를 구현하면서 이벤트가 중복으로 등록되어 2번씩 호출되어서 removeEventListner를 붙여봤는데도\\r\\n중복으로 등록되었습니다.\\r\\n해결이 되지 않아 일단 AI의 도움을 받아 WeakSet을 사용하라고 답변받아 WeakSet을 이용해 root를 저장하고 기존 root가 있으면  return이 되어 중복 방지를 하였습니다.\\r\\n궁금증이 생긴게 다른 변수 Set을 이용해도 되지 않나라는 생각이 들어서 ai한테 물어봤는데 WeakSet은 약한참조로 참조되지 않는 메모리가 생기면 삭제를 해줘서 메모리 누수를 방지하여 사용된다고 하여 WeakSet의 사용이유를 간단하게 이해하였습니다. (WeakSet의 사용이유가 위 내용이외에도 더 있을까요?~ )\\r\\n\\r\\n후에 학메님을 통해 removeEventListner엔 익명함수를 붙이면 삭제가 되지 않는 다는 사실을 알게되었습니다.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n#### 추가 학습이 필요한 영역\\r\\ndocument.createElement, container.appendChild 와 같은 dom메서드의 대한 개념이 없어 구글링과 gpt를 통해 이해하면서 과제를 진행하였지만 100% 이해가 되지 않는 부분들이 있어 추가적으로 학습해야할 거같다.\\r\\n\\r\\n가지비 컬렉션,메모리 누수에 대한 개념을 예전에 공부했었지만 다 까먹은듯 하다.\\r\\n\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n```\\r\\nconst eventMap = new Map(); // eventType => Set of { targetEl, handler }\\r\\nconst setupContainers = new WeakSet();\\r\\n\\r\\nexport function setupEventListeners(root) {\\r\\n  if (setupContainers.has(root)) return;\\r\\n  console.log(\\\"몇번\\\");\\r\\n  for (const [eventType, listeners] of eventMap.entries()) {\\r\\n    root.addEventListener(eventType, (e) => {\\r\\n      for (const { targetEl, handler } of listeners) {\\r\\n        if (targetEl.contains(e.target)) {\\r\\n          handler(e);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n\\r\\n  setupContainers.add(root);\\r\\n}\\r\\n\\r\\nexport function addEvent(element, eventType, handler) {\\r\\n  if (!eventMap.has(eventType)) {\\r\\n    eventMap.set(eventType, new Set());\\r\\n  }\\r\\n\\r\\n  eventMap.get(eventType).add({ targetEl: element, handler });\\r\\n}\\r\\n\\r\\nexport function removeEvent(element, eventType, handler) {\\r\\n  const listeners = eventMap.get(eventType);\\r\\n  if (!listeners) return;\\r\\n\\r\\n  for (const listener of listeners) {\\r\\n    if (listener.targetEl === element && listener.handler === handler) {\\r\\n      listeners.delete(listener);\\r\\n      break;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  if (listeners.size === 0) {\\r\\n    eventMap.delete(eventType);\\r\\n  }\\r\\n}\\r\\n\\r\\n```\\r\\n에서 제가 root안에 특정 요소에 이벤트를 어떻게 달지 모르겠어서 ai이용해서 해결 좀 했습니다..\\r\\ne.target이 제가 누른 요소이고 targetEl은 제가 저장한  요소이고\\r\\ntargetEl안에 e.target이 포함되면 함수를 실행시킨다 라고 이해하면 됄까요????\\r\\n그리고 handler안에 매개로 e를 또 주는 이유는 버블링방지하라고 주는 e인가요 ?\\r\\n\\r\\n\\r\\n### 과제 피드백\\r\\n이번 과제를 진행할때는 가상dom원리를 이해하고 테스트코드를 통해서 과제를 해결하려고 했는데 도저히 안되겠어서 다른 분들의 코드 및 ai를 활용해서 진행했습니다. 이게 맞는 방법인지 잘 모르겠습니다! ㅠ\\r\\n\\r\\n그리고 \\r\\n```\\r\\n    it(\\\"컴포넌트를 정규화한다.\\\", () => {\\r\\n      const UnorderedList = ({ children, ...props }) => <ul {...props}>{children}</ul>;\\r\\n      const ListItem = ({ children, className, ...props }) => (\\r\\n        <li {...props} className={`list-item ${className ?? \\\"\\\"}`}>\\r\\n          - {children}\\r\\n        </li>\\r\\n      );\\r\\n      const TestComponent = () => (\\r\\n        <UnorderedList>\\r\\n          <ListItem id=\\\"item-1\\\">Item 1</ListItem>\\r\\n          <ListItem id=\\\"item-2\\\">Item 2</ListItem>\\r\\n          <ListItem id=\\\"item-3\\\" className=\\\"last-item\\\">\\r\\n            Item 3\\r\\n          </ListItem>\\r\\n        </UnorderedList>\\r\\n      );\\r\\n```\\r\\n요런 테스트 크드를 보고 \\\"아 컴포넌트는 function이니까 얘를 다시 vNode.type({ ...vNode.props, children: vNode.children }) 이렇게 해서 재귀를 돌려야 겠다\\\"와 같은  생각을 하려면 어떤 경험이 필요할까요,,, \\r\\n사실 과제하면서 코딩테스트푸는거 같다 라는 생각을 했습니다.,,,,, 정상일까요 ㅠㅠ\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-12T13:03:55Z\",\"updated_at\":\"2025-07-18T08:20:50Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"7ff0ac9adff9a3a96a4b49b10ecc6c900af218ff\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/5/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/5/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/5/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/76fc91246a0ed72340b004e160c029f147062dc6\",\"head\":{\"label\":\"yangchanghun:main\",\"ref\":\"main\",\"sha\":\"76fc91246a0ed72340b004e160c029f147062dc6\",\"user\":{\"login\":\"yangchanghun\",\"id\":162554010,\"node_id\":\"U_kgDOCbBgmg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/162554010?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yangchanghun\",\"html_url\":\"https://github.com/yangchanghun\",\"followers_url\":\"https://api.github.com/users/yangchanghun/followers\",\"following_url\":\"https://api.github.com/users/yangchanghun/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yangchanghun/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yangchanghun/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yangchanghun/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yangchanghun/orgs\",\"repos_url\":\"https://api.github.com/users/yangchanghun/repos\",\"events_url\":\"https://api.github.com/users/yangchanghun/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yangchanghun/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018523193,\"node_id\":\"R_kgDOPLVuOQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"yangchanghun/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"yangchanghun\",\"id\":162554010,\"node_id\":\"U_kgDOCbBgmg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/162554010?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yangchanghun\",\"html_url\":\"https://github.com/yangchanghun\",\"followers_url\":\"https://api.github.com/users/yangchanghun/followers\",\"following_url\":\"https://api.github.com/users/yangchanghun/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yangchanghun/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yangchanghun/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yangchanghun/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yangchanghun/orgs\",\"repos_url\":\"https://api.github.com/users/yangchanghun/repos\",\"events_url\":\"https://api.github.com/users/yangchanghun/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yangchanghun/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/yangchanghun/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/yangchanghun/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T12:51:34Z\",\"updated_at\":\"2025-07-17T13:50:36Z\",\"pushed_at\":\"2025-07-17T14:21:50Z\",\"git_url\":\"git://github.com/yangchanghun/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:yangchanghun/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/yangchanghun/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/yangchanghun/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":190,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/5\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/5\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/5\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/5/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/5/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/5/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/76fc91246a0ed72340b004e160c029f147062dc6\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/6\",\"id\":2661327071,\"node_id\":\"PR_kwDOPJuWzM6eoKDf\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/6\",\"number\":6,\"state\":\"open\",\"locked\":false,\"title\":\"[8팀 정유열] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2) \",\"user\":{\"login\":\"Yuyeol\",\"id\":52055504,\"node_id\":\"MDQ6VXNlcjUyMDU1NTA0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/52055504?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Yuyeol\",\"html_url\":\"https://github.com/Yuyeol\",\"followers_url\":\"https://api.github.com/users/Yuyeol/followers\",\"following_url\":\"https://api.github.com/users/Yuyeol/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Yuyeol/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Yuyeol/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Yuyeol/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Yuyeol/orgs\",\"repos_url\":\"https://api.github.com/users/Yuyeol/repos\",\"events_url\":\"https://api.github.com/users/Yuyeol/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Yuyeol/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n\\r\\n### 배포 링크\\r\\n\\r\\n[https://yuyeol.github.io/front_6th_chapter1-2/](https://yuyeol.github.io/front_6th_chapter1-2/)\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n- [Normalized 전후 기점의 VNode를 중점으로 타이핑 진행](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6/files#diff-a9ba9cbedd19c9f66d564d2e89912890209b98f0a7ef19187877d2587300e476)하였고 아래 내용과 같이 유형을 나누었습니다.\\r\\n  - VElement: Primitive가 아닌 VNode\\r\\n  - RawVNode: VElement 또는 RawPrimitive\\r\\n  - VNode: VElement 또는 Primitive\\r\\n  - RawPrimitive: string | number | boolean | null | undefined\\r\\n  - Primitive: string (normalize 되어 DOM 추가에 추가 될 값 )\\r\\n  - RawChild: 자녀 노드\\r\\n  - Child: normalize로 가공된 자녀노드\\r\\n\\r\\n- [updateElement의 책임에 따른 분리](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6/commits/eb4099822df4760ed627ce2be2831cd912ec254a)\\r\\n  - updateChildren: 인덱스 기반으로 변경사항을 비교하여 updateElement를 실행시키는 책임을 담당합니다.\\r\\n  - updateProps: 개별 노드들의 props의 변경에 대한 책임을 담당합니다.\\r\\n\\r\\n- [updateProps 로직 통합](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6/commits/5095c6a15c4b811f94031e08982cbb4ff15b8e9a)\\r\\n  초기 구현에서는 createElement와 updateElement 각각에 updateProps 로직을 작성했었습니다.\\r\\n  이후 createElement용 함수에는 prevProps가 없다는 점을 제외하고는 updateProps가 거의 동일한 동작을 하고 있기에 통합해도 좋겠다고 판단했습니다.\\r\\n\\r\\n- 실행 흐름 상 일어날 수 없는 케이스에 대하여 error 처리 + type guard를 했습니다.\\r\\n  - [createElement](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6/files#diff-ba114fab0a7bf74049d558ce904fd36232866e41ac711147e80eb771cad523ee) – normalize 되지 않은 Custom component는 사용할 수 없습니다.\\r\\n    - JSX가 normalizeVNode를 거치면 Custom component는 모두 실제 DOM VNode로 풀려 있어야 합니다.\\r\\n  - [renderElement](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6/files#diff-0d818ea7e5e9856588faaac23e7a2c66d3a4ff848bf98cf4c50bdb412437e226) – 렌더링 할 vNode를 찾을 수 없습니다.\\r\\n    - normalize를 거친 vNode는 null | undefined를 리턴할 수 없습니다.\\r\\n  - [renderElement](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6/files#diff-0d818ea7e5e9856588faaac23e7a2c66d3a4ff848bf98cf4c50bdb412437e226) – updateElement 호출되려면 prevVNode가 존재해야 합니다.\\r\\n    - 리렌더 시 prevVNode는 비어있는 상황은 가정하지 않습니다. diff 알고리즘은 prev DOM이 반드시 필요합니다.\\r\\n  - [updateElement](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6/files#diff-789ec694fbd2d212b3c2c90bbc75a91f3983b9074c3c0c1228a52155842272cc) – Prev와 Current는 VElement여야 합니다.\\r\\n    - Primitive가 이미 걸러진 분기에 해당하므로 Prev와 Current는 VElement여야 합니다.\\r\\n\\r\\n  - [(element as any)[key]에서 `any`를 사용한 것은 건 의도가 명확합니다.](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6/files#diff-419e9fec42eedc117e34fb5c7c7e298cdfbab68e1c56ca41cdf8d5fc2daeaab5)\\r\\n    - HTMLElement 타입 정의에는 disabled, checked, required처럼 자주 쓰는 필드만 선언되어 있고, key가 무엇으로 들어올지 컴파일 타임에 예상할 수 없으므로 이에 대한 타이핑 작업을 하기보다는 as any로 우회하였습니다.\\r\\n    - 다른 로직들의 타이핑에 영향을 주지 않아 국소적인 any 타입 단언은 안정성에서도 문제가 되지 않습니다.\\r\\n\\r\\n- 이해한 학습내용을 기반으로 각 파일의 최상단에 동작원리를 간단하게 요약해두었습니다.\\r\\n\\r\\n- 커밋 작성 단위에 대한 아쉬움이 있습니다.\\r\\n  - 모듈 단위로 구현 커밋을 남겼는데, 구현 + 리팩토링의 전 과정을 한 커밋에 두어서 고민한 흔적이 드러나지 않은것 같습니다.\\r\\n\\r\\n### 학습 효과 분석 및 기술적 성장\\r\\n\\r\\n기존에 경험해본 적 있던 VDOM의 DOM 교체과정, 리컨실러의 동작 원리를 복습해볼 수 있었던 시간이었습니다.\\r\\n저 스스로를 솔직히 판단하자면 여전히 추상적으로 그려지는 영역이 많이 존재합니다. 그렇지만 이번 기회로 조금더 해상도를 높일 수 있는 기회가 되었습니다.\\r\\n그리고 코치님께서 조언해주셨던 리액트로 Nextjs 만들어보기를 도전해볼 수 있는 계기가 되는 것 같습니다. 기술을 뜯어보고 그 메커니즘을 흉내 내어보는것만으로 큰 학습효과를 얻을 수 있다는 것을 이번 기회에 많이 실감했습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n- 테스트의 존재와 미리 명확하게 모듈을 나누어주신 구조로 인해 AI 사용 시 과제를 꽤 쉽게 완료하는 경우가 많을 수도 있겠다는 생각이 들었습니다.\\r\\n- 각각의 모듈 구현에 집중하면 되는 과제이다보니 의도적으로 프로젝트 전체를 파악하려는 노력을 하지 않는다면 학습하길 의도하신 전체 흐름을 이해하지 못하고 넘어가는 수강생도 존재할 것 같습니다.\\r\\n- 이전에 이 과제와 유사하게 리액트를 모방한 구조를 만들어본 경험이 있습니다만, 코치님이 구성하신것처럼 체계적이지 못했기에 코치님의 과제를 분석하면서 정말 많은 인사이트를 얻어갈 수 있었습니다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n- 제가 구현한 코드 중에서 코치님이라면 이렇게 작성하지 않았을텐데 라고 생각이되는 부분들이 있다면 알려주시면 감사하겠습니다.\\r\\n  1차적으로는 아래와 같은 내용들입니다.\\r\\n  - 이벤트 매니저에서 이벤트를 저장하고 사용하기 위해 채택한 자료구조의 활용이 적절한가\\r\\n  - 불필요한 재귀나 리소스를 낭비할만한 플로우가 보였는가\\r\\n  - 최대한 과제에 충실한 기능만 구현, 오버엔지니어링 되는 요소들을 분별해가며 제한적으로 구현했는데 실제로도 그러한가\\r\\n\\r\\n- 변수명, 타입명, 주석 대신 가독성 좋은 코드 작성(학습용 주석 제외)을 지향하면서 과제를 수행하고 있습니다. 아쉬운 부분이 있다면 알려주시면 감사하겠습니다.\\r\\n\",\"created_at\":\"2025-07-12T13:51:10Z\",\"updated_at\":\"2025-07-19T08:18:36Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"fb60fc0f09c0ee98f65aea6c24fcd935376f7ef1\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/6/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/6/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/6/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/ec025d3f17478ab598f2538574a0cb1520a3ec60\",\"head\":{\"label\":\"Yuyeol:main\",\"ref\":\"main\",\"sha\":\"ec025d3f17478ab598f2538574a0cb1520a3ec60\",\"user\":{\"login\":\"Yuyeol\",\"id\":52055504,\"node_id\":\"MDQ6VXNlcjUyMDU1NTA0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/52055504?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Yuyeol\",\"html_url\":\"https://github.com/Yuyeol\",\"followers_url\":\"https://api.github.com/users/Yuyeol/followers\",\"following_url\":\"https://api.github.com/users/Yuyeol/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Yuyeol/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Yuyeol/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Yuyeol/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Yuyeol/orgs\",\"repos_url\":\"https://api.github.com/users/Yuyeol/repos\",\"events_url\":\"https://api.github.com/users/Yuyeol/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Yuyeol/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018515000,\"node_id\":\"R_kgDOPLVOOA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"Yuyeol/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"Yuyeol\",\"id\":52055504,\"node_id\":\"MDQ6VXNlcjUyMDU1NTA0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/52055504?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Yuyeol\",\"html_url\":\"https://github.com/Yuyeol\",\"followers_url\":\"https://api.github.com/users/Yuyeol/followers\",\"following_url\":\"https://api.github.com/users/Yuyeol/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Yuyeol/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Yuyeol/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Yuyeol/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Yuyeol/orgs\",\"repos_url\":\"https://api.github.com/users/Yuyeol/repos\",\"events_url\":\"https://api.github.com/users/Yuyeol/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Yuyeol/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/Yuyeol/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/Yuyeol/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T12:30:28Z\",\"updated_at\":\"2025-07-15T08:26:31Z\",\"pushed_at\":\"2025-07-15T08:26:28Z\",\"git_url\":\"git://github.com/Yuyeol/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:Yuyeol/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/Yuyeol/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/Yuyeol/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":197,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/6\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/6\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/6/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/6/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/6/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/ec025d3f17478ab598f2538574a0cb1520a3ec60\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/7\",\"id\":2661327406,\"node_id\":\"PR_kwDOPJuWzM6eoKIu\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/7\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/7.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/7.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/7\",\"number\":7,\"state\":\"open\",\"locked\":false,\"title\":\"[5팀 윤영서] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2) \",\"user\":{\"login\":\"YeongseoYoon-hanghae\",\"id\":191664522,\"node_id\":\"U_kgDOC2yRig\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/191664522?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/YeongseoYoon-hanghae\",\"html_url\":\"https://github.com/YeongseoYoon-hanghae\",\"followers_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/followers\",\"following_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/subscriptions\",\"organizations_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/orgs\",\"repos_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/repos\",\"events_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://yeongseoyoon-hanghae.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n솔직히 과제 자체는 쉽지는 않았습니다.(지난주보다는 나았을 뿐...) 그래도 이번 주차 과제를 진행하면서 각각의 함수가 하는 일에 대해 정리하고, 왜 이렇게 구현했는지 스스로 탐구하는 시간을 가질 수 있어서 의미 있었다고 생각합니다. 과제보다 문서화를 하는 것에 더 시간이 많이 걸렸는데 다음부터는 시간 날때마다 틈틈히 과제를 진행해서... 좀 더 빨리 끝낼 수 있으면 좋겠습니다. 🥹\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n이번 주차 과제를 진행하면서 각각의 함수가 하는 일에 대해서 정리해보고 제가 겪었던 이슈들과 왜 이렇게 구현했는지에 대해 스스로 탐구하고 싶었습니다.\\r\\n좀 더 명확하게 이해하고 싶어 다음과 같이 문서화를 진행했습니다.\\r\\n\\r\\n<details markdown=\\\"1\\\">\\r\\n<summary>createVNode</summary>\\r\\n\\r\\n### JSX와 트랜스파일에 대한 이해\\r\\n_글에 앞서, 리액트 공식문서에서는 compile이라는 단어를 사용하고 있지만 JSX에서 Javascript로의 변환은 트랜스파일의 성격이 강해 하위에서는 혼란 방지를 위해 '트랜스파일'이라는 단어를 사용하였습니다._\\r\\n\\r\\n일단 `createVNode`의 정체(?)에 대해 이해하려면, JSX를 먼저 이해해야합니다.\\r\\n\\r\\nJSX는 React가 브라우저에 마크업을 렌더링할 수 있는 JavaScript 함수입니다. React 컴포넌트는 JSX라는 확장된 문법을 사용하여 마크업을 나타냅니다. JSX는 HTML과 비슷해 보이지만, 조금 더 엄격하며 동적으로 정보를 표시할 수 있습니다. \\r\\n\\r\\n브라우저는 기본적으로 JSX를 이해하지 못하므로, 대부분의 React 사용자들은 JSX 코드를 일반 JavaScript로 변환하기 위해 Babel 같은 트랜스파일러에 의존합니다. \\r\\n\\r\\n```js\\r\\n// 브라우저가 이해하지 못하는 JSX\\r\\nfunction App() {\\r\\n  return <div>Hello World</div>;\\r\\n}\\r\\n```\\r\\nReact 생태계에서는 이런 변환 과정을 'JSX Transform'이라고 부릅니다.\\r\\n\\r\\n레포지토리를 살펴보면 vite.config.js에 다음과 같은 내용이 있는데요.\\r\\n\\r\\n```js\\r\\n    esbuild: {\\r\\n      jsx: \\\"transform\\\",\\r\\n      jsxFactory: \\\"createVNode\\\",\\r\\n    },\\r\\n    optimizeDeps: {\\r\\n      esbuildOptions: {\\r\\n        jsx: \\\"transform\\\",\\r\\n        jsxFactory: \\\"createVNode\\\",\\r\\n      },\\r\\n    },\\r\\n```\\r\\n`esbuild`는 프로덕션 빌드 과정에서 개발 서버에서 파일을 실시간으로 변환할 때, `optimizeDeps` 설정은 node_modules에 있는 외부 라이브러리의 JSX를 변환할 때 사용됩니다. 개발 서버 시작 시 의존성을 최적화할 때, 혹은 외부 패키지들을 사전 번들링할 때 동작하게 됩니다.\\r\\n\\r\\njsx부분을 보면 `transform`이라고 되어있는데 이부분은 어떤 것을 의미할까요?\\r\\nReact 17버전 이전에는 JSX를 `createElement`를 통해 transform 했습니다. \\r\\n\\r\\n```js\\r\\n// 변환 전\\r\\nimport React from 'react';\\r\\n\\r\\nfunction App() {\\r\\n  return <h1>Hello World</h1>;\\r\\n}\\r\\n\\r\\n// 변환 후 \\r\\nimport React from 'react';\\r\\n\\r\\nfunction App() {\\r\\n  return React.createElement('h1', null, 'Hello world');\\r\\n}\\r\\n```\\r\\n이때 당시의 문제점은 JSX가 `React.createElement`로 트랜스파일되기 때문에, JSX를 사용할 때마다 React가 스코프에 있어야 했습니다. 때문에 그때는 명시적으로 React import문을 작성해주어야 했습니다. \\r\\n\\r\\nReact 17버전 이후로 이 문제들을 해결하기 위해 Babel이나 TypeScript 같은 트랜스파일러만 사용하도록 의도된 React 패키지의 두 개의 새로운 진입점을 도입했습니다.\\r\\nJSX를 React.createElement로 변환하는 대신, 새로운 JSX transform은 React 패키지의 [새로운 진입점에서 특별한 함수들을 자동으로 import](https://ko.legacy.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html#whats-a-jsx-transform)하고 호출합니다. \\r\\n\\r\\n```js\\r\\n// 변환 전\\r\\nfunction App() {\\r\\n  return <h1>Hello World</h1>;\\r\\n}\\r\\n\\r\\n// 변환 후 (트랜스파일러가 자동으로 import 추가)\\r\\nimport {jsx as _jsx} from 'react/jsx-runtime';\\r\\n\\r\\nfunction App() {\\r\\n  return _jsx('h1', { children: 'Hello world' });\\r\\n}\\r\\n```\\r\\n언급한대로 이후로는 React를 import 하지 않고도 JSX를 사용할 수 있게 되었습니다.\\r\\n\\r\\n다시 돌아가서 vite.config.js를 살펴보겠습니다.\\r\\n```js\\r\\n    esbuild: {\\r\\n      jsx: \\\"transform\\\",\\r\\n      jsxFactory: \\\"createVNode\\\",\\r\\n    },\\r\\n    optimizeDeps: {\\r\\n      esbuildOptions: {\\r\\n        jsx: \\\"transform\\\",\\r\\n        jsxFactory: \\\"createVNode\\\",\\r\\n      },\\r\\n    },\\r\\n```\\r\\n여기서 `transform`은 단순히 '변환'의 늬앙스로 해석될 수도 있지만 React 17버전 이하의 트랜스파일 방식을 의미합니다.\\r\\n\\r\\n```js\\r\\n// Classic Transform에서는 jsxFactory 사용 가능\\r\\n{\\r\\n  jsx: \\\"react\\\",           // 또는 \\\"transform\\\"\\r\\n  jsxFactory: \\\"h\\\"         // ✅ 적용됨\\r\\n}\\r\\n\\r\\n// Automatic Transform에서는 jsxFactory 무시됨\\r\\n{\\r\\n  jsx: \\\"react-jsx\\\",       // 또는 \\\"automatic\\\"  \\r\\n  jsxFactory: \\\"h\\\",        // ❌ 무시됨\\r\\n  jsxImportSource: \\\"preact\\\" // ✅ 대신 이것 사용\\r\\n}\\r\\n```\\r\\n즉 우리의 config 설정은, \\r\\n1. jsxFactory에 명시된 부분을 통해 JSX를 어떤 함수 호출로 변환할지 결정\\r\\n2. jsx: \\\"transform\\\"을 통해 Classic Transform에서 동작\\r\\n이라고 이해할 수 있을 것 같습니다.\\r\\n\\r\\n그럼 그런 설정으로 JSX가 어떻게 변환되는지 확인해보겠습니다.\\r\\n\\r\\n```jsx\\r\\n// JSX 코드 (우리가 작성하는 코드)\\r\\n/** @jsx createVNode */ -> 이때 상단에 주석을 명시적으로 작성하여 해당 파일에서 JSX가 createVNode로 변환됩니다.\\r\\nfunction App() {\\r\\n  return <div className=\\\"container\\\">Hello World</div>;\\r\\n}\\r\\n\\r\\n// esbuild가 변환한 결과 (jsxFactory: \\\"createVNode\\\" 설정에 따라)\\r\\nfunction App() {\\r\\n  return createVNode('div', { className: 'container' }, 'Hello World');\\r\\n}\\r\\n```\\r\\n전체 플로우는 다음과 같을 것입니다.\\r\\n\\r\\n```\\r\\n1. JSX 작성 \\r\\n   ↓ \\r\\n2. esbuild가 createVNode 호출로 변환 \\r\\n   ↓ \\r\\n3. 실행 시 createVNode 함수 호출 \\r\\n   ↓ \\r\\n4. createVNode 함수가 가상 DOM 객체 반환\\r\\n```\\r\\n그러나 이 플로우에서 esbuild는 `createVNode` 함수 호출 코드만 생성할 뿐, 실제 함수는 우리가 직접 구현해야 합니다.\\r\\n\\r\\nJSX와 esbuild 속성에 대하여 어느정도 알아본 것 같으니  `createVNode`에 대해 알아보도록 하겠습니다.\\r\\n\\r\\n\\r\\n### createVNode의 역할\\r\\n`createVNode`는 가상 노드객체를 생성하는 함수입니다. 위에서 말한대로 JSX를 파싱하거나, 컴포넌트 함수에서 엘리먼트를 만들 때 사용하고, 실제 DOM이 아니라, 단순히 JS 객체를 반환합니다.\\r\\n\\r\\n제가 구현한 createVNode는 다음과 같습니다.\\r\\n```js\\r\\nfunction createVNode(type, props, ...children) {\\r\\n  return {\\r\\n    type,\\r\\n    props,\\r\\n    children: children.flat(Infinity).filter((value) => value === 0 || Boolean(value)),\\r\\n  };\\r\\n}\\r\\n```\\r\\n1. type: 무엇을 만들것인가? 에 해당됩니다. html 태그의 종류 등이 여기 type에 해당됩니다.\\r\\n2. props: 어떻게 만들지에 해당됩니다. CSS 클래스, ID, 이벤트등이 해당됩니다. \\r\\n3. children: 안에 뭘 넣을지 정합니다.\\r\\n\\r\\n그렇다면 왜 `flat(Infinity)`구문이 필요했을까요? \\r\\n\\r\\n```js\\r\\nchildren = [\\r\\n  { type: 'li', props: null, children: ['제목'] },\\r\\n  [  // 문제! 배열 안에 배열이 들어있음\\r\\n    { type: 'li', props: {key: '할일1'}, children: ['할일1'] },\\r\\n    { type: 'li', props: {key: '할일2'}, children: ['할일2'] },\\r\\n    { type: 'li', props: {key: '할일3'}, children: ['할일3'] }\\r\\n  ],\\r\\n  { type: 'li', props: null, children: ['끝'] }\\r\\n]\\r\\n```\\r\\n위와 같은 상황에서 배열을 `createElement`로 전달하게 되면 다음과 같이 동작할 것입니다.\\r\\n\\r\\n```js\\r\\nchildren.forEach(child => {\\r\\n  if (Array.isArray(child)) {\\r\\n    // createElement는 vnode 객체를 기대하는데 배열이 들어옴\\r\\n  } else {\\r\\n    createElement(child) // 정상 처리\\r\\n  }\\r\\n})\\r\\n```\\r\\n즉 `createElement`에서 배열을 처리하지 않고 모든 children이 vNode 객체가 되어 일관적으로 동작하도록 평탄화 했다고 이해하면 될 것 같습니다.\\r\\n\\r\\n\\r\\n# 출처\\r\\nhttps://ko.react.dev/learn/writing-markup-with-jsx#\\r\\nhttps://ko.legacy.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html#whats-a-jsx-transform\\r\\nhttps://www.typescriptlang.org/tsconfig/#jsxFactory\\r\\nhttps://esbuild.github.io/api/#jsx-factory\\r\\n</details>\\r\\n\\r\\n<details markdown=\\\"2\\\">\\r\\n<summary>normalizeVNode</summary>\\r\\n\\r\\nVirtual DOM을 구현하다 보면 `createVNode`만으로는 해결되지 않는 문제들을 마주하게 됩니다. 'JSX가 JavaScript로 트랜스파일되면서 생성되는 다양한 타입의 값들을 어떻게 안전하게 처리할 것인가?' 바로 이 지점에서 `normalizeVNode`의 필요성이 드러납니다.\\r\\n\\r\\n### 문제 상황 발생!\\r\\n\\r\\nJSX를 사용하다 보면 다음과 같은 상황들이 빈번하게 발생합니다.\\r\\n\\r\\n```jsx\\r\\nfunction UserProfile({ user }) {\\r\\n  return (\\r\\n    <div>\\r\\n      <h1>{user.name}</h1>                    // 문자열\\r\\n      <span>나이: {user.age}</span>            // 숫자  \\r\\n      {user.isActive && <span>활성 사용자</span>} // boolean 또는 VNode\\r\\n      {user.email || '이메일 없음'}             // 문자열 또는 빈 문자열\\r\\n      <ProfileImage user={user} />             // 함수 컴포넌트\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n```\\r\\n이 JSX가 트랜스파일되면 createVNode의 children으로 다음과 같은 값들이 전달됩니다.\\r\\n\\r\\n```js\\r\\nchildren = [\\r\\n  'John Doe',           // string\\r\\n  '나이: ', 25,         // string, number\\r\\n  false,                // boolean (조건부 렌더링 실패)\\r\\n  'john@email.com',     // string\\r\\n  { type: ProfileImage, props: { user }, children: [] }  // 함수 컴포넌트\\r\\n]\\r\\n```\\r\\n만약 정규화 없이 바로 `createElement`를 호출한다면 어떻게 될까요?\\r\\n```js\\r\\nfunction createElement(vNode) {\\r\\n  // vNode가 false인 경우\\r\\n  const element = document.createElement(vNode.type);  // 에러!\\r\\n  // TypeError: Cannot read property 'type' of false\\r\\n}\\r\\n```\\r\\n\\r\\n// 이런 상황들이 발생\\r\\ncreateElement(false);     // 조건부 렌더링 실패 시\\r\\ncreateElement(25);        // 숫자가 직접 전달된 경우  \\r\\ncreateElement(null);      // null 값이 들어온 경우\\r\\n각각의 타입에 대해 `createElement`에서 모든 경우를 처리하는 것은 함수를 복잡하게 만들고, 단일 책임 원칙에도 위배됩니다. ~~(때문에 정규화를 하는 `normalizeVNode`가 분리된 것이 아닐까...생각합니다)~~\\r\\n\\r\\n\\r\\n### normalizeVNode의 역할\\r\\nJSX는 유연하기 때문에 다양한 값의 타입들이 들어올 수 있습니다.\\r\\n\\r\\n```js\\r\\nchildren = [\\r\\n  false,                    // boolean\\r\\n  0,                        // 0 (falsy로 처리되면 안되는)\\r\\n  undefined,           // undefined\\r\\n  '텍스트',               // 텍스트\\r\\n  [<li>아이템1</li>, <li>아이템2</li>], // 배열 매핑 결과\\r\\n  { type: UserCard, props: {...}, children: [] }, // 함수 컴포넌트\\r\\n  null,                     // 명시적 null\\r\\n]\\r\\n```\\r\\n이러한 복잡한 값들을 `normalizeVNode`가 체계적으로 해결합니다.\\r\\n\\r\\n```js\\r\\nexport function normalizeVNode(vNode) {\\r\\n  // 1. Falsy 값 처리: 렌더링하지 않을 값들을 빈 문자열로 변환\\r\\n  if (vNode === null || vNode === undefined || typeof vNode === \\\"boolean\\\") {\\r\\n    return \\\"\\\";\\r\\n  }\\r\\n\\r\\n  // 2. 원시값 처리: 텍스트 노드로 만들 값들을 문자열로 통일\\r\\n  if (typeof vNode === \\\"string\\\" || typeof vNode === \\\"number\\\") {\\r\\n    return String(vNode);\\r\\n  }\\r\\n\\r\\n  // 3. 함수형 컴포넌트 처리: 컴포넌트 실행 후 재귀 정규화\\r\\n  if (typeof vNode.type === \\\"function\\\") {\\r\\n    return normalizeVNode(vNode.type({ ...vNode.props, children: vNode.children }));\\r\\n  }\\r\\n\\r\\n  // 4. 일반 VNode 처리: children을 재귀적으로 정규화\\r\\n  return {\\r\\n    ...vNode,\\r\\n    children: vNode.children.map(normalizeVNode).filter(Boolean),\\r\\n  };\\r\\n}\\r\\n```\\r\\n\\r\\n### 각 단계별로 어떻게 처리되는지 살펴보기\\r\\n#### 1단계: Falsy 값 제거 (단, 0은 보존)\\r\\n```\\r\\n// JSX에서 자주 발생하는 패턴들\\r\\n{isLoading && <Spinner />}              // false → \\\"\\\"\\r\\n{user?.name}                            // undefined → \\\"\\\"  \\r\\n{showModal && <Modal />}                // false → \\\"\\\"\\r\\n{data || '데이터 없음'}                  // 문자열은 그대로\\r\\n\\r\\n// 중요: 0은 의미있는 값이므로 보존\\r\\n{score}                                 // 0 → \\\"0\\\" (제거되지 않음)\\r\\n{remainingCount}                        // 0 → \\\"0\\\" (화면에 표시됨)\\r\\n\\r\\n// normalizeVNode 처리 결과\\r\\nfalse → \\\"\\\"        // filter(Boolean)에서 제거됨\\r\\nnull → \\\"\\\"         // filter(Boolean)에서 제거됨  \\r\\nundefined → \\\"\\\"    // filter(Boolean)에서 제거됨\\r\\n0 → \\\"0\\\"          // 문자열이므로 유지됨\\r\\n```\\r\\n0은 자바스크립트에서 falsy한 값이지만, 정규화되면서 처리되면 안되는 의미있는 값입니다.\\r\\n\\r\\n그리고 그것이 `createVNode`에서 `filter((value) => value === 0 || Boolean(value))`를 사용한 이유입니다. 0은 falsy하지만 화면에 표시되기 때문입니다.\\r\\n\\r\\n\\r\\n#### 2단계: 원시값 문자열화\\r\\n```js\\r\\n// JSX에서 숫자나 문자열 직접 렌더링\\r\\n<span>현재 점수: {score}</span>  // score가 숫자\\r\\n<div>{userName}</div>           // userName이 문자열\\r\\n\\r\\n// normalizeVNode 처리 후\\r\\n42 → \\\"42\\\"        // 숫자를 문자열로 변환\\r\\n\\\"윤영서\\\" → \\\"윤영서\\\"  // 문자열은 그대로 유지\\r\\n```\\r\\n이렇게 처리하면 `createElement`에서 텍스트 노드 생성 시 일관된 타입(문자열)으로 처리할 수 있습니다.\\r\\n\\r\\n#### 3단계: 함수 컴포넌트 실행\\r\\n```jsx\\r\\nconst ProfileImage = ({ user }) => {\\r\\n  return user.avatar \\r\\n    ? createVNode('img', { src: user.avatar, alt: user.name })\\r\\n    : createVNode('div', { class: 'default-avatar' }, user.name[0]);\\r\\n};\\r\\n\\r\\n// 1. VNode 형태로 전달된 컴포넌트\\r\\n{\\r\\n  type: ProfileImage,  // 함수 자체\\r\\n  props: { user: { name: 'John', avatar: null } },\\r\\n  children: []\\r\\n}\\r\\n\\r\\n// 2. normalizeVNode에서 실행\\r\\nvNode.type({ ...vNode.props, children: vNode.children })\\r\\n// ↓ ProfileImage({ user: { name: 'John', avatar: null }, children: [] })\\r\\n// ↓ createVNode('div', { class: 'default-avatar' }, 'J') 호출됨\\r\\n\\r\\n// 3. 반환된 VNode를 다시 normalizeVNode로 재귀 처리\\r\\nreturn normalizeVNode({\\r\\n  type: 'div',\\r\\n  props: { class: 'default-avatar' },\\r\\n  children: ['J']\\r\\n});\\r\\n```\\r\\n\\r\\n#### 4단계: 재귀적 children 정규화\\r\\n```js\\r\\n// 중첩된 구조의 VNode\\r\\n{\\r\\n  type: 'div',\\r\\n  props: null,\\r\\n  children: [\\r\\n    'Hello ',\\r\\n    42,\\r\\n    null,\\r\\n    { type: 'span', props: null, children: ['World', false, 123] }\\r\\n  ]\\r\\n}\\r\\n\\r\\n// 정규화 후\\r\\n{\\r\\n  type: 'div', \\r\\n  props: null,\\r\\n  children: [\\r\\n    'Hello ',\\r\\n    '42',\\r\\n    // null은 \\\"\\\"이 되고 filter(Boolean)로 제거\\r\\n    { type: 'span', props: null, children: ['World', '123'] }\\r\\n  ]\\r\\n}\\r\\n```\\r\\n`children.map(normalizeVNode).filter(Boolean)`를 통해 모든 하위 노드가 재귀적으로 정규화되고, 빈 값들은 제거됩니다.\\r\\n\\r\\n### 전체적인 파이프라인에서의 역할\\r\\n```jsx\\r\\n// 1. JSX 트랜스파일\\r\\n<div>{name}{age}</div>\\r\\n// ↓\\r\\ncreateVNode('div', null, name, age)\\r\\n\\r\\n// 2. VNode 생성 (구조적 정리만)\\r\\n{\\r\\n  type: 'div',\\r\\n  props: null, \\r\\n  children: ['John', 25]  // 아직 타입이 혼재\\r\\n}\\r\\n\\r\\n// 3. 정규화 (의미적 변환)\\r\\nconst normalized = normalizeVNode(vNode);\\r\\n{\\r\\n  type: 'div',\\r\\n  props: null,\\r\\n  children: ['John', '25']  // 모든 children이 문자열로 통일\\r\\n}\\r\\n\\r\\n// 4. DOM 생성 (안전한 createElement)\\r\\nconst element = createElement(normalized);  // 에러 없이 실행\\r\\n```\\r\\n이러한 이유로 좀 더 안전하게 실제 요소를 생성하기 위해서라도 요소 생성 이전의 정규화는 필요한 단계라고 할 수 있습니다.\\r\\n\\r\\n\\r\\n</details>\\r\\n\\r\\n<details markdown=\\\"3\\\">\\r\\n<summary>createElement</summary>\\r\\n\\r\\n여태까지 `createVNode`, `normalizeVNode`의 역할에 대해서 알아봤으니 이제는 그들이 반환한 가상 DOM 노드를 실제 브라우저 DOM으로 반환하는 함수가 필요합니다. 이번 포스트에서는 `createElement` 함수의 구현과 동작 원리를 자세히 살펴보겠습니다.\\r\\n\\r\\n### 우리 과제의 createElement vs React.createElement\\r\\n앞서 얘기했던 것처럼, React 17버전 이전에는 JSX를 사용할 때 반드시 `React.createElement`를 import해야 했습니다. 하지만 우리가 구현하는 `createElement`는 완전히 다른 역할을 담당합니다.\\r\\n\\r\\n```jsx\\r\\n// React.createElement: VNode 객체 생성 (팩토리 함수)\\r\\nconst vNode = React.createElement('div', { className: 'box' }, 'Hello');\\r\\n// 결과: { type: 'div', props: { className: 'box', children: 'Hello' }, ... }\\r\\n\\r\\n// 우리 과제의 createElement: VNode → 실제 DOM 변환 (렌더러 함수)\\r\\nconst domElement = createElement(vNode);\\r\\n// 결과: <div class=\\\"box\\\">Hello</div> (실제 HTMLElement)\\r\\n```\\r\\n쉽게 말하자면 과제에서의 가상 DOM 시스템은 다음과 같은 3단계 파이프라인으로 구성된다고 이해할 수 있을 것 같습니다.\\r\\n\\r\\n1. `createVNode`: VNode 생성을 위한 인자들(태그명, props, children)을 받아서 표준 VNode 객체로 변환\\r\\n2. `normalizeVNode`: VNode를 정규화하여 좀 더 예상 가능한 구조로 정리\\r\\n3. `createElement`: 정규화된 VNode를 실제 DOM 엘리먼트로 변환\\r\\n\\r\\n### 그렇다면 과제에서의 createElement는 어떻게 구현해야할까?\\r\\n\\r\\n저는 과제에서 `createElement`를 이런 방식으로 구현했습니다.\\r\\n```js\\r\\nexport function createElement(vNode) {\\r\\n    // 1. Falsy 값 처리\\r\\n    if (vNode === null || vNode === undefined || typeof vNode === \\\"boolean\\\") {\\r\\n      return document.createTextNode(\\\"\\\");\\r\\n    }\\r\\n    \\r\\n    // 2. 원시 타입 처리\\r\\n    if (typeof vNode === \\\"string\\\" || typeof vNode === \\\"number\\\") {\\r\\n      return document.createTextNode(vNode);\\r\\n    }\\r\\n    \\r\\n    // 3. 배열 처리\\r\\n    if (Array.isArray(vNode)) {\\r\\n      const fragment = document.createDocumentFragment();\\r\\n      vNode.forEach((child) => fragment.appendChild(createElement(child)));\\r\\n      return fragment;\\r\\n    }\\r\\n    \\r\\n    // 4. 객체 처리\\r\\n    const $el = document.createElement(vNode.type);\\r\\n    updateAttributes($el, vNode.props ?? {});\\r\\n    $el.append(...vNode.children.map(createElement));\\r\\n    return $el;\\r\\n}\\r\\n\\r\\n```\\r\\n사실 이전의 `createVNode`, `normalizeVNode`에서도 타입에 따라 처리를 하고 있는 부분이 존재하지만, 각각의 함수는 모두 다른 함수의 내부를 알지 못하며 인터페이스를 통해서만 소통하고 각 함수는 독립적으로 동작할 수 있어야 한다는 생각에 `createElement` 내부에서도 동일하게 타입에 대한 처리를 구현하였습니다.\\r\\n\\r\\n#### 1. Falsy 값 처리\\r\\nlegacy문서긴 하지만 [React legacy 공식문서](https://legacy.reactjs.org/docs/jsx-in-depth.html#booleans-null-and-undefined-are-ignored)에는 `false, null, undefined, and true are valid children. They simply don't render`라고 명시되어 있습니다. `createElement`의 구현에서는 해당 내용을 반영하여 빈 텍스트 노드를 반환하도록 했습니다.\\r\\n\\r\\n```js\\r\\n    if (vNode === null || vNode === undefined || typeof vNode === \\\"boolean\\\") {\\r\\n      return document.createTextNode(\\\"\\\");\\r\\n    }\\r\\n```\\r\\n\\r\\n사실 falsy한 경우에는 값을 return하지 않는다거나 null을 통하여 진행하는 것이 더 좋을 것 같다고 생각하지만, 과제에서는 테스트코드를 위해 텍스트 노드를 반환하도록 작성하였습니다.\\r\\n\\r\\n#### 2. 원시 타입 처리\\r\\n```js\\r\\nif (typeof vNode === \\\"string\\\" || typeof vNode === \\\"number\\\") {\\r\\n  return document.createTextNode(vNode);\\r\\n}\\r\\n```\\r\\n문자열과 숫자 모두 DOM에서는 문자열로 표시되므로 `document.createTextNode`를 통해 나타냅니다. \\r\\n\\r\\n#### 3. 배열 처리\\r\\n ```js\\r\\nif (Array.isArray(vNode)) {\\r\\n  const fragment = document.createDocumentFragment();\\r\\n  vNode.forEach((child) => fragment.appendChild(createElement(child)));\\r\\n  return fragment;\\r\\n}\\r\\n```\\r\\n배열 처리에서 `DocumentFragment`를 사용하는 것은 성능 최적화의 핵심입니다. [MDN의 DocumentFragment](https://developer.mozilla.org/ko/docs/Web/API/DocumentFragment#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80_%ED%98%B8%ED%99%98%EC%84%B1\\r\\n)문서에서 언급하고 있는 내용을 읽어보면\\r\\n> `DocumentFragment`는 일반 문서처럼 노드로 구성된 문서 구조를 저장할 수 있는 `Document`의 가벼운 버전입다. `DocumentFragment`는 활성화된 문서 트리 구조의 일부가 아니기 때문에 내부의 트리를 변경해도 문서나 성능에 아무 영향도 주지 않으며도 방지할 수 있습니다.\\r\\n\\r\\n라고 설명하고 있는데, '활성화된 문서 트리 구조의 일부가 아니' 라는것은 어떤 것을 의미할까요?\\r\\n\\r\\n`활성화된 문서 트리 구조`는 현재 브라우저에서 실제로 렌더링되고 있는 DOM 구조를 의미합니다. 즉, 사용자가 볼 수 있는 웹페이지의 실제 DOM 트리를 말합니다.\\r\\n반대로 활성화된 문서 트리 구조가 아닌 `DocumentFragment`는 메인 DOM 트리의 일부가 되지 않습니다. 다큐먼트 조각을 생성하고, 엘리먼트들을 다큐먼트 조각에 추가하고 그 다큐먼트 조각을 DOM 트리에 추가하는 방식으로 DOM이 생성됩니다. DOM 트리 내에서 다큐먼트 조각은 그것의 모든 자식들로 대체됩니다.\\r\\n\\r\\n[createDocumentFragment](https://developer.mozilla.org/ko/docs/Web/API/Document/createDocumentFragment)를 살펴보면 '메모리 내에 다큐먼트 조각이 존재하고'라는 부분이 있습니다. 결론적으로 `DocumentFragment`는 메모리 내에 존재하는, 그렇지만 document에는 부착되지 않은 문서 조각에 불과하므로 내부적으로 바뀌고 나서 한번에 document에 부착되어 아무리 변경이 되어도 일정시점까지는 리플로우나 리페인트가 일어나지 않습니다.\\r\\n\\r\\n그리고 재귀적 처리를 통하여 중첩된 배열이나 복잡한 구조도 안전하게 처리합니다.\\r\\n\\r\\n#### 4. VNode 객체 처리\\r\\n```js\\r\\nconst $el = document.createElement(vNode.type);\\r\\nupdateAttributes($el, vNode.props ?? {});\\r\\n$el.append(...vNode.children.map(createElement));\\r\\nreturn $el;\\r\\n```\\r\\n이 부분에서는 이제 앞에서 언급한 Falsy값이 아니고, 원시값도 아니며, 배열도 아닌 객체를 처리하게 됩니다. \\r\\n\\r\\n\\r\\n### createElement에서의 updateAttributes\\r\\n\\r\\n`updateAttributes` 함수는 가상 DOM 객체의 props를 실제 DOM 엘리먼트에 적용하는 핵심 함수입니다. 이때 props 내부의 값들은 다양한 값이 들어올 수 있으므로 그에 따른 처리가 필요합니다.\\r\\n\\r\\n```js\\r\\nfunction updateAttributes($el, props) {\\r\\n  Object.entries(props).forEach(([attr, value]) => {\\r\\n    if (attr.startsWith(\\\"on\\\") && typeof value === \\\"function\\\") {\\r\\n      const eventType = attr.toLowerCase().slice(2);\\r\\n      addEvent($el, eventType, value);\\r\\n    } else if ([\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readOnly\\\"].includes(attr)) {\\r\\n      $el[attr] = Boolean(value);\\r\\n    } else if (attr === \\\"className\\\") {\\r\\n      if (value) {\\r\\n        $el.setAttribute(\\\"class\\\", value);\\r\\n      } else {\\r\\n        $el.removeAttribute(\\\"class\\\");\\r\\n      }\\r\\n    } else if (attr === \\\"style\\\" && typeof value === \\\"object\\\") {\\r\\n      Object.assign($el.style, value);\\r\\n    } else {\\r\\n      $el.setAttribute(attr, value);\\r\\n    }\\r\\n  });\\r\\n}\\r\\n```\\r\\n해당 함수는 5가지 속성을 통해 props를 처리합니다.\\r\\n\\r\\n#### 1. 이벤트 핸들러 처리 (on* 속성)\\r\\n```js\\r\\nif (attr.startsWith(\\\"on\\\") && typeof value === \\\"function\\\") {\\r\\n  const eventType = attr.toLowerCase().slice(2);\\r\\n  addEvent($el, eventType, value);\\r\\n}\\r\\n```\\r\\n우리가 React를 사용할때를 생각해보면, onXXX와 같이 생긴 이벤트 핸들러를 처리하게 될 때가 있는데 이때를 의미합니다. \\r\\n이벤트 핸들러는 HTML 속성으로 설정하기 보다는, DOM 엘리먼트의 이벤트 리스너로 등록해야 합니다.\\r\\n\\r\\nReact에서는 JSX의 onClick, onChange 등의 이벤트 핸들러를 실제 DOM 이벤트로 변환할 때 [SyntheticEvent](https://react.dev/reference/react-dom/components/common)를 사용합니다. 하지만 우리의 구현에서는 네이티브 DOM 이벤트를 직접 사용하여 더 간단하게 처리합니다.\\r\\n\\r\\n```js\\r\\n// JSX: <button onClick={handleClick}>클릭</button>\\r\\n// 변환: addEvent($el, \\\"click\\\", handleClick);\\r\\n```\\r\\naddEvent에 대해서는 후속 글에서 다뤄보겠습니다.\\r\\n\\r\\n#### 2. 불리언 속성 처리 (checked, disabled, selected, readOnly)\\r\\n```js\\r\\nelse if ([\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readOnly\\\"].includes(attr)) {\\r\\n      $el[attr] = Boolean(value);\\r\\n} \\r\\n```\\r\\n상위의 전체 코드를 보면 불리언 속성을 제외한 다른 속성들은 `setAttribute`을 통해 속성을 처리해주는데, [setAttribute](https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute)을 살펴보면 다음과 같은 내용이 나옵니다.\\r\\n\\r\\n> Any non-string value specified is converted automatically into a string.\\r\\n> 불리언 값(true/false)을 넣어도 무조건 문자열로 바뀝니다.\\r\\n\\r\\n```js\\r\\n// setAttribute의 문제점\\r\\n$el.setAttribute(\\\"disabled\\\", false); // \\\"false\\\" 문자열이 설정되어 여전히 disabled\\r\\n$el.setAttribute(\\\"checked\\\", true);   // \\\"true\\\" 문자열이 설정됨\\r\\n\\r\\n// DOM 프로퍼티 방식 (권장)\\r\\n$el.disabled = false;\\r\\n$el.checked = true;   \\r\\n```\\r\\n불리언 속성에서는 속성의 존재 여부가 true/false를 결정하므로, DOM 프로퍼티로 직접 설정하는 것이 더 안전하고 예측 가능합니다.\\r\\n\\r\\n#### 3. className 속성 처리\\r\\n\\r\\n```js\\r\\nelse if (attr === \\\"className\\\") {\\r\\n  if (value) {\\r\\n    $el.setAttribute(\\\"class\\\", value);\\r\\n  } else {\\r\\n    $el.removeAttribute(\\\"class\\\");\\r\\n  }\\r\\n}\\r\\n```\\r\\nReact에서는 JavaScript의 예약어인 class를 피하기 위해 `className`을 사용합니다. 하지만 실제 DOM에서는 class 속성을 사용해야 합니다.\\r\\n또한 값이 없을 때 `removeAttribute`를 사용하는 이유는 빈 문자열이 설정되는 것을 방지하기 위함입니다.\\r\\n\\r\\n#### 4. 스타일 객체 처리\\r\\n```js\\r\\nelse if (attr === \\\"style\\\" && typeof value === \\\"object\\\") {\\r\\n  Object.assign($el.style, value);\\r\\n}\\r\\n```\\r\\nReact에서는 스타일을 객체로 전달할 수 있습니다.\\r\\n\\r\\n```jsx\\r\\n<div style={{ backgroundColor: 'red', fontSize: '16px' }}>\\r\\n```\\r\\n이를 처리하기 위해 `Object.assign`을 사용하여 스타일 객체를 DOM 엘리먼트의 style 프로퍼티에 직접 할당합니다.\\r\\n\\r\\n#### 5. 기본 속성 처리\\r\\n\\r\\n```js\\r\\nelse {\\r\\n  $el.setAttribute(attr, value);\\r\\n}\\r\\n```\\r\\n위의 특별한 케이스들에 해당하지 않는 모든 속성은 `setAttribute`를 사용하여 설정합니다. 이는 `id, data-*, aria-*` 등의 일반적인 HTML 속성들을 처리합니다.\\r\\n\\r\\n다음 글에서는 `updateAttributes`의 내부에서 사용되는 이벤트 위임 방식에 대해 다뤄보겠습니다.\\r\\n\\r\\n### 출처\\r\\nhttps://developer.mozilla.org/ko/docs/Web/API/DocumentFragment#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80_%ED%98%B8%ED%99%98%EC%84%B1\\r\\nhttps://react.dev/reference/react-dom/components/common\\r\\nhttps://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\\r\\n\\r\\n</details>\\r\\n\\r\\n<details markdown=\\\"4\\\">\\r\\n<summary>eventManager</summary>\\r\\n\\r\\n지난 글에서는 `createElement` 함수와 `updateAttributes` 함수를 통해 가상 DOM을 실제 DOM으로 변환하는 과정을 살펴봤습니다. 특히 `updateAttributes` 함수에서 이벤트 핸들러 처리를 위해 `addEvent` 함수를 사용한다고 언급했었는데, 이번 글에서는 이벤트 위임 패턴을 사용한 이벤트 관리 시스템의 구현과 동작 원리를 자세히 살펴보겠습니다.\\r\\n\\r\\n일반적으로 DOM 엘리먼트에 이벤트를 등록하는 방법은 각 엘리먼트마다 직접 리스너를 등록하는 것입니다.\\r\\n\\r\\n```js\\r\\nconst button1 = document.createElement('button');\\r\\nbutton1.addEventListener('click', handleClick1);\\r\\n\\r\\nconst button2 = document.createElement('button');\\r\\nbutton2.addEventListener('click', handleClick2);\\r\\n\\r\\nconst button3 = document.createElement('button');\\r\\nbutton3.addEventListener('click', handleClick3);\\r\\n```\\r\\n이러한 방식은 직관적이지만 어느정도의 문제를 가지는데, 만약 버튼이 10개가 있다면 10개의 리스너를 붙이게 되고, 그로 인해 메모리 누수의 위험이 높아집니다.(무조건 해제해줘야함) 또한 각각의 변수에 리스너가 부착되므로 관리가 복잡해집니다.\\r\\n\\r\\n## 이벤트 위임이란?\\r\\n`이벤트 위임`은 부모 엘리먼트에서 자식 엘리먼트들의 이벤트를 대신 처리하는 패턴입니다. 이는 `이벤트 버블링` 메커니즘을 활용합니다.\\r\\n\\r\\n```html\\r\\n<div id=\\\"parent\\\">\\r\\n  <button id=\\\"child\\\">클릭</button>\\r\\n</div>\\r\\n```\\r\\n버튼을 클릭하면 이벤트가 다음 순서로 전파됩니다.\\r\\n\\r\\n1. button 엘리먼트에서 이벤트 발생\\r\\n2. div 엘리먼트로 이벤트 버블링\\r\\n3. document까지 계속 버블링\\r\\n\\r\\n[React 공식문서](https://react.dev/learn/responding-to-events)에 따르면\\r\\n> Event handlers will also catch events from any children your component might have. We say that an event “bubbles” or “propagates” up the tree: it starts with where the event happened, and then goes up the tree.\\r\\n> 이벤트 핸들러는 컴포넌트가 가질 수 있는 모든 자식 엘리먼트의 이벤트도 포착합니다. 이벤트가 트리 위로 '버블링' 또는 '전파'된다고 표현하는데, 이는 이벤트가 발생한 곳에서 시작해서 트리 위로 올라가기 때문입니다.\\r\\n\\r\\n```jsx\\r\\nfunction ParentComponent() {\\r\\n  const handleClick = (event) => {\\r\\n    console.log('클릭된 엘리먼트:', event.target.tagName);\\r\\n    // 자식 버튼을 클릭해도 이 핸들러가 실행됨\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div onClick={handleClick}>\\r\\n      <button>버튼 1</button>\\r\\n      <button>버튼 2</button>\\r\\n      <span>텍스트</span>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n```\\r\\n이벤트 위임은 바로 이 `버블링` 특성을 활용하여 부모 엘리먼트에서 모든 자식 엘리먼트의 이벤트를 처리합니다.\\r\\n이벤트 위임은 하나의 이벤트 리스너로 여러 엘리먼트를 처리할 수 있고, 나중에 엘리먼트가 추가되더라도 동적으로 엘리먼트의 이벤트 처리가 가능합니다. 또한 이벤트 리스너의 등록/해제가 간단합니다.\\r\\n\\r\\n## 어떻게 구현해야할까?\\r\\n\\r\\n### 1. 전역 상태 관리\\r\\n```js\\r\\nconst eventMap = new WeakMap();\\r\\nconst delegatedEvents = new Set();\\r\\nlet rootElement = null;\\r\\n```\\r\\n먼저 전역적인 상태를 정의했습니다.\\r\\n여기서 `eventMap`은 각 DOM 엘리먼트와 그에 등록된 이벤트 핸들러들을 매핑하는 `WeakMap`입니다. `delegatedEvents`는 현재 위임되고 있는 이벤트 타입들을 저장하는 Set입니다. 그리고 `rootElement`는 이벤트 위임이 적용될 루트 컨테이너 엘리먼트입니다.\\r\\n\\r\\n#### WeakMap을 사용하는 이유(feat. Map과의 차이)\\r\\n`eventMap`에 `WeakMap`을 사용하는 이유는 메모리 누수를 방지하기 위함입니다. [WeakMap](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)은 키/값 쌍의 모음이지만, 일반적인 Map과는 중요한 차이점이 있습니다.\\r\\n\\r\\n```js\\r\\n// Map을 사용한 경우 (메모리 누수 위험)\\r\\nconst eventMap = new Map();\\r\\nconst element = document.createElement('div');\\r\\neventMap.set(element, handlers);\\r\\n\\r\\n// DOM에서 element를 제거해도\\r\\nelement.remove();\\r\\nelement = null;\\r\\n\\r\\n// Map이 여전히 element를 참조하고 있어서 가비지 컬렉션되지 않음\\r\\n// 메모리 누수 발생!\\r\\n```\\r\\n`Map`은 키에 대해 강한 참조를 사용합니다. 이는 키가 Map에서 사용되는 한, 코드의 다른 곳에서 더 이상 참조되지 않더라도 가비지 컬렉션되지 않는다는 의미입니다.\\r\\n\\r\\n```js\\r\\n// WeakMap을 사용한 경우 (메모리 누수 방지)\\r\\nconst eventMap = new WeakMap();\\r\\nconst element = document.createElement('div');\\r\\neventMap.set(element, handlers);\\r\\n\\r\\n// DOM에서 element를 제거하면\\r\\nelement.remove();\\r\\nelement = null;\\r\\n\\r\\n// WeakMap의 해당 항목도 자동으로 가비지 컬렉션됨\\r\\n// 메모리 누수 없음!\\r\\n```\\r\\n이와 반해 `WeakMap`은 키에 대해 약한 참조를 사용합니다. 때문에 객체가 WeakMap의 키에 포함되더라도 가비지 컬렉션의 대상이 됩니다. \\r\\n이는 특히 DOM 요소가 동적으로 생성/제거되는 환경에서 매우 중요합니다. 일반적인 웹 애플리케이션에서는 수많은 DOM 요소들이 생성되고 제거되는데, 만약 Map을 사용한다면 제거된 요소들의 이벤트 핸들러 정보가 계속 메모리에 남아있게 됩니다. 때문에 이번 구현에서는 `WeakMap`을 사용했습니다.\\r\\n\\r\\n#### WeakMap은 왜 이터러블(Iterable)하지 않을까\\r\\nWeakMap이 이터러블하지 않은 이유는 `가비지 컬렉션의 비결정성` 때문입니다. WeakMap은 키에 대해 약한 참조를 사용하는데, 이는 키가 언제 가비지 컬렉션될지 예측할 수 없다는 의미입니다.\\r\\n\\r\\n예를 들어, WeakMap에 객체를 키로 저장한 후 해당 객체의 참조를 해제하면, 가비지 컬렉터가 언제 그 객체를 수집할지는 브라우저 엔진과 메모리 상황에 따라 달라집니다. 같은 코드라도 실행할 때마다 다른 결과가 나올 수 있어 이터레이션의 일관성을 보장할 수 없습니다.\\r\\n\\r\\n```js\\r\\nconst weakMap = new WeakMap();\\r\\nlet obj = { name: 'test' };\\r\\nweakMap.set(obj, 'value');\\r\\n\\r\\n// 만약 WeakMap이 이터러블하다면?\\r\\nconsole.log([...weakMap]); // [obj, 'value'] 예상\\r\\n\\r\\nobj = null; // 참조 해제\\r\\n\\r\\n// 가비지 컬렉션이 언제 일어날지 모름\\r\\nsetTimeout(() => {\\r\\n  console.log([...weakMap]); // obj가 있을까? 없을까? 예측 불가\\r\\n}, 100);\\r\\n```\\r\\n또한 WeakMap이 이터러블하려면 살아있는 키들을 추적해야 하는데, 이는 WeakMap의 핵심 목적인 \\\"메모리 누수 방지\\\"와 모순됩니다. 키들을 추적하는 순간 그것은 강한 참조가 되어버리기 때문입니다.\\r\\n\\r\\n반면 Map은 키에 대해 강한 참조를 사용하므로 키가 항상 존재함을 보장할 수 있어 안전하게 이터레이션을 제공할 수 있습니다. WeakMap은 \\\"메모리 안전한 연관 관계\\\"를 목적으로 설계된 것이지 \\\"순회 가능한 컬렉션\\\"이 아니므로, 명시적으로 접근하는 것만을 지원합니다.\\r\\n\\r\\n\\r\\n### 2. 이벤트 리스너 설정\\r\\n\\r\\n```js\\r\\nexport function setupEventListeners(container) {\\r\\n  rootElement = container;\\r\\n  delegatedEvents.forEach((eventType) => {\\r\\n    container.removeEventListener(eventType, handleEvent);\\r\\n    container.addEventListener(eventType, handleEvent);\\r\\n  });\\r\\n}\\r\\n```\\r\\n`setupEventListeners` 함수는 컨테이너에 이벤트 리스너를 등록합니다. 이미 등록된 이벤트 리스너가 있다면 먼저 제거한 후 새로 등록하여 중복 등록을 방지합니다. \\r\\n\\r\\n### 3. 이벤트 핸들러 등록\\r\\n```js\\r\\nexport function addEvent(element, eventType, handler) {\\r\\n  if (!eventMap.has(element)) {\\r\\n    eventMap.set(element, new Map());\\r\\n  }\\r\\n\\r\\n  const elementEvents = eventMap.get(element);\\r\\n  if (!elementEvents.has(eventType)) {\\r\\n    elementEvents.set(eventType, new Set());\\r\\n  }\\r\\n  elementEvents.get(eventType).add(handler);\\r\\n\\r\\n  if (!delegatedEvents.has(eventType)) {\\r\\n    delegatedEvents.add(eventType);\\r\\n\\r\\n    if (rootElement) {\\r\\n      rootElement.removeEventListener(eventType, handleEvent);\\r\\n      rootElement.addEventListener(eventType, handleEvent);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n`addEvent` 함수는 다음과 같은 구조로 이벤트 핸들러를 관리합니다. \\r\\n\\r\\n```\\r\\neventMap (WeakMap)\\r\\n└── element (HTMLElement)\\r\\n    └── elementEvents (Map)\\r\\n        └── eventType (string)\\r\\n            └── handlers (Set)\\r\\n                ├── handler1 (Function)\\r\\n                ├── handler2 (Function)\\r\\n                └── ...\\r\\n```\\r\\n이 구조를 통해 하나의 엘리먼트에 같은 이벤트 타입의 여러 핸들러를 등록할 수 있고, Set을 사용하여 중복 핸들러 등록을 방지합니다.\\r\\n\\r\\n### 4. 이벤트 처리 로직\\r\\n\\r\\n```js\\r\\nfunction handleEvent(event) {\\r\\n  let target = event.target;\\r\\n  while (target && target !== rootElement) {\\r\\n    const elementEvents = eventMap.get(target);\\r\\n    if (elementEvents) {\\r\\n      const handlers = elementEvents.get(event.type);\\r\\n      if (handlers) {\\r\\n        handlers.forEach((handler) => handler(event));\\r\\n        return;\\r\\n      }\\r\\n    }\\r\\n    target = target.parentElement;\\r\\n  }\\r\\n}\\r\\n```\\r\\n`handleEvent` 함수는 이벤트 위임의 핵심 로직입니다. \\r\\n\\r\\n내부의 로직을 살펴보면 다음과 같습니다.\\r\\n\\r\\n1. 이벤트 타겟부터 시작: event.target에서 시작하여 부모 엘리먼트들을 순회합니다.\\r\\n2. 핸들러 검색: 각 엘리먼트에 등록된 해당 이벤트 타입의 핸들러를 찾습니다.\\r\\n3. 핸들러 실행: 핸들러를 찾으면 모든 핸들러를 실행하고 순회를 종료합니다.\\r\\n4. 부모로 이동: 핸들러가 없으면 부모 엘리먼트로 이동하여 계속 검색합니다.\\r\\n\\r\\n여기서 중요한 점은 실제 DOM에는 각 엘리먼트마다 개별 이벤트 리스너가 등록되어 있지 않다는 것입니다. 대신 루트 컨테이너에 하나의 `handleEvent` 함수만 등록되어 있고, 이 함수가 이벤트가 발생하면 위와 같은 방식으로 적절한 핸들러를 찾아서 실행합니다.\\r\\n\\r\\n\\r\\n#### 합성 이벤트(Synthetic Event) 고려사항\\r\\n현재 우리의 구현은 네이티브 DOM 이벤트를 그대로 핸들러에 전달하고 있습니다. 하지만 실제 React에서는 브라우저 호환성과 일관성을 위해 합성 이벤트를 사용합니다.\\r\\n\\r\\n```js\\r\\n// 현재 구현: 네이티브 이벤트 직접 전달\\r\\nhandlers.forEach((handler) => handler(event));\\r\\n\\r\\n// React의 접근: 합성 이벤트 생성 후 전달\\r\\n// handlers.forEach((handler) => handler(createSyntheticEvent(event)));\\r\\n```\\r\\n\\r\\n`합성 이벤트`가 필요한 이유는 브라우저마다 이벤트 객체의 속성이 다르기 때문입니다. 예를 들어 마우스 위치를 얻을 때 IE는 event.x, Firefox는 event.layerX, Chrome은 event.offsetX를 사용하는 등의 차이가 있습니다. React는 이런 차이점들을 추상화하여 모든 브라우저에서 동일한 API를 제공합니다.\\r\\n\\r\\n<img width=\\\"472\\\" height=\\\"466\\\" alt=\\\"Image\\\" src=\\\"https://github.com/user-attachments/assets/ab7e45da-f017-4f2d-8f19-09f31e7f0b75\\\" />\\r\\n\\r\\n현재 대부분의 모던 브라우저들이 웹 표준을 잘 지키고 있어서 네이티브 이벤트만으로도 충분한 경우가 많지만, 크로스 브라우저 지원이나 일관된 개발 경험을 위해서는 합성 이벤트를 고려해볼 수 있습니다. 다만 과제 범위에서는 단순성을 위해 네이티브 이벤트를 직접 사용하는 방식을 채택했습니다.\\r\\n\\r\\n### 5. 이벤트 핸들러 제거\\r\\n```js\\r\\nexport function removeEvent(element, eventType, handler) {\\r\\n  const elementEvents = eventMap.get(element);\\r\\n  if (!elementEvents) return;\\r\\n\\r\\n  const handlers = elementEvents.get(eventType);\\r\\n  if (!handlers) return;\\r\\n\\r\\n  handlers.delete(handler);\\r\\n}\\r\\n```\\r\\n특정 핸들러만 제거하는 기능을 제공합니다. WeakMap을 사용하면 DOM 엘리먼트가 제거될 때 관련된 모든 핸들러가 자동으로 가비지 컬렉션되지만, `removeEvent`는 엘리먼트는 유지하면서 특정 핸들러만 제거하고 싶을 때나 명시적인 정리가 필요할 때 사용합니다.\\r\\n\\r\\n```js\\r\\nconst button = document.createElement('button');\\r\\n\\r\\n// 여러 핸들러 등록\\r\\naddEvent(button, 'click', handler1);\\r\\naddEvent(button, 'click', handler2);\\r\\n\\r\\n// 나중에 handler1만 제거 (button과 handler2는 유지)\\r\\nremoveEvent(button, 'click', handler1);\\r\\n```\\r\\n다음 글에서는 `updateElement`와 이러한 이벤트 시스템과 함께 동작하는 가상 DOM의 diffing 알고리즘에 대해 다뤄보겠습니다. \\r\\n\\r\\n### 출처\\r\\nhttps://react.dev/learn/responding-to-events\\r\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\\r\\nhttps://ko.legacy.reactjs.org/docs/events.html\\r\\nhttps://react.dev/reference/react-dom/components/common\\r\\n\\r\\n</details>\\r\\n\\r\\n\\r\\n<details markdown=\\\"5\\\">\\r\\n<summary>updateElement</summary>\\r\\n\\r\\n지난 글에서는 이벤트 위임 시스템을 통해 효율적인 이벤트 관리 방법을 살펴봤습니다. 이번 글에서는 가상 DOM의 핵심인 `diffing 알고리즘`과 `updateElement` 함수를 통해 실제 DOM을 효율적으로 업데이트하는 방법을 자세히 살펴보겠습니다.\\r\\n\\r\\n## DOM 업데이트의 문제점\\r\\n일반적으로 DOM 조작은 웹 애플리케이션에서 가장 비용이 큰 연산 중 하나입니다. 상태가 변경될 때마다 전체 DOM을 다시 렌더링한다면 성능이 크게 저하될 것입니다.\\r\\n\\r\\n```js\\r\\n// 비효율적인 방식\\r\\nfunction updateUI(newData) {\\r\\n  // 전체 DOM을 다시 생성\\r\\n  document.body.innerHTML = '';\\r\\n  document.body.appendChild(createWholeApp(newData));\\r\\n}\\r\\n```\\r\\n이러한 방식은 전체 DOM을 재생성하므로 불필요한 연산이 많아 성능 저하가 발생하고, 깜빡임과 상태 손실로 인해 사용자 경험이 악화됩니다. 또한 불필요한 DOM 노드의 생성과 제거로 메모리 낭비도 심각합니다.\\r\\n\\r\\n### 가상 DOM과 재조정(Reconciliation)의 개념\\r\\n`가상 DOM`은 실제 DOM 구조를 JavaScript 객체로 표현한 것으로, 메모리에서 빠르게 조작할 수 있는 DOM의 가벼운 복사본입니다. 이 가상 DOM을 실제 DOM에 반영하는 과정을 `재조정(Reconciliation)`이라고 합니다.\\r\\nReact 컴포넌트의 render() 함수는 현재 상태를 반영한 React 엘리먼트 트리를 반환합니다. state나 props가 변경될 때마다 새로운 엘리먼트 트리가 생성되며, React는 이전 트리와 새로운 트리를 비교하여 실제 DOM을 효율적으로 업데이트해야 합니다.\\r\\n이때 두 트리 간의 차이를 찾아 최소한의 연산으로 변환하는 일반적인 알고리즘들이 존재합니다. 하지만 이러한 알고리즘들은 n개의 엘리먼트가 있는 트리에 대해 O(n³)의 복잡도를 가집니다.\\r\\n만약 React에 이 알고리즘을 적용한다면, 1,000개의 엘리먼트가 있는 트리에 대해 약 10억 번(1000³)의 비교 연산을 수행해야 합니다. React는 대신, 두 가지 가정을 기반하여 O(n) 복잡도의 휴리스틱 알고리즘을 구현했습니다.\\r\\n\\r\\n\\r\\n### React의 Diffing 알고리즘 핵심 가정\\r\\nReact의 diffing 알고리즘은 두 가지의 가정을 기반으로 합니다.\\r\\n\\r\\n1. 서로 다른 타입의 두 엘리먼트는 서로 다른 트리를 만들어낸다.\\r\\n2. 개발자가 key prop을 통해, 여러 렌더링 사이에서 어떤 자식 엘리먼트가 변경되지 않아야 할지 표시해 줄 수 있다.\\r\\n\\r\\n### Diffing 알고리즘 상세 분석\\r\\n그럼 Diffing 알고리즘에 대해 분석해보겠습니다.\\r\\n\\r\\n#### 1. 엘리먼트의 타입이 다른 경우\\r\\nReact는 엘리먼트의 type(태그 이름이나 커스텀 컴포넌트 타입)이 바뀌면, 내부 구조도 완전히 달라질 것이라 가정하고 기존 서브트리 전체를 파괴 후 새로 생성합니다. 이때 해당 서브트리의 모든 자식 요소 및 컴포넌트가 언마운트→ 마운트 주기를 거치며, 그 과정에서 컴포넌트 상태가 초기화됩니다.\\r\\n\\r\\n```js\\r\\n// 이전 트리\\r\\n<div>\\r\\n  <Counter />\\r\\n</div>\\r\\n\\r\\n// 새로운 트리\\r\\n<span>\\r\\n  <Counter />\\r\\n</span>\\r\\n```\\r\\n이때의 플로우는 다음과 같습니다.\\r\\n1. 루트 엘리먼트가 div → section으로 변경됨을 감지\\r\\n2. 내부 내용은 완전히 동일하지만, 전체 서브트리를 파괴하고 재생성\\r\\n3. 모든 자식 컴포넌트가 언마운트→ 마운트 \\r\\n4. 모든 상태(state)가 초기화됨\\r\\n\\r\\n이러한 가정상의 이점으로 React는 모든 자식 노드들을 재귀적으로 비교하고, 각 속성들을 비교하며 내부적으로 다른 점이 있는지 확인 할 필요 없이 타입이 다르기만하면 즉시 교체해버림으로써 복잡한 비교 과정을 생략할 수 있습니다. \\r\\n\\r\\n#### 2. 같은 타입의 DOM 엘리먼트\\r\\n같은 타입의 두 React DOM 엘리먼트를 비교할 때, React는 두 엘리먼트의 속성을 확인하여, 동일한 내역은 유지하고 변경된 속성들만 갱신합니다.\\r\\n\\r\\n```html\\r\\n// 이전\\r\\n<div className=\\\"before\\\" title=\\\"stuff\\\" />\\r\\n\\r\\n// 새로운\\r\\n<div className=\\\"after\\\" title=\\\"stuff\\\" />\\r\\n\\r\\n// 결과: className만 업데이트\\r\\n```\\r\\n\\r\\n#### 3. 같은 타입의 컴포넌트 엘리먼트\\r\\n\\r\\n컴포넌트가 갱신되면 인스턴스는 동일하게 유지되어 렌더링 간 state가 유지됩니다. React는 새로운 엘리먼트의 내용을 반영하기 위해 현재 컴포넌트 인스턴스의 props를 갱신합니다.\\r\\n```jsx\\r\\n// 컴포넌트 인스턴스는 동일하게 유지\\r\\n<MyComponent count={1} />\\r\\n<MyComponent count={2} />  // props만 업데이트\\r\\n```\\r\\n\\r\\n#### Key의 중요성\\r\\n\\r\\nDOM 노드의 자식들을 재귀적으로 처리할 때, React는 기본적으로 동시에 두 리스트를 순회하고 차이점이 있으면 변경을 생성합니다.\\r\\n\\r\\n```jsx\\r\\n// Key를 사용한 효율적인 업데이트\\r\\n<ul>\\r\\n  <li key=\\\"2015\\\">Duke</li>\\r\\n  <li key=\\\"2016\\\">Villanova</li>\\r\\n</ul>\\r\\n\\r\\n<ul>\\r\\n  <li key=\\\"2014\\\">Connecticut</li>\\r\\n  <li key=\\\"2015\\\">Duke</li>\\r\\n  <li key=\\\"2016\\\">Villanova</li>\\r\\n</ul>\\r\\n// React는 2014가 새로 추가되었고, 2015와 2016은 이동만 하면 됨을 인식\\r\\n```\\r\\n\\r\\n### updateElement를 분석해보자 - updateAttributes\\r\\nReact의 Diffing 알고리즘을 모방한 `updateElement`내부에서 `updateAttributes` 사용하는 에 대해서 한 번 분석해 보겠습니다.\\r\\n\\r\\n1. updateAttributes 함수 분석\\r\\n\\r\\n전체적인 처리는 단계적으로 불필요한 속성을 제거하고 새로운 속성을 적용하는 형태로 구현되었습니다.\\r\\n\\r\\n```js\\r\\nexport function updateAttributes(element, newProps, oldProps = null) {\\r\\n  if (!newProps && !oldProps) return;\\r\\n\\r\\n  if (oldProps) {\\r\\n    Object.keys(oldProps).forEach((key) => {\\r\\n      if (key === \\\"children\\\") return;\\r\\n\\r\\n      if (key.startsWith(\\\"on\\\")) {\\r\\n        const eventType = key.substring(2).toLowerCase();\\r\\n        removeEvent(element, eventType, oldProps[key]);\\r\\n      } else if (!newProps || !(key in newProps)) {\\r\\n        if (key === \\\"className\\\") {\\r\\n          element.removeAttribute(\\\"class\\\");\\r\\n        } else if ([\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readOnly\\\"].includes(key)) {\\r\\n          element[key] = false;\\r\\n          element.removeAttribute(key);\\r\\n        } else {\\r\\n          element.removeAttribute(key);\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n\\r\\n  if (newProps) {\\r\\n    Object.entries(newProps).forEach(([key, value]) => {\\r\\n      if (key === \\\"children\\\") return;\\r\\n\\r\\n      if (key === \\\"className\\\") {\\r\\n        if (value) {\\r\\n          element.setAttribute(\\\"class\\\", value);\\r\\n        } else {\\r\\n          element.removeAttribute(\\\"class\\\");\\r\\n        }\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (key.startsWith(\\\"on\\\")) {\\r\\n        const eventType = key.substring(2).toLowerCase();\\r\\n        addEvent(element, eventType, value);\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if ([\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readOnly\\\"].includes(key)) {\\r\\n        element[key] = Boolean(value);\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (value != null && (!oldProps || oldProps[key] !== value)) {\\r\\n        element.setAttribute(key, String(value));\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\n```\\r\\n#### 1. 이벤트 핸들러 제거\\r\\n```js\\r\\nif (key.startsWith(\\\"on\\\")) {\\r\\n  const eventType = key.substring(2).toLowerCase();\\r\\n  removeEvent(element, eventType, oldProps[key]);\\r\\n}\\r\\n```\\r\\n함수는 참조로 비교되므로 같은 로직이어도 다른 함수면 다르며, `addEventListener`는 같은 이벤트에 여러 핸들러를 등록할 수 있습니다. 때문에 만약 제거하지 않으면 이전 핸들러가 중복 등록되어 메모리에 남아 있을 수 있게 됩니다. \\r\\n\\r\\n#### 2. 조건부 제거 로직\\r\\n\\r\\n```js\\r\\nelse if (!newProps || !(key in newProps)) {\\r\\n  // 제거 로직\\r\\n}\\r\\n```\\r\\n새로운 속성이 없거나, 새로운 속성에 key값이 없으면 제거한다는 의미 입니다. \\r\\n\\r\\n#### 3. 속성 별 제거\\r\\n\\r\\n```js\\r\\nif (key === \\\"className\\\") {\\r\\n  element.removeAttribute(\\\"class\\\");\\r\\n} else if ([\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readOnly\\\"].includes(key)) {\\r\\n  element[key] = false;\\r\\n  element.removeAttribute(key);\\r\\n} else {\\r\\n  element.removeAttribute(key);\\r\\n}\\r\\n```\\r\\n\\r\\n1. className 특수 처리\\r\\nReact에서는 JavaScript의 예약어 충돌을 피하기 위해 className을 사용하지만, 실제 HTML에서는 class 속성으로 매핑되어야 합니다. 따라서 className 속성을 제거할 때는 HTML의 class 속성을 제거해야 합니다.\\r\\n\\r\\n2. Boolean 속성 처리\\r\\nHTML의 Boolean 속성들은 일반 속성과 다르게 동작합니다. 존재 자체가 true를 의미하므로, 값이 \\\"false\\\"여도 속성이 존재하면 true로 처리됩니다.\\r\\n더 복잡한 점은 이런 속성들이 DOM Property와 HTML Attribute 두 곳에 모두 존재한다는 것입니다. DOM Property만 제거하면 HTML Attribute가 여전히 남아있어 시각적으로는 disabled 상태로 보일 수 있고, HTML Attribute만 제거하면 DOM Property가 남아있어 JavaScript로 접근할 때 예상과 다른 값을 얻을 수 있습니다.\\r\\n따라서 완전한 제거를 위해서는 둘 다 처리해야 합니다. DOM Property를 false로 설정하고, HTML Attribute를 완전히 제거하는 것입니다.\\r\\n\\r\\n3. 일반 속성 처리\\r\\n나머지 일반 속성들은 단순히 removeAttribute로 HTML에서 제거하면 됩니다. \\r\\n\\r\\n#### 4. className 적용\\r\\n```js\\r\\nif (key === \\\"className\\\") {\\r\\n  if (value) {\\r\\n    element.setAttribute(\\\"class\\\", value);\\r\\n  } else {\\r\\n    element.removeAttribute(\\\"class\\\");\\r\\n  }\\r\\n  return;\\r\\n}\\r\\n```\\r\\nclassName의 경우 값이 있으면 설정하고, 없으면 제거하는 방식으로 처리합니다. 이는 React에서 className={null}이나 className=\\\"\\\"와 같은 경우를 올바르게 처리하기 위함입니다.\\r\\n\\r\\n#### 5. 이벤트 핸들러 등록\\r\\n```js\\r\\nif (key.startsWith(\\\"on\\\")) {\\r\\n  const eventType = key.substring(2).toLowerCase();\\r\\n  addEvent(element, eventType, value);\\r\\n  return;\\r\\n}\\r\\n```\\r\\n\\r\\n이벤트 핸들러는 제거 단계에서 이미 이전 핸들러를 제거했으므로, 새로운 핸들러를 등록하기만 하면 됩니다.\\r\\n\\r\\n#### 6. Boolean 속성 설정\\r\\n\\r\\n```js\\r\\nif ([\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readOnly\\\"].includes(key)) {\\r\\n  element[key] = Boolean(value);\\r\\n  return;\\r\\n}\\r\\n```\\r\\nBoolean 속성들은 DOM Property로 설정합니다.\\r\\n\\r\\n#### 7. 일반 속성 처리\\r\\n```js\\r\\nif (value != null && (!oldProps || oldProps[key] !== value)) {\\r\\n  element.setAttribute(key, String(value));\\r\\n}\\r\\n```\\r\\nnull/undefined가 아닌 값이고, 이전 값과 다를 때만 DOM을 조작합니다. \\r\\n\\r\\n\\r\\n### updateElement를 분석해보자 - updateElement\\r\\n```js\\r\\nexport function updateElement(parentElement, newNode, oldNode, index = 0) {\\r\\n  if (!newNode && oldNode) {\\r\\n    if (parentElement.childNodes[index]) {\\r\\n      parentElement.removeChild(parentElement.childNodes[index]);\\r\\n    }\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  if (newNode && !oldNode) {\\r\\n    parentElement.appendChild(createElement(newNode));\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  if (typeof newNode === \\\"string\\\" || typeof newNode === \\\"number\\\") {\\r\\n    if (newNode !== oldNode) {\\r\\n      const newTextNode = document.createTextNode(String(newNode));\\r\\n      if (parentElement.childNodes[index]) {\\r\\n        parentElement.replaceChild(newTextNode, parentElement.childNodes[index]);\\r\\n      } else {\\r\\n        parentElement.appendChild(newTextNode);\\r\\n      }\\r\\n    }\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  if (newNode.type !== oldNode.type) {\\r\\n    if (parentElement.childNodes[index]) {\\r\\n      parentElement.replaceChild(createElement(newNode), parentElement.childNodes[index]);\\r\\n    } else {\\r\\n      parentElement.appendChild(createElement(newNode));\\r\\n    }\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  const childNode = parentElement.childNodes[index];\\r\\n  if (childNode) {\\r\\n    updateAttributes(childNode, newNode.props || {}, oldNode.props || {});\\r\\n\\r\\n    const newChildren = newNode.children || [];\\r\\n    const oldChildren = oldNode.children || [];\\r\\n    const maxLength = Math.max(newChildren.length, oldChildren.length);\\r\\n\\r\\n    for (let i = 0; i < maxLength; i++) {\\r\\n      updateElement(childNode, newChildren[i], oldChildren[i], i);\\r\\n    }\\r\\n\\r\\n    if (oldChildren.length > newChildren.length) {\\r\\n      for (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n        const extraChild = childNode.childNodes[i];\\r\\n        if (extraChild) {\\r\\n          childNode.removeChild(extraChild);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 1. 노드 제거 및 추가\\r\\n\\r\\n```js\\r\\n// 노드 제거\\r\\nif (!newNode && oldNode) {\\r\\n  if (parentElement.childNodes[index]) {\\r\\n    parentElement.removeChild(parentElement.childNodes[index]);\\r\\n  }\\r\\n  return;\\r\\n}\\r\\n\\r\\n// 노드 추가\\r\\nif (newNode && !oldNode) {\\r\\n  parentElement.appendChild(createElement(newNode));\\r\\n  return;\\r\\n}\\r\\n```\\r\\n새로운 노드가 없고 이전 노드가 존재하는 경우, 해당 노드를 DOM에서 제거합니다. 또한 새로운 노드가 있고 이전 노드가 없는 경우, 새로운 노드를 DOM에 추가합니다. \\r\\n\\r\\n#### 2. 텍스트 노드 처리\\r\\n```js\\r\\nif (typeof newNode === \\\"string\\\" || typeof newNode === \\\"number\\\") {\\r\\n  if (newNode !== oldNode) {\\r\\n    const newTextNode = document.createTextNode(String(newNode));\\r\\n    if (parentElement.childNodes[index]) {\\r\\n      parentElement.replaceChild(newTextNode, parentElement.childNodes[index]);\\r\\n    } else {\\r\\n      parentElement.appendChild(newTextNode);\\r\\n    }\\r\\n  }\\r\\n  return;\\r\\n}\\r\\n```\\r\\n텍스트 노드의 경우 별도로 처리합니다. 텍스트 내용이 실제로 변경된 경우에만 DOM을 업데이트하여 불필요한 조작을 방지합니다. 문자열과 숫자는 String() 변환을 통해 텍스트 노드로 생성됩니다.\\r\\n\\r\\n#### 3. 타입 비교 및 트리 재구성\\r\\n```js\\r\\nif (newNode.type !== oldNode.type) {\\r\\n  if (parentElement.childNodes[index]) {\\r\\n    parentElement.replaceChild(createElement(newNode), parentElement.childNodes[index]);\\r\\n  } else {\\r\\n    parentElement.appendChild(createElement(newNode));\\r\\n  }\\r\\n  return;\\r\\n}\\r\\n```\\r\\n이 부분이 React의 핵심 가정인 `서로 다른 타입의 두 엘리먼트는 서로 다른 트리를 만들어낸다`를 구현한 것입니다. 노드의 타입이 다르면 기존 서브트리를 완전히 제거하고 새로운 트리를 생성합니다. \\r\\n\\r\\n#### 4. 동일 타입 노드의 속성 업데이트\\r\\n\\r\\n```js\\r\\nconst childNode = parentElement.childNodes[index];\\r\\nif (childNode) {\\r\\n  updateAttributes(childNode, newNode.props || {}, oldNode.props || {});\\r\\n```\\r\\n같은 타입의 노드인 경우, 기존 DOM 노드를 재사용하고 속성만 업데이트합니다. 이는 React의 \\\"같은 타입의 엘리먼트는 속성만 업데이트한다\\\"는 가정을 구현한 것입니다. updateAttributes 함수를 통해 효율적으로 속성을 비교하고 업데이트합니다.\\r\\n\\r\\n#### 5. 자식 재귀 처리\\r\\n```js\\r\\nif (oldChildren.length > newChildren.length) {\\r\\n  for (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n    const extraChild = childNode.childNodes[i];\\r\\n    if (extraChild) {\\r\\n      childNode.removeChild(extraChild);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n이전 자식 노드가 새로운 자식 노드보다 많은 경우, 초과된 노드들을 제거합니다. 뒤에서부터 제거하는 이유는 앞에서부터 제거하면 인덱스가 변경되어 올바른 노드를 제거하지 못할 수 있기 때문입니다. 이는 배열 렌더링에서 아이템이 줄어들 때 발생하는 상황을 처리합니다.\\r\\n\\r\\n지금까지 React의 핵심인 Diffing 알고리즘을 직접 구현하며 가상 DOM이 어떻게 실제 DOM을 효율적으로 업데이트하는지 살펴보았습니다. 다음에는 마지막으로 `renderElement`에 대해 어떻게 구현했는지 알아보겠습니다.\\r\\n\\r\\n### 출처\\r\\nhttps://ko.legacy.reactjs.org/docs/reconciliation.html\\r\\nhttps://ko.legacy.reactjs.org/docs/faq-internals.html\\r\\n\\r\\n\\r\\n</details>\\r\\n\\r\\n<details markdown=\\\"6\\\">\\r\\n<summary>renderElement</summary>\\r\\n\\r\\n지금까지 우리는 가상 DOM의 구성 요소들인 createElement, updateElement, updateAttributes를 살펴봤습니다. 이번 글에서는 이 모든 것을 하나로 묶어 실제 렌더링을 수행하는 `renderElement` 함수를 분석해보겠습니다.\\r\\n\\r\\n### renderElement의 역할\\r\\n`renderElement` 함수는 React의 `ReactDOM.render()`와 유사한 역할을 하는 핵심 함수입니다. 가상 DOM 노드를 받아서 실제 DOM에 렌더링하고, 이후 변경사항이 있을 때 효율적으로 업데이트하는 역할을 담당합니다.\\r\\n\\r\\n```js\\r\\nconst vNodeMap = new WeakMap();\\r\\n\\r\\nexport function renderElement(vNode, container) {\\r\\n  const normalizedNode = normalizeVNode(vNode);\\r\\n  const oldVNode = vNodeMap.get(container);\\r\\n\\r\\n  if (!oldVNode) {\\r\\n    const element = createElement(normalizedNode);\\r\\n    container.appendChild(element);\\r\\n  } else {\\r\\n    updateElement(container, normalizedNode, oldVNode, 0);\\r\\n  }\\r\\n\\r\\n  setupEventListeners(container);\\r\\n  vNodeMap.set(container, normalizedNode);\\r\\n}\\r\\n```\\r\\n\\r\\n그렇다면 언제 호출되는 함수일까요? `renderElement`는 애플리케이션 초기 렌더링, 상태 변경으로 인한 리렌더링 등의 경우에 호출됩니다.\\r\\n\\r\\n### renderElement의 구현\\r\\n\\r\\n#### 1. WeakMap을 활용한 이전 상태 저장\\r\\n```js\\r\\nconst vNodeMap = new WeakMap();\\r\\n```\\r\\n\\r\\n일단 `WeakMap`을 사용해서 각 컨테이너에 대응하는 이전 vNode를 저장합니다. `WeakMap`에 대한 내용은 [eventManager](https://github.com/YeongseoYoon-hanghae/front_6th_chapter1-2/issues/4)글을 참고하면 좋습니다.\\r\\n\\r\\n#### 2. 가상 DOM 정규화\\r\\n```js\\r\\n  const normalizedNode = normalizeVNode(vNode);\\r\\n```\\r\\n\\r\\n입력으로 받은 vNode를 표준화합니다. 이는 다음과 같은 다양한 입력을 일관된 형태로 변환하기 위함입니다.\\r\\n\\r\\n#### 3. 이전 상태 확인 및 분기 처리\\r\\n```js\\r\\n  const oldVNode = vNodeMap.get(container);\\r\\n\\r\\n  if (!oldVNode) {\\r\\n    const element = createElement(normalizedNode);\\r\\n    container.appendChild(element);\\r\\n  } else {\\r\\n    updateElement(container, normalizedNode, oldVNode, 0);\\r\\n  }\\r\\n```\\r\\n만약 최초의 렌더링이라면 (즉, oldVNode가 없는 경우) 이때는 단순히 vNode를 실제 DOM 요소로 변환하여 컨테이너에 추가합니다.\\r\\n그러나 리렌더링이라면, `updateElement`를 호출하여 diffing 알고리즘을 통해 변경된 부분만 효율적으로 업데이트(재조정 - Reconciliation)합니다.\\r\\n\\r\\n#### 4. 이벤트 시스템 초기화\\r\\n```js\\r\\n  setupEventListeners(container);\\r\\n```\\r\\n렌더링이 완료된 후 새로 추가된 요소들에 대해서 이벤트 처리가 가능하도록 이벤트 위임 시스템을 초기화합니다.\\r\\n\\r\\n#### 5. 현재 상태 저장\\r\\n```js\\r\\n  vNodeMap.set(container, normalizedNode);\\r\\n```\\r\\n다음 렌더링을 위해 현재 vNode를 저장합니다. 이는 다음번 renderElement 호출시 diffing의 기준이 됩니다.\\r\\n\\r\\n\\r\\n지금까지 `renderElement` 함수를 통해 가상 DOM 시스템의 핵심 렌더링 로직을 살펴보았습니다. 물론 실제 React는 훨씬 더 복잡하고 정교합니다. 특히 최근의 React는 [Fiber 아키텍처](https://github.com/acdlite/react-fiber-architecture)를 통해 렌더링 작업을 작은 단위로 나누어 비동기적으로 처리하고,  우선순위 기반 스케줄링, 시간 분할 렌더링 등의 최적화 기법들을 사용합니다. 하지만 우리는 가상 DOM의 핵심 아이디어와 diffing 알고리즘의 본질을 파악할 수 있었습니다. 대략적인 React의 이벤트 관리, 렌더링 플로우를 이해하는 것에 누군가에 도움이 되길 바라며 글을 마칩니다.\\r\\n\\r\\n### 출처\\r\\nhttps://github.com/acdlite/react-fiber-architecture\\r\\n\\r\\n</details>\\r\\n\\r\\n\\r\\n각각을 문서화하면서 좀 더 파고들게 된 개념은 다음과 같습니다.\\r\\n\\r\\n1. JSX Transform과 트랜스파일링\\r\\nReact 17 이전과 이후의 JSX 처리 방식에 차이가 있어 React를 import 해주는것이 불필요해졌으며, createVNode를 직접적으로 참조하지 않고 있는데도 어디서 트랜스파일링 하고 있는지 이해할 수 있었습니다. \\r\\n\\r\\n2. 가상 DOM의 정규화 과정\\r\\nnormalizeVNode에서의 정규화가 왜 필요한지에 대해 이해할 수 있었습니다. \\r\\n\\r\\n3. 실제 DOM 생성의 복잡성\\r\\nReact.createElement와 우리의 createElement가 어떻게 다른지, 그리고 DocumentFragment를 통하여 어떻게 성능적으로 좀 더 개선되게 DOM생성이 가능한지를 이해할 수 있었습니다. \\r\\n\\r\\n4. 이벤트 위임 시스템\\r\\nWeakMap과 Map의 메모리 관리 방식이 어떻게 차이나는 지에 대해 이해하고, WeakMap을 사용하여 메모리 누수를 방지할 수 있음을 알게 되었습니다. \\r\\n\\r\\n5. React의 Diffing 알고리즘 핵심 원리\\r\\nDiffing 알고리즘과 Reconciliation의 원리와 내부적으로 어떻게 구현할 수 있을지에 대해서 이해했습니다.\\r\\n\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n제가 코드적으로 많이 고민했던 부분은 이벤트 위임 시스템과 관련된 함수들인데요,\\r\\n```js\\r\\nconst eventMap = new WeakMap();\\r\\nconst delegatedEvents = new Set();\\r\\nlet rootElement = null;\\r\\n\\r\\n/**\\r\\n * 컨테이너에 이벤트 리스너를 한 번만 등록합니다.\\r\\n *\\r\\n * @param {HTMLElement} container - 이벤트 리스너를 등록할 컨테이너 엘리먼트\\r\\n */\\r\\nexport function setupEventListeners(container) {\\r\\n  rootElement = container;\\r\\n  delegatedEvents.forEach((eventType) => {\\r\\n    container.removeEventListener(eventType, handleEvent);\\r\\n    container.addEventListener(eventType, handleEvent);\\r\\n  });\\r\\n}\\r\\n\\r\\n```\\r\\n이벤트 위임 시스템에서 `WeakMap`을 사용하여 DOM 요소가 제거될 때 관련된 이벤트 핸들러 정보도 자동으로 가비지 컬렉션도록 구현한 부분이 좋았다고 생각합니다.\\r\\n\\r\\n또 `updateElement` 관련해서 많이 고민을 했었는데, 특히 자식 노드들의 순서 변경과 추가/제거를 어떻게 효율적으로 처리할지에 대한 부분이었습니다.\\r\\n\\r\\n```js\\r\\nconst newChildren = newNode.children || [];\\r\\nconst oldChildren = oldNode.children || [];\\r\\nconst maxLength = Math.max(newChildren.length, oldChildren.length);\\r\\n\\r\\nfor (let i = 0; i < maxLength; i++) {\\r\\n  updateElement(childNode, newChildren[i], oldChildren[i], i);\\r\\n}\\r\\n\\r\\nif (oldChildren.length > newChildren.length) {\\r\\n  for (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n    const extraChild = childNode.childNodes[i];\\r\\n    if (extraChild) {\\r\\n      childNode.removeChild(extraChild);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n처음에는 단순히 모든 자식을 제거하고 다시 추가하는 방식을 생각했었는데, 이는 성능상 비효율적이라는 것을 깨달았습니다. 그래서 기존 DOM 노드를 최대한 재사용하면서 필요한 부분만 업데이트하는 방향으로 구현했습니다.\\r\\n특히 뒤에서부터 제거하는 부분이 중요했는데, 앞에서부터 제거하면 인덱스가 변경되어 잘못된 노드를 제거할 위험이 있기 때문입니다.\\r\\n\\r\\n\\r\\n또한 타입이 변경되었는지 확인하고 비교를 하는 부분도 고민 포인트였습니다.\\r\\n```js\\r\\nif (newNode.type !== oldNode.type) {\\r\\n  if (parentElement.childNodes[index]) {\\r\\n    parentElement.replaceChild(createElement(newNode), parentElement.childNodes[index]);\\r\\n  } else {\\r\\n    parentElement.appendChild(createElement(newNode));\\r\\n  }\\r\\n  return; // 하위 비교를 생략하여 성능 향상\\r\\n}\\r\\n```\\r\\nReact의 '서로 다른 타입의 엘리먼트는 서로 다른 트리를 만든다\\\"를 직접 구현하면서, 왜 이런 가정이 휴리스틱 알고리즘을 통한 복잡도 개선을 가능하게 하는지 이해할 수 있었다고 생각합니다.\\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n문서화에 시간을 많이 쓰게 되어 추가적으로 해보려다 실패한 부분이 있는데, 위에서 정리한 문서에도 나와 있지만 현재 제 코드에는 React의 key값에 대한 고려 없이 자식 노드 비교 시 단순히 인덱스 기반으로만 비교하고 있습니다. 때문에 key의 비교를 통해서 렌더링을 진행하게 된다면 좀 더 React의 내부 구현과 가까워지지 않을까하는 생각이 듭니다.\\r\\n\\r\\n또 사실 이번 과제는 Fiber 아키텍처에 대한 고민이나 학습이 되진 않았는데, 좀 더 시간을 들여서 공부해봐야겠다고 생각했습니다. \\r\\n\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n다른 분들께서 언급하신 비동기 컴포넌트 등에 대해서도 좀 더 심화되어 과제로 나갈 수 있다면 어떨까...하는 생각이 듭니다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n1. 이벤트 위임 시스템을 구현하면서 WeakMap + Map + Set의 3단계 중첩 구조를 선택했는데, 이 설계가 적절한지 궁금합니다. 각 DOM 요소마다 이벤트 타입별로 여러 핸들러를 관리해야 했는데, 메모리 안전성(WeakMap), 타입별 분류(Map), 중복 방지(Set)를 모두 고려하다 보니 복잡한 구조가 되었습니다. \\r\\n\\r\\n```js\\r\\nexport function addEvent(element, eventType, handler) {\\r\\n  // 1단계: element에 대한 Map이 없으면 생성\\r\\n  if (!eventMap.has(element)) {\\r\\n    eventMap.set(element, new Map());\\r\\n  }\\r\\n\\r\\n  // 2단계: eventType에 대한 Set이 없으면 생성\\r\\n  const elementEvents = eventMap.get(element);\\r\\n  if (!elementEvents.has(eventType)) {\\r\\n    elementEvents.set(eventType, new Set());\\r\\n  }\\r\\n  \\r\\n  // 3단계: 실제 handler 추가\\r\\n  elementEvents.get(eventType).add(handler);\\r\\n  \\r\\n  // ... 나머지 로직\\r\\n}\\r\\n```\\r\\n특히 addEvent에서 매번 3단계 초기화를 체크하는 부분이 번거로워 보이는데, 더 깔끔한 방법이 있을지 의견을 듣고 싶습니다.\\r\\n\\r\\n2. 모듈 레벨의 전역 변수\\r\\n```js\\r\\nconst eventMap = new WeakMap();\\r\\nconst delegatedEvents = new Set();\\r\\nlet rootElement = null;\\r\\n\\r\\nexport function setupEventListeners(container) {\\r\\n  rootElement = container;\\r\\n  delegatedEvents.forEach((eventType) => {\\r\\n    container.removeEventListener(eventType, handleEvent);\\r\\n    container.addEventListener(eventType, handleEvent);\\r\\n  });\\r\\n}\\r\\n```\\r\\nrootElement, eventMap, delegatedEvents를 모듈 레벨 전역 변수로 관리하고 있는데, 이로 인해 다중 컨테이너 지원이 어렵고 테스트 격리에 문제가 있을 수 있을 것 같습니다. 하지만 과제 범위에서는 테스트코드가 통과하기도 하고, 단일 컨테이너 사용을 가정하므로 현재 구조를 유지했는데, 팩토리 함수등의 패턴을 통하여 좀 더 확장성 있고 격리된 코드를 구성해야 했을까요?\\r\\n\\r\\n3. 지금 현재 React는 key를 기반으로 하지 않고 인덱스를 기반으로 하고 있는데, 만약 key로 구현하고 싶다면 어떻게 구현해야할지에 대해 고민이 되었습니다. 그런데 구현에 어려움이 있어 제가 로직상에 놓친 부분이 있을지 여쭤보고싶습니다.\\r\\n\\r\\n제가 구현 시도했던 부분은 다음과 같습니다. (복잡한 코드들은 수도코드로 남겨두겠습니다.)\\r\\n\\r\\n```js\\r\\n// node에서 key값 가져오기\\r\\nfunction getNodeKey(node) {\\r\\n  if (!node || typeof node === \\\"string\\\" || typeof node === \\\"number\\\") {\\r\\n    return null;\\r\\n  }\\r\\n  return node.props?.key || null;\\r\\n}\\r\\n\\r\\n// key를 통한 재조정 함수\\r\\nfunction reconcileChildrenWithKeys(parentElement, newChildren, oldChildren) {\\r\\n  const operations = analyzeKeyChanges(oldChildren, newChildren);\\r\\n  applyDOMOperations(parentElement, operations);\\r\\n}\\r\\n\\r\\nfunction analyzeKeyChanges(oldChildren, newChildren) {\\r\\n  // 1. Key 매핑 테이블 생성\\r\\n  oldKeyMap = old 자식들을 key로 분류\\r\\n  newKeyMap = new 자식들을 key로 분류\\r\\n  \\r\\n  operations = {업데이트[], 생성[], 제거[], 이동[]}\\r\\n  \\r\\n  // 2. 새로운 자식들 기준으로 작업 분류  \\r\\n  for (새로운 자식 in newKeyMap) {\\r\\n    if (oldKeyMap에 같은 key 있음) {\\r\\n      → 기존 노드 재사용 (toUpdate)\\r\\n      if (위치가 변경됨) {\\r\\n        → 이동 필요 (toMove)\\r\\n      }\\r\\n    } else {\\r\\n      → 새로 생성 (toCreate)\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  // 3. 제거할 노드들 찾기\\r\\n  for (이전 자식 in oldKeyMap) {\\r\\n    if (newKeyMap에 같은 key 없음) {\\r\\n      → 제거 필요 (toRemove)\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  return operations\\r\\n}\\r\\n\\r\\nfunction applyDOMOperations(parentElement, operations) {\\r\\n  // 1. 제거 (뒤에서부터)\\r\\n  \\r\\n  // 2. 업데이트\\r\\n  \\r\\n  // 3. 생성 및 삽입\\r\\n  \\r\\n  // 4. 재배치 - 모든 노드를 올바른 순서로 재정렬\\r\\n}\\r\\n\\r\\n```\",\"created_at\":\"2025-07-12T13:51:56Z\",\"updated_at\":\"2025-07-21T02:45:45Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"bfdcbbebdb78f0d4cd1e25c5cc9210e7c90c46d9\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/7/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/7/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/7/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/81efcf1d041563ae0a2e98c6a19c3c6cdffed219\",\"head\":{\"label\":\"YeongseoYoon-hanghae:main\",\"ref\":\"main\",\"sha\":\"81efcf1d041563ae0a2e98c6a19c3c6cdffed219\",\"user\":{\"login\":\"YeongseoYoon-hanghae\",\"id\":191664522,\"node_id\":\"U_kgDOC2yRig\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/191664522?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/YeongseoYoon-hanghae\",\"html_url\":\"https://github.com/YeongseoYoon-hanghae\",\"followers_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/followers\",\"following_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/subscriptions\",\"organizations_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/orgs\",\"repos_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/repos\",\"events_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018536523,\"node_id\":\"R_kgDOPLWiSw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"YeongseoYoon-hanghae/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"YeongseoYoon-hanghae\",\"id\":191664522,\"node_id\":\"U_kgDOC2yRig\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/191664522?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/YeongseoYoon-hanghae\",\"html_url\":\"https://github.com/YeongseoYoon-hanghae\",\"followers_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/followers\",\"following_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/subscriptions\",\"organizations_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/orgs\",\"repos_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/repos\",\"events_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/YeongseoYoon-hanghae/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/YeongseoYoon-hanghae/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/YeongseoYoon-hanghae/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T13:24:24Z\",\"updated_at\":\"2025-07-14T14:54:49Z\",\"pushed_at\":\"2025-07-16T17:34:49Z\",\"git_url\":\"git://github.com/YeongseoYoon-hanghae/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:YeongseoYoon-hanghae/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/YeongseoYoon-hanghae/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/YeongseoYoon-hanghae/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":29705,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":6,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":6,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/7\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/7\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/7\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/7/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/7/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/7/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/81efcf1d041563ae0a2e98c6a19c3c6cdffed219\"}},\"author_association\":\"FIRST_TIME_CONTRIBUTOR\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/9\",\"id\":2661421906,\"node_id\":\"PR_kwDOPJuWzM6eohNS\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/9\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/9.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/9.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/9\",\"number\":9,\"state\":\"open\",\"locked\":false,\"title\":\"[3팀 박준형] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2) \",\"user\":{\"login\":\"BBAK-jun\",\"id\":33216504,\"node_id\":\"MDQ6VXNlcjMzMjE2NTA0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/33216504?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/BBAK-jun\",\"html_url\":\"https://github.com/BBAK-jun\",\"followers_url\":\"https://api.github.com/users/BBAK-jun/followers\",\"following_url\":\"https://api.github.com/users/BBAK-jun/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/BBAK-jun/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/BBAK-jun/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/BBAK-jun/subscriptions\",\"organizations_url\":\"https://api.github.com/users/BBAK-jun/orgs\",\"repos_url\":\"https://api.github.com/users/BBAK-jun/repos\",\"events_url\":\"https://api.github.com/users/BBAK-jun/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/BBAK-jun/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n\\r\\n### [배포 링크](https://bbak-jun.github.io/front_6th_chapter1-2/)\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 배우게 된것(학습 노트)\\r\\n\\r\\n### 1. Virtual DOM의 핵심 개념과 구현 ([📖 상세 문서](https://github.com/BBAK-jun/front_6th_chapter1-2/blob/main/docs/virtual-dom.md))\\r\\n\\r\\nVirtual DOM을 직접 구현해보니 왜 React 같은 라이브러리가 이런 아키텍처를 선택했는지 깨달을 수 있었습니다. 실제 DOM 조작 비용을 줄이는 중간 계층의 역할이 생각보다 복잡하더라고요.\\r\\n\\r\\n**핵심 구현 플로우:**\\r\\n```\\r\\nJSX → createVNode → normalizeVNode → createElement → 실제 DOM\\r\\n                                    ↓\\r\\n                              updateElement (리렌더링 시)\\r\\n```\\r\\n\\r\\n### 2. JSX 트랜스파일 과정의 이해 ([📖 상세 문서](https://github.com/BBAK-jun/front_6th_chapter1-2/blob/main/docs/jsx-factory.md))\\r\\n\\r\\nJSX가 어떻게 JavaScript 함수 호출로 변환되는지 직접 경험해볼 수 있었습니다. esbuild의 트랜스파일 과정을 이해하고 나니 Virtual DOM이 어떻게 작동하는지 더 명확해졌어요.\\r\\n\\r\\n### 3. **Suspense 패턴을 활용한 비동기 컴포넌트 처리** ([📖 상세 문서](https://github.com/BBAK-jun/front_6th_chapter1-2/blob/main/docs/async-vNode.md))\\r\\n\\r\\n기본 과제 외에 **추가로 학습하고 구현한 부분**입니다. React의 Suspense 패턴이 단순해 보이지만 실제로는 매우 정교한 설계가 필요하다는 걸 깨달았어요.\\r\\n\\r\\n#### 3.1 구현한 핵심 아키텍처:\\r\\n\\r\\n**SuspenseWrapper 컴포넌트 식별:**\\r\\n```javascript\\r\\n// normalizeVNode에서 SuspenseWrapper를 함수 컴포넌트보다 먼저 체크\\r\\nif (vNode.type && vNode.type.name === \\\"SuspenseWrapper\\\") {\\r\\n  const { fallback } = vNode.props;\\r\\n  const children = vNode.children;\\r\\n  const suspenseId = Math.random().toString(36).substr(2, 9);\\r\\n  \\r\\n  // Suspense 컨텍스트에 진입\\r\\n  enterSuspenseContext({ id: suspenseId });\\r\\n  // ...\\r\\n}\\r\\n```\\r\\n\\r\\n**비동기 컴포넌트 Promise 처리:**\\r\\n```javascript\\r\\n// 함수 컴포넌트에서 Promise 반환 시 처리\\r\\nif (isThenable(result)) {\\r\\n  if (insideSuspense) {\\r\\n    // Promise를 캐시하고 리렌더링 콜백 설정\\r\\n    setCachedResult(cacheKey, result);\\r\\n    \\r\\n    result\\r\\n      .then((resolvedResult) => {\\r\\n        setCachedResult(cacheKey, resolvedResult);\\r\\n        triggerRerender(); // 해결되면 리렌더링\\r\\n      })\\r\\n      .catch((error) => {\\r\\n        console.error(\\\"Async component error:\\\", error);\\r\\n        setCachedResult(cacheKey, \\\"\\\");\\r\\n        triggerRerender();\\r\\n      });\\r\\n\\r\\n    throw result; // Suspense가 캐치하도록 throw\\r\\n  } else {\\r\\n    // Suspense 외부에서는 경고 메시지와 함께 빈 문자열 반환\\r\\n    console.warn(\\\"Async component detected outside Suspense context. Please wrap with SuspenseWrapper.\\\");\\r\\n    return \\\"\\\";\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 3.2 구현한 고급 기능들:\\r\\n\\r\\n1. **컨텍스트 스택 기반 중첩 관리**: `enterSuspenseContext`/`exitSuspenseContext`로 중첩된 Suspense 경계 처리\\r\\n2. **Promise 캐시 시스템**: `createCacheKey`로 컴포넌트+props 기반 캐싱, 중복 실행 방지\\r\\n3. **상태 기반 렌더링**: `data-suspense=\\\"pending\\\"/\\\"resolved\\\"` 속성으로 현재 상태 추적\\r\\n4. **에러 바운더리**: Promise reject 시 빈 문자열로 fallback 처리\\r\\n\\r\\n#### 3.3 실제 구현된 렌더링 플로우:\\r\\n\\r\\n```javascript\\r\\n// 성공 시: resolved 상태로 실제 컨텐츠 렌더링\\r\\nreturn {\\r\\n  type: \\\"div\\\",\\r\\n  props: { \\\"data-suspense\\\": \\\"resolved\\\" },\\r\\n  children: normalizedChildren,\\r\\n};\\r\\n\\r\\n// Promise pending 시: fallback UI 렌더링  \\r\\nreturn {\\r\\n  type: \\\"div\\\",\\r\\n  props: { \\\"data-suspense\\\": \\\"pending\\\" },\\r\\n  children: [normalizeVNode(fallback, false)],\\r\\n};\\r\\n```\\r\\n\\r\\n#### 3.4 작성한 포괄적인 테스트 시나리오:\\r\\n\\r\\n```javascript\\r\\n// 1. 동기 컴포넌트 정상 렌더링 확인\\r\\nit(\\\"동기 컴포넌트는 정상적으로 렌더링되어야 한다\\\", async () => {\\r\\n  expect(container.querySelector('[data-suspense=\\\"resolved\\\"]')).toBeTruthy();\\r\\n  expect(container.innerHTML).toContain(\\\"Hello World\\\");\\r\\n  expect(container.innerHTML).not.toContain(\\\"Loading...\\\");\\r\\n});\\r\\n\\r\\n// 2. 비동기 컴포넌트 fallback 우선 렌더링 확인\\r\\nit(\\\"비동기 컴포넌트는 먼저 fallback을 보여주고 나중에 실제 내용을 렌더링해야 한다\\\", async () => {\\r\\n  expect(container.querySelector('[data-suspense=\\\"pending\\\"]')).toBeTruthy();\\r\\n  expect(container.innerHTML).toContain(\\\"Loading...\\\");\\r\\n  expect(container.innerHTML).not.toContain(\\\"Async Hello\\\");\\r\\n});\\r\\n\\r\\n// 3. 여러 비동기 컴포넌트 동시 처리\\r\\nit(\\\"여러 비동기 컴포넌트가 있을 때 모두 완료될 때까지 fallback을 보여줘야 한다\\\");\\r\\n\\r\\n// 4. 중첩된 Suspense 경계별 독립적 처리\\r\\nit(\\\"중첩된 Suspense 경계가 올바르게 작동해야 한다\\\", async () => {\\r\\n  expect(container.innerHTML).toContain(\\\"Sync content\\\");\\r\\n  expect(container.innerHTML).toContain(\\\"Inner Loading...\\\");\\r\\n  expect(container.innerHTML).not.toContain(\\\"Outer Loading...\\\");\\r\\n});\\r\\n\\r\\n// 5. 에러 발생 시 적절한 fallback 처리\\r\\nit(\\\"에러가 발생한 비동기 컴포넌트는 적절히 처리되어야 한다\\\");\\r\\n```\\r\\n\\r\\n### 4. 이벤트 위임과 메모리 최적화\\r\\n\\r\\nWeakMap을 활용한 메모리 안전한 이벤트 관리 시스템도 인상적이었습니다. 동적으로 추가/제거되는 요소들도 별도 설정 없이 자동으로 이벤트가 작동하는 것이 효율적이라고 느꼈어요.\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n이번 과제를 통해 **프레임워크의 내부 동작 원리**를 깊이 이해할 수 있었고, 특히 **비동기 렌더링의 복잡성**을 직접 경험할 수 있었습니다.\\r\\n\\r\\n**가장 어려웠지만 보람있었던 부분:**\\r\\n- **Suspense 컨텍스트 관리**: `insideSuspense` 플래그와 컨텍스트 스택을 통한 중첩 경계 처리\\r\\n- **Promise 라이프사이클**: throw → catch → resolve → rerender 흐름 제어\\r\\n- **데이터 속성 활용**: `data-suspense` 속성으로 렌더링 상태 추적 및 테스트 검증\\r\\n\\r\\n**새로 배운 핵심 개념들:**\\r\\n- **Algebraic Effects**: throw/catch를 이용한 제어 흐름 전환\\r\\n- **컨텍스트 기반 렌더링**: 부모 컴포넌트 상태가 자식 처리 방식 결정\\r\\n- **캐시 무효화 전략**: Promise 해결/거부 시점의 적절한 상태 관리\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n**특히 만족스러운 구현들:**\\r\\n- **명확한 책임 분리**: SuspenseWrapper는 마커 역할만, 실제 로직은 normalizeVNode에서 처리\\r\\n- **포괄적인 테스트**: 동기/비동기, 단일/다중, 중첩/에러 등 모든 시나리오 커버\\r\\n- **방어적 프로그래밍**: Suspense 외부 비동기 컴포넌트 사용 시 개발자 가이드 제공\\r\\n\\r\\n**추가 구현하고 싶은 부분들:**\\r\\n- Server-Side Rendering에서의 Suspense 동기화\\r\\n- Promise 취소 및 cleanup 메커니즘\\r\\n- 더 세밀한 에러 타입별 처리 전략\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n**가장 큰 깨달음:**\\r\\n비동기 UI는 단순한 \\\"로딩 처리\\\"가 아니라 **복잡한 상태 기계와 흐름 제어**가 필요한 시스템이라는 것입니다. 특히 사용자가 느끼는 반응성과 개발자가 다루는 복잡성 사이의 균형점을 찾는 것이 중요하다고 느꼈어요.\\r\\n\\r\\n**실무 적용 가능성:**\\r\\n- 대용량 데이터 페이지네이션에서 부분 로딩 UX 개선\\r\\n- 코드 스플리팅과 지연 로딩의 자연스러운 통합\\r\\n- 복잡한 비동기 의존성 체인이 있는 컴포넌트 설계\\r\\n\\r\\n### 추가 학습 성과\\r\\n\\r\\n기본 과제 외에 **docs/async-vNode.md 문서를 깊이 연구해서 Suspense 패턴을 완전히 구현**했습니다:\\r\\n\\r\\n1. **이론적 배경**: React Suspense의 Algebraic Effects 패러다임 이해\\r\\n2. **실제 구현**: 컨텍스트 스택, Promise 캐싱, 리렌더링 트리거 시스템\\r\\n3. **테스트 주도 개발**: 5가지 주요 시나리오에 대한 체계적인 테스트 작성\\r\\n4. **성능 고려**: 불필요한 Promise 실행 방지와 메모리 효율적인 캐시 관리\\r\\n\\r\\n이 과정에서 **단순히 기능을 복사하는 것이 아니라, 근본적인 문제와 해결 방식을 이해**할 수 있었습니다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n### 1. Suspense 컨텍스트 스택의 메모리 안전성\\r\\n\\r\\n현재 `suspenseContextStack` 배열과 `promiseCache` Map으로 상태를 관리하고 있는데, 컴포넌트 언마운트 시나 라우트 변경 시 적절한 cleanup이 이루어지는지 궁금합니다. 특히 `clearCache()` 함수의 호출 시점이 적절한지 검토해주실 수 있을까요?\\r\\n\\r\\n### 2. 중첩 Suspense에서의 Promise 버블링 정확성\\r\\n\\r\\n현재 `enterSuspenseContext`/`exitSuspenseContext`로 스택을 관리하는데, 깊게 중첩된 상황에서 Promise가 올바른 Suspense 경계에서 catch되는지 확신이 서지 않습니다. 특히 자식에서 throw된 Promise가 의도하지 않은 부모 Suspense에서 처리될 가능성은 없을까요?\\r\\n\\r\\n### 3. Promise 캐시 키 생성 전략의 한계\\r\\n\\r\\n현재 `createCacheKey(component, props)`에서 `JSON.stringify(props)`를 사용하는데, 함수나 순환 참조가 포함된 props에서 문제가 될 수 있을 것 같습니다. 더 안전하고 효율적인 캐시 키 생성 방법이 있을까요?\\r\\n\\r\\n### 4. 비동기 컴포넌트 에러 처리의 사용자 경험\\r\\n\\r\\n현재 Promise reject 시 빈 문자열로 처리하고 있는데, 실제 사용자에게는 아무것도 보이지 않는 상황이 됩니다. 네트워크 에러, 권한 에러, 일반 에러 등을 구분해서 더 의미있는 fallback을 제공하는 방법이 있을까요?\\r\\n\",\"created_at\":\"2025-07-12T15:35:39Z\",\"updated_at\":\"2025-07-18T14:30:04Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"d899e6fd29f0e5df56a11c682dbd9a6d74a16ce6\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/9/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/9/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/9/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/9feac1ac7543fc4f92cd5de65d06f8681aa3db44\",\"head\":{\"label\":\"BBAK-jun:main\",\"ref\":\"main\",\"sha\":\"9feac1ac7543fc4f92cd5de65d06f8681aa3db44\",\"user\":{\"login\":\"BBAK-jun\",\"id\":33216504,\"node_id\":\"MDQ6VXNlcjMzMjE2NTA0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/33216504?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/BBAK-jun\",\"html_url\":\"https://github.com/BBAK-jun\",\"followers_url\":\"https://api.github.com/users/BBAK-jun/followers\",\"following_url\":\"https://api.github.com/users/BBAK-jun/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/BBAK-jun/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/BBAK-jun/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/BBAK-jun/subscriptions\",\"organizations_url\":\"https://api.github.com/users/BBAK-jun/orgs\",\"repos_url\":\"https://api.github.com/users/BBAK-jun/repos\",\"events_url\":\"https://api.github.com/users/BBAK-jun/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/BBAK-jun/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018536723,\"node_id\":\"R_kgDOPLWjEw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"BBAK-jun/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"BBAK-jun\",\"id\":33216504,\"node_id\":\"MDQ6VXNlcjMzMjE2NTA0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/33216504?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/BBAK-jun\",\"html_url\":\"https://github.com/BBAK-jun\",\"followers_url\":\"https://api.github.com/users/BBAK-jun/followers\",\"following_url\":\"https://api.github.com/users/BBAK-jun/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/BBAK-jun/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/BBAK-jun/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/BBAK-jun/subscriptions\",\"organizations_url\":\"https://api.github.com/users/BBAK-jun/orgs\",\"repos_url\":\"https://api.github.com/users/BBAK-jun/repos\",\"events_url\":\"https://api.github.com/users/BBAK-jun/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/BBAK-jun/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/BBAK-jun/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/BBAK-jun/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T13:24:53Z\",\"updated_at\":\"2025-07-18T01:34:09Z\",\"pushed_at\":\"2025-07-18T01:34:21Z\",\"git_url\":\"git://github.com/BBAK-jun/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:BBAK-jun/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/BBAK-jun/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/BBAK-jun/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":366,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/9\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/9\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/9\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/9/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/9/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/9/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/9feac1ac7543fc4f92cd5de65d06f8681aa3db44\"}},\"author_association\":\"FIRST_TIME_CONTRIBUTOR\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/10\",\"id\":2661570718,\"node_id\":\"PR_kwDOPJuWzM6epFie\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/10\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/10.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/10.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/10\",\"number\":10,\"state\":\"open\",\"locked\":false,\"title\":\"[6팀 정용준] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"dkile\",\"id\":29909393,\"node_id\":\"MDQ6VXNlcjI5OTA5Mzkz\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/29909393?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/dkile\",\"html_url\":\"https://github.com/dkile\",\"followers_url\":\"https://api.github.com/users/dkile/followers\",\"following_url\":\"https://api.github.com/users/dkile/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/dkile/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/dkile/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/dkile/subscriptions\",\"organizations_url\":\"https://api.github.com/users/dkile/orgs\",\"repos_url\":\"https://api.github.com/users/dkile/repos\",\"events_url\":\"https://api.github.com/users/dkile/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/dkile/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\nhttps://dkile.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n- 중복 로직이 너무 많습니다. 별도의 분리가 필요합니다. ex) 이벤트 관련 속성 처리\\r\\n\\r\\n- updateElement에서 조건이 너무 혼재되어있어 가독성이 떨어집니다. 각 조건이 어떤 의미인지, 해당 조건에 어떤 동작을 하는지 파악하기 어렵습니다.\\r\\n\\r\\n- updateElement 파일에 너무 많은 기능이 있습니다. 별도의 파일로 분리가 필요합니다.\\r\\n \\r\\n- Converter라는 조건 검증 후 결과를 반환하는 메서드 체이닝을 만들었습니다.\\r\\n처음에 볼 때는 조건의 순서가 중요하고 계속해서 조건이 추가로 붙는 형태다 보니\\r\\n이런 메서드 체이닝을 활용하면 흐름이 직관적으로 보이고 흐름 변경이 쉬울 것이라 생각했습니다.\\r\\n하지만 만들고 나서 보니 오히려 if문 + early return보다 더 가독성이 떨어지는 것 같습니다.\\r\\n메서드 체이닝을 언제 활용하면 좋을까요?\\r\\n조건이 많은 if + early return을 좀 더 직관적으로 추상화할 수 있는 방법이 있을까요??\\r\\n\\r\\n- 재귀 로직을 Converter에 넣어서 추상화해볼까도 생각했는데 너무 Converter가 복잡해지는 것 같고 인터페이스가 딱 떠오르는게 없어서 보류했습니다. 재귀 로직은 아무래도 코드 흐름이 잘 안보인다는 단점이 있는데 추상화를 통해 이런 단점을 극복할 수 있을까요?\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-12T18:41:14Z\",\"updated_at\":\"2025-07-22T06:24:37Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"432106a2848045eca70f389b1625883ba7ce0e5b\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/10/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/10/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/10/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/6f429cc2838fe8bf80d2d7846ecabf8f1009fe17\",\"head\":{\"label\":\"dkile:main\",\"ref\":\"main\",\"sha\":\"6f429cc2838fe8bf80d2d7846ecabf8f1009fe17\",\"user\":{\"login\":\"dkile\",\"id\":29909393,\"node_id\":\"MDQ6VXNlcjI5OTA5Mzkz\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/29909393?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/dkile\",\"html_url\":\"https://github.com/dkile\",\"followers_url\":\"https://api.github.com/users/dkile/followers\",\"following_url\":\"https://api.github.com/users/dkile/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/dkile/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/dkile/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/dkile/subscriptions\",\"organizations_url\":\"https://api.github.com/users/dkile/orgs\",\"repos_url\":\"https://api.github.com/users/dkile/repos\",\"events_url\":\"https://api.github.com/users/dkile/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/dkile/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018340275,\"node_id\":\"R_kgDOPLKjsw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"dkile/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"dkile\",\"id\":29909393,\"node_id\":\"MDQ6VXNlcjI5OTA5Mzkz\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/29909393?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/dkile\",\"html_url\":\"https://github.com/dkile\",\"followers_url\":\"https://api.github.com/users/dkile/followers\",\"following_url\":\"https://api.github.com/users/dkile/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/dkile/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/dkile/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/dkile/subscriptions\",\"organizations_url\":\"https://api.github.com/users/dkile/orgs\",\"repos_url\":\"https://api.github.com/users/dkile/repos\",\"events_url\":\"https://api.github.com/users/dkile/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/dkile/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/dkile/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/dkile/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T04:09:36Z\",\"updated_at\":\"2025-07-18T05:11:16Z\",\"pushed_at\":\"2025-07-18T05:26:06Z\",\"git_url\":\"git://github.com/dkile/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:dkile/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/dkile/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/dkile/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":199,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/10\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/10\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/10\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/10/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/10/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/10/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/6f429cc2838fe8bf80d2d7846ecabf8f1009fe17\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/11\",\"id\":2661589537,\"node_id\":\"PR_kwDOPJuWzM6epKIh\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/11\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/11.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/11.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/11\",\"number\":11,\"state\":\"open\",\"locked\":false,\"title\":\"[6팀 이태영] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"taeyeong0814\",\"id\":53850117,\"node_id\":\"MDQ6VXNlcjUzODUwMTE3\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/53850117?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/taeyeong0814\",\"html_url\":\"https://github.com/taeyeong0814\",\"followers_url\":\"https://api.github.com/users/taeyeong0814/followers\",\"following_url\":\"https://api.github.com/users/taeyeong0814/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/taeyeong0814/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/taeyeong0814/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/taeyeong0814/subscriptions\",\"organizations_url\":\"https://api.github.com/users/taeyeong0814/orgs\",\"repos_url\":\"https://api.github.com/users/taeyeong0814/repos\",\"events_url\":\"https://api.github.com/users/taeyeong0814/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/taeyeong0814/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://taeyeong0814.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n- 1주차 과제와 마찬가지로 2주차 과제도 과제의 핵심이 되는 용어(Virtual DOM, diff 알고리즘, 이벤트 위임 등)만 파악하고 진행을 하였습니다. \\r\\n\\r\\n- 용어만 검색하고 실제 구현을 하려고 하니 시작부터 막막했습니다. 사실 지금도 막막합니다. 그래서 선택한 방법이 AI를 이용하여 구현을 하면서 CreateVNode 파일에서 코드 한 줄 한 줄이 의미하는 바가 무엇인지, 그 후 normalizeVNode 파일에서는 어떤 코드를 작성해야 하며 이 코드는 여기서 왜 작성이 되었는지 를 생각하고 물어가며 주석을 달며 2차로 공부를 했습니다.\\r\\n\\r\\n- 이 방법이 옳은 방법인가? 에 대한 의문은 있습니다. 하지만 이번 주차 과제를 진행하면서 막막한 상황을 어떻게 시작을 할 지에 대해 감이 왔고 나름의 방법을 찾았다고 생각합니다.\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n- Virtual DOM의 구조와 DOM의 동작 원리에 대해 알게 되었습니다.\\r\\n\\r\\n- JSX > Virtual DOM > 실제 DOM 으로 다시 변환되는 과정에 대해 알게 되었습니다.\\r\\n\\r\\n- AI를 1차적으로 이용하고 그 후 직접 코드 분석을 해보니 코드에 대한 사용 의도들을 알게 되었습니다.\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n- 코드 품질에 대해서는 현재 리팩토링이 많이 필요한 상황입니다. \\r\\n  예를 들어 eventManager.js 파일에 다양한(클릭, 인풋, 체인지, 호버 등) 이벤트를 하나하나 작성한 뒤 위임, 제거를 하는데 이 함수 자체를 공통함수로 표현이 가능 할 것 같다. \\r\\n-> PR을 작성 후 리팩토링이 가능한 시간이 있다면 리팩토링 후 첨부 하도록 하겠습니다.\\r\\n\\r\\n  ++ [추가]\\r\\n[refactor: eventManager.js 파일 공통함수로 빼서 코드 리팩토링](https://github.com/taeyeong0814/front_6th_chapter1-2/commit/dc372cde8811bba6809a04ab2541270443471cea)\\r\\n[refactor: updateElement 파일 중첩 if문을 함수로 빼고 if문으로 리팩토링](https://github.com/taeyeong0814/front_6th_chapter1-2/commit/c1b3216cea878632a465117b3eee4a0d07f2a71a)\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n- Virtual DOM은 실제 현업에서 주어진 요구사항을 빠르게 처리하는 일정에서는 깊이 고민할 기회가 많지 않은 영역이라고 생각합니다. 하지만 이번 과제를 통해, 이런 내부 동작 원리를 이해하지 못하면 내가 짠 코드의 품질이나 로직이 비효율적이거나 불필요하게 복잡해질 수 있다는 점을 깨달았습니다.\\r\\n\\r\\n- 알고리즘적 사고와 함께, 근본 원리를 이해하는 것이 장기적으로 실무 역량을 높이는 데 중요하다는 것을 느꼈습니다.\\r\\n   -> 아직 이 부분을 어떻게 적용 할 수 있는가? 에 대한 질문에 대한 답은 못 찾았습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n- 과제에서 Virtual DOM과 diff 알고리즘의 내부 동작을 직접 구현해야 해서 처음에는 막막했지만 단계별로 주석을 달고 AI의 도움을 받으면서 점차 이해할 수 있었습니다. 그리고 준일 코치님의 과제 설명이 상세해서 그 부분을 AI에게 질문을 해서 함수의 역할과 구현 방향을 잡는데 도움이 되었습니다. \\r\\n\\r\\n- 직접 Virtual DOM을 구현해보니, 평소에 사용하던 프레임워크의 동작 원리를 조금은 이해할 수 있어서 좋았습니다.\\r\\n\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\\r\\n모호하고 답변이 어려울 수 있는 질문이긴 한데 2주차 과제를 진행하면서 이러한 내용들을 왜? 하는 지에 대한 궁금증이 생겼습니다.\\r\\n어떠한 부분을 얻어가면 실무적으로 혹은 앞으로의 개발자 인생에서 도움이 되는지? 에 대한 생각이 궁금합니다.\\r\\n\\r\\n2주차 과제 내용이 실제 사용하고 있는 React 등과 같은 프레임워크 내부에서 사용되는 로직인데 이 부분을 직접 구현하는 방법은 과제를 통해 알았고 그렇다면 React 에서 어떻게 사용되고 있는지 참고 할 수 있는 자료나 간단한 설명을 해주시면 이어서 공부하는데 많은 참고자료로 시작 할 수 있을 것 같습니다.\\r\\n\\r\\n그리고 현재 Action 에서 CI 가 돌아 갈 때 e2e가 13분 가량 걸리고 통과가 되더라구요. 다른 분들은 2~3분 내외인데. \\r\\n어떤 부분에서 오래 걸리는지 해결방법을 찾지 못 했습니다. install 하는 것들이 많아 보이긴 했는데 이 부분에서 문제일까요?\\r\\n\",\"created_at\":\"2025-07-12T19:09:28Z\",\"updated_at\":\"2025-07-22T06:53:14Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"6313e1e2192ad910b3d19b13f9dfd2c80582bcb7\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/11/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/11/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/11/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/dcd848e0edc339a2685fff1ba02d80ab92f80aab\",\"head\":{\"label\":\"taeyeong0814:main\",\"ref\":\"main\",\"sha\":\"dcd848e0edc339a2685fff1ba02d80ab92f80aab\",\"user\":{\"login\":\"taeyeong0814\",\"id\":53850117,\"node_id\":\"MDQ6VXNlcjUzODUwMTE3\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/53850117?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/taeyeong0814\",\"html_url\":\"https://github.com/taeyeong0814\",\"followers_url\":\"https://api.github.com/users/taeyeong0814/followers\",\"following_url\":\"https://api.github.com/users/taeyeong0814/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/taeyeong0814/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/taeyeong0814/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/taeyeong0814/subscriptions\",\"organizations_url\":\"https://api.github.com/users/taeyeong0814/orgs\",\"repos_url\":\"https://api.github.com/users/taeyeong0814/repos\",\"events_url\":\"https://api.github.com/users/taeyeong0814/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/taeyeong0814/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018410565,\"node_id\":\"R_kgDOPLO2RQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"taeyeong0814/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"taeyeong0814\",\"id\":53850117,\"node_id\":\"MDQ6VXNlcjUzODUwMTE3\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/53850117?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/taeyeong0814\",\"html_url\":\"https://github.com/taeyeong0814\",\"followers_url\":\"https://api.github.com/users/taeyeong0814/followers\",\"following_url\":\"https://api.github.com/users/taeyeong0814/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/taeyeong0814/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/taeyeong0814/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/taeyeong0814/subscriptions\",\"organizations_url\":\"https://api.github.com/users/taeyeong0814/orgs\",\"repos_url\":\"https://api.github.com/users/taeyeong0814/repos\",\"events_url\":\"https://api.github.com/users/taeyeong0814/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/taeyeong0814/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/taeyeong0814/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/taeyeong0814/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T07:44:23Z\",\"updated_at\":\"2025-07-17T17:26:59Z\",\"pushed_at\":\"2025-07-17T17:26:56Z\",\"git_url\":\"git://github.com/taeyeong0814/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:taeyeong0814/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/taeyeong0814/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/taeyeong0814/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":334,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/11\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/11\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/11\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/11/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/11/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/11/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/dcd848e0edc339a2685fff1ba02d80ab92f80aab\"}},\"author_association\":\"FIRST_TIME_CONTRIBUTOR\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/12\",\"id\":2661610713,\"node_id\":\"PR_kwDOPJuWzM6epPTZ\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/12\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/12.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/12.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/12\",\"number\":12,\"state\":\"open\",\"locked\":false,\"title\":\"[2팀 한재원] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"JoyJaewon\",\"id\":38743869,\"node_id\":\"MDQ6VXNlcjM4NzQzODY5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/38743869?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JoyJaewon\",\"html_url\":\"https://github.com/JoyJaewon\",\"followers_url\":\"https://api.github.com/users/JoyJaewon/followers\",\"following_url\":\"https://api.github.com/users/JoyJaewon/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JoyJaewon/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JoyJaewon/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JoyJaewon/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JoyJaewon/orgs\",\"repos_url\":\"https://api.github.com/users/JoyJaewon/repos\",\"events_url\":\"https://api.github.com/users/JoyJaewon/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JoyJaewon/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://joyjaewon.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n개인적으로 이번 과제 너무 재밌었습니다🥳\\r\\n지난과제에서는 AI가 코딩을 참 많이 해주었는데요..ㅎㅎ\\r\\n이번에는 최대한 먼저 브레인스토밍, 플랜을 짠뒤에 AI는 내가 생각한게 맞는 방향인지 확인하는 식으로 활용했습니다.\\r\\n저의 생각의 흐름, 플랜, AI에게 물어본 내용은 plan.txt에 정리해두었습니다.\\r\\n\\r\\n### 기술적 성장\\r\\n#### 브라우저 렌더링 과정과 연계한 개념적 이해\\r\\n- 브라우저는 HTML을 파싱하면서 DOM 트리를 구성하고, CSSOM을 생성한 뒤 렌더 트리(Render Tree) 를 만들어 화면에 그린다.\\r\\n- 이 과정에서 DOM이 바뀌면 렌더링과 리플로우(Reflow)가 발생해 성능 비용이 커진다.\\r\\n- → 이를 줄이기 위해 가상 DOM(Virtual DOM) 을 만들고, 변경 사항만 실제 DOM에 반영하는 방식으로 최적화를 시도했다.\\r\\n\\r\\n#### 가상 DOM과 createElement 구현\\r\\n- JSX 없이 가상 DOM 객체를 직접 설계해 type, props, children 구조로 정의\\r\\n- 이를 실제 DOM으로 변환하는 createElement 함수 구현\\r\\n- 문자열, 숫자는 텍스트 노드로, 배열은 DocumentFragment를 이용해 재귀적으로 구성\\r\\n- 텍스트 노드 처리에서 falsy 값(null, false)은 빈 텍스트 노드로 처리하여 렌더링 오류 방지\\r\\n\\r\\n#### 이벤트 위임(Event Delegation) 구조 학습 및 적용\\r\\n- DOM에서 이벤트는 버블링(Bubbling)을 통해 상위 요소로 전달되므로, 루트(root) 에서 한 번만 리스너를 등록해도 하위 요소의 이벤트를 감지할 수 있음\\r\\n- 이를 위해 eventManager.js에서 addEvent, removeEvent, setupEventListeners 구조 설계:\\r\\n  - 모든 이벤트는 루트 요소 하나에만 등록\\r\\n  - 각 요소에 등록된 이벤트 핸들러는 Map에 저장하여, 이벤트 발생 시 target 기준으로 조회하여 실행\\r\\n  - 이로써 수많은 요소에 addEventListener를 반복 호출하지 않아도 되고, 메모리와 성능 모두 최적화\\r\\n \\r\\n#### 기술 간 유기적 연결 이해\\r\\n- 브라우저의 렌더링 원리(파싱 → DOM → 렌더트리)를 이해한 상태에서 가상 DOM 설계를 시작\\r\\n- 상태 변경 → 가상 DOM 트리 재생성 → diff → 실제 DOM 반영 → 렌더링 → 이벤트는 루트에서 처리\\r\\n- 이 흐름을 직접 구현함으로써 현대 프레임워크(React 등)의 핵심 원리를 바닥부터 이해할 수 있었음\\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n브라우저 로딩 순서, 가상돔 이런 개념들은 들어봤지만 평소에는 별로 신경을 안쓰고 있던 내용들인데 이번 과제를 통해서 자세히 공부할수 있어서 좋았습니다!\\r\\n특히 가상돔이 어떻게 구성되어 있는지, diff 알고리즘을 통해 어떻게 비교하고 업데이트하는지를 직접 구현해봐서 많이 배웠습니다.\\r\\n그리고 약간 DFS, map 활용하는 리트코드 알고리즘 문제 푸는것같아서 재밌었습니다ㅎㅎ\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n1주차는 조금 정신이 없었다면ㅎㅎ (리액트의 소중함은 확실히 깨달았어요!!)\\r\\n2주차는 리액트 코어 컨셉을 직접 구현해봐서 재밌었습니다! 직접 UI로도 확인할수 있어서 좋았어요!\\r\\n \\r\\n## 리뷰 받고 싶은 내용\\r\\nrenderElement.js에서 DFS 순회 방식으로 updateElement를 구현했고,\\r\\n텍스트 vs 텍스트 → 문자열 비교 후 교체\\r\\n타입 다르면 → 전체 교체\\r\\n같은 타입이면 → props 비교 → children 재귀 diff로 구현을 했는데,\\r\\n전체적으로 괜찮은 흐름인지, 특히 replaceChild 타이밍과 childNodes[index]로 접근하는 구조가 문제가 될 가능성은 없는지 궁금합니다!\\r\\n\\r\\n\\r\\n\",\"created_at\":\"2025-07-12T19:38:41Z\",\"updated_at\":\"2025-07-18T03:18:40Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"876ffd7420ef219742ed498f2f25c152eb90ded5\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/12/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/12/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/12/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/2ea670b049f17dc04ca3d61b8047ccebd049ebe4\",\"head\":{\"label\":\"JoyJaewon:main\",\"ref\":\"main\",\"sha\":\"2ea670b049f17dc04ca3d61b8047ccebd049ebe4\",\"user\":{\"login\":\"JoyJaewon\",\"id\":38743869,\"node_id\":\"MDQ6VXNlcjM4NzQzODY5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/38743869?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JoyJaewon\",\"html_url\":\"https://github.com/JoyJaewon\",\"followers_url\":\"https://api.github.com/users/JoyJaewon/followers\",\"following_url\":\"https://api.github.com/users/JoyJaewon/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JoyJaewon/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JoyJaewon/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JoyJaewon/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JoyJaewon/orgs\",\"repos_url\":\"https://api.github.com/users/JoyJaewon/repos\",\"events_url\":\"https://api.github.com/users/JoyJaewon/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JoyJaewon/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018677717,\"node_id\":\"R_kgDOPLfJ1Q\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"JoyJaewon/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"JoyJaewon\",\"id\":38743869,\"node_id\":\"MDQ6VXNlcjM4NzQzODY5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/38743869?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JoyJaewon\",\"html_url\":\"https://github.com/JoyJaewon\",\"followers_url\":\"https://api.github.com/users/JoyJaewon/followers\",\"following_url\":\"https://api.github.com/users/JoyJaewon/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JoyJaewon/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JoyJaewon/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JoyJaewon/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JoyJaewon/orgs\",\"repos_url\":\"https://api.github.com/users/JoyJaewon/repos\",\"events_url\":\"https://api.github.com/users/JoyJaewon/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JoyJaewon/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/JoyJaewon/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/JoyJaewon/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T19:35:08Z\",\"updated_at\":\"2025-07-17T23:18:29Z\",\"pushed_at\":\"2025-07-17T23:18:25Z\",\"git_url\":\"git://github.com/JoyJaewon/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:JoyJaewon/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/JoyJaewon/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/JoyJaewon/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":202,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/12\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/12\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/12\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/12/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/12/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/12/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/2ea670b049f17dc04ca3d61b8047ccebd049ebe4\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/13\",\"id\":2661867531,\"node_id\":\"PR_kwDOPJuWzM6eqOAL\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/13\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/13.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/13.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/13\",\"number\":13,\"state\":\"open\",\"locked\":false,\"title\":\"[2팀 정민기] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"jeongmingi123\",\"id\":60804074,\"node_id\":\"MDQ6VXNlcjYwODA0MDc0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/60804074?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/jeongmingi123\",\"html_url\":\"https://github.com/jeongmingi123\",\"followers_url\":\"https://api.github.com/users/jeongmingi123/followers\",\"following_url\":\"https://api.github.com/users/jeongmingi123/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jeongmingi123/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jeongmingi123/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jeongmingi123/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jeongmingi123/orgs\",\"repos_url\":\"https://api.github.com/users/jeongmingi123/repos\",\"events_url\":\"https://api.github.com/users/jeongmingi123/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jeongmingi123/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n--> https://jeongmingi123.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n--> virtual dom을 학습하며, 항상 기본기가 많이 부족하다고 생각했는데, 이번 과제를 통해 많이 배우게 되었다고 생각합니다.\\r\\n재귀함수를 안짜본지 너무 오래되어서, 구현하는데 너무 애를 먹었습니다. 하지만 이번에 과제를 구현하면서 저에게 많은 도움이 되었다고 생각합니다.  \\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n--> 사실 너무 코드 리팩토링 할 부분이 많아....... 이번엔 따로 첨부를 안하겠습니다 ㅜㅜ \\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n--> 아무래도 virutal dom을 학습하면서 많은 배움이 되었다고 생각합니다. 가상 노드를 만들어 보고, eventManger 및 element도 만들어보면서 기본기를 기를수 있어 가장 큰 배움이 있지 않았나 생각합니다. 또한 준일님 블로그를 보며, 순수 javascript를 사용하여 react에 있는 상태 관리 라이브러리를 만드시는 것을 보며 정말 기본기가 중요하다고 뼈저리게 느꼈습니다. 이런 부분을 이해해야 나중에  실무에서 문제가 발생했을 때 바로바로 해결이 가능하지 않나 생각이 듭니다.\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n--> 과제가 어려워서 오히려 좋았습니다. 이런 기초적인 동작 원리를 구현하면서 많은 도움이 되었다고 생각합니다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n--> 클린코드 관점에서 질문드립니다. createElement 를 구현하면서 뎁스가 길어진다고 생각하여, 함수로 쪼걨는데, 너무많이 쪼갰나 생각이 들었습니다. 이런식으로 하는게 괜찮은 방법일까요? 아니면 추가적으로 보완해야한다면 어떤식으로해야할지 질문드립니다..\\r\\n```javascript\\r\\n/**\\r\\n * 가상 노드를 실제 DOM 요소로 변환\\r\\n * @param {any} vNode - 변환할 가상 노드\\r\\n * @returns {Node} - 생성된 DOM 노드\\r\\n */\\r\\nexport function createElement(vNode) {\\r\\n  // null, undefined, boolean 처리\\r\\n  if (isNullOrBoolean(vNode)) {\\r\\n    return createEmptyTextNode();\\r\\n  }\\r\\n\\r\\n  // 문자열이나 숫자 처리\\r\\n  if (isPrimitive(vNode)) {\\r\\n    return createTextNode(vNode);\\r\\n  }\\r\\n\\r\\n  // 배열 처리\\r\\n  if (Array.isArray(vNode)) {\\r\\n    return createFragmentFromArray(vNode);\\r\\n  }\\r\\n\\r\\n  // 객체 형태의 가상 노드 처리\\r\\n  return createElementFromVNode(vNode);\\r\\n}\\r\\n\\r\\n/**\\r\\n * null, undefined, boolean 값인지 확인\\r\\n */\\r\\nfunction isNullOrBoolean(value) {\\r\\n  return value == null || typeof value === \\\"boolean\\\";\\r\\n}\\r\\n\\r\\n/**\\r\\n * 원시 타입(문자열, 숫자)인지 확인\\r\\n */\\r\\nfunction isPrimitive(value) {\\r\\n  return typeof value === \\\"string\\\" || typeof value === \\\"number\\\";\\r\\n}\\r\\n\\r\\n/**\\r\\n * 빈 텍스트 노드 생성\\r\\n */\\r\\nfunction createEmptyTextNode() {\\r\\n  return document.createTextNode(\\\"\\\");\\r\\n}\\r\\n\\r\\n/**\\r\\n * 텍스트 노드 생성\\r\\n */\\r\\nfunction createTextNode(value) {\\r\\n  return document.createTextNode(String(value));\\r\\n}\\r\\n\\r\\n/**\\r\\n * 배열로부터 DocumentFragment 생성\\r\\n */\\r\\nfunction createFragmentFromArray(vNodeArray) {\\r\\n  const fragment = document.createDocumentFragment();\\r\\n  vNodeArray.forEach((child) => {\\r\\n    const childElement = createElement(child);\\r\\n    fragment.appendChild(childElement);\\r\\n  });\\r\\n  return fragment;\\r\\n}\\r\\n\\r\\n/**\\r\\n * 가상 노드로부터 DOM 요소 생성\\r\\n */\\r\\nfunction createElementFromVNode(vNode) {\\r\\n  const { type, props = {}, children = [] } = vNode;\\r\\n\\r\\n  if (typeof type === \\\"string\\\") {\\r\\n    return createHTMLElement(type, props, children);\\r\\n  }\\r\\n\\r\\n  if (typeof type === \\\"function\\\") {\\r\\n    throw new Error(\\\"함수형 컴포넌트는 createElement로 직접 처리할 수 없습니다. 먼저 normalizeVNode로 정규화하세요.\\\");\\r\\n  }\\r\\n\\r\\n  return createEmptyTextNode();\\r\\n}\\r\\n\\r\\n..... 이외\\r\\n\\r\\n```\\r\\n\",\"created_at\":\"2025-07-13T01:40:44Z\",\"updated_at\":\"2025-07-17T16:33:41Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"d8c83320d72238b1aa3cc37cc772d61da6f66c1d\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/13/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/13/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/13/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/cc48e5771319fc4fd770b327ef518a6fc5999c38\",\"head\":{\"label\":\"jeongmingi123:main\",\"ref\":\"main\",\"sha\":\"cc48e5771319fc4fd770b327ef518a6fc5999c38\",\"user\":{\"login\":\"jeongmingi123\",\"id\":60804074,\"node_id\":\"MDQ6VXNlcjYwODA0MDc0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/60804074?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/jeongmingi123\",\"html_url\":\"https://github.com/jeongmingi123\",\"followers_url\":\"https://api.github.com/users/jeongmingi123/followers\",\"following_url\":\"https://api.github.com/users/jeongmingi123/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jeongmingi123/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jeongmingi123/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jeongmingi123/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jeongmingi123/orgs\",\"repos_url\":\"https://api.github.com/users/jeongmingi123/repos\",\"events_url\":\"https://api.github.com/users/jeongmingi123/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jeongmingi123/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018755324,\"node_id\":\"R_kgDOPLj4_A\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"jeongmingi123/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"jeongmingi123\",\"id\":60804074,\"node_id\":\"MDQ6VXNlcjYwODA0MDc0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/60804074?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/jeongmingi123\",\"html_url\":\"https://github.com/jeongmingi123\",\"followers_url\":\"https://api.github.com/users/jeongmingi123/followers\",\"following_url\":\"https://api.github.com/users/jeongmingi123/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jeongmingi123/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jeongmingi123/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jeongmingi123/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jeongmingi123/orgs\",\"repos_url\":\"https://api.github.com/users/jeongmingi123/repos\",\"events_url\":\"https://api.github.com/users/jeongmingi123/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jeongmingi123/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/jeongmingi123/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/jeongmingi123/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T01:07:44Z\",\"updated_at\":\"2025-07-17T14:12:15Z\",\"pushed_at\":\"2025-07-17T14:12:11Z\",\"git_url\":\"git://github.com/jeongmingi123/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:jeongmingi123/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/jeongmingi123/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/jeongmingi123/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":200,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/13\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/13\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/13\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/13/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/13/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/13/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/cc48e5771319fc4fd770b327ef518a6fc5999c38\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/14\",\"id\":2661893526,\"node_id\":\"PR_kwDOPJuWzM6eqUWW\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/14\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/14.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/14.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/14\",\"number\":14,\"state\":\"open\",\"locked\":false,\"title\":\"[8팀 김상수] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"k-sang-soo\",\"id\":67569730,\"node_id\":\"MDQ6VXNlcjY3NTY5NzMw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/67569730?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/k-sang-soo\",\"html_url\":\"https://github.com/k-sang-soo\",\"followers_url\":\"https://api.github.com/users/k-sang-soo/followers\",\"following_url\":\"https://api.github.com/users/k-sang-soo/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/k-sang-soo/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/k-sang-soo/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/k-sang-soo/subscriptions\",\"organizations_url\":\"https://api.github.com/users/k-sang-soo/orgs\",\"repos_url\":\"https://api.github.com/users/k-sang-soo/repos\",\"events_url\":\"https://api.github.com/users/k-sang-soo/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/k-sang-soo/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://k-sang-soo.github.io/front_6th_chapter1-2\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [ ] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [ ] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [ ] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [ ] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [ ] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [ ] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [ ] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [ ] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [ ] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [ ] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [ ] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [ ] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\nJSX에서 Virtual DOM 변환까지의 흐름을 직접 구현하면서 리액트 내부에서는 이런 동작들이 일어나는구나 라는걸 깨닫고 meta 회사 방향으로 절 한번 올렸다.. 특히 항상 궁금했던거지만 귀찮아서 찾아보지 않았던 diff 알고리즘의 핵심 원리들도 알게되었고 리액트에서 이벤트 핸드러를 사용할 때 왜 기존 브라우저에 이벤트 핸들러를 사용하지않고 자체적으로 만들었을까 궁금했는데 이번에 SyntheticEvent를 구현 해보면서 이런 방식으로 만들었고 왜 React가  기존 브라우저의 이벤트를 직접 쓰지 않는지 깨달았다. 확장성과 일관성면에서 아주 유용하다고 생각했다.\\r\\n\\r\\n### 기술적 성장\\r\\n**SyntheticEvent**\\r\\n이벤트 핸들러를 구현할 때 기존 브라우저의 이벤트 핸들러를 그대로 사용하는게 아닌 React 처럼 SyntheticEvent를 구현해 본게 기억에 남았다.\\r\\n생각보다 구현이 엄청 어려운 거는 아니였지만 어떤 의도와 목적으로 SyntheticEvent를 사용하게 됐는지 알 수 있었다. SyntheticEvent 과정에서 실수를 했던 점은 key 이벤트에 대한 처리를 안해서 input에 검색하는 로직에서 event가 제대로 들어오지 않아 한참 헤맸다.. 나중에 보니 단순하게 key에 대한 이벤트 처리를 하지 않았서 생긴 문제였다.\\r\\n\\r\\n**diff**\\r\\ndiffing 알고리즘을 실제로 구현 해보면서 index 기반으로 DOM들을 접근하려니 내 생각보다 에러 사항이 많았다. 여러 방어 코드들을 사용하여 어찌어찌 구현하긴 했지만 이게 최선의 방법인지 이전에 내가 로직을 잘못짜서 그런건지 정확히 파악은 못해서 조금은 아쉬웠다.\\r\\n\\r\\n**마이크로태스크**\\r\\n사실 이번 과제에서 사용한건 없지만 발제 자료에서 코치님이 사용하신걸 보고 궁금해서 MDN에서 문서를 살펴봤다. 브라우저 동작 과정에서 사용하던 그 마이크태스크를 사용?하는 함수이고 활용 방법 중에 여러 메시지를 배열에 넣어놓고 마이크로 태스크를 사용해서 실행 컨텍스트 종료 시점에 넣어놨던 메시지를 한 번에 하나의 객체로 전송하는 예제가 인상적이였다. 주식이나 챗봇? 같이 많은 데이터를 다룰 때 이런 배치 전력을 사용한다고 들었는데 경험해본적이 없어 어떤 전략으로 하는지 궁금했는데 이렇게 짜는건 아닐 테지만 어느정도 이해하는데 도움이 됐다.\\r\\n```javascirpt\\r\\nconst messageQueue = [];\\r\\n\\r\\nlet sendMessage = (message) => {\\r\\n  messageQueue.push(message);\\r\\n\\r\\n  if (messageQueue.length === 1) {\\r\\n    queueMicrotask(() => {\\r\\n      const json = JSON.stringify(messageQueue);\\r\\n      messageQueue.length = 0;\\r\\n      fetch(\\\"url-of-receiver\\\", json);\\r\\n    });\\r\\n  }\\r\\n};\\r\\n```\\r\\n**WeakMap**\\r\\n이것도 마찬가지로 과제에서 사용하지 않았지만 발제 자료에서 코치님이 사용하신걸 보고 찾아봤다. WeakMap은 객체를 키로 사용할 수있다는게 신기했고 키에 약한 참조를 활용해서 사용된 객체가 더 이상 필요없어지면 해당 키/값도 자동으로 가비지 컬렉션 대상이 된다. 또 다른 이점으로는 키의 활성 상태를 관찰하는 것을 하용하지 않으므로 키를 열거할 수 없다. 이러한 특성 덕분에 메모리 누수 없이 객체에 비공개 데이터를 안전하게 연결할 수있다.\\r\\n\\r\\n**배포**\\r\\n이전에 다른 분들의 공유 문서를 보지 않고 직접 검색을 통해서 배포를 진행 해봤고, 배포를 하기 위한 기본 세팅은 이해했지만 이번 과제에서는 어느 부분 배포에 대한 세팅이 되어있어서 그 부분까지는 깊게 알지는 못했다.(배포 후에 에러가 나서 한참 찾아봤는데 로컬스토리지 값이 남아 있어서 에러가 났었다.................잘 확인해보자)\\r\\n[CI/CD](https://github.com/k-sang-soo/front_6th_chapter1-2/issues/7)\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n만족스러운 부분은 그냥 브라우저 이벤트를 사용한 것이 아닌 React의 이벤트 작동 방식을 이해하기 위해 SyntheticEvent를 구현해 봤던 것이 만족스러웠다. 이런 과정에서 element._vNode 라던지 이런식으로 임시 메모리를 사용해서 관리하는걸 처음 깨달았던것 같다. React 에서는 사용할 일이 없겠지만 이런 방식으로도 할 수 있구나 라는 걸 꺠달았다.\\r\\n\\r\\n리팩토링이 필요한 부분은 전부 필요하다고 느끼지만! 큰 부분은 아니지만 나중에 고쳐보고 성능 테스트 해봐야지 생각했었는데 시간이 부족해서 못했다. createVNode 에 중첩 배열을 평탄화 시키기 위해 flat 을 사용했는데 flat이 v8 엔진에서 최적화가 안된다고 들어서 concat 을 활용하여 평탄화 시키는 방법들이 있었던 것 같은데 활용하지 못해서 아쉽다.\\r\\n\\r\\n### 학습 효과 분석\\r\\n가장 큰 배움은 JSX -> 실제 DOM 까지의 전반적인 흐름을 알 수 있었던게 가장 큰 배움이였고 React의 성능 최적화 전략인 이벤트 위임, 가상 DOM, diffing 등을 직접 구현하면서 코드 수준에서 체감할 수 있었다. 그리고 WeakMap에 대해 문서를 찾아봐서 이해도가 있었지만 어디 부분에서 써야 할지 강이 잘 안 왔다. 메모리 누수를 막기 위해 어떤 구조가 적합한지에 대해 추가 학습이 필요하다고 생각했다.\\r\\n\\r\\nDOM을 깔아 끼우면서 여러 분기에 대해 어떤 상황들에서 걸러지는지 너무 헷갈려서 정리해봤다.\\r\\n- [createVNode](https://github.com/k-sang-soo/front_6th_chapter1-2/issues/1)\\r\\n- [normalizeVNode](https://github.com/k-sang-soo/front_6th_chapter1-2/issues/2)\\r\\n- [createElement](https://github.com/k-sang-soo/front_6th_chapter1-2/issues/3)\\r\\n- [renderElement](https://github.com/k-sang-soo/front_6th_chapter1-2/issues/4)\\r\\n- [updateElement](https://github.com/k-sang-soo/front_6th_chapter1-2/issues/5)\\r\\n- [eventManager](https://github.com/k-sang-soo/front_6th_chapter1-2/issues/6)\\r\\n\\r\\n### 과제 피드백\\r\\nJSX -> 실제 DOM 까지의 전체 흐름을 이해하는데  튜토리얼 같은 느낌으로 모듈이 잘 분리되어있어 재미있게 진행했습니다. 테스트까지 있으니 뭔가 여행다닐 때 가이드가 옆에서 같이 동행하는 느낌이였습니다ㅋㅋㅋ 실제 구현해야하는 부분에서는 스스로 고민할 수 있게 설계 하셨던 점이 좋았습니다.\\r\\n\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n- WeakMap 활용 방법이 궁금합니다. 저는 현재 일부분들을 el._vNode 이런식으로 임시로 연결하여 사용하고 있거나 Map으로 연결해서 사용하고 있지만 다른 분들의 코드를 보니 WeakMap을 많이 활용한 예시들이 있는데 정말 필요한건지 판단이 잘 안 섭니다.\",\"created_at\":\"2025-07-13T02:45:00Z\",\"updated_at\":\"2025-07-20T09:59:34Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"75aae4062811a556be701173bbd8434c6fa4ac00\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/14/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/14/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/14/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e5d2f34d0fd72185bc011612e9c29a29030abf28\",\"head\":{\"label\":\"k-sang-soo:main\",\"ref\":\"main\",\"sha\":\"e5d2f34d0fd72185bc011612e9c29a29030abf28\",\"user\":{\"login\":\"k-sang-soo\",\"id\":67569730,\"node_id\":\"MDQ6VXNlcjY3NTY5NzMw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/67569730?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/k-sang-soo\",\"html_url\":\"https://github.com/k-sang-soo\",\"followers_url\":\"https://api.github.com/users/k-sang-soo/followers\",\"following_url\":\"https://api.github.com/users/k-sang-soo/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/k-sang-soo/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/k-sang-soo/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/k-sang-soo/subscriptions\",\"organizations_url\":\"https://api.github.com/users/k-sang-soo/orgs\",\"repos_url\":\"https://api.github.com/users/k-sang-soo/repos\",\"events_url\":\"https://api.github.com/users/k-sang-soo/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/k-sang-soo/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018766476,\"node_id\":\"R_kgDOPLkkjA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"k-sang-soo/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"k-sang-soo\",\"id\":67569730,\"node_id\":\"MDQ6VXNlcjY3NTY5NzMw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/67569730?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/k-sang-soo\",\"html_url\":\"https://github.com/k-sang-soo\",\"followers_url\":\"https://api.github.com/users/k-sang-soo/followers\",\"following_url\":\"https://api.github.com/users/k-sang-soo/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/k-sang-soo/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/k-sang-soo/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/k-sang-soo/subscriptions\",\"organizations_url\":\"https://api.github.com/users/k-sang-soo/orgs\",\"repos_url\":\"https://api.github.com/users/k-sang-soo/repos\",\"events_url\":\"https://api.github.com/users/k-sang-soo/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/k-sang-soo/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/k-sang-soo/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/k-sang-soo/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T02:03:48Z\",\"updated_at\":\"2025-07-18T00:18:40Z\",\"pushed_at\":\"2025-07-18T00:18:57Z\",\"git_url\":\"git://github.com/k-sang-soo/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:k-sang-soo/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/k-sang-soo/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/k-sang-soo/front_6th_chapter1-2\",\"homepage\":\"https://k-sang-soo.github.io/front_6th_chapter1-2/\",\"size\":29636,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":7,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":7,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/14\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/14\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/14\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/14/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/14/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/14/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e5d2f34d0fd72185bc011612e9c29a29030abf28\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/16\",\"id\":2661993737,\"node_id\":\"PR_kwDOPJuWzM6eqs0J\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/16\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/16.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/16.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/16\",\"number\":16,\"state\":\"open\",\"locked\":false,\"title\":\"[8팀 김민지] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"annkimm\",\"id\":27846161,\"node_id\":\"MDQ6VXNlcjI3ODQ2MTYx\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/27846161?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/annkimm\",\"html_url\":\"https://github.com/annkimm\",\"followers_url\":\"https://api.github.com/users/annkimm/followers\",\"following_url\":\"https://api.github.com/users/annkimm/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/annkimm/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/annkimm/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/annkimm/subscriptions\",\"organizations_url\":\"https://api.github.com/users/annkimm/orgs\",\"repos_url\":\"https://api.github.com/users/annkimm/repos\",\"events_url\":\"https://api.github.com/users/annkimm/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/annkimm/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://annkimm.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [X] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [X] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [X] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [X] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [X] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [X] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [X] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [X] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [X] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [X] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [X] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [X] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n- 가상 DOM 파이프라인 전반 구현\\r\\n  - JSX 코드가 createVNode로 vNode 객체로 생성되고, normalizeVNode를 통해 일관된 형태로 정규화된 뒤, createElement로 실제 DOM에 매핑되는 전체 과정을 처음으로 완성하였다.\\r\\n  -  vNode 트리와 실제 DOM 트리 간의 변환 원리를 눈으로 확인하였다.\\r\\n\\r\\n### 기술적 성장\\r\\n- Map vs WeakMap와 개념과 메모리 관리 차이를 학습을 아직 제대로 학습하지 못하였다.\\r\\n\\r\\n### 코드 품질\\r\\n- createVNode와 normalizeVNode 등등 나머지 함수에서 처리하다 보니, \\r\\n로직이 길어지고 이해하기 이해하기 어려워서 현재 짠 코드에 대한 추가적인 공부가 필요할 것 같다.\\r\\n- 회사에서 코드 짤 때 타입스크립트를 이용해서 짜는데, 확실히 JSX로 짜다보니 타입에 대한 추정이 힘들어 디버깅하기가 힘들었던 것 같다. \\r\\n근데 TS 바꿀 시도는 엄두도 못했다.\\r\\n\\r\\n### 학습 효과 분석(효과보다는 공부가 필요한 것)\\r\\n- Map과 WeakMap 차이점 알기\\r\\n- 재귀함수(평소에 사용할 일이 없다보니 더 그런거 같기도...)\\r\\n\\r\\n### 과제 피드백\\r\\nAI 도움 받아서 짜면 너무 어렵지도 않고,\\r\\n너무 쉽지도 않었던 것 같습니다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n- EventManager와 updateElement의 핵심 로직을 AI가 대부분 생성해 주었는데, \\r\\n   AI를 어쩔 수 없이 쓰게 될 수 밖에 없는데 AI를 쓰면서 성장할 수 있는 방법이 있을까요?\\r\\n- EventManager와 updateElement( 이 함수들이 아니더라도 재귀함수같은 익숙하지 않은 걸로 함수를 짜야할 때)를 \\r\\n   처음 구현할 때 어디서부터 시작해야 할지 감이 잘 잡히지 않고 막막해 AI로 코드를 구현했습니다. \\r\\n   이런 상황에서 우선적으로 무엇을 살펴보고 어떻게 감을 잡아서 나아가야할지 알고 싶습니다.\\r\\n\",\"created_at\":\"2025-07-13T05:34:43Z\",\"updated_at\":\"2025-07-19T08:15:38Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"292539fa6f38dc4cbccea755881d4929db61fea8\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/16/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/16/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/16/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/afc2e45b33b20d9658b094cf0df3090e78aafd1e\",\"head\":{\"label\":\"annkimm:main\",\"ref\":\"main\",\"sha\":\"afc2e45b33b20d9658b094cf0df3090e78aafd1e\",\"user\":{\"login\":\"annkimm\",\"id\":27846161,\"node_id\":\"MDQ6VXNlcjI3ODQ2MTYx\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/27846161?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/annkimm\",\"html_url\":\"https://github.com/annkimm\",\"followers_url\":\"https://api.github.com/users/annkimm/followers\",\"following_url\":\"https://api.github.com/users/annkimm/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/annkimm/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/annkimm/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/annkimm/subscriptions\",\"organizations_url\":\"https://api.github.com/users/annkimm/orgs\",\"repos_url\":\"https://api.github.com/users/annkimm/repos\",\"events_url\":\"https://api.github.com/users/annkimm/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/annkimm/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018571971,\"node_id\":\"R_kgDOPLYsww\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"annkimm/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"annkimm\",\"id\":27846161,\"node_id\":\"MDQ6VXNlcjI3ODQ2MTYx\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/27846161?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/annkimm\",\"html_url\":\"https://github.com/annkimm\",\"followers_url\":\"https://api.github.com/users/annkimm/followers\",\"following_url\":\"https://api.github.com/users/annkimm/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/annkimm/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/annkimm/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/annkimm/subscriptions\",\"organizations_url\":\"https://api.github.com/users/annkimm/orgs\",\"repos_url\":\"https://api.github.com/users/annkimm/repos\",\"events_url\":\"https://api.github.com/users/annkimm/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/annkimm/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/annkimm/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/annkimm/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T14:51:44Z\",\"updated_at\":\"2025-07-16T11:29:38Z\",\"pushed_at\":\"2025-07-16T13:32:57Z\",\"git_url\":\"git://github.com/annkimm/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:annkimm/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/annkimm/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/annkimm/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":328,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/16\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/16\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/16\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/16/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/16/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/16/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/afc2e45b33b20d9658b094cf0df3090e78aafd1e\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/17\",\"id\":2661994029,\"node_id\":\"PR_kwDOPJuWzM6eqs4t\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/17\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/17.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/17.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/17\",\"number\":17,\"state\":\"open\",\"locked\":false,\"title\":\"[3팀 여진석] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"realstone2\",\"id\":79455437,\"node_id\":\"MDQ6VXNlcjc5NDU1NDM3\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/79455437?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/realstone2\",\"html_url\":\"https://github.com/realstone2\",\"followers_url\":\"https://api.github.com/users/realstone2/followers\",\"following_url\":\"https://api.github.com/users/realstone2/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/realstone2/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/realstone2/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/realstone2/subscriptions\",\"organizations_url\":\"https://api.github.com/users/realstone2/orgs\",\"repos_url\":\"https://api.github.com/users/realstone2/repos\",\"events_url\":\"https://api.github.com/users/realstone2/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/realstone2/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n\\r\\n### 배포 링크\\r\\n\\r\\nhttps://realstone2.github.io/front_6th_chapter1-2/\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createxNode 함수를 이용하여 xNode를 만든다.\\r\\n- [x] normalizexNode 함수를 이용하여 xNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 xNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n1주차 과제때도 그렇고 2주차 과제도 그렇고, 구현해야 되는 기능은 구현을 완료했으나, e2e테스트에서 통과를 못한 점이 많이 아쉽습니다.\\r\\n스스로도 구현할 자신이 있었고, 내용도 이해했다고 생각해서 더 아쉬웠던 것 같습니다.\\r\\n1주차때 테스트코드를 다 완성하고 돌리다가 실패했던 경험으로, 이번에는 유닛테스트를 중간에 계속 돌려가면서 기능 구현을 했으나, e2e테스트에서 실패하는거보고 너무 좌절이었습니다.\\r\\n3주차 과제때는 어떻게 접근하면 좋을지 고민이 됩니다.\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\njsx가 어떻게 렌더링이 되고 attribute를 어떤 방식으로 등록하는지 직접 구현하면서 습득하였습니다.\\r\\nreact에서 매칭시켜놓은 이벤트, 프로퍼티, attribute, class, style 등의 구분을 명확히 이해할 수 있게 되었습니다.\\r\\n\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n이벤트 위임방식의 구조를 클로저를 활용하여 하나의 인스턴스로 구성한 부분이 깔끔하게 구성되었다고 생각하였습니다.\\r\\n\\r\\n노드간의 파싱하면서 복잡함이 크니까 타입스크립트로 작성하면서 정확히 타입을 추론해서 하고자 했는데, 장점도 있지만 normalize createElement 등등을 거치면서 의도치 않은 타입을 발생시키고 오히려 디버깅을 어렵게 만든 요소였던 것 같기도 합니다.\\r\\n\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n이번 과제에서 가장 크게 배운건 실행력, 섬세함, 명확성 입니다.\\r\\n과제 초반에 1주차에 비해 너무 정답이 정해져있다보니 내가 어떤 것을 얻을 수 있을까 고민하면서 실행자체를 제대로 못하고 있었습니다. 하지만 같은팀 준형님은 과제를 진작에 끝내고, suspense? 비동기 노드들은 어떻게 동작할까 등 관련된 다양한 고민들을 하셨습니다. 이 모습을 보고 준형님의 실행력을 본받아야겠다 느끼고 얼른 실행을 해야지 실패도 빨리 겪고 더 좋은 방향으로 학습을 할 수 있겠구나 느꼈습니다.\\r\\n\\r\\n이번에 너무 즉흥적으로 코테풀듯이 하나의 함수에만 집중하면서 테스트코드를 통과하며 수행했는데, 그러다보니 유닛테스트는 다 통과하더라도 전체적으로 합쳐졌을 때 올바르게 동작하지 못하였습니다.\\r\\n각 함수간의 흐름 및 각 함수가 어떤것을 실행하는지 명확하게 구분짓고 특히 updateElement쪽 함수를 섬세하게 설계해서 진행했더라면 하는 아쉬움이 컸던 것 같습니다.\\r\\n\\r\\n\\r\\nrenderElement에서 updateElement를 실행안하고 기본과제로만 돌면 e2e테스트가 통과하긴 합니다! \\r\\n\\r\\n\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n1주차 과제가 다양한 방법을 고려해보며 설계해보고 구현해보는 과정이었는데,\\r\\n2주차 과제는 그에 비해서 너무 정답이 주어진 느낌이고, 테스트 코드 정답에 맞게 알고리즘을 풀어야되는 느낌이라 과제를 하면서 어떤것을 배워야할지 방황을 많이 했습니다.\\r\\n어렵더라도 좀 더 고민할 수 있는 과제면 더 재밌을 것 같습니다.\\r\\n\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n1. 함수에서 해야되는 역할과 테스트 코드가 명확히 적혀있다보니 과제를 하면서 어떤것을 얻어야할까 고민을 많이 했던 것 같습니다. 이부분에 대해서 코치님의 조언을 들어보고 싶습니다!\\r\\n\\r\\n2. 1주차때도 그렇고 스스로 구현하고자 했던 내용을 다 구현했으나 완성도가 떨어지는 것 같습니다.\\r\\n   이번주차는 특히 유닛테스트는 통과했는데 e2e는 실패하는 등 큰숲을 못본걸까? 라는 생각도 들었습니다.\\r\\n   특히 AI와 함께 바이브코딩을 하다보면 큰숲을 못보고 지금 앞에있는 문제만 집중하게되는 경향도 있는 것 같습니다.\\r\\n   이런 부분에 있어서 코치님의 의견과 조언을 받아보고 싶습니다!\\r\\n\\r\\n3. 1,2 내용에 기반해서 3주차때는 어떤 마인드로 과제에 접근해보는게 좋을지 조언받아보고 싶습니다!\\r\\n\\r\\n4. 1주차때는 class를 사용하여 이벤트 인스턴스를 구현해보고, 이번주차에서는 클로저를 활용하여 이벤트 인스턴스를 구현해보았습니다. 둘다 사용해봤을 때 비슷하면서도 함수 방식이 좀 더 익숙하다보니 더 편하다는 생각을 하였습니다.\\r\\n   자바스크립트에서 class 자체를 abstract 메소드나 나 상속개념이 없다면 사용할 이유가 없다고 생각해도 될까요?\\r\\n\\r\\n5. 마지막으로.. e2e실패하는 이유가 updateElement 구현이 누락된건지 다른 코드 어떤 부분이 누락된건지 피드백 받고싶습니다!\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MxC 패턴을 따르려고 했는데, 제가 구현한 구조가 MxC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-13T05:35:29Z\",\"updated_at\":\"2025-07-19T08:00:24Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"c2a0103d8c3bab3076a1ca015a84c20ab0cba892\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/17/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/17/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/17/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/37a16326bdc26ea5daefbce32f5337a773f3b3c0\",\"head\":{\"label\":\"realstone2:main\",\"ref\":\"main\",\"sha\":\"37a16326bdc26ea5daefbce32f5337a773f3b3c0\",\"user\":{\"login\":\"realstone2\",\"id\":79455437,\"node_id\":\"MDQ6VXNlcjc5NDU1NDM3\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/79455437?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/realstone2\",\"html_url\":\"https://github.com/realstone2\",\"followers_url\":\"https://api.github.com/users/realstone2/followers\",\"following_url\":\"https://api.github.com/users/realstone2/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/realstone2/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/realstone2/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/realstone2/subscriptions\",\"organizations_url\":\"https://api.github.com/users/realstone2/orgs\",\"repos_url\":\"https://api.github.com/users/realstone2/repos\",\"events_url\":\"https://api.github.com/users/realstone2/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/realstone2/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018773525,\"node_id\":\"R_kgDOPLlAFQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"realstone2/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"realstone2\",\"id\":79455437,\"node_id\":\"MDQ6VXNlcjc5NDU1NDM3\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/79455437?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/realstone2\",\"html_url\":\"https://github.com/realstone2\",\"followers_url\":\"https://api.github.com/users/realstone2/followers\",\"following_url\":\"https://api.github.com/users/realstone2/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/realstone2/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/realstone2/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/realstone2/subscriptions\",\"organizations_url\":\"https://api.github.com/users/realstone2/orgs\",\"repos_url\":\"https://api.github.com/users/realstone2/repos\",\"events_url\":\"https://api.github.com/users/realstone2/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/realstone2/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/realstone2/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/realstone2/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T02:37:07Z\",\"updated_at\":\"2025-07-17T19:56:27Z\",\"pushed_at\":\"2025-07-17T19:56:43Z\",\"git_url\":\"git://github.com/realstone2/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:realstone2/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/realstone2/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/realstone2/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":221,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/17\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/17\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/17\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/17/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/17/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/17/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/37a16326bdc26ea5daefbce32f5337a773f3b3c0\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/18\",\"id\":2662014551,\"node_id\":\"PR_kwDOPJuWzM6eqx5X\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/18\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/18.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/18.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/18\",\"number\":18,\"state\":\"open\",\"locked\":false,\"title\":\"[5팀 이지훈] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"JiHoon-0330\",\"id\":58219394,\"node_id\":\"MDQ6VXNlcjU4MjE5Mzk0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/58219394?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JiHoon-0330\",\"html_url\":\"https://github.com/JiHoon-0330\",\"followers_url\":\"https://api.github.com/users/JiHoon-0330/followers\",\"following_url\":\"https://api.github.com/users/JiHoon-0330/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JiHoon-0330/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JiHoon-0330/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JiHoon-0330/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JiHoon-0330/orgs\",\"repos_url\":\"https://api.github.com/users/JiHoon-0330/repos\",\"events_url\":\"https://api.github.com/users/JiHoon-0330/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JiHoon-0330/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n[https://hanghae-plus.github.io/front_6th_chapter1-2/](https://hanghae-plus.github.io/front_6th_chapter1-2/)\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n1주차 때 과제를 다 끝내고 회고를 진행하려고 하다 보니 내가 어떤 고민을 했고, 어떻게 해결하려고 글로 쓰려니 어려움을 느꼈다. 그래서 2주차 부터는 과제를 진행하면서 고민한 내용들을 그날 그날 적어보는 것을 목표로 했다.\\r\\n\\r\\n[과제를 진행하면서 남겼던 글들](https://github.com/JiHoon-0330/front_6th_chapter1-2/issues)\\r\\n\\r\\n마침 같은 팀인 정석님이 동기부여를 원하셔서 매일 학습 내용 적기를 공유하기도 했다.\\r\\n\\r\\n실제로 매일 학습 내용을 공유해준 5팀 최고 👍\\r\\n\\r\\n![TIL](https://velog.velcdn.com/images/jihoon0330/post/3d31515a-95c4-4368-8891-4df83b45f233/image.png)\\r\\n\\r\\n기본 과제에선 테스트코드에 알맞은 코드를 작성하고, 작성하는 과정에서 JSX를 가상돔으로 만들기 위해 어떤 일들이 필요한지 학습을 하는 방향으로 공부를 진행했다. 코드를 작성하는 부분에서는 구현 난이도가 높지 않아 코드 스타일이나, 어떤 매서드를 사용할지와 같은 부분에 집중을 했다.\\r\\n\\r\\n심화 과제는 생각보다 어렵게 느껴졌다. 비교를 해야 한다는 건 알았지만, children 값을 비교하고 DOM 에 적용시키는 부분이 조금 막막했던 것 같다. 개수가 다를 수 있는 부분과, 텍스트와 엘리먼트인 경우 어떻게 하면 좋을지? 텍스트인데 길이가 다른 경우 등등..\\r\\n\\r\\n그래서 Gemini를 활용해 DOM 추가/변경/삭제 하는 API 목록을 얻어서 정리하는 시간을 가졌다.\\r\\n심화 과제에서 엘리먼트 노드를 다루기 위해 필요한 매서드들은 `appendChild`, `removeChild`, `replaceChild` 3종류가 있었고, 리액트 처럼 목록을 key로 관리한다면 `insertBefore` 매서드가 추가로 필요할 것 같다.\\r\\n\\r\\n추가/삭제/변경을 하는 코드를 작성하고, 유닛 테스트도 다 통과를 한 시점에 베이직에서 통과했던 e2e 테스트를 실패해 서비스를 실행해보니\\r\\n\\r\\n![오류 이미지](https://velog.velcdn.com/images/jihoon0330/post/fe93884f-385b-4de7-b560-0bfe13775521/image.png)\\r\\n\\r\\n총 {스켈레톤} 340개 와 같은 화면이 나왔다. 당황..\\r\\n\\r\\n이후에도 아래와 같이 상품이 하나씩 보이는 오류가 있었다.\\r\\n\\r\\n![오류 이미지2](https://velog.velcdn.com/images/jihoon0330/post/d5fdb5fb-d4f5-47ad-8601-bb20dd91101d/image.png)\\r\\n\\r\\n이런 문제를 겪다 보니 심화 과제를 진행하면서 디버깅이 많이 익숙해졌다.\\r\\n\\r\\n문제는 엘리먼트를 추가할 때 원래 위치보다 더 상위 요소에 추가를 하고 있었던 것과, newNode, oldNode 값이 존재하는지와 비교하는 과정에 빠트린 부분이 있는 것이 원인이었다.\\r\\n\\r\\n심화 과제를 쉽게 푸는 팀원들을 보고 스스로 부족한 영역을 인지하게 된 것 같다. 개인적으로 이런 알고리즘 문제가 어려운 것 같다.\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n#### setAttribute 와 property\\r\\n\\r\\nsetAttribute 는 요소에 문자열로 된 값만을 설정할 수 있고, boolean 값을 다루는 속성의 경우 키 값의 존재 여부만 파악하기 때문에 setAttribute(\\\"disabled\\\", \\\"false\\\"); 로 설정하면 disabled 값이 true 가 된다는 것을 과거엔 그냥 지나쳤던 것 같은데, 이번에 props 를 설정하면서 확실하게 알게 되었다. 추가적으로 요소 노드 인터페이스에 존재하는 값들은 setAttribute 를 사용하지 않고 설정하는 것이 권장되고, 성능이 더 좋다는 것도 알게 되었다.\\r\\n\\r\\n> 테스트 코드 돌리면서 왜 실패하는지 파악하기 어려웠다.\\r\\n\\r\\n#### XSS 공격\\r\\n\\r\\nhref, src 와 같이 URL 관련 속성을 사용할 때 XSS 공격을 주의해야 하는 것을 배웠다.\\r\\n실행 가능한 자바스크립트 코드로 해석하고 실행하도록 설계 된 부분에 보안을 유지할 수 있는 장치를 추가해야 한다. 헌재 프로젝트에서는 href, src 값을 할당할 때 URL 생성자를 통해 올바른 url 형태인지 검사하고, 'javascript:' 프로토콜일시 오류를 던지도록 만들었다.\\r\\n\\r\\n> 추가로 알게 된 사실은 `data:image/png;base64` 형태의 값도 URL 생성자에 사용할 수 있다.\\r\\n> css 에서 사용하는 url 값 에도 적용이 가능하다고 한다.\\r\\n\\r\\ninnerHTML 의 경우도 문자열을 파싱하는 과정에서 XSS 공격을 주의해야 한다. 단순히 텍스트를 설정하는 경우 textContent 를 사용하는 것이 좋다.\\r\\n\\r\\n> 텍스트 노드를 생성할 때와, nodeValue 사용해 값을 할당 하는 것도 XSS 방어에 도움이 된다.\\r\\n\\r\\n#### DOM 노드\\r\\n\\r\\n이번에 DOM 노드를 다루면 좀 더 세밀한 제어가 가능한 것을 경험했다.\\r\\n텍스트 노드 라는 것이 존재한다는 것은 알았지만, 보통 innerHTML 이나, textContent 같은 것들을 사용했는데 텍스트를 노드 단위로 조작하는 것을 경험하게 되었다.\\r\\n\\r\\n추가적으로 알게 된 사실은 텍스트 노드를 생성할 때 `document.createTextNode()` 와 같은 방식으로 생성할 수도 있지만, `Text` 라는 생성자를 통해서도 직접 생성이 가능하다는 걸 알게 되었다. 이외에도 Element 노드를 제외한 다른 노드들도 생성자를 통해 생성이 가능했고, Element 노드의 경우 `document.createElement()` 매서드를 직접적으로 대체하는 생성자는 없다는 걸 알게 되었다.\\r\\n\\r\\n> [The HTML DOM API](https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API) 페이지에서 목록에 있는 각 요소들을 들어가보면 생성자가 있는 요소와 없는 요소가 있는데, 아마 모든 요소의 생성자가 구현된 상태가 아니기 때문이 아닐까 추측된다.\\r\\n\\r\\n#### 목록의 업데이트\\r\\n\\r\\n현재 방식에선 목록을 업데이트 할 때 index 에 해당하는 값 끼리 비교를 해서 업데이트를 진행하는데, 최상단에 데이터가 추가된 경우 모든 목록을 새로 생성해야 하는 단점이 있었다. 리액트에서 배열을 사용해 렌더링을 할 때 key 값을 꼭 유니크하게 넣어줘야 하는 이유를 유추해 볼 수 있었다.\\r\\n\\r\\n#### 버블링이 되지 않는 이벤트\\r\\n\\r\\nfocus, blur 와 같은 이벤트 들은 버블링을 지원하지 않는 걸 알게 되었다.\\r\\n버블링을 사용하려면 `focusin` 같은 버블링을 지원하는 이벤트를 사용하거나, 캡쳐를 활성화 해 캡쳐링 단계에서 위임을 할 수 있다.\\r\\n\\r\\n\\r\\n#### 이벤트매니저 stopPropagation 고려하기\\r\\n\\r\\n이벤트를 메모리 효율적으로 관리하기 위해 최상위 객체에 이벤트리스너를 설정할 수 있다. 하지만 stopPropagation 와 같은 매서드를 사용하기 위해선 별도로 구현을 해주어야 한다.\\r\\n\\r\\n1주차에선 셀렉터만을 이용해 이벤트 관리를 했는데, id 값 처럼 페이지에서 유일한 값을 사용하지 않으면 부모-자식 관계를 파악하기 어려웠고, stopPropagation 와 같은 매서드를 구현하는데 한계가 있다고 느꼈다.\\r\\n\\r\\n>1주차 과제에서는 셀렉터를 이용해 이벤트가 발생한 요소와, 이벤트를 등록한 요소를 비교했다.\\r\\n>eventType 에 해당하는 셀렉터와 핸들러 쌍을 배열이나, Set에 저장한 다음 반복문을 돌며 이벤트가 발생한 요소가 셀렉터와 같거나 자식 요소이면 핸들러를 실행하는 방식이다.\\r\\n>이 방식에선 문제가 있었는데, 중첩된 요소에 같은 eventType 에 해당하는 이벤트가 등록되면 중복 호출된다는 점이다.\\r\\n>\\r\\n>```html\\r\\n><!-- 상품카드에 클릭 이벤트 설정 -->\\r\\n><div id=\\\"상품카드\\\">\\r\\n>  <img src=\\\"...\\\" />\\r\\n>  <h3>...</h3>\\r\\n>  <!-- 장바구니담기 버튼에 클릭 이벤트 설정 -->\\r\\n>  <button type=\\\"button\\\" id=\\\"장바구니담기\\\">장바구니 담기</button>\\r\\n></div>\\r\\n>```\\r\\n>\\r\\n>```js\\r\\n>$root.addEventListener(eventType, (e) => {\\r\\n>  for( \\\"저장한 셀렉터와 핸들러 쌍들..\\\" ) {\\r\\n>    if(e.target.closest(셀렉터)) {\\r\\n>      /**\\r\\n>       * 장바구니담기 버튼을 클릭했을 때 \\r\\n>       * 상품카드와, 장바구니담기 핸들러 모두 실행된다.\\r\\n>       */\\r\\n>      핸들러(e)\\r\\n>    }\\r\\n>  }\\r\\n>});\\r\\n>```\\r\\n>자식 요소를 배열의 앞쪽에 위치시키고, 조건을 만족하는 경우 반복문에서 빠져 나온다면 중복 호출은 방지할 수 있다. 단점은 페이지 전체가 렌더링 되지 않고, 일부만 변경되는 경우 배열의 순서를 지키기 어렵다 생각한다. 또한 id를 제외한 값은 중복이 가능하기 때문에 셀렉터 만으로 부모-자식 관계를 알기 어렵다.\\r\\n\\r\\n2주차 과제에선 요소를 키로 사용하는 방법을 사용했다. 요소를 키로 사용하는 방법의 장점은 여러 요소가 있을 때 부모-자식 관계가 명확해 진다는 점이다.\\r\\n\\r\\n우선 1주차와 같은 형태로 코드를 작성한다.\\r\\n\\r\\n```js\\r\\n$root.addEventListener(eventType, (e) => {\\r\\n  for (const [element, handler] of eventsRecord[eventType]) {\\r\\n    if (element.contains(e.target)) {\\r\\n      handler(e);\\r\\n    }\\r\\n  }\\r\\n});\\r\\n```\\r\\n\\r\\n이벤트 처리에 필요한 요소를 정렬하는 기능을 추가한다.\\r\\n\\r\\n```js\\r\\nfunction getDeepestContainingElements(target, eventsMap) {\\r\\n  return Array.from(eventsMap)\\r\\n    // 저장한 element 가 e.target 과 같거나 부모인 경우만 필터링 한다.\\r\\n    .filter(([element]) => element.contains(target))\\r\\n    .sort((a, b) => {\\r\\n      // 자식 요소가 앞으로 오도록 정렬한다.\\r\\n      const aElement = a[0];\\r\\n      const bElement = b[0];\\r\\n\\r\\n      if (aElement.contains(bElement)) {\\r\\n        return 1;\\r\\n      }\\r\\n\\r\\n      if (bElement.contains(aElement)) {\\r\\n        return -1;\\r\\n      }\\r\\n\\r\\n      return 0;\\r\\n    });\\r\\n}\\r\\n```\\r\\n\\r\\n기존 stopPropagation 매서드와 동일한 역할을 할 수 있도록 새로운 값을 덮어썼다.\\r\\n\\r\\n```js\\r\\n$root.addEventListener(eventType, (e) => {\\r\\n  let isStopped = false;\\r\\n  Object.defineProperty(e, \\\"stopPropagation\\\", {\\r\\n    value: () => {\\r\\n      isStopped = true;\\r\\n    },\\r\\n  });\\r\\n\\r\\n  const deepestElements = getDeepestContainingElements(e.target, eventsRecord[eventType]);\\r\\n  for (const [, handler] of deepestElements) {\\r\\n    if (isStopped) {\\r\\n      // 자식 요소에서 stopPropagation 매서드를 호출한 경우 부모 요소의 핸들러 실행을 멈춘다.\\r\\n      break;\\r\\n    }\\r\\n\\r\\n    handler(e);\\r\\n  }\\r\\n});\\r\\n```\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n#### createVNode 평탄화 구현하기\\r\\n\\r\\n평탄화 이후 렌더링 가능한 항목만 필터링 하는 과정을 한 번의 순회를 통해 작업하고 싶었다.\\r\\n검색 결과 `Array.flat` 매서드의 경우 속도가 느리다 라는 말이 있었다. 성능 밴치마크를 봤을 때 현재는 이 논의가 있던 시기보다는 개선이 된 것 같지만, 가상 돔에서 많은 배열을 다뤄야 한다면 성능에서 이점이 있을 거라 생각했다.\\r\\n\\r\\n>네이티브 flat 보다 빠르다고 나와있는 es-toolkit 의 flatten 함수를 참고했다.\\r\\n>[es-toolkit flatten 구현 코드](https://github.com/toss/es-toolkit/blob/main/src/array/flatten.ts)\\r\\n\\r\\n```js\\r\\nfunction flattenRenderableChildren(children) {\\r\\n  const result = [];\\r\\n\\r\\n  const flatten = (value) => {\\r\\n    if (isNotRenderable(value)) {\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    if (Array.isArray(value)) {\\r\\n      for (let i = 0; i < value.length; i++) {\\r\\n        flatten(value[i]);\\r\\n      }\\r\\n    } else {\\r\\n      result.push(value);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  flatten(children);\\r\\n  return result;\\r\\n}\\r\\n```\\r\\n\\r\\n#### createElement 요소 생성하기 (코드 스타일)\\r\\n\\r\\nElement 노드를 생성할 때 `document.createElement()` 방식을 사용해야 하기 때문에, 다른 노드를 생성할 때도 document 매서드를 사용해 일관성을 지켰다. 개별 노드나, 생성자를 지원하는 엘리먼트를 다룰 땐 생성자를 사용해 볼 수 있을 것 같다.\\r\\n\\r\\n#### 자식 요소 업데이트 하기 (개선이 필요한 부분)\\r\\n\\r\\nupdateElement 함수에서 vNode 의 children 값을 반복문으로 돌 때 요소를 삭제하는 경우 i 의 값을 유지하면서 maxChildrenLength 값을 줄이고 있는데, 나중에 다시 봤을 때 이 부분 코드가 이해하기 어려울 것 같다.\\r\\n\\r\\n```js\\r\\nexport function updateElement(parentElement, newNode, oldNode, index = 0) {\\r\\n  ...\\r\\n\\r\\n  // updateElement 함수 내부에서\\r\\n  let i = 0;\\r\\n  let maxChildrenLength = Math.max(newNode.children.length, oldNode.children.length);\\r\\n  while (i < maxChildrenLength) {\\r\\n    const newChild = newNode.children[i];\\r\\n    const oldChild = oldNode.children[i];\\r\\n    if (!newChild && oldChild) {\\r\\n      // 삭제 한 다음 dom이 현재 i 값에 위치하기 때문에 증가시키지 않는다\\r\\n      // 반복하는 횟수만 중요하기 때문에 i 값을 유지하면서 newChild, oldChild 에 할당하는 값은 신경쓰지 않음\\r\\n      updateElement(currentDomNode, null, oldChild, i);\\r\\n      maxChildrenLength -= 1;\\r\\n    } else {\\r\\n      updateElement(currentDomNode, newChild, oldChild, i);\\r\\n      i += 1;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n반복문을 아래와 같이 분리하면 조금 더 의도가 명확해 지는 것 같은데, 어떻게 생각하시나요?\\r\\n\\r\\n```js\\r\\nexport function updateElement(parentElement, newNode, oldNode, index = 0) {\\r\\n  ...\\r\\n  removeChildren(currentDomNode, newNode, oldNode);\\r\\n  updateChildren(currentDomNode, newNode, oldNode);\\r\\n}\\r\\n\\r\\n// 함수로 선언\\r\\n\\r\\nfunction removeChildren(parent, newNode, oldNode) {\\r\\n  const newChildrenLength = newNode.children.length;\\r\\n  const oldChildrenLength = oldNode.children.length;\\r\\n\\r\\n  if (newChildrenLength >= oldChildrenLength) {\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  const count = oldChildrenLength - newChildrenLength;\\r\\n  for (let i = 0; i < count; i++) {\\r\\n    parent.removeChild(parent.childNodes[newChildrenLength]);\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction updateChildren(parent, newNode, oldNode) {\\r\\n  for (let i = 0; i < newNode.children.length; i++) {\\r\\n    const newChild = newNode.children[i];\\r\\n    const oldChild = oldNode.children[i];\\r\\n    updateElement(parent, newChild, oldChild, i);\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n- 리액트를 사용하면 XSS 방어가 가능하다는 것을 막연하게 알고는 있었는데, 직접 돔을 조작하면서 내부적으로 신경써야 하는 점들을 알게 되었다.\\r\\n- 이벤트 위임의 제약에 대해 생각해 볼 수 있었다. 리액트에선 이벤트 처리를 위해 어떤 방법을 사용하는지 추가 학습이 필요할 것 같다.\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n- 테스트 코드가 꼼꼼하게 되어있어서 좋았습니다.\\r\\n- JSX 의 변환에 대해 생각해 볼 수 있어 좋았습니다.\\r\\n- 과제를 진행하면서 리액트의 내부 동작에 대해 더 알아보고 싶다는 호기심이 생겨서 긍정적인 부분이라 생각합니다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\\r\\n성능을 고려하는 기준을 어떻게 잡으면 좋을까요? 과제에서 `flat().filter()` 두 번 순회하는 작업을 한 번 순회하는 작업으로 만들면서 이 부분에서는 이런 이유 떄문에 이렇게 작성해야 한다는 기준을 잡지는 못했습니다. 실무에서 함수 단위의 성능 개선을 위한 기준이 있으신가요?\\r\\n\\r\\n>```js\\r\\n>function flattenRenderableChildren(children) {\\r\\n>  const result = [];\\r\\n>\\r\\n>  const flatten = (value) => {\\r\\n>    if (isNotRenderable(value)) {\\r\\n>      return;\\r\\n>    }\\r\\n>\\r\\n>    if (Array.isArray(value)) {\\r\\n>      for (let i = 0; i < value.length; i++) {\\r\\n>        flatten(value[i]);\\r\\n>      }\\r\\n>    } else {\\r\\n>      result.push(value);\\r\\n>    }\\r\\n>  };\\r\\n>\\r\\n>  flatten(children);\\r\\n>  return result;\\r\\n>}\\r\\n>```\\r\\n\\r\\n---\\r\\n\\r\\n이벤트 위임을 하면서 각 요소에 이벤트리스너를 설정한 것과 동일한 환경을 구현하고 싶었습니다.\\r\\n반복문을 돌면서 이벤트가 발생한 타겟의 부모 핸들러를 호출 하는 것과, `stopPropagation` 기능을 구현하기 위해 이벤트 발생시 이벤트 타겟의 부모 요소들을 필터링 하고, 정렬하는 과정을 거치게 됩니다.\\r\\n\\r\\n지금 생각으로는 이벤트를 추가할 때 정렬해서 저장하는 것과, 이벤트가 발생할 때 정렬해서 사용하는 방법이 있을 것 같은데, 현재 쇼핑몰과 같은 서비스에서 어떤 방법이 더 효율적이라 생각 하시나요?\\r\\n\\r\\n아니면 해당 기능을 구현하기 위해 코치님이 생각하신 더 효율적인 방법이 있는지 궁금합니다\\r\\n\\r\\n>```js\\r\\n>$root.addEventListener(eventType, (e) => {\\r\\n>  let isStopped = false;\\r\\n>  Object.defineProperty(e, \\\"stopPropagation\\\", {\\r\\n>    value: () => {\\r\\n>      isStopped = true;\\r\\n>    },\\r\\n>  });\\r\\n>\\r\\n>  const deepestElements = getDeepestContainingElements(e.target, eventsRecord[eventType]);\\r\\n>  for (const [, handler] of deepestElements) {\\r\\n>    if (isStopped) {\\r\\n>      // 자식 요소에서 stopPropagation 매서드를 호출한 경우 부모 요소의 핸들러 실행을 멈춘다.\\r\\n>      break;\\r\\n>    }\\r\\n>\\r\\n>    handler(e);\\r\\n>  }\\r\\n>});\\r\\n>```\\r\\n\\r\\n---\\r\\n\\r\\nfocus 이벤트와 같이 버블링을 지원하지 않는 이벤트의 경우 개별 요소에 이벤트리스너를 설정하는 것과, focusin 처럼 버블링을 지원하는 이벤트로 변경해 위임을 하는 것 어떤 것을 더 선호하시나요?\",\"created_at\":\"2025-07-13T06:21:13Z\",\"updated_at\":\"2025-07-20T03:39:34Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"92671589ec796c5e1cb29d79746c3f7292a9e758\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/18/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/18/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/18/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/d2555b8f2e0dac826d9e6e9308cc3f32470cf065\",\"head\":{\"label\":\"JiHoon-0330:main\",\"ref\":\"main\",\"sha\":\"d2555b8f2e0dac826d9e6e9308cc3f32470cf065\",\"user\":{\"login\":\"JiHoon-0330\",\"id\":58219394,\"node_id\":\"MDQ6VXNlcjU4MjE5Mzk0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/58219394?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JiHoon-0330\",\"html_url\":\"https://github.com/JiHoon-0330\",\"followers_url\":\"https://api.github.com/users/JiHoon-0330/followers\",\"following_url\":\"https://api.github.com/users/JiHoon-0330/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JiHoon-0330/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JiHoon-0330/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JiHoon-0330/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JiHoon-0330/orgs\",\"repos_url\":\"https://api.github.com/users/JiHoon-0330/repos\",\"events_url\":\"https://api.github.com/users/JiHoon-0330/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JiHoon-0330/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018481451,\"node_id\":\"R_kgDOPLTLKw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"JiHoon-0330/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"JiHoon-0330\",\"id\":58219394,\"node_id\":\"MDQ6VXNlcjU4MjE5Mzk0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/58219394?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JiHoon-0330\",\"html_url\":\"https://github.com/JiHoon-0330\",\"followers_url\":\"https://api.github.com/users/JiHoon-0330/followers\",\"following_url\":\"https://api.github.com/users/JiHoon-0330/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JiHoon-0330/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JiHoon-0330/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JiHoon-0330/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JiHoon-0330/orgs\",\"repos_url\":\"https://api.github.com/users/JiHoon-0330/repos\",\"events_url\":\"https://api.github.com/users/JiHoon-0330/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JiHoon-0330/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/JiHoon-0330/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/JiHoon-0330/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T11:00:12Z\",\"updated_at\":\"2025-07-20T03:39:37Z\",\"pushed_at\":\"2025-07-20T03:39:33Z\",\"git_url\":\"git://github.com/JiHoon-0330/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:JiHoon-0330/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/JiHoon-0330/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/JiHoon-0330/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":185,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":11,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":11,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/18\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/18\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/18\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/18/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/18/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/18/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/d2555b8f2e0dac826d9e6e9308cc3f32470cf065\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/19\",\"id\":2662061019,\"node_id\":\"PR_kwDOPJuWzM6eq9Pb\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/19\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/19.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/19.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/19\",\"number\":19,\"state\":\"open\",\"locked\":false,\"title\":\"[1팀 이은지] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"angielxx\",\"id\":103434451,\"node_id\":\"U_kgDOBipI0w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/103434451?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/angielxx\",\"html_url\":\"https://github.com/angielxx\",\"followers_url\":\"https://api.github.com/users/angielxx/followers\",\"following_url\":\"https://api.github.com/users/angielxx/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/angielxx/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/angielxx/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/angielxx/subscriptions\",\"organizations_url\":\"https://api.github.com/users/angielxx/orgs\",\"repos_url\":\"https://api.github.com/users/angielxx/repos\",\"events_url\":\"https://api.github.com/users/angielxx/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/angielxx/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\nhttps://angielxx.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n#### 1. createVNode — /** @jsx createVNode */의 역할\\r\\n\\r\\n과제의 첫 번째 항목인 createVNode를 구현하면서, 이 함수가 어디서 호출되는지 몰라 한참 헤맸습니다.\\r\\ncreateVNode를 검색해보니 파일 최상단에 다음과 같이 정의된 것을 발견했고, 이 주석의 의미를 먼저 학습했습니다.\\r\\n\\r\\n```ts\\r\\n/** @jsx createVNode */\\r\\nimport { createVNode } from \\\"../lib\\\";\\r\\n```\\r\\n\\r\\n👉 JSX pragma\\r\\n- JSX 문법은 Babel이나 TypeScript에 의해 함수 호출 코드로 변환됩니다.\\r\\n- 기본적으로는 React.createElement를 호출하지만, 위의 주석을 작성하면 이를 createVNode로 변경합니다.\\r\\n\\r\\n```ts\\r\\n// 변환 전\\r\\n<div className=\\\"foo\\\">bar</div>\\r\\n\\r\\n// 변환 후\\r\\ncreateVNode(\\\"div\\\", { className: \\\"foo\\\" }, \\\"bar\\\");\\r\\n```\\r\\n\\r\\nJSX가 createVNode를 호출한다는 점을 이해한 뒤, 반환값이 { type, props, children } 형태가 되도록 구현했습니다. 이 과정을 통해 JSX 변환 과정과 JSX pragma의 존재 이유를 명확히 알게 되었습니다.\\r\\n\\r\\n#### 2. normalizeVNode — VNode 정규화\\r\\n\\r\\nnormalizeVNode는 테스트 코드에만 등장하고 코드 상 어디서 호출되는지 보이지 않아 역할을 파악하기 어려웠습니다. 이름에서 유추하듯 VNode를 일관된 형식으로 표준화하는 역할이라고 판단하고 구현을 시작했습니다.\\r\\n\\r\\n👉 문제와 해결\\r\\n- 중첩된 함수형 컴포넌트에서 정규화가 제대로 되지 않아 테스트가 통과하지 않았습니다.\\r\\n- 작은 단위의 컴포넌트를 만들어 테스트해 보니, 함수 컴포넌트를 자식으로 넘겼을 때 children이 비어 있음을 발견했습니다.\\r\\n- 함수형 컴포넌트가 반환하는 VNode 또한 재귀적으로 정규화해야 한다는 것을 깨닫고 수정했습니다.\\r\\n\\r\\n이 과정에서 자식 노드도 함수일 수 있다는 점과, 재귀 호출의 필요성을 깊이 이해했습니다.\\r\\n\\r\\n#### 3. createElement - DOM 다시 공부하기\\r\\n\\r\\ncreateElement는 실제 DOM 요소를 만드는 함수이기 때문에, MDN 문서를 통해 DOM API에 대해 다시 학습했습니다. 이 과정에서 DOM 개념에 대해 잘못 알고 있었다는 사실을 인지했습니다. \\r\\n\\r\\n📖 DOM이란?\\r\\n> DOM ≠ HTML\\r\\n\\r\\n- DOM은 HTML을 프로그래밍으로 다루기 위한 문서 객체 모델\\r\\n- 문서를 트리 형태의 노드와 객체로 표현하여, JavaScript로 접근해 문서 구조와 내용을 변경\\r\\n\\r\\n📖 DocumentFragment를 사용하는 이유\\r\\n- DocumentFragment는 부모가 없는 임시 문서 객체\\r\\n- DOM에 추가되기 전까지는 리플로우(reflow)를 발생시키지 않고, 가볍게 여러 요소를 조립\\r\\n- 한 번에 DOM에 붙이기 때문에 나은 성능 제공\\r\\n\\r\\n#### 4. eventManager — 이벤트 위임의 이해\\r\\n\\r\\n이벤트를 처리하는 과정에서, 동적 요소에 이벤트가 여러 번 중복 등록되거나 일부가 누락되는 문제가 있었습니다. 과제를 시작하기 전 학습자료를 모두 정독하긴 했지만,,,이벤트 위임의 개념을 명확히 이해하지 못한 상태로 코드를 작성하고 있다는 것을 깨달았습니다. IDE는 잠시 접어두고 이벤트 위임에 대한 학습을 다시 진행했습니다.\\r\\n\\r\\n👉 이벤트 위임이란?\\r\\n> 여러 자식 요소에 각각 리스너를 붙이는 대신, 부모 요소에 하나의 리스너를 붙이고 이벤트 버블링을 이용해 처리하는 방법.\\r\\n\\r\\n👉 이벤트 위임 사용 이유\\r\\n- 메모리 절약: 부모에 하나만 붙이면 되므로 메모리를 적게 사용\\r\\n- 동적 요소 대응: 나중에 추가된 요소도 부모가 감지\\r\\n- 코드 간결: 반복문 없이 부모에만 리스너를 작성\\r\\n\\r\\n```ts\\r\\n// 각각 등록\\r\\ndocument.querySelectorAll('.item').forEach(item => {\\r\\n  item.addEventListener('click', () => {\\r\\n    console.log('clicked', item.textContent);\\r\\n  });\\r\\n});\\r\\n\\r\\n// 이벤트 위임\\r\\nconst list = document.querySelector('.list');\\r\\nlist.addEventListener('click', (event) => {\\r\\n  if (event.target.matches('.item')) {\\r\\n    console.log('clicked', event.target.textContent);\\r\\n  }\\r\\n});\\r\\n```\\r\\n\\r\\n#### 5. renderElement — DOM 재사용\\r\\n\\r\\nrenderElement를 처음 구현했을 때는 container.innerHTML = \\\"\\\"로 기존 DOM을 모두 지우고 새로 만드는 방식이었습니다. 하지만 이렇게 하면 기존 DOM의 참조가 유지되지 않기 때문에, 성능이 떨어지고 이벤트 핸들러도 초기화됩니다.\\r\\n\\r\\n👉 개선\\r\\n- 최초 렌더링 시에는 createElement 사용\\r\\n- 이후 렌더링 시에는 updateElement를 사용하여 필요한 부분만 갱신하도록 수정\\r\\n\\r\\n```ts\\r\\nif (!previousVNode) {\\r\\n    const element = createElement(normalizedVNode);\\r\\n    container.appendChild(element);\\r\\n  } else {\\r\\n    // 이후 렌더링: 모든 자식 요소를 updateElement로 업데이트\\r\\n    updateElement(container, normalizedVNode, previousVNode, 0);\\r\\n  }\\r\\n```\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n> “동작만 하게 만드는 것”이 아니라,\\r\\n“올바른 설계와 유지보수가 가능한 코드”를 작성하는 것이 중요하다는 점을 크게 느꼈습니다.\\r\\n\\r\\n- 초기에 설계와 개념을 충분히 이해하지 못해 잘못된 방향으로 구현했던 점이 아쉬웠습니다.\\r\\n- 함수의 책임을 분리하고, 테스트하기 쉽게 만드는 습관의 필요성을 느꼈습니다.\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n🌟 새롭게 배운 것\\r\\n- JSX pragma\\r\\n- 이벤트 위임 (버블링과 메모리 절약, 동적 요소 처리)\\r\\n\\r\\n🔄 복습한 것\\r\\n- DOM의 정의와 구조\\r\\n- DOM과 JavaScript의 관계\\r\\n\\r\\n📈 성장한 점\\r\\n- 두 번의 과제를 통해 스스로 가지고 있는 나쁜 습관을 인지: 몸으로 부딪히고 문제가 발생하면 그 때 처음으로 돌아가는 습관을 발견했습니다.\\r\\n- 디버깅할 때는 문제를 잘게 쪼개어 작은 단위로 테스트하는 것이 효과적이라는 걸 경험했습니다.\\r\\n- 과거에 공부했던 내용을 다시 되새기고, 제대로 이해하지 못한 부분을 보완할 수 있었습니다.\\r\\n\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\\r\\n코멘트로 혼자 의문이 가는 부분에 대해 남겨놓았는데, 코멘트를 검토해주시면 감사하겠습니다!\",\"created_at\":\"2025-07-13T07:48:09Z\",\"updated_at\":\"2025-07-20T11:26:41Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"90ecb84b8e0f6d54271e4fc6f627eb88356df431\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/19/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/19/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/19/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e9685bb2812b8ec046cd66736820c69ed0602332\",\"head\":{\"label\":\"angielxx:main\",\"ref\":\"main\",\"sha\":\"e9685bb2812b8ec046cd66736820c69ed0602332\",\"user\":{\"login\":\"angielxx\",\"id\":103434451,\"node_id\":\"U_kgDOBipI0w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/103434451?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/angielxx\",\"html_url\":\"https://github.com/angielxx\",\"followers_url\":\"https://api.github.com/users/angielxx/followers\",\"following_url\":\"https://api.github.com/users/angielxx/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/angielxx/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/angielxx/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/angielxx/subscriptions\",\"organizations_url\":\"https://api.github.com/users/angielxx/orgs\",\"repos_url\":\"https://api.github.com/users/angielxx/repos\",\"events_url\":\"https://api.github.com/users/angielxx/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/angielxx/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018856844,\"node_id\":\"R_kgDOPLqFjA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"angielxx/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"angielxx\",\"id\":103434451,\"node_id\":\"U_kgDOBipI0w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/103434451?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/angielxx\",\"html_url\":\"https://github.com/angielxx\",\"followers_url\":\"https://api.github.com/users/angielxx/followers\",\"following_url\":\"https://api.github.com/users/angielxx/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/angielxx/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/angielxx/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/angielxx/subscriptions\",\"organizations_url\":\"https://api.github.com/users/angielxx/orgs\",\"repos_url\":\"https://api.github.com/users/angielxx/repos\",\"events_url\":\"https://api.github.com/users/angielxx/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/angielxx/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/angielxx/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/angielxx/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T07:39:49Z\",\"updated_at\":\"2025-07-17T16:02:55Z\",\"pushed_at\":\"2025-07-17T15:59:37Z\",\"git_url\":\"git://github.com/angielxx/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:angielxx/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/angielxx/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/angielxx/front_6th_chapter1-2\",\"homepage\":\"https://angielxx.github.io/front_6th_chapter1-2/\",\"size\":205,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":7,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":7,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/19\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/19\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/19\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/19/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/19/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/19/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e9685bb2812b8ec046cd66736820c69ed0602332\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/20\",\"id\":2662066136,\"node_id\":\"PR_kwDOPJuWzM6eq-fY\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/20\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/20.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/20.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/20\",\"number\":20,\"state\":\"open\",\"locked\":false,\"title\":\"[8팀 박창준] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"devchangjun\",\"id\":40492343,\"node_id\":\"MDQ6VXNlcjQwNDkyMzQz\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/40492343?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/devchangjun\",\"html_url\":\"https://github.com/devchangjun\",\"followers_url\":\"https://api.github.com/users/devchangjun/followers\",\"following_url\":\"https://api.github.com/users/devchangjun/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/devchangjun/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/devchangjun/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/devchangjun/subscriptions\",\"organizations_url\":\"https://api.github.com/users/devchangjun/orgs\",\"repos_url\":\"https://api.github.com/users/devchangjun/repos\",\"events_url\":\"https://api.github.com/users/devchangjun/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/devchangjun/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://devchangjun.github.io/front_6th_chapter1-2/\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\nReact의 핵심 개념인 Virtual DOM이 어떻게 동작하는지 간단히는 알고 있었지만 막상 직접 구현해보려 하니 막막했기도 했고 한편으로는 너무 재밌을것 같았습니다. 재밌을것 같았던 이유는 1주차 과제에서 했던 고민이였어요.😂  \\r\\n\\r\\n> “innerHTML로 DOM을 전부 다시 그리는 방식이 정말 SPA라고 할 수 있을까?”\\r\\n\\r\\n라는 의문이 생겼었는데 제가 너무 성급하게 고민을 했엇네요 ㅎㅎ..  2주차에 Virtual DOM을 직접 구현하는 과제가 나오면서 코치님들이 과제를 어떻게 단계적으로 설계했고 수강생들에게 어떤 학습 포인트를 던지려 했는지 이해할 수 있었습니다.\\r\\n\\r\\n### 고민했던 부분\\r\\n\\r\\n\\r\\n과제를 진행하면서 \\r\\n\\r\\n- **어떻게 바뀐 부분만 찾아서 렌더링할까?**\\r\\n- **어떤 기준으로 이전 상태와 현재 상태를 비교해 업데이트해야 할까?**\\r\\n\\r\\n이 질문들에 답하기 위해 가상돔의 동작 원리와 diffing 알고리즘의 기본 개념부터 고민할 필요가 있었습니다.\\r\\n\\r\\n특히 아래 부분은 초반에 잘 이해되지 않았습니다.\\r\\n\\r\\n- flat을 이용해 children을 평탄화하는 이유 → 이걸 평탄화해버리면 계층 구조가 깨지는 거 아닐까?\\r\\n- 이벤트 핸들러 관리에서 WeakMap이 왜 필요한지 → 그냥 Map이나 Set으로 처리해도 되는 거 아니야?\\r\\n- normalizeVNode가 왜 존재하는지, 무엇을 해결하는지 → 이미 VNode를 만들었는데 왜 또 정규화가 필요한 거지? 그냥 렌더링하면 되는 거 아니야?\\r\\n\\r\\n처음에는 “평탄화를 하면 중첩된 계층 구조가 깨져버리는 게 아닐까?” 같은 오해도 있었고, WeakMap과 Map의 차이가 단순한 자료구조 차이인지 아니면 더 본질적인 이유가 있는지도 이해하지 못했습니다.\\r\\n\\r\\n### 이해했던 과정\\r\\n\\r\\n\\r\\n### 1. 평탄화가 해결해하려는 문제\\r\\n\\r\\n**평탄화를 하면 계층구조가 다 깨져버리는거 아니야?** 라는 질문은 여러 케이스를 디버깅 해보면서 제가 잘못 이해했다는 것을 알았습나다.\\r\\n\\r\\n제가 이해한 평탄화를 하는 이유는 다음과 같습니다.\\r\\n\\r\\n- children 배열을 1차원으로 만들어 배열, 문자열, VNode 등 혼합합적인 상태를 정리하고\\r\\n- 렌더링할 때 각 항목을 재귀로 순회하며 element를 생성할 수 있게 도와주는 과정임을 이해했습니다.\\r\\n\\r\\n예를들어 아래와 같은 구조가 있으면\\r\\n\\r\\n```jsx\\r\\ncreateVNode(\\\"div\\\", null,\\r\\n  \\\"Hello\\\",\\r\\n  [\\r\\n    \\\"World\\\",\\r\\n    [\\\"!\\\", createVNode(\\\"span\\\", null, \\\"항해\\\")],\\r\\n    false,\\r\\n    null\\r\\n  ],\\r\\n  createVNode(\\\"section\\\", null,\\r\\n    createVNode(\\\"h1\\\", null, \\\"플러스\\\"),\\r\\n    [\\\"6기\\\", createVNode(\\\"p\\\", null, \\\"화이팅\\\")]\\r\\n  )\\r\\n)\\r\\n```\\r\\n\\r\\n평탄화 전\\r\\n\\r\\n```jsx\\r\\n[\\r\\n  \\\"Hello\\\",\\r\\n  [\\r\\n    \\\"World\\\",\\r\\n    [\\r\\n      \\\"!\\\",\\r\\n      { type: \\\"span\\\", props: null, children: [\\\"항해\\\"] }\\r\\n    ],\\r\\n    false,\\r\\n    null\\r\\n  ],\\r\\n  {\\r\\n    type: \\\"section\\\",\\r\\n    props: null,\\r\\n    children: [\\r\\n      { type: \\\"h1\\\", props: null, children: [\\\"플러스\\\"] },\\r\\n      [\\r\\n        \\\"6기\\\",\\r\\n        { type: \\\"p\\\", props: null, children: [\\\"화이팅\\\"] }\\r\\n      ]\\r\\n    ]\\r\\n  }\\r\\n]\\r\\n\\r\\n```\\r\\n\\r\\n평탄화 후\\r\\n\\r\\n```jsx\\r\\n[\\r\\n  \\\"Hello\\\",\\r\\n  \\\"World\\\",\\r\\n  \\\"!\\\",\\r\\n  { type: \\\"span\\\", props: null, children: [\\\"항해\\\"] },\\r\\n  {\\r\\n    type: \\\"section\\\",\\r\\n    props: null,\\r\\n    children: [\\r\\n      { type: \\\"h1\\\", props: null, children: [\\\"플러스\\\"] },\\r\\n      \\\"6기\\\",\\r\\n      { type: \\\"p\\\", props: null, children: [\\\"화이팅\\\"] }\\r\\n    ]\\r\\n  }\\r\\n]\\r\\n\\r\\n```\\r\\n\\r\\n즉 이걸 평탄화를 하지 않으면\\r\\n\\r\\n- children 안에서 중첩 배열이 섞여있게 되고 렌더링 로직에서 매번 배열,문자열,VNode등 이걸 구분해서 분기로 처리를 해야 하는데 상당히 로직히 복잡해질것 같다고 생각했습니다.\\r\\n\\r\\n**createVnode 함수는 다음과 같이 구현했습니다.**\\r\\n\\r\\n**1. [createVnode](https://github.com/devchangjun/front_6th_chapter1-2/blob/main/src/lib/createVNode.js)**\\r\\n\\r\\n```js\\r\\nexport function createVNode(type, props, ...children) {\\r\\n  const flatChildren = children\\r\\n    .flat(Infinity)\\r\\n    .filter((child) => child !== null && child !== undefined && child !== false);\\r\\n  return {\\r\\n    type,\\r\\n    props,\\r\\n    children: flatChildren,\\r\\n  };\\r\\n}\\r\\n\\r\\n```\\r\\n\\r\\n- Infinty를 활용하여 모든 depth 레벨의 배열을 평탄화하였습니다.\\r\\n\\r\\n### 2. WeakMap의 필요성\\r\\n\\r\\nWeakMap은 DOM 엘리먼트가 제거될 때 GC에 의해 자동으로 참조가 해제되어 메모리 누수를 막기 위함이라는 점을 이해하게 되었습니다. 특히 디버깅 과정에서 DOM이 사라져도 WeakMap에서 별도 cleanup 없이 참조가 사라진다는 점 (키에 대한 강력한 참조를 생성하지 않기 때문)에 대해서 공부하였습니다.\\r\\n\\r\\n또한 준일 코치님 멘토링 시간에 WeakMap은 Map, Set과 달리  `.keys()`, `.values()` 와 같은 함수를 제공해주지 않았고 이터러블 하지 않다라는것을 알게 되었습니다. \\r\\n\\r\\n왜 WeakMap은 이터러블하지 않을까?에 대한 궁금증이 생겼고 아래와 같은 답을 얻게 되었습니다.\\r\\n\\r\\n- WeakMap은 GC대상인 키가 언제 회수될지 **예측 불가능합니다.** 만약 WeakMap을 순회하는 도중 가비지 컬렉터가 키를 회수해버리면 예상치 못한 오류나 동작이 발생할 수 있습니다.\\r\\n- GC도중 내부 구조가 변하게 된다면 순회하고 있는 이터레이터의 내부상태가 꼬일 수 있게 됩니다.\\r\\n- GC 도중에는 순회를 멈추면 되는거 아닌가? , 이터레이터가 GC의 상태를 참조할 순 없나? 와 같은 단순한 생각도 하였지만 사실 이는 자바스크립트 엔진에 있어서 상당한 성능 비용을 발생한다고 합니다. (목적에 비해 과도한 비용 발생 → 즉 오버엔지니어링)\\r\\n\\r\\n따라서 위와 같은 이유로 WeakMap은 이터러블하지 않게(non-iterable) 설계되었다고 합니다.\\r\\n\\r\\n**Weakmap은 아래와 같은 상황에 활용하였습니다.**\\r\\n\\r\\n**1. Virtual DOM 이전 상태 저장 [renderElement](https://github.com/devchangjun/front_6th_chapter1-2/blob/main/src/lib/renderElement.js)**\\r\\n\\r\\n```jsx\\r\\n// 컨테이너별 이전 Virtual DOM을 저장하는 WeakMap\\r\\nconst previousVNodes = new WeakMap(); \\r\\n\\r\\nexport function renderElement(vNode, container) {\\r\\n  // 이전 Virtual DOM 가져오기\\r\\n  const previousVNode = previousVNodes.get(container);\\r\\n  \\r\\n  // 현재 Virtual DOM 저장\\r\\n  previousVNodes.set(container, normalizedVNode);\\r\\n}\\r\\n```\\r\\n\\r\\n- **DOM 컨테이너 엘리먼트**를 키로 사용하여 이전\xA0Virtual DOM\xA0상태를 저장하는 용도로 사용했습니다.\\r\\n- 상태가 바뀌면서 컨테이너가 DOM에서 제거되면 WeakMap에서도\xA0자동으로 참조가 해제되는 역할을 WeakMap을 통해 구현했습니다. \\r\\n- diffing\xA0알고리즘에서 이전\xA0상태와\xA0현재 상태를\xA0비교할 때 사용하였습니다.\\r\\n\\r\\n**2. 이벤트 핸들러 관리\xA0[eventManager](https://github.com/devchangjun/front_6th_chapter1-2/blob/main/src/lib/eventManager.js)**\\r\\n\\r\\n```jsx\\r\\n// 엘리먼트별 이벤트 핸들러들을 저장할 WeakMap\\r\\nconst eventHandlers = new WeakMap(); \\r\\n\\r\\nexport function addEvent(element, eventType, handler) {\\r\\n  if (!eventHandlers.has(element)) {\\r\\n    eventHandlers.set(element, {});\\r\\n  }\\r\\n  // ... 핸들러 등록 로직\\r\\n}\\r\\n```\\r\\n\\r\\n- **엘리먼트 자체**를 키로 사용하여 각\xA0엘리먼트에\xA0등록된 이벤트\xA0핸들러들을\xA0관리하였습니다.\\r\\n- 엘리먼트가\xA0DOM에서 제거되면 WeakMap에서도 자동으로 참조가 해제되어 메모리 누수를 방지하게 만들었습니다.\\r\\n- 이벤트를 위임하는 과정에서 특정 엘리먼트의\xA0핸들러를 찾을\xA0때 사용하였습니다.\\r\\n\\r\\n\\r\\n### 3.JSX 트랜스파일링과 커스텀 JSX Factory\\r\\n\\r\\n이번 과제에 흥미로운 부분 중 하나는 JSX가 실제로 트랜스파일 된다는 점이었습니다. \\r\\n\\r\\n```jsx\\r\\n<MyComponent prop=\\\"value\\\">Hello</MyComponent>\\r\\n```\\r\\n보통 이렇게 컴포넌트를 작성하는데 Babel과 같은 트랜스파일러가 이걸 변환하면\\r\\n\\r\\n```jsx\\r\\nReact.createElement(MyComponent, { prop: \\\"value\\\" }, \\\"Hello\\\")\\r\\n```\\r\\n위 코드 처럼 JavaScript 함수 호출 코드로 바뀝니다. 이번 과제는 React를 사용하는게 아니라서 `createVNode` 함수를 JSX의 변환 대상(factory)로 지정이 되어있었습니다. \\r\\n \\r\\n```\\r\\n/** @jsx createVNode */\\r\\n```\\r\\n\\r\\n이런식으로 말이죠. 이 주석은 프라그마 주석이라고 부르는데 Babel, esbuild 같은 도구에 “JSX를 만나면 React.createElement 대신 createVNode로 변환해줘” 라고 알려주는 역할을 합니다.\\r\\n\\r\\n```js\\r\\nesbuild: {\\r\\n  jsx: \\\"transform\\\",\\r\\n  jsxFactory: \\\"createVNode\\\",\\r\\n},\\r\\n```\\r\\nvite 설정에서도 위처럼 jsxFactory를 지정해서 모든 JSX 문법을 createVNode로 변환하도록 설정이 되어있었는데 이 덕분에\\r\\n\\r\\n```jsx\\r\\n<Toast isVisible={true} message=\\\"안녕하세요\\\" />\\r\\n```\\r\\n는 최종적으로\\r\\n\\r\\n```js\\r\\ncreateVNode(Toast, { isVisible: true, message: \\\"안녕하세요\\\" })\\r\\n```\\r\\n\\r\\n로 변환되고 normalized로 함수형 컴포넌트를 처리할 수 있게 됩니다. 추가적으로 영서님께서 잘 정리해주신 [createVnode](https://github.com/YeongseoYoon-hanghae/front_6th_chapter1-2/issues/1) 문서를 보고 React 17부터 적용된 **automatic runtime** 개념에 대해서 이해할 수 있었습니다.\\r\\n\\r\\n예전에는 그냥 \\r\\n\\r\\n> “React 버전 업데이트돼서 이제 import React 안 해도 된대!” \\r\\n\\r\\n라고 단순히만 짚고만 넘어갔다면 지금은\\r\\n\\r\\n> “아, React 17+에서는 Babel이 JSX를 React.createElement로 변환하는 게 아니라, react/jsx-runtime에서 jsx, jsxs 같은 헬퍼 함수를 import해서 동작하는구나. 그래서 React를 import 하지 않아도 되구나...” \\r\\n\\r\\n라는 좀 더 구체적인 원리를 이해하려고하는 개발자로 조금이나마 성장할 수 있었습니다.\\r\\n\\r\\n### 4. normalizedVNode\\r\\n\\r\\n처음에는 normalizeVNode가 왜 필요한지 직관적으로 이해되지 않았습니다.\\r\\n\\r\\n> “이미 createVNode에서 VNode를 만들었는데 왜 또 정규화(normalize)를 해야 하지?” “그냥 렌더링 하면 되지 않나?”\\r\\n\\r\\n라는 의문이 있었는데 아래와 같은 역할을 한다고 이해했습니다.\\r\\n\\r\\n1. 함수형 컴포넌트 실행 처리\\r\\nJSX에서 <MyComponent /> 같은 것은 내부적으로 createVNode(MyComponent, props, children)로 생성되는데, 이때 MyComponent는 실제 DOM 태그가 아니라 함수입니다. 따라서 이걸 그대로 DOM으로 만들 수 없고, 먼저 MyComponent(props)를 실행해 VNode 트리로 변환해야 합니다. 이 과정을 `normalizeVNode`에서 처리합니다.\\r\\n\\r\\n2. children 정리 (불필요한 값 제거)\\r\\nJSX에서는 조건부 렌더링에서 false, null, undefined 같은 값이 children 배열에 섞일 수 있습니다.\\r\\n\\r\\n예를 들어\\r\\n\\r\\n```jsx\\r\\n<div>{isTrue && <span>Hello</span>}</div>\\r\\n```\\r\\n여기서 isTrue가 false면 children에 false 값이 남는데, 이걸 그대로 렌더링하면 DOM에 이상한 동작이 발생할 수 있습니다.\\r\\nnormalizeVNode는 이런 값들을 걸러내고 깨끗한 children 배열을 만드는 역할을 담당합니다.\\r\\n\\r\\n| 정규화 전 | 정규화 후 |\\r\\n|-----------|-----------|\\r\\n| <img width=\\\"1048\\\" height=\\\"562\\\" alt=\\\"image\\\" src=\\\"https://github.com/user-attachments/assets/ec27f63b-7a89-491e-892c-5257841ff204\\\" /> | <img width=\\\"1058\\\" height=\\\"588\\\" alt=\\\"image\\\" src=\\\"https://github.com/user-attachments/assets/0c15f9b7-e6d8-4955-a427-22f3db9a102c\\\" /> |\\r\\n| <sub><i>빈문자열 존재 (`false`, `null` 값 포함)</i></sub> | <sub><i>빈문자열 제거, children 정리 완료</i></sub> |\\r\\n\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\nWeakMap을 사용하여 이전 container를 키로 사용하게 구현했습니다. 이 구조로 인해 수동으로 `previousVnode.delete(container)`와 같은 코드를 구현하지 않아도 자동으로 이전 DOM에 대한 참조를 CG가 제거할 수 있도록 구현했습니다.\\r\\n\\r\\n```js\\r\\nimport { setupEventListeners } from \\\"./eventManager\\\";\\r\\nimport { createElement } from \\\"./createElement\\\";\\r\\nimport { updateElement } from \\\"./updateElement\\\";\\r\\nimport { normalizeVNode } from \\\"./normalizeVNode\\\";\\r\\n\\r\\n/**\\r\\n * 컨테이너별 이전 Virtual DOM을 저장하는 WeakMap\\r\\n * 메모리 누수 방지를 위해 WeakMap 사용\\r\\n * @type {WeakMap<HTMLElement, any>}\\r\\n */\\r\\nconst previousVNodes = new WeakMap();\\r\\n\\r\\n/**\\r\\n * Virtual DOM을 실제 DOM으로 렌더링하는 함수\\r\\n * 이전 Virtual DOM과 비교하여 효율적으로 DOM을 업데이트\\r\\n * @param {any} vNode - 렌더링할 Virtual DOM 노드\\r\\n * @param {HTMLElement} container - 렌더링할 컨테이너 엘리먼트\\r\\n */\\r\\nexport function renderElement(vNode, container) {\\r\\n  // 함수형 컴포넌트 정규화\\r\\n  const normalizedVNode = normalizeVNode(vNode);\\r\\n\\r\\n  // 이전 Virtual DOM 가져오기\\r\\n  const previousVNode = previousVNodes.get(container);\\r\\n\\r\\n  // 이미 컨테이너 안에 DOM이 있다면 업데이트\\r\\n  if (container.firstChild && previousVNode) {\\r\\n    updateElement(container, normalizedVNode, previousVNode, 0);\\r\\n  }\\r\\n  // 없으면 DOM 생성하고 container에 붙임\\r\\n  else {\\r\\n    const $el = createElement(normalizedVNode);\\r\\n    container.appendChild($el);\\r\\n  }\\r\\n\\r\\n  // 현재 Virtual DOM 저장\\r\\n  previousVNodes.set(container, normalizedVNode);\\r\\n\\r\\n  // container에 이벤트 리스너 등록\\r\\n  setupEventListeners(container);\\r\\n}\\r\\n```\\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n**1. React가 Virtual DOM을 아키텍쳐를 도입한 이유**\\r\\n\\r\\n이번 과제를 통해 React 팀이 왜 Virtual DOM이라는 아키텍처를 선택했는지에 대해 더 깊게 이해할 수 있었습니다. 브라우저의 DOM은 기본적으로 매우 느린 구조입니다. 직접 DOM 조작을 하게되면\\r\\n\\r\\n- 불필요한 repaint, reflow가 발생하고,\\r\\n- 특정 상태 변경이 어디까지 영향을 주는지 계산하기 어렵고,\\r\\n- 다수의 DOM 연산이 꼬여버릴 경우 성능 저하와 버그가 쉽게 생깁니다.\\r\\n\\r\\nReact 팀은 이 문제를 해결하기 위해 Virtual DOM 이라는 `브라우저 DOM의 메모리 상 추상화 계층`을 만들었다고 생각합니다.\\r\\n\\r\\n**2. 내가 구현한 Virtual DOM 방식**\\r\\n\\r\\nVirture DOM의 핵심 아이디어를 간접적으로 이번과제에서 체험해볼 수 있었는데요. 저는 아래와 같은 구현을 하였습니다.\\r\\n\\r\\n- Virtual DOM 생성: createVNode()로 JSX를 가벼운 객체로 변환\\r\\n- 정규화: normalizeVNode()로 함수형 컴포넌트 실행 및 일관된 형태로 변환\\r\\n- 렌더링: renderElement()에서 이전 Virtual DOM과 비교\\r\\n- Diffing: updateElement()에서 실제 변경사항만 DOM에 반영\\r\\n\\r\\n이 구현을 토대로 Virture DOM의 내부 구현 원리를 간접적으로 체험할 수 있는 과제였습니다.\\r\\n\\r\\n이 방식 덕분에 컴포넌트 단위로 선언적으로 UI를 작성할 수 있고, 복잡한 UI 변경을 일일이 계산하지 않아도 되고, React가 알아서 `최적화된 최소 DOM 패치`를 만들어낼 수 있다고 이해했습니다.\\r\\n\\r\\n**3. Synthetic Event(합성 이벤트)에 대한 이해**\\r\\nReact는 이벤트 처리를 위해 Synthetic Event(합성 이벤트)라는 추상화 객체를 사용합니다. 이 개념은 준일 코치님의 발제에서 처음 접했는데요 React가 각 DOM 요소에 이벤트 리스너를 개별로 등록하지 않고, root에 단 하나의 이벤트 리스너만 등록해 모든 이벤트를 중앙에서 관리한다는 점이 매우 인상적이었습니다. 특히 이 설계 방식을 이해하면서, 1주차 과제에서 가졌던 \\r\\n\\r\\n> \\\"SPA에서는 전역 이벤트 관리를 어떻게 할까요?\\\"\\r\\n\\r\\n라는 궁금증에 대한 해답을 찾을 수 있었습니다. Synthetic Event 시스템 전체를 직접 구현한 것은 아니지만 root 이벤트 위임 방식과 메모리 관리 로직을 직접 다뤄보면서 React가 왜 이런 설계를 택했는지를 코드 수준에서 역시 간접적으로 체험할 수 있었습니다.\\r\\n\\r\\n<p align=\\\"center\\\">\\r\\n  <img width=\\\"937\\\" height=\\\"235\\\" alt=\\\"image\\\" src=\\\"https://github.com/user-attachments/assets/e5bbe663-f561-495e-b81e-3ec47d1dace0\\\" />\\r\\n</p>\\r\\n\\r\\n<p align=\\\"center\\\">\\r\\n  <em>1주차 과제 리뷰받고 싶었던 내용.</em>\\r\\n</p>\\r\\n\\r\\n**4. Synthetic Event가 해결하려고자 했던 문제**\\r\\n\\r\\n이벤트 리스너는 root(container)에 한 번만 등록되고 -> 실제로 발생한 이벤트는 root로 버블링되어 올라온 뒤 -> React 내부에서 Virtual DOM 트리를 순회하며 “어떤 컴포넌트의 핸들러가 호출되어야 하는지”를 계산해 실행됩니다.\\r\\n\\r\\n이 방식은 다음과 같은 이유로 강력한 장점을 가집니다.\\r\\n\\r\\n**1 .메모리 사용량**\\r\\n단순한 예를 들어 Vanilla JS에서는 버튼 100개에 이벤트 리스너도 100개가 필요하지만 React는 root에 단 하나의 리스너만 있으면 되기 때문에 리스너 수와 메모리 사용량을 획기적으로 줄일 수 있습니다.\\r\\n\\r\\n**2. cross-browser 이벤트 표준화**\\r\\nReact는 native 이벤트를 Synthetic Event로 감싸 브라우저마다 미묘하게 다른 이벤트 동작(예: event.target, event.srcElement, stopPropagation 등)을 통일된 API로 표준화합니다. 덕분에 개발자는 브라우저 호환성 문제를 신경 쓰지 않아도 되는 장점이 있다고 생각합니다.\\r\\n\\r\\n**3. 렌더링 최적화와의 결합**\\r\\nVanilla JS에서는 DOM 요소를 replaceChild나 innerHTML로 교체하면 기존에 걸려 있던 이벤트 리스너가 다 사라지지만 React는 Virtual DOM에서 node를 교체해도 root에서 이벤트를 받고 Virtual DOM 기준으로 매핑하기 때문에 이벤트 연결이 깨지지 않습니다. 이 덕분에 렌더링 최적화와 이벤트 관리가 깔끔하게 결합될 수 있습니다. \\r\\n\\r\\n이번 과제를 하면서 Vanilla JS로도 비슷한 root 이벤트 위임 방식을 직접 구현해보고 왜 React가 이런 아키텍쳐로 설계되었는지를 코드 레벨에서 이해할 수 있었던 점이 매우 큰 수확이라 생각합니다.\\r\\n\\r\\n추가적으로 제가 이해한 리렌더링 동작 흐름을 다이어그램화 해보았습니다.\\r\\n\\r\\n### 리렌더 흐름\\r\\n\\r\\n```mermaid\\r\\ngraph TD\\r\\n    A[상태 변경] --> B[컴포넌트 재실행]\\r\\n    B --> C[새로운 vNode를 생성]\\r\\n    C --> D[renderElement 호출]\\r\\n    D --> E[이전 vNode 가져오기]\\r\\n    E --> F[updateElement 호출]\\r\\n    F --> G[노드 타입 비교]\\r\\n    G --> H{타입이 같은가?}\\r\\n    H -->|Yes| I[속성 업데이트]\\r\\n    H -->|No| J[노드 교체]\\r\\n    I --> K[자식 노드 재귀 업데이트]\\r\\n    J --> L[새 DOM 생성 및 교체]\\r\\n    K --> M[이벤트 리스너 재설정]\\r\\n    L --> M\\r\\n\\r\\n```\\r\\n### 추가 학습한 개념\\r\\n\\r\\n**그럼 Context API는 왜 Virtual DOM의 diffing처럼 부분 업데이트 최적화를 하지 않을까?**\\r\\n\\r\\nContextAPI는 Provider에서 value가 변경되면 그 Context를 구독하는 모든 컴포넌트가 다시 렌더링됩니다. 여기서 React의 Virtual DOM diffing이 속성 단위로 바뀐 부분만 찾아내는 것처럼, Context도 “value 객체의 특정 필드만 바뀐 경우”에는 부분 업데이트로 최적화할 수 있지 않을까? 하는 궁금증이 생겼습니다.\\r\\n\\r\\n이걸 찾아보고 정리한 내용은 아래와 같습니다.\\r\\n\\r\\n**1. Context API가 selector 기반 최적화를 지원하지 않는 이유**\\r\\n- ContextAPI의 사용 목적 자체가 전역적으로 자주 변하지 않는 값 (ex. 테마, 다국어 로케일, 로그인 정보)을 손쉽게 접근하기 위함입니다.\\r\\n- 따라서 복잡한 diffing, selector기반 부분적인 리렌더링 지원을 하지 않는다고 합니다. (ContextAPI의 범위 밖).\\r\\n- 최적화가 필요할 시 Context를 분리하거나, useMemo, useCallback, React.memo와 같은 메모이제이션을 도입, 혹은 Redux, Zustand 같은 외부 상태 관리 라이브러리 활용을 고려해야 합니다. \\r\\n- 즉 -> 자주 변하지 않는 값을 위해 설계했으니 너네가 최적화를 알아서해라. 그게 싫으면 다른 라이브러리를 써라..🥲\\r\\n\\r\\n**2. React의 ContextAPI 설계 철학**\\r\\n- 복잡한 상태 관리 최적화까지 책임지지 않고 단순한 전역 데이터 전달용으로만 쓰게 만들자.\\r\\n- 이는 내부적으로 **Object.is(동일성 비교)**로만 provider value 변화 여부를 판단하기 때문에 shallow compare만 하고 값이 다르면 모든 구독 컴포넌트를 리렌더링하도록 설계함.\\r\\n\\r\\n사실 이부분은 React팀이 ContextAPI를 설계했을 당시의 의도한 방향이라고 결론을 내렸습니다.\\r\\n\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n- 끊임없이 궁금증을 가지고 새로운걸 공부할 수 있는 시간이였습니다!👍\\r\\n- WeakMap을 활용해서 이전 container를 저장하는 아이디어를 냈는데 꽤 괜찮은 거 같습니다.\\r\\n- 현재 index 기반 비교를 하고 있는데 실제 React처럼 key 기반의 비교를 하려면 어떻게 구현해야할지 고민이 들었습니다.\\r\\n- 준형님이 올려주신 비동기 컴포넌트에 대한 추가적인 고민.. 저도 이런걸 고민할 수 있는 개발자로 성장하고싶단 생각을 했습니다.\\r\\n\\r\\n<img width=\\\"756\\\" height=\\\"261\\\" alt=\\\"image\\\" src=\\\"https://github.com/user-attachments/assets/80ad7095-ce51-4171-8468-3e6508cee3b5\\\" />\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n### Q1. 이번 과제를 수행하면서 좀더 React에 대한 Deep Dive를 해보고 싶어졌습니다. 추가적으로 학습하면 좋은 내용이 있으면 추천해주실 수 있을까요?\\r\\n\\r\\n### Q2. 현재 구현된 diffing은 index기반 비교 알고리즘입니다. 이를 key 기반으로 확장하려면 어떤식으로 리팩토링을 진행하면 좋을까요?\\r\\n\\r\\n### Q3. updateAttributes 함수에서 놓치고 잇는 edge case가 있을까요?\\r\\n\\r\\n현재 [updateAttributes](https://github.com/devchangjun/front_6th_chapter1-2/blob/main/src/lib/updateElement.js#L11) 함수에서는\\r\\n- on으로 시작하는 이벤트 → 이벤트 핸들러 등록\\r\\n- className → class 속성으로 변환\\r\\n- boolean 속성 → property로 직접 할당\\r\\n- `그 외 나머지 → setAttribute로 처리 ` \\r\\n\\r\\n이 기준으로 분기하고 있는데 이 처리방식에서 누락되거나 예외 처리할 edge case가 있을지 리뷰를 받고싶습니다.\",\"created_at\":\"2025-07-13T07:59:01Z\",\"updated_at\":\"2025-07-23T03:04:28Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"3d20bcfdd67d389d16590d1e861c0273134852ef\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/20/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/20/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/20/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e33f748a3c878f78195b24310020e501f062a53a\",\"head\":{\"label\":\"devchangjun:main\",\"ref\":\"main\",\"sha\":\"e33f748a3c878f78195b24310020e501f062a53a\",\"user\":{\"login\":\"devchangjun\",\"id\":40492343,\"node_id\":\"MDQ6VXNlcjQwNDkyMzQz\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/40492343?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/devchangjun\",\"html_url\":\"https://github.com/devchangjun\",\"followers_url\":\"https://api.github.com/users/devchangjun/followers\",\"following_url\":\"https://api.github.com/users/devchangjun/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/devchangjun/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/devchangjun/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/devchangjun/subscriptions\",\"organizations_url\":\"https://api.github.com/users/devchangjun/orgs\",\"repos_url\":\"https://api.github.com/users/devchangjun/repos\",\"events_url\":\"https://api.github.com/users/devchangjun/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/devchangjun/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018589104,\"node_id\":\"R_kgDOPLZvsA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"devchangjun/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"devchangjun\",\"id\":40492343,\"node_id\":\"MDQ6VXNlcjQwNDkyMzQz\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/40492343?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/devchangjun\",\"html_url\":\"https://github.com/devchangjun\",\"followers_url\":\"https://api.github.com/users/devchangjun/followers\",\"following_url\":\"https://api.github.com/users/devchangjun/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/devchangjun/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/devchangjun/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/devchangjun/subscriptions\",\"organizations_url\":\"https://api.github.com/users/devchangjun/orgs\",\"repos_url\":\"https://api.github.com/users/devchangjun/repos\",\"events_url\":\"https://api.github.com/users/devchangjun/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/devchangjun/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/devchangjun/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/devchangjun/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T15:33:25Z\",\"updated_at\":\"2025-07-19T08:07:23Z\",\"pushed_at\":\"2025-07-19T08:07:20Z\",\"git_url\":\"git://github.com/devchangjun/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:devchangjun/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/devchangjun/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/devchangjun/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":147,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/20\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/20\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/20\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/20/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/20/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/20/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e33f748a3c878f78195b24310020e501f062a53a\"}},\"author_association\":\"FIRST_TIME_CONTRIBUTOR\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/21\",\"id\":2662116826,\"node_id\":\"PR_kwDOPJuWzM6erK3a\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/21\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/21.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/21.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/21\",\"number\":21,\"state\":\"open\",\"locked\":false,\"title\":\"[9팀 권지호] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"tomatopickles404\",\"id\":210817015,\"node_id\":\"U_kgDODJDP9w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/210817015?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/tomatopickles404\",\"html_url\":\"https://github.com/tomatopickles404\",\"followers_url\":\"https://api.github.com/users/tomatopickles404/followers\",\"following_url\":\"https://api.github.com/users/tomatopickles404/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/tomatopickles404/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/tomatopickles404/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/tomatopickles404/subscriptions\",\"organizations_url\":\"https://api.github.com/users/tomatopickles404/orgs\",\"repos_url\":\"https://api.github.com/users/tomatopickles404/repos\",\"events_url\":\"https://api.github.com/users/tomatopickles404/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/tomatopickles404/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://hanghae-plus.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n이번 과제에서는 ai 를 멘토로 활용하여 진행했습니다.\\r\\n그래서 코드를 구현하는 것 자체에 ai 도움 받는 것을 최대한 지양하고, 제가 답을 찾아갈 수 있게 가이드를 달라고 했습니다. \\r\\n이 과정에서 생소한 개념을 접하게 되면 구현 전에 정리하고 이해한 뒤에 구현하고자 했습니다.\\r\\n1주차 과제는 구현하기 급급했다면, 이번 과제에서는 최대한 가상돔의 생성과정을 머릿속으로 그려보고자 했습니다. \\r\\n\\r\\n심화과제까지 수행하는 과정에서 가장 어렵게 느껴졌던 것은 이벤트 위임이었습니다. \\r\\n저는 1주차 때 이벤트 위임을 적용하지 않고 구현했었는데, 그래서 기본 과제의 이벤트 위임도 상당히 난이도가 있게 느껴졌습니다.\\r\\n이벤트 위임이라는 개념을 이론상으로는 알고 있었지만, 실제 구현해보니 제가 확실하게 알고 있는게 아니었다는 것을 깨달았습니다.\\r\\n**\\\"어떤 과정\\\"을 통해서 이벤트가 위임되는지 직접 작성해보고 머릿속에 그려보는 것**과 단순히 **글을 암기하는 것**은 많은 차이가 있었습니다. \\r\\n\\r\\n\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n#### 1. 이벤트 위임 로직(eventManager 함수)의 메커니즘 이해\\r\\n\\r\\n#### 이벤트 위임 설정 함수\\r\\n```js\\r\\nexport function setupEventListeners(root) {\\r\\n  const eventTypes = [\\\"click\\\", \\\"mouseover\\\", \\\"focus\\\", \\\"keydown\\\", \\\"submit\\\", \\\"change\\\"];\\r\\n\\r\\n  // 1. 루트 컨테이너에 각 이벤트 타입별 리스너 등록\\r\\n  eventTypes.forEach((eventType) => {\\r\\n    root.addEventListener(eventType, handleEvent);\\r\\n  });\\r\\n\\r\\n  // 2. 정리 함수 반환\\r\\n  return () => {\\r\\n    eventTypes.forEach((eventType) => {\\r\\n      root.removeEventListener(eventType, handleEvent);\\r\\n    });\\r\\n  };\\r\\n}\\r\\n```\\r\\n- 루트 컨테이너에 6가지 이벤트 타입에 대해 handleEvent 함수만 등록하여 메모리 사용량을 최소화하고자 했습니다.\\r\\n- 새로운 이벤트 타입 추가 시 eventTypes 배열에 추가하는 확장 가능한 구조를 고려했습니다.\\r\\n- 메모리 누수 방지를 위한 정리 함수 반환하여 언마운트 시 메모리 누수를 방지하고자 했습니다.\\r\\n\\r\\n#### 이벤트 처리 핵심 함수\\r\\n```js\\r\\nconst handleEvent = (event) => {\\r\\n  const { target, type } = event;  // 이벤트 발생 요소와 타입 추출\\r\\n\\r\\n  // 이벤트 버블링을 위해 클릭된 요소부터 상위 요소들을 순회\\r\\n  let currentElement = target;\\r\\n\\r\\n  while (currentElement && currentElement !== document.body) {\\r\\n    // 1. 현재 요소에 _eventId가 있는지 확인\\r\\n    if (currentElement._eventId) {\\r\\n      const elementHandlers = eventHandlers.get(currentElement._eventId);\\r\\n\\r\\n      // 2. 해당 요소에 등록된 이벤트 핸들러가 있는지 확인\\r\\n      if (elementHandlers && elementHandlers.has(type)) {\\r\\n        const handler = elementHandlers.get(type);\\r\\n        handler(event);  // 3. 실제 핸들러 실행\\r\\n      }\\r\\n    }\\r\\n    // 5. 상위 요소로 이동\\r\\n    currentElement = currentElement.parentElement;\\r\\n  }\\r\\n};\\r\\n```\\r\\n흐름\\r\\n- 이벤트 발생 요소(target)부터 시작\\r\\n- _eventId 속성으로 등록된 핸들러 검색\\r\\n- 해당 이벤트 타입의 핸들러 실행\\r\\n- 상위 요소로 이동하여 반복\\r\\n\\r\\n#### 전체 동작 흐름 요약\\r\\n1. 초기화\\r\\n```js\\r\\n// renderElement.js에서\\r\\nif (!container._eventListenersSetup) {\\r\\n  setupEventListeners(container);  // 루트에 6개 이벤트 리스너 등록\\r\\n  container._eventListenersSetup = true;\\r\\n}\\r\\n```\\r\\n2. 이벤트 등록\\r\\n```js\\r\\n// setElementAttributes.js에서\\r\\nconst registerEventHandler = (target, key, handler) => {\\r\\n  const eventType = key.slice(2).toLowerCase();  // \\\"onClick\\\" → \\\"click\\\"\\r\\n  addEvent(target, eventType, handler);          // 전역 저장소에 등록\\r\\n};\\r\\n```\\r\\n3. 이벤트 발생\\r\\n```js\\r\\n// 사용자 클릭 → handleEvent 호출\\r\\n// 1. target 요소부터 상위로 버블링하며 _eventId 검색\\r\\n// 2. _eventId 발견 시 등록된 핸들러 실행\\r\\n``` \\r\\n4. 업데이트\\r\\n\\r\\n<br/>\\r\\n\\r\\n#### 실제 동작 예시\\r\\n\\r\\n```jsx\\r\\n// 1. JSX 작성\\r\\nconst App = () => (\\r\\n  <div>\\r\\n    <button onClick={handleClick}>Click me</button>\\r\\n  </div>\\r\\n);\\r\\n\\r\\n// 2. 렌더링\\r\\nrenderElement(<App />, container);\\r\\n\\r\\n// 3. 결과\\r\\n// - container에 이벤트 위임 설정\\r\\n// - button 요소에 _eventId = \\\"event_1\\\" 부여\\r\\n// - eventHandlers.get(\\\"event_1\\\").set(\\\"click\\\", handleClick)\\r\\n// - 사용자 클릭 시 handleEvent가 호출되어 handleClick 실행\\r\\n```\\r\\n\\r\\n<br/>\\r\\n\\r\\n#### 2. 트러블 슈팅\\r\\nnormalizeVNode 함수를 재귀적으로 호출하는 과정에서, 특정 조건의 vNode를 처리할 때 아래와 같은 TypeError가 발생했습니다.\\r\\n\\r\\n> Cannot destructure property 'children' of 'object null' as it is null.\\r\\n\\r\\n**[발생 위치]**\\r\\n```js\\r\\n// src/lib/normalizeVNode.js:25\\r\\nreturn {\\r\\n  ...vNode,\\r\\n  children: vNode.children.filter((child) => !isFalsy(child)).flatMap((child) => normalizeVNode(child)),\\r\\n};\\r\\n```\\r\\n\\r\\n**[원인]**\\r\\n#### vNode.children이 null이 되는 시나리오들\\r\\n1. createVNode 함수에서의 처리\\r\\n```javascript\\r\\nexport function createVNode(type, props, ...children) {\\r\\n  return {\\r\\n    type,\\r\\n    props,\\r\\n    children,  // 여기서 children이 null/undefined가 될 수 있음\\r\\n  };\\r\\n}\\r\\n```\\r\\n\\r\\n2 함수형 컴포넌트에서의 처리\\r\\n```javascript\\r\\nif (typeof vNode.type === \\\"function\\\") {\\r\\n  return normalizeVNode(vNode.type(vNode.props));  // 여기서 null이 반환될 수 있음\\r\\n}\\r\\n```\\r\\n#### 테스트 케이스 분석\\r\\n```javascript\\r\\n// 빈 자식 배열 처리\\r\\nit(\\\"빈 자식 배열을 처리해야 한다\\\", () => {\\r\\n  const result = createElement(<div>{[]}</div>);\\r\\n  expect(result.tagName).toBe(\\\"DIV\\\");\\r\\n  expect(result.childNodes.length).toBe(0);\\r\\n});\\r\\n\\r\\n// undefined 자식 처리\\r\\nit(\\\"undefined 자식을 무시해야 한다\\\", () => {\\r\\n  const result = createElement(<div>{undefined}</div>);\\r\\n  expect(result.tagName).toBe(\\\"DIV\\\");\\r\\n  expect(result.childNodes.length).toBe(0);\\r\\n});\\r\\n\\r\\n// 함수형 컴포넌트 정규화\\r\\nit(\\\"컴포넌트를 정규화한다.\\\", () => {\\r\\n  const TestComponent = () => (\\r\\n    <UnorderedList>\\r\\n      <ListItem id=\\\"item-1\\\">Item 1</ListItem>\\r\\n      <ListItem id=\\\"item-2\\\">Item 2</ListItem>\\r\\n      <ListItem id=\\\"item-3\\\" className=\\\"last-item\\\">Item 3</ListItem>\\r\\n    </UnorderedList>\\r\\n  );\\r\\n\\r\\n  const normalized = normalizeVNode(<TestComponent />);\\r\\n  // 기대 결과: <ul>...</ul> 구조\\r\\n});\\r\\n```\\r\\n\\r\\n**[해결]**\\r\\n```js\\r\\nexport function normalizeVNode(vNode) {\\r\\n  if (isFalsy(vNode)) return \\\"\\\";\\r\\n  const safeChildren = vNode.children ?? [];\\r\\n\\r\\n  if (typeof vNode === \\\"string\\\" || typeof vNode === \\\"number\\\") {\\r\\n    return String(vNode);\\r\\n  }\\r\\n\\r\\n  // 함수형 컴포넌트 재귀 처리\\r\\n  if (typeof vNode.type === \\\"function\\\") {\\r\\n    const safeProps = vNode.props ?? {};\\r\\n    // children을 포함하여 전달\\r\\n    const propsWithChildren = { ...safeProps, children: safeChildren };\\r\\n    return normalizeVNode(vNode.type(propsWithChildren));\\r\\n  }\\r\\n\\r\\n  if (Array.isArray(vNode)) {\\r\\n    return vNode.flatMap((child) => normalizeVNode(child));\\r\\n  }\\r\\n\\r\\n  return {\\r\\n    ...vNode,\\r\\n    children: safeChildren.flatMap((child) => normalizeVNode(child)),\\r\\n  };\\r\\n}\\r\\n\\r\\n```\\r\\n- normalizeVNode 함수에 방어 코드를 추가하여 어떤 형태의 vNode가 들어와도 안전하게 처리할 수 있도록 개선했습니다.\\r\\n\\r\\n**[주요 변경점]**\\r\\n- Nullish Coalescing (`??`) 사용: vNode.children이 null이나 undefined일 경우, 항상 빈 배열 []을 사용하도록 하여 safeChildren 변수가 배열임을 보장\\r\\n- 함수형 컴포넌트를 호출할 때, props와 children이 null일 가능성을 모두 차단하고 항상 안전한 객체와 배열을 전달하도록 수정\\r\\n- 일관성 있는 `safeChildren` 사용\\r\\n\\r\\n<br/>\\r\\n\\r\\n### 코드 품질\\r\\n이번 과제에서는 함수단위의 테스트를 중점적으로 수행하기 때문에 함수 단위의 리팩토링으로 코드 품질을 고려했습니다.\\r\\n\\r\\n#### 1. createElement \\r\\n**[리팩토링 전]**\\r\\n```js\\r\\nconst createTextNode = (text) => document.createTextNode(text);\\r\\n\\r\\nexport function createElement(vNode) {\\r\\n  if (isFalsy(vNode)) return createTextNode(\\\"\\\");\\r\\n\\r\\n  switch (typeof vNode) {\\r\\n    case \\\"string\\\":\\r\\n    case \\\"number\\\":\\r\\n      return createTextNode(vNode);\\r\\n\\r\\n    case \\\"object\\\": {\\r\\n      if (Array.isArray(vNode)) {\\r\\n        const fragment = document.createDocumentFragment();\\r\\n        for (const child of vNode) {\\r\\n          fragment.appendChild(createElement(child));\\r\\n        }\\r\\n        return fragment;\\r\\n      }\\r\\n\\r\\n      const $el = document.createElement(vNode.type);\\r\\n      updateAttributes($el, vNode.props);\\r\\n      for (const child of vNode.children) {\\r\\n        $el.appendChild(createElement(child));\\r\\n      }\\r\\n      return $el;\\r\\n    }\\r\\n\\r\\n    default:\\r\\n      return \\\"\\\";\\r\\n  }\\r\\n}\\r\\n```\\r\\n- switch를 사용하여 타입별 분기처리했습니다.\\r\\n- 관심사가 분리되어 있지 않아 한 함수 안에 여러 기능이 혼재되어 있고, 함수가 많은 책임을 가지고 있었습니다.\\r\\n\\r\\n**[리팩토링 후]**\\r\\n\\r\\n- 1차 리팩토링\\r\\n```js\\r\\n  // falsy 값 처리\\r\\n  if (isFalsy(vNode)) {\\r\\n    return \\\"\\\";\\r\\n  }\\r\\n\\r\\n  // 타입별 처리 함수들\\r\\n  const handlers = {\\r\\n    string: (vNode) => document.createTextNode(vNode),\\r\\n    number: (vNode) => document.createTextNode(vNode),\\r\\n    object: (vNode) => {\\r\\n      if (vNode === null) return \\\"\\\";\\r\\n      if (Array.isArray(vNode)) {\\r\\n        const fragment = document.createDocumentFragment();\\r\\n        vNode.forEach(child => {\\r\\n          fragment.appendChild(createElement(child));\\r\\n        });\\r\\n        return fragment;\\r\\n      }\\r\\n      if (vNode.type) {\\r\\n        const $el = document.createElement(vNode.type);\\r\\n        updateAttributes($el, vNode.props);\\r\\n        vNode.children.forEach(child => {\\r\\n          $el.appendChild(createElement(child));\\r\\n        });\\r\\n        return $el;\\r\\n      }\\r\\n      return \\\"\\\";\\r\\n    }\\r\\n  };\\r\\n\\r\\n  // switch 문으로 타입별 처리\\r\\n  switch (typeof vNode) {\\r\\n    case \\\"string\\\":\\r\\n    case \\\"number\\\":\\r\\n      return handlers[typeof vNode](vNode);\\r\\n    \\r\\n    case \\\"object\\\":\\r\\n      return handlers.object(vNode);\\r\\n    \\r\\n    default:\\r\\n      return \\\"\\\";\\r\\n  }\\r\\n```\\r\\n- 함수형으로 접근하여 관심사를 분리하고자 했습니다. \\r\\n- 오히려 가독성이 더 안좋아지고 복잡하다고 느껴서 원복하려다 책임을 나누어 봤습니다.\\r\\n\\r\\n<br/>\\r\\n\\r\\n- 2차 리팩토링\\r\\n```js\\r\\nconst createTextNode = (text) => document.createTextNode(text);\\r\\n\\r\\nconst createFragment = (vNode) => {\\r\\n  const fragment = document.createDocumentFragment();\\r\\n  for (const child of vNode) {\\r\\n    fragment.appendChild(createElement(child));\\r\\n  }\\r\\n  return fragment;\\r\\n};\\r\\n\\r\\nconst createDOMElement = (vNode) => {\\r\\n  const $el = document.createElement(vNode.type);\\r\\n  updateAttributes($el, vNode.props);\\r\\n  for (const child of vNode.children) {\\r\\n    $el.appendChild(createElement(child));\\r\\n  }\\r\\n  return $el;\\r\\n};\\r\\n\\r\\nconst handlers = {\\r\\n  string: createTextNode,\\r\\n  number: createTextNode,\\r\\n  object: (vNode) => {\\r\\n    if (vNode === null) return \\\"\\\";\\r\\n    if (isArray(vNode)) return createFragment(vNode);\\r\\n    if (vNode.type) return createDOMElement(vNode);\\r\\n    return \\\"\\\";\\r\\n  },\\r\\n};\\r\\n\\r\\nexport function createElement(vNode) {\\r\\n  if (isFalsy(vNode)) return createTextNode(\\\"\\\");\\r\\n\\r\\n  const handler = handlers[typeof vNode];\\r\\n  return handler ? handler(vNode) : \\\"\\\";\\r\\n}\\r\\n```\\r\\n- 조금 더 선언적으로 표현하고자 했습니다.\\r\\n- 함수를 단일책임으로 나누고자 했습니다. \\r\\n\\r\\n<br/>\\r\\n\\r\\n- 최종 코드 \\r\\n```js\\r\\nconst updateAttributes = ($el, props) => {\\r\\n  if (isFalsy(props)) return;\\r\\n\\r\\n  setElementAttributes($el, props);\\r\\n};\\r\\n\\r\\nconst updateChildren = ($el, vNode) => {\\r\\n  for (const child of vNode.children) {\\r\\n    $el.appendChild(createElement(child));\\r\\n  }\\r\\n\\r\\n  $el._vNode = vNode;\\r\\n\\r\\n  return $el;\\r\\n};\\r\\n\\r\\nconst createDOMElement = (vNode) => {\\r\\n  const $el = document.createElement(vNode.type);\\r\\n\\r\\n  updateAttributes($el, vNode.props);\\r\\n  updateChildren($el, vNode);\\r\\n\\r\\n  return $el;\\r\\n};\\r\\n\\r\\nconst createFragment = (vNode) => {\\r\\n  const fragment = document.createDocumentFragment();\\r\\n  for (const child of vNode) {\\r\\n    fragment.appendChild(createElement(child));\\r\\n  }\\r\\n  return fragment;\\r\\n};\\r\\n\\r\\nconst createComponent = (vNode) => {\\r\\n  if (isArray(vNode)) {\\r\\n    const componentResult = vNode.type(vNode.props);\\r\\n    return createElement(componentResult);\\r\\n  }\\r\\n  return createElement(vNode);\\r\\n};\\r\\n// ... \\r\\n```\\r\\n- 앞 선 리팩토링 코드에 대해 오류가 없는지 관심사가 적절히 분리 되었는지 ai에 물어보고, ai가 다듬어준 결과입니다.\\r\\n- 조금 더 작은 단위로 책임이 분리 되었습니다. \\r\\n\\r\\n#### ai를 활용하여 동일한 조건으로 리팩토링을 시켜보기도 했습니다.\\r\\n- 관련 코드 커밋: [cffc2d6](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/21/commits/cffc2d6873764a4a4e675bf81b98348068b8ef33)\\r\\n- 요구하지 않았지만 JSDocs까지 작성해주어 편하다고 느꼈습니다. \\r\\n- 일관된 코드 스타일로 작성해주어 생산성을 높일 수 있었습니다.\\r\\n- ai를 리팩토링에도 자주 활용하게 될 것 같습니다.\\r\\n\\r\\n<br/>\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n이번 과제에서는 새로 학습한 개념이 많았습니다. \\r\\n아래의 새로 학습한 개념의 자세한 기록은 `docs` 디렉토리에 정리했습니다.\\r\\n일부 md 파일은 ai를 활용하여 작성했습니다. \\r\\n\\r\\n#### 1. 가상돔의 가독성을 개선하기 위해 만들어진 문법이 JSX\\r\\nJSX를 사용하는 이유를 단순히 js보다 직관적이고 가독성이 좋아서라고 생각했습니다.\\r\\n준일 코치님의 블로그 글을 읽다보니 \\\"왜 직관적이고 가독성이 좋은 문법이 필요했는지\\\"를 한번도 생각해 본 적이 없었다는 것을 알게되었습니다.\\r\\n\\r\\n> 요약하자면, 가상돔은 DOM에 변경된 부분만 반영하기 위해 만든 **객체 덩어리**이며, 이 객체 덩어리를 h(...) 으로 생성한다. (h라고 부르는 이유는 Hyperscript라는 뜻) 이렇게 줄여서 표현한 가상돔 트리의 가독성이 **\\\"개발자\\\"** 관점에서 안좋기 때문에 JSX가 만들어진 것\\r\\n\\r\\n#### 2. `Infinity` vs `Number.POSITIVE_INFINITY`, `String()` vs `toString()`\\r\\n저는 관성적으로 `String()` 과 `Number.POSITIVE_INFINITY` 을 선호하여 사용해왔습니다.\\r\\n`Number.POSITIVE_INFINITY`를 더 안정적으로 사용하는 방법이라고 알고 있었고, `String()`은 이유가 없었습니다.\\r\\n그래서 두 경우를 비교해보고 싶었고, ai를 활용해 비교 분석하는 md 파일을 작성했습니다. \\r\\n결론은 `null`, `undefined`도 안전하게 처리할 수 있는`String()`와 좀 더 간결하게 사용할 수 있는 `Infinity`를 선택하여 구현했습니다. \\r\\n\\r\\n- \\\"`Number.POSITIVE_INFINITY`를 더 안정적으로 사용하는 방법\\\" 의 배경을 ai에게 추가로 물어봤습니다.\\r\\n과거 자바스크립트(ES5 이전)에서는 전역 변수 Infinity를 다른 값으로 덮어쓸 수 있는 안정성 문제가 있었습니다. \\r\\n이 때문에 개발자들은 변경이 불가능한  Number.POSITIVE_INFINITY를 사용하는 '방어적 코딩' 기법을 선호했습니다. \\r\\n하지만  ES5부터 Infinity가 읽기 전용(read-only) 속성으로 표준이 변경되면서 이 문제는 해결되었고, 이제는 더 간결한 Infinity를 사용하는 것이 일반적이라는 것을 알게 되었습니다.\\r\\n\\r\\n\\r\\n#### 4. virtualDOM 에서 정규화가 필요한 이유\\r\\n요구사항에서 표현하는 \\\"재귀적 표준화\\\"가 무슨 뜻인지 정확하게 파악하기 어려웠습니다. \\r\\n과제의 코드베이스를 분석하여 virtualDOM에서 정규화 하는 과정으로 이해했습니다.\\r\\n정규화가 필요한 이유를 제가 이해한 한마디로 요약 해보자면 아래와 같습니다.\\r\\n\\r\\n> **컴포넌트**는 **다양한 형태의 값을 반환**할 수 있는데, 개발자에게는 이러한 유연성이 편리하지만 **알고리즘 입장에서는 복잡하고 예측 가능성이 떨어진다.** 그렇기 때문에 반환되는 다양한 형태의 `vNode`들을 렌더링 엔진이 처리하기 쉬운 **표준화된 구조로 반환**한다.\\r\\n\\r\\n#### 5. DocumentFragment\\r\\n\\r\\n> DocumentFragment는 메모리 상에만 존재하는 계산을 위한 임시 컨테이너로 표현할 수 있으며, 실제 DOM을 생성하는 과정에서 DOM의 조작 횟수를 줄여 리플로우를 최소화 하고, 여러 DOM 요소를 한 번에 삽입(배치 처리)하기 위해 사용한다.\\r\\n\\r\\n\\r\\n그 밖에도 weakMap, nNode 타입이 function일 때 children을 포함해서 재귀를 넘겨야 하는 이유 등 과제를 진행하며 의문이 드는 것들은 간단하게라도 정리하고 넘어가고자 했습니다. \\r\\n가상돔을 직접 구현 해보면서, 실제로 어떤 로직들이 필요하고 자바스크립트의 어떤 내장 메서드들이 활용되어 동작하는지 뜯어볼 수 있는 배움이었습니다.\\r\\n\\r\\n<br/>\\r\\n\\r\\n### 과제 피드백\\r\\n- 함수 단위로 구성되어 하나씩 기능을 채워서 완성시키는 과정이 개인적으로 재밌었습니다.\\r\\n- TDD 경험이 없었는데, 이번 과제에서는 TDD의 개발 방식을 어느정도 체험하는 것 같았습니다.\\r\\n\\r\\n<br/>\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n- 앞서 언급했던 리팩토링의 과정과 방향이 적절했다고 생각되는지, 개선할 방향이 있는지 코치님의 의견이 궁금합니다.\\r\\n- 현재 updateChildren 함수는 아래와 같이 배열의 인덱스(index)를 기반으로 새로운 vNode와 기존 vNode를 비교합니다.\\r\\n이 방식은 새로운 노드가 뒤에 추가 되는 경우는 효율적일 수 있지만 그렇지 않거나 목록의 순서가 바뀌는 경우에는 결과 값을 보장할 수 없다고 생각 됩니다. 이 로직을 개선한다면 어떤 방법이 가장 적절한지, key 기반의 diff 알고리즘을 구현한다면 어떤 방식으로 접근해야 하는지 궁금합니다!\\r\\n\\r\\n```js\\r\\nconst updateChildren = (target, newVNodes, oldVNodes, oldNodeLength) => {\\r\\n  for (let i = 0; i < newVNodes.length; i++) {\\r\\n    const newChild = newVNodes[i];\\r\\n    const oldChild = oldVNodes?.[i];\\r\\n    const targetChild = target.childNodes[i];\\r\\n\\r\\n    if (i >= oldNodeLength || !targetChild) {\\r\\n      // 새 자식 추가\\r\\n      const newElement = createElement(newChild);\\r\\n      if (newElement) {\\r\\n        target.appendChild(newElement);\\r\\n      }\\r\\n    } else {\\r\\n      // 기존 자식 업데이트\\r\\n      updateElement(targetChild, newChild, oldChild);\\r\\n    }\\r\\n  }\\r\\n};\\r\\n```\\r\\n\\r\\n- 저는 어떤 개념에 대해 분석하고 이해하는 것까지는 어느정도 스스로 접근할 수 있다고 생각하는데, 그 내용을 응용하거나 확장하는 사고가 부족한 것 같습니다. 그러한 사고의 확장을 하기 위해서는 평소에 어떤 것들을 하면 도움이 될까요? \\r\\n비슷한 맥락의 고민으로, 지식을 접할 때는 이해가 잘 되지만, 막상 설명하거나 코드에 적용하려고 하면 막히는 경우가 많은데 이해와 실전 사이의 간극을 어떻게 줄일 수 있을지 고민입니다!\\r\\n\\r\\n\\r\\n\",\"created_at\":\"2025-07-13T09:26:13Z\",\"updated_at\":\"2025-07-19T13:59:59Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"2a712e6062f455d7d05b4d4060c0d2b65ff51ad9\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/21/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/21/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/21/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/858e53fd900bb121393c4d36e959d3aac60871fd\",\"head\":{\"label\":\"tomatopickles404:main\",\"ref\":\"main\",\"sha\":\"858e53fd900bb121393c4d36e959d3aac60871fd\",\"user\":{\"login\":\"tomatopickles404\",\"id\":210817015,\"node_id\":\"U_kgDODJDP9w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/210817015?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/tomatopickles404\",\"html_url\":\"https://github.com/tomatopickles404\",\"followers_url\":\"https://api.github.com/users/tomatopickles404/followers\",\"following_url\":\"https://api.github.com/users/tomatopickles404/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/tomatopickles404/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/tomatopickles404/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/tomatopickles404/subscriptions\",\"organizations_url\":\"https://api.github.com/users/tomatopickles404/orgs\",\"repos_url\":\"https://api.github.com/users/tomatopickles404/repos\",\"events_url\":\"https://api.github.com/users/tomatopickles404/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/tomatopickles404/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018874264,\"node_id\":\"R_kgDOPLrJmA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"tomatopickles404/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"tomatopickles404\",\"id\":210817015,\"node_id\":\"U_kgDODJDP9w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/210817015?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/tomatopickles404\",\"html_url\":\"https://github.com/tomatopickles404\",\"followers_url\":\"https://api.github.com/users/tomatopickles404/followers\",\"following_url\":\"https://api.github.com/users/tomatopickles404/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/tomatopickles404/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/tomatopickles404/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/tomatopickles404/subscriptions\",\"organizations_url\":\"https://api.github.com/users/tomatopickles404/orgs\",\"repos_url\":\"https://api.github.com/users/tomatopickles404/repos\",\"events_url\":\"https://api.github.com/users/tomatopickles404/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/tomatopickles404/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/tomatopickles404/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/tomatopickles404/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T08:33:27Z\",\"updated_at\":\"2025-07-17T21:29:31Z\",\"pushed_at\":\"2025-07-17T21:29:28Z\",\"git_url\":\"git://github.com/tomatopickles404/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:tomatopickles404/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/tomatopickles404/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/tomatopickles404/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":230,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/21\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/21\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/21\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/21/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/21/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/21/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/858e53fd900bb121393c4d36e959d3aac60871fd\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/22\",\"id\":2662173495,\"node_id\":\"PR_kwDOPJuWzM6erYs3\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/22\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/22.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/22.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/22\",\"number\":22,\"state\":\"open\",\"locked\":false,\"title\":\"[6팀 김수현]Chapter 1-2. 프레임워크 없이 SPA 만들기(2)\",\"user\":{\"login\":\"suhyeon57\",\"id\":104812227,\"node_id\":\"U_kgDOBj9Oww\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/104812227?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/suhyeon57\",\"html_url\":\"https://github.com/suhyeon57\",\"followers_url\":\"https://api.github.com/users/suhyeon57/followers\",\"following_url\":\"https://api.github.com/users/suhyeon57/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/suhyeon57/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/suhyeon57/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/suhyeon57/subscriptions\",\"organizations_url\":\"https://api.github.com/users/suhyeon57/orgs\",\"repos_url\":\"https://api.github.com/users/suhyeon57/repos\",\"events_url\":\"https://api.github.com/users/suhyeon57/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/suhyeon57/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://suhyeon57.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n1주차 과제는 전체적인 흐름이나 구조를 파악하지 않고, 무작정 코드부터 작성하면서 시작했습니다.\\r\\n그 결과 전체 구조를 이해하지 못한 채 헤매는 시간이 길었고, 구현하는 데도 많은 어려움을 겪었습니다.\\r\\n2주차는 가상 돔에 대한 개념부터 먼저 공부하고, 관련 문서와 자료를 찾아보며 전반적인 동작 방식에 대해 이해하고 나서 시작했습니다.\\r\\n또한 발제 자료를 기반으로 뼈대를 먼저 세운 후, 테스트 코드를 중심으로 기능을 맞춰나가는 방식으로 접근하니, 1주차보다 훨씬 수월하게 진행할 수 있었습니다.\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n children: children.flat( ), --> 1단계 평탄화만 이루어진다.\\r\\n children: children.flat(Infinity),  --> 모든 깊이의 중첩 배열이 평탄화가 이루어진다.\\r\\n\\r\\nVirtual DOM diff : 노드를 불필요하게 새로 만들지 않고, 변경된 부분만 실제 DOM에 반영\\r\\n\\r\\n//항상 전체 DOM을 새로 생성 후 기존 내용을 모두 지우고 새로 추가\\r\\ncontainer.innerHTML = \\\"\\\"; // 기존 내용을 비우고\\r\\ncontainer.appendChild(dom); // 새로 생성한 DOM을 추가\\r\\n\\r\\n**<가상돔에 대한 전체적인 흐름 이해>**\\r\\n먼저, `createVNode`를 통해 가상 DOM을 생성하고, 컴포넌트 등 다양한 데이터 타입을 처리하기 위해 `normalizeVNode`를 통해 구조를 일관되게 정리한다. 그 후 정리된 VNode 트리를 기반으로 `createElement`를 사용하여 실제 DOM을 생성하고 화면에 초기 렌더링을 한다.\\r\\n(createElement는 최기 렌더링 때 한 번 사용한다.)\\r\\n\\r\\n상태가 변하거나 이벤트가 발생하면, `createVNode`를 이용해 새로운 VNode를 생성하고, 이전 VNode와 비교하는 `updateElement`를 통해 변경된 사항을 DOM에 반영한다. `updateElement`에서 `updateAttributes`를 통해 속성을 처리하고, 다시 자식 노드를 `updateElement`로 비교하여 갱신한다.\\r\\n\\r\\n* addEvent : eventMap에 내부적으로 event를 추가하고 실제 돔에는 영향이 가지 않는다. \\r\\n* addEventListener : setupEventListners를 통해 이벤트가 발생했을 때 eventMap에 저장된 이벤트가 실행된다.\\r\\n\\r\\ngpt가 알려준 이벤트 위임의 장점\\r\\n\\r\\n- 메모리 절약\\r\\n\\r\\n각각의 자식 요소마다 이벤트 리스너를 따로 붙이지 않고,\\r\\n상위 요소(root)에 한 번만 이벤트 리스너를 붙이므로 메모리 사용이 적어요.\\r\\n\\r\\n- 동적 요소 지원 용이\\r\\n\\r\\n동적으로 생성되거나 삭제되는 요소들도 별도의 이벤트 리스너 등록 없이\\r\\n부모의 이벤트 리스너가 자동으로 처리해줘서 관리가 편해요.\\r\\n\\r\\n- 코드 간결성 및 유지보수성 향상\\r\\n\\r\\n이벤트 핸들러가 한 곳에 집중되어 있어 디버깅과 관리가 쉬워요.\\r\\n\\r\\n- 성능 향상\\r\\n\\r\\n이벤트 핸들러를 여러 개 붙이는 것보다 한 번만 붙여서 처리하는 게 성능에 더 유리해요.\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n이번 과제를 하며, AI가 주는 코드를 단순히 복사하지 않고 왜 필요한지, 어떤 흐름에서 쓰이는지 스스로 고민한 뒤 적용하려 노력했습니다.\\r\\n그 과정에서 이해도도 높아졌습니다.\\r\\n\\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n가장 큰 배움은 createElement와 이벤트 처리 부분이었습니다.\\r\\n초기엔 addEventListener를 잘못 사용해 이벤트 중복 문제가 발생했는데, 이를 해결하며\\r\\naddEvent와 이벤트 위임 방식의 차이를 명확히 이해하게 되었습니다.\\r\\n\\r\\n또한, 준일 코치님의 발제 자료는 처음엔 잘 이해가 되지 않았지만 직접 구현을 해본 뒤 다시 읽으니 훨씬 더 잘 와닿았습니다. 이 점도 인상 깊었습니다ㅎㅎ\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n2주차 과제는 가상돔의 설계 이유와 동작 방식을 이해할 수 있는 좋은 기회였습니다.\\r\\n특히 코드에 대한 이해를 바탕으로 리팩토링을 할 수 있는 시간이 있었다는 점이 좋았습니다.\\r\\n1주차가 \\\"완성만을 위한 구현\\\"이었다면, 2주차는 공부하며 작성한 코드라는 점에서 개인적으로 의미 있었습니다.\\r\\n\\r\\n3주차는 어떻게 진행될지 걱정이 되지만,, 열심히 해보겠습니다 😂\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n```\\r\\nconst DELEGATED_EVENTS = [\\\"click\\\", \\\"mouseover\\\", \\\"focus\\\", \\\"keydown\\\", \\\"change\\\"];\\r\\n\\r\\nexport function setupEventListeners(root) {\\r\\n  if (root.__eventDelegationSetup) return;\\r\\n  root.__eventDelegationSetup = true;\\r\\n\\r\\n  DELEGATED_EVENTS.forEach((eventType) => {\\r\\n    root.addEventListener(eventType, (e) => {\\r\\n      // stopPropagation이 호출되면 위임 핸들러도 멈춰야 함\\r\\n      let node = e.target;\\r\\n      while (node && node !== root && !e.cancelBubble) {\\r\\n        const handlers = eventMap.get(node);\\r\\n        if (handlers && handlers[eventType]) {\\r\\n          handlers[eventType].forEach((fn) => fn.call(node, e));\\r\\n        }\\r\\n        node = node.parentNode;\\r\\n      }\\r\\n    }); // focus 등은 캡처 단계 필요\\r\\n  });\\r\\n}\\r\\n```\\r\\n\\r\\nsetupEventListeners 함수에서 DELEGATED_EVENTS 배열에 change를 빠뜨리는 바람에 UI 변화가 제대로 반영되지 않는 문제가 있었습니다.\\r\\n현재는 이벤트를 배열에 하나하나 명시해줘야 하는데, 이런 방식만 가능한 건지 궁금합니다.\\r\\n혹시 모든 DOM 이벤트를 자동으로 처리하게 할 수는 없을까요? 그렇게 작성하는 건 성능이나 안정성 면에서 괜찮을지도 궁금합니다.\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-13T10:22:05Z\",\"updated_at\":\"2025-07-20T14:31:48Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"5da697c30933f2aaf63f79a8a2e9f14e1a0566d2\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/22/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/22/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/22/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/9d42082e5da3235a8d3b48cb2fe48498fa96014e\",\"head\":{\"label\":\"suhyeon57:main\",\"ref\":\"main\",\"sha\":\"9d42082e5da3235a8d3b48cb2fe48498fa96014e\",\"user\":{\"login\":\"suhyeon57\",\"id\":104812227,\"node_id\":\"U_kgDOBj9Oww\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/104812227?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/suhyeon57\",\"html_url\":\"https://github.com/suhyeon57\",\"followers_url\":\"https://api.github.com/users/suhyeon57/followers\",\"following_url\":\"https://api.github.com/users/suhyeon57/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/suhyeon57/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/suhyeon57/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/suhyeon57/subscriptions\",\"organizations_url\":\"https://api.github.com/users/suhyeon57/orgs\",\"repos_url\":\"https://api.github.com/users/suhyeon57/repos\",\"events_url\":\"https://api.github.com/users/suhyeon57/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/suhyeon57/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018906636,\"node_id\":\"R_kgDOPLtIDA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"suhyeon57/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"suhyeon57\",\"id\":104812227,\"node_id\":\"U_kgDOBj9Oww\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/104812227?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/suhyeon57\",\"html_url\":\"https://github.com/suhyeon57\",\"followers_url\":\"https://api.github.com/users/suhyeon57/followers\",\"following_url\":\"https://api.github.com/users/suhyeon57/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/suhyeon57/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/suhyeon57/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/suhyeon57/subscriptions\",\"organizations_url\":\"https://api.github.com/users/suhyeon57/orgs\",\"repos_url\":\"https://api.github.com/users/suhyeon57/repos\",\"events_url\":\"https://api.github.com/users/suhyeon57/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/suhyeon57/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/suhyeon57/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/suhyeon57/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T10:10:19Z\",\"updated_at\":\"2025-07-18T00:48:51Z\",\"pushed_at\":\"2025-07-18T00:49:05Z\",\"git_url\":\"git://github.com/suhyeon57/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:suhyeon57/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/suhyeon57/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/suhyeon57/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":208,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/22\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/22\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/22\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/22/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/22/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/22/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/9d42082e5da3235a8d3b48cb2fe48498fa96014e\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/23\",\"id\":2662208887,\"node_id\":\"PR_kwDOPJuWzM6erhV3\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/23\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/23.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/23.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/23\",\"number\":23,\"state\":\"open\",\"locked\":false,\"title\":\"[3팀 김효진] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"hyojin-k\",\"id\":50295043,\"node_id\":\"MDQ6VXNlcjUwMjk1MDQz\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/50295043?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hyojin-k\",\"html_url\":\"https://github.com/hyojin-k\",\"followers_url\":\"https://api.github.com/users/hyojin-k/followers\",\"following_url\":\"https://api.github.com/users/hyojin-k/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hyojin-k/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hyojin-k/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hyojin-k/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hyojin-k/orgs\",\"repos_url\":\"https://api.github.com/users/hyojin-k/repos\",\"events_url\":\"https://api.github.com/users/hyojin-k/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hyojin-k/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://hyojin-k.github.io/front_6th_chapter1-2/\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n- Map과 Set과 조차도 제대로 사용해 본 적이 없었던 것 같은데, 거기에 더해 WeakMap과 WeakSet을 사용함으로써 메모리 누수를 방지하는데 유용하다는 점을 알게 되었습니다.\\r\\n- diff 알고리즘이 어떻게 동작하는지에 대해서 알 수 있었습니다.\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n### 코드 품질\\r\\n1주차 이후로 중복 코드를 지양하고 가독성이 좋은 코드를 짜고자 했지만, 이 부분이 잘 고려되고 있는지는 아직 잘 모르겠습니다. \\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n초반에는 테스트를 통과하도록 코드를 짜다보니 코딩테스트 하는 느낌으로 과제를 진행했습니다. 그러다보니 과제의 목적과는 조금 다른 방향으로 시작을 하게된 것 같습니다. 그러다가 막히면서 ai를 활용 하다보니 그제서야 조금씩 흐름을 파악하면서 과제를 진행했는데, 도움을 받기 시작한 타이밍이 조금 늦지 않았나 생각합니다. 너무 오래 혼자 붙잡고 고민하기 보다는 어느정도 시간을 정해놓고 도움을 받았다면 학습의 방향을 좀 더 빨리 잡을 수 있을 수 있었을 것 같습니다.\\r\\n\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n- Map , WeakMap, Set, WeakSet를 사용할 때 조금은 무분별하게 혹은 적절하지 않게 사용하지 않았나 생각이 듭니다. 특히 eventManager 코드에서 세개나 사용하고 있는데 어떻게 사용했어야 좀 더 효율적으로 구현할 수 있었을까요?\\r\\n- element._hasEventDelegation 이런 방식으로 DOM 요소에 직접 속성을 추가하는 방식에 대해서는 어떻게 생각하시는지 궁금합니다. ai를 사용하다보면 이런 방식으로 코드를 짜주기도 하던데, 잘 모르는 방식이기도 하고 좋지 않은 패턴이라고 해서 최대한 적용하지 않는 방향으로 진행했는데 드물지 않게 나타나는 것 같아서요. 최대한 지양하는게 좋은지, 아니면 적절하게 사용하는 방법이 있는지 궁금합니다.\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-13T11:01:03Z\",\"updated_at\":\"2025-07-19T07:44:51Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"a9f5cc0774634e769fb8170b9d350b1f53abfa27\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/23/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/23/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/23/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/575d8d8bea0bbc9192c0c81f97502628ec8948b3\",\"head\":{\"label\":\"hyojin-k:main\",\"ref\":\"main\",\"sha\":\"575d8d8bea0bbc9192c0c81f97502628ec8948b3\",\"user\":{\"login\":\"hyojin-k\",\"id\":50295043,\"node_id\":\"MDQ6VXNlcjUwMjk1MDQz\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/50295043?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hyojin-k\",\"html_url\":\"https://github.com/hyojin-k\",\"followers_url\":\"https://api.github.com/users/hyojin-k/followers\",\"following_url\":\"https://api.github.com/users/hyojin-k/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hyojin-k/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hyojin-k/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hyojin-k/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hyojin-k/orgs\",\"repos_url\":\"https://api.github.com/users/hyojin-k/repos\",\"events_url\":\"https://api.github.com/users/hyojin-k/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hyojin-k/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018784133,\"node_id\":\"R_kgDOPLlphQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hyojin-k/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hyojin-k\",\"id\":50295043,\"node_id\":\"MDQ6VXNlcjUwMjk1MDQz\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/50295043?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hyojin-k\",\"html_url\":\"https://github.com/hyojin-k\",\"followers_url\":\"https://api.github.com/users/hyojin-k/followers\",\"following_url\":\"https://api.github.com/users/hyojin-k/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hyojin-k/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hyojin-k/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hyojin-k/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hyojin-k/orgs\",\"repos_url\":\"https://api.github.com/users/hyojin-k/repos\",\"events_url\":\"https://api.github.com/users/hyojin-k/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hyojin-k/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hyojin-k/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hyojin-k/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T03:21:27Z\",\"updated_at\":\"2025-07-17T18:10:41Z\",\"pushed_at\":\"2025-07-17T18:10:57Z\",\"git_url\":\"git://github.com/hyojin-k/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hyojin-k/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hyojin-k/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hyojin-k/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":191,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/23\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/23\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/23\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/23/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/23/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/23/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/575d8d8bea0bbc9192c0c81f97502628ec8948b3\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/24\",\"id\":2662263790,\"node_id\":\"PR_kwDOPJuWzM6eruvu\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/24\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/24.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/24.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/24\",\"number\":24,\"state\":\"open\",\"locked\":false,\"title\":\"[6팀 장희진] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"JHeeJinDev\",\"id\":106803730,\"node_id\":\"U_kgDOBl2yEg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/106803730?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JHeeJinDev\",\"html_url\":\"https://github.com/JHeeJinDev\",\"followers_url\":\"https://api.github.com/users/JHeeJinDev/followers\",\"following_url\":\"https://api.github.com/users/JHeeJinDev/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JHeeJinDev/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JHeeJinDev/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JHeeJinDev/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JHeeJinDev/orgs\",\"repos_url\":\"https://api.github.com/users/JHeeJinDev/repos\",\"events_url\":\"https://api.github.com/users/JHeeJinDev/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JHeeJinDev/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://jheejindev.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n1. Virtual Dom은 객체 덩어리고 이 객체를 효율적으로 비교하면서 실제 DOM에 반영하는 것이 핵심\\r\\n2. Virtual Dom을 구현할 때 동적으로 변경되는 요소가 많아 이벤트 위임이 필수적 \\r\\n3. 성능 최적화의 필요성  \\r\\n4. 메모리 관리 위해 WeakMap 사용(container가 사라지면 자동으로 정리 - container 요소가 더 이상 필요 없어서 제거되면 WeakMap에 저장된 관련 Virtual DOM 데이터도 자동으로 가비지 컬렉션의 대상이 됨) \\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n이벤트 리스너가 중복되는 문제를 겪었습니다. \\r\\n원인 - 가상 DOM이 변경되면서 setupEventListeners가 실행될 때마다 새로운 이벤트 리스너가 추가되고 결과적으로 같은 이벤트에 대해 여러 개의 핸들러가 실행되면서 성능 저하와 의도치 않은 동작 발생하였습니다.\\r\\n해결 - allEvents를 기반으로 등록된 이벤트 타입만 루프를 돌면서 리스너를 추가하도록 개선하였습니다.\\r\\n그리고 이벤트 타입별 WeakMap을 저장하여, 각 요소에 대해 핸들러를 효과적으로 추적할 수 있도록 했습니다.\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n1. 최적화의 필요성\\r\\n가상돔도 결국 자바스크립트 객체를 비교하는 작업 자체가 비용이기 때문에 컴포넌트를 적절히 분리하여 필요한 부분만 리렌더링 되게하기\\r\\n상태관리를 효율적으로 하여 불필요한 리렌더링 방지하기등을 배울 수 있었습니다.\\r\\n\\r\\n2. diff 알고리즘과 재귀 구조 구현\\r\\n\\r\\n3. WeakMap \\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n프레임워크에 의해 추상화된 부분을 직접 구현해보면서 구조와 흐름을 알 수 있었습니다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n현재 setupEventListeners 함수에서 최초 1회만 이벤트를 등록하고, 이후 addEvent를 통해 eventStore에 엘리먼트-핸들러 관계를 저장하고 있습니다. 이렇게 WeakMap + Set + 이벤트 위임 조합으로 구현한 구조가 메모리 관리나 성능 면에서 일반적으로 괜찮은 패턴인지, 개선할 만한 구조가 있는지 궁금합니다. 특히 bubbling 경로를 타고 올라가는 while 루프에서 이벤트 위임 대상이 너무 많아질 경우 퍼포먼스 문제가 생길 여지가 있을까요?\\r\\n\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-13T12:41:46Z\",\"updated_at\":\"2025-07-22T07:10:20Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"9ba1527e042bcb59cdd225c14b5aef0935252c4d\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/24/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/24/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/24/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/fbaa2f44765e44959dca35b384c8559a8936105f\",\"head\":{\"label\":\"JHeeJinDev:main\",\"ref\":\"main\",\"sha\":\"fbaa2f44765e44959dca35b384c8559a8936105f\",\"user\":{\"login\":\"JHeeJinDev\",\"id\":106803730,\"node_id\":\"U_kgDOBl2yEg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/106803730?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JHeeJinDev\",\"html_url\":\"https://github.com/JHeeJinDev\",\"followers_url\":\"https://api.github.com/users/JHeeJinDev/followers\",\"following_url\":\"https://api.github.com/users/JHeeJinDev/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JHeeJinDev/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JHeeJinDev/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JHeeJinDev/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JHeeJinDev/orgs\",\"repos_url\":\"https://api.github.com/users/JHeeJinDev/repos\",\"events_url\":\"https://api.github.com/users/JHeeJinDev/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JHeeJinDev/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018398992,\"node_id\":\"R_kgDOPLOJEA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"JHeeJinDev/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"JHeeJinDev\",\"id\":106803730,\"node_id\":\"U_kgDOBl2yEg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/106803730?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JHeeJinDev\",\"html_url\":\"https://github.com/JHeeJinDev\",\"followers_url\":\"https://api.github.com/users/JHeeJinDev/followers\",\"following_url\":\"https://api.github.com/users/JHeeJinDev/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JHeeJinDev/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JHeeJinDev/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JHeeJinDev/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JHeeJinDev/orgs\",\"repos_url\":\"https://api.github.com/users/JHeeJinDev/repos\",\"events_url\":\"https://api.github.com/users/JHeeJinDev/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JHeeJinDev/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/JHeeJinDev/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/JHeeJinDev/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T07:11:58Z\",\"updated_at\":\"2025-07-17T14:42:42Z\",\"pushed_at\":\"2025-07-17T14:43:01Z\",\"git_url\":\"git://github.com/JHeeJinDev/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:JHeeJinDev/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/JHeeJinDev/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/JHeeJinDev/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":204,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/24\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/24\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/24\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/24/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/24/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/24/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/fbaa2f44765e44959dca35b384c8559a8936105f\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/25\",\"id\":2662268533,\"node_id\":\"PR_kwDOPJuWzM6erv51\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/25\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/25.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/25.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/25\",\"number\":25,\"state\":\"open\",\"locked\":false,\"title\":\"[3팀 이가은] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"tooth-is-silver\",\"id\":35989487,\"node_id\":\"MDQ6VXNlcjM1OTg5NDg3\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/35989487?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/tooth-is-silver\",\"html_url\":\"https://github.com/tooth-is-silver\",\"followers_url\":\"https://api.github.com/users/tooth-is-silver/followers\",\"following_url\":\"https://api.github.com/users/tooth-is-silver/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/tooth-is-silver/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/tooth-is-silver/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/tooth-is-silver/subscriptions\",\"organizations_url\":\"https://api.github.com/users/tooth-is-silver/orgs\",\"repos_url\":\"https://api.github.com/users/tooth-is-silver/repos\",\"events_url\":\"https://api.github.com/users/tooth-is-silver/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/tooth-is-silver/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n\\r\\n### 배포 링크\\r\\n\\r\\nhttps://tooth-is-silver.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n- **구현을 완료했다**\\r\\n  - 1주차때 기능 구현은 물론 PR도 작성 못하고 배포도 못했는데, 이번에는 기능 구현부터 심화, 배포까지 수월하게 진행했습니다. 정말로 **성장**했다고 느낍니다.\\r\\n- **깃헙 액션 배포**\\r\\n  - yml파일 기준으로 깃헙 페이지 배포하는 방식을 알게되었습니다.\\r\\n  - yml파일이 없어도 main 페이지 기준으로 마이크로 서비스를 배포 가능하다는 것을 알게되었습니다.\\r\\n- **이벤트 위임**\\r\\n  - 이벤트 위임을 잘못 이해하고 있었는데, **황태영 학메**랑 열심히 머리 쥐어짜면서 같이 공부해서 개념을 숙지할 수 있게 되었습니다. _태영 학메 감사합니다. 고맙습니다._\\r\\n  - 이벤트 위임은 무조건 root에서 모든 이벤트를 등록하는것이 아닌, 상위 요소에 등록하여 하위 요소로 이벤트를 분배하고 이벤트가 시작한 지점의 요소가 이전에 등록한 이벤트의 요소가 맞는지 확인하여 이벤트를 동작시키는 방식입니다.\\r\\n  - 이벤트 위임시 등록하는 이벤트에 event객체를 전달합니다. 등록된 이벤트는 `e.preventDefault()`, `e.stopPropagation()`과 같은 메서드를 사용할 수 있습니다. 자주 사용하는 이벤트 메서드인데 내부 로직을 파악할 수 있었던 계기였습니다.\\r\\n  - 다수의 동일한 요소에 동일한 핸들러 등록시 메모리 성능 이슈가 발생할 수 있기때문에, 이벤트 위임은 동일한 요소에 동일한 핸들러를 1번만 등록하여 사용할 수 있도록 도와줍니다.\\r\\n- **oldNode와 newNode**\\r\\n  - 리렌더시 그냥 단순하게 element를 갈아끼운다는 개념으로 이해하고 있었는데 이 기회에 정확히 집고 넘어갈 수 있었습니다.\\r\\n  - oldNode는 이전 요소이며 newNode와 비교하여 type이 같은지, 텍스트는 아닌지, oldNode는 없었다가 newNode에 요소가 생겼는지, oldNode에는 있었다가 newNode에는 사라지지 않았는지 모든 조건을 체크해본 후에 재귀방식으로 내부 children부터 하나씩 교체해나갑니다. 단순히 '변경된 부분만 찾아서 교체하는 알고리즘이 있겠지'하고 넘어갔던 부분이었는데 왜 리엑트가 큰 프로젝트일 수록 속도나 성능 이슈가 발생될 수 있는지 알게 된 부분이었습니다.\\r\\n- **디버깅 방법**\\r\\n  - vitest로 Debug test하는 방법을 습득했습니다. 중단점도 추가해서 좀 더 자세히 알아보고 싶은 부분도 체크해 볼 수 있습니다. 콘솔로그만 활용하다가 한 줄 한 줄씩 어떻게 데이터가 들어가고 나가는지 정확히 파악이 가능해지니 디버깅 속도가 증가하는걸 느꼈습니다.\\r\\n- **preact로 동작 방식 확인**\\r\\n  - 초기 함수 구현시 [preact](https://github.com/preactjs/preact) github 리소스가 참 도움이 많이 됐습니다. 처음 만들어보는 SPA라서 발제 설명을 확인해봐도 뜬 구름 잡는 느낌이었는데, preact 소스를 찬찬히 보면서 내 코드에 어떻게 적용해야할지 감을 잡을 수 있게 된 것 같습니다.\\r\\n\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n- 특히 만족스로운 구현\\r\\n  - `eventManager.js`를 구현 후 리팩토링하면서 초반과 많이 달라지지 않은 코드입니다.<br />해당 함수를 완벽히 이해하고 나서 팀에서 설명해달라고 요청이 들어왔을때 `setupEventListeners`, `addEvent`, `removeEvent`를 왜 사용하는지, 그리고 사용하는 부분에서 어떻게 해당 함수를 요청하는지에 대해서 정확히 그리고 내가 생각하고 있는 지식을 곁들여서 얘기할 수 있었기 때문에 애착이 더 가는 코드입니다.\\r\\n\\r\\n    ```js\\r\\n    const eventRegistry = new Map();\\r\\n    const eventHandlerMap = {};\\r\\n\\r\\n    export function setupEventListeners(root) {\\r\\n      for (const event in eventRegistry) {\\r\\n        if (eventRegistry[event]) {\\r\\n          root.removeEventListener(event, eventHandlerMap[event]);\\r\\n        }\\r\\n        const handler = (e) => {\\r\\n          eventRegistry[event].forEach(({ element, handler }) => {\\r\\n            if (element.contains(e.target)) {\\r\\n              handler(e);\\r\\n            }\\r\\n          });\\r\\n        };\\r\\n        eventHandlerMap[event] = handler;\\r\\n        root.addEventListener(event, handler);\\r\\n      }\\r\\n    }\\r\\n\\r\\n    export function addEvent(element, eventType, handler) {\\r\\n      if (!eventRegistry[eventType]) {\\r\\n        eventRegistry[eventType] = new Set();\\r\\n      }\\r\\n      eventRegistry[eventType].add({ element, handler });\\r\\n    }\\r\\n\\r\\n    export function removeEvent(element, eventType, handler) {\\r\\n      if (eventRegistry[eventType]) {\\r\\n        eventRegistry[eventType].forEach((item) => {\\r\\n          if (item.element === element && item.handler === handler) {\\r\\n            eventRegistry[eventType].delete(item);\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n    ```\\r\\n\\r\\n- 코드 설계 관련 고민과 결정\\r\\n  - 1주차와 2주차 과제 진행시 수정이 필요한 부분은 적극적으로 수정하고 왜 수정했는지 이유를 명확히 기재하면 괜찮다는 코치님의 조언이 있습니다. 그래서 다른 분들의 코드를 보며 async로 바꿔볼까, 함수에 전달하는 인자들을 바꾸어볼까, 리팩토링을 해볼까 했지만 지금은 기능 구현에 중점을 두고 진행하는 것으로도 충분하다고 생각하여 욕심을 조금 내려놓기로 하였습니다.\\r\\n  - github page 배포시 `ci.yml` 파일을 활용하여 `main` 브랜치 푸시로 진행할지 `deploy.yml` 파일을 추가하여 github action을 추가로 돌릴지 고민이었습니다. 이번에는 `deploy.yml` 파일을 추가하여 yml파일의 배포 플로우를 모두 제 것으로 습득 한 후에 다음 배포때는 `ci.yml` 파일만으로 진행해보려고합니다. `ci.yml` 파일 내부에서 `deploy.yml` 동작 방식까지 한 꺼번에 진행하는 경우가 있을까 찾아보았으나, 역할 분리로 인해 보통은 ci/cd를 따로 관리하는 것을 추천한다고 합니다.\\r\\n\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n  - `updateElement.js`의 child를 확인하여 하나씩 업데이트 하는 부분인데, 초기에 for문으로 구현했다가 동작안하는 부분이 있어 while문으로 다시 구현 후, 리팩토링하여 for문으로 교체했습니다. 이 때, while문에서 for문으로 변경한 이유는 취향적인 부분도 있으나 while문으로 동작시 동적으로 변경되는 값에 **참조 문제**가 있을 수 있다는 얘기를 들었기 때문입니다.\\r\\n    진짜로 참조 문제가 발생할 가능성이 있는지, 그래서 for문이 더 나은 방식인지 궁금합니다.\\r\\n    ```js\\r\\n    // 이전 while문\\r\\n    while (i < maxChildrenLength) {\\r\\n      const newChild = newChildren[i];\\r\\n      const oldChild = oldChildren[i];\\r\\n      if (!newChild && oldChild) {\\r\\n        updateElement(target, null, oldChild, i);\\r\\n        maxChildrenLength -= 1;\\r\\n      } else {\\r\\n        updateElement(target, newChild, oldChild, i);\\r\\n        i += 1;\\r\\n      }\\r\\n    }\\r\\n    // 변경한 for문\\r\\n    for (let i = 0; i < maxChildrenLength; ) {\\r\\n      const newChild = newChildren[i];\\r\\n      const oldChild = oldChildren[i];\\r\\n      if (!newChild && oldChild) {\\r\\n        updateElement(target, null, oldChild, i);\\r\\n        maxChildrenLength -= 1;\\r\\n      } else {\\r\\n        updateElement(target, newChild, oldChild, i);\\r\\n        i += 1;\\r\\n      }\\r\\n    }\\r\\n    ```\\r\\n\\r\\n- 과제에서 좋았던 부분\\r\\n  - 앞서 얘기했던 기술적 성장을 경험한 것 😎\\r\\n\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n- `eventManager.js`파일 내부에 eventRegistry를 new Map()을 사용하여 구성했습니다. 이벤트 자체를 키로 사용하기 위해서 이와 같은 방법을 사용했는데 다른 분들의 코드를 보니 일반 객체나 new WeekMap()으로도 사용하는 경우도 확인했습니다. 동작상으로는 크게 문제가 없을 것 같긴한데 차이점이 있다면 어떤 차이점이 있는지 궁금합니다.<br />[5팀 이지훈님 PR - 객체](https://github.com/hanghae-plus/front_6th_chapter1-2/blob/2af98ec5abd1e94e985ff0dd2f8fa2f21e168bc3/src/lib/eventManager.js) [2팀 유윤우님 PR - new WeakMap](https://github.com/hanghae-plus/front_6th_chapter1-2/blob/5760159eacfa0c4c8a4da64cd2598c195f4e2cb9/src/lib/eventManager.js)\\r\\n  <br />\\r\\n\\r\\n- `createElement.js`코드에서 예외처리가 모두 안 된 것 같은 찝찝함이 있습니다. 테스트 코드와 현재 구현된 UI 기능 동작으로는 어떤 예외처리가 더 필요한지 판단하기 어려워 누락된 예외처리가 있는지 궁금합니다. 꼭 `createElement.js`가 아니더라도 다른 부분의 예외처리가 누락된 부분이 있다면 알려주시면 정말 감사하겠습니다.\\r\\n\\r\\n<!--\\r\\n  피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n  모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n  -->\\r\\n\",\"created_at\":\"2025-07-13T12:51:09Z\",\"updated_at\":\"2025-07-19T08:00:51Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"01131cb706ad73d65611cb0229a51a806d0f062b\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/25/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/25/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/25/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/413937e521e1649cf0ee2efbd5daf3aa509632c3\",\"head\":{\"label\":\"tooth-is-silver:main\",\"ref\":\"main\",\"sha\":\"413937e521e1649cf0ee2efbd5daf3aa509632c3\",\"user\":{\"login\":\"tooth-is-silver\",\"id\":35989487,\"node_id\":\"MDQ6VXNlcjM1OTg5NDg3\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/35989487?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/tooth-is-silver\",\"html_url\":\"https://github.com/tooth-is-silver\",\"followers_url\":\"https://api.github.com/users/tooth-is-silver/followers\",\"following_url\":\"https://api.github.com/users/tooth-is-silver/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/tooth-is-silver/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/tooth-is-silver/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/tooth-is-silver/subscriptions\",\"organizations_url\":\"https://api.github.com/users/tooth-is-silver/orgs\",\"repos_url\":\"https://api.github.com/users/tooth-is-silver/repos\",\"events_url\":\"https://api.github.com/users/tooth-is-silver/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/tooth-is-silver/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018578430,\"node_id\":\"R_kgDOPLZF_g\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"tooth-is-silver/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"tooth-is-silver\",\"id\":35989487,\"node_id\":\"MDQ6VXNlcjM1OTg5NDg3\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/35989487?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/tooth-is-silver\",\"html_url\":\"https://github.com/tooth-is-silver\",\"followers_url\":\"https://api.github.com/users/tooth-is-silver/followers\",\"following_url\":\"https://api.github.com/users/tooth-is-silver/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/tooth-is-silver/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/tooth-is-silver/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/tooth-is-silver/subscriptions\",\"organizations_url\":\"https://api.github.com/users/tooth-is-silver/orgs\",\"repos_url\":\"https://api.github.com/users/tooth-is-silver/repos\",\"events_url\":\"https://api.github.com/users/tooth-is-silver/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/tooth-is-silver/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/tooth-is-silver/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/tooth-is-silver/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T15:07:07Z\",\"updated_at\":\"2025-07-17T15:46:01Z\",\"pushed_at\":\"2025-07-17T15:45:57Z\",\"git_url\":\"git://github.com/tooth-is-silver/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:tooth-is-silver/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/tooth-is-silver/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/tooth-is-silver/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":187,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/25\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/25\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/25\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/25/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/25/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/25/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/413937e521e1649cf0ee2efbd5daf3aa509632c3\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/26\",\"id\":2662325565,\"node_id\":\"PR_kwDOPJuWzM6er909\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/26\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/26.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/26.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/26\",\"number\":26,\"state\":\"open\",\"locked\":false,\"title\":\"[5팀 김유현] Chapter 1-2. 프레임워크 없이 SPA 만들기 \",\"user\":{\"login\":\"yuhyeon99\",\"id\":83055700,\"node_id\":\"MDQ6VXNlcjgzMDU1NzAw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/83055700?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yuhyeon99\",\"html_url\":\"https://github.com/yuhyeon99\",\"followers_url\":\"https://api.github.com/users/yuhyeon99/followers\",\"following_url\":\"https://api.github.com/users/yuhyeon99/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yuhyeon99/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yuhyeon99/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yuhyeon99/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yuhyeon99/orgs\",\"repos_url\":\"https://api.github.com/users/yuhyeon99/repos\",\"events_url\":\"https://api.github.com/users/yuhyeon99/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yuhyeon99/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://yuhyeon99.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n<details markdown=\\\"1\\\">\\r\\n  <summary><strong>이슈로 정리한 각 기능별 개요, 구현 요약, 구현하면서 느낀 점</strong></summary>\\r\\n<div>\\r\\n    <ul>\\r\\n        <li>yuhyeon99/front_6th_chapter1-2/issues/1</li>\\r\\n        <li>yuhyeon99/front_6th_chapter1-2/issues/2</li>\\r\\n        <li>yuhyeon99/front_6th_chapter1-2/issues/3</li>\\r\\n        <li>yuhyeon99/front_6th_chapter1-2/issues/4</li>\\r\\n        <li>yuhyeon99/front_6th_chapter1-2/issues/5</li>\\r\\n        <li>yuhyeon99/front_6th_chapter1-2/issues/6</li>\\r\\n        <li>yuhyeon99/front_6th_chapter1-2/issues/7</li>\\r\\n    </ul>\\r\\n</div>\\r\\n</details>\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n1. **만족스러운 구현:**\\r\\n  - (yuhyeon99/front_6th_chapter1-2/issues/4 를 이용한 이벤트 위임: \\r\\n    - 모든 이벤트 리스너를 실제 DOM 노드에 개별적으로 등록하지 않고, 컨테이너 최상단에 한 번만 등록\\r\\n    - 이로 인해 VNode가 업데이트될 때마다 리스너를 해제하고 다시 등록하는 비용이 줄어듬\\r\\n  - yuhyeon99/front_6th_chapter1-2/issues/5 의 재귀적 렌더링 구조: \\r\\n    - VNode 객체를 실제 DOM 요소로 변환하는 `renderElement` 함수를 재귀적으로 구현하여, 복잡한 중첩 구조의 컴포넌트도 간결한 코드로 렌더링할 수 있었습니다.\\r\\n2. **리팩토링이 필요한 부분:**\\r\\n  - yuhyeon99/front_6th_chapter1-2/issues/6 함수의 **과도한 책임**\\r\\n    - 현재 `updateElement` 함수는 노드 타입 비교, 속성(props) 비교, 자식 노드 비교 및 교체 등 너무 많은 책임을 한 번에 처리하고 있습니다.\\r\\n    - 이로 인해 함수가 비대해지고 조건 분기가 복잡해져 가독성과 유지보수성이 떨어집니다.\\r\\n    - **개선 방향:** \\r\\n      - `updatePorps`, `updateChildren` 등 각 기능을 명확히 분리된 작은 함수로 리팩토링해야 합니다.\\r\\n      - 이로 인해 각 부분의 가독성과 유지보수를 용이하게 만들 수 있습니다.\\r\\n3. **코드 설계 관련 고민과 결정:**\\r\\n  - diff 알고리즘의 구현 과정\\r\\n    - 처음부터 완벽한 diff 알고리즘을 구현하기보다, 먼저 테스트를 만족하는데 집중하도록 구현하여 전체 렌더링 사이클을 완성하는데 집중했습니다.\\r\\n    - **\\\"동작하는 가장 간단한 버전\\\"을 먼저** 만들고 **점진적으로 개선**하는 전략이었습니다.\\r\\n    - 현재 방식은 리스트의 맨 앞에 아이템이 추가되거나 순서가 변경될 때, **모든 자식 노드를 새로 렌더링하는 비효율**을 유발합니다.\\r\\n    - 예시 코드: \\r\\n      - ```javascript\\r\\n        // 6. 자식 노드 diff\\r\\n        const newChildren = newNode.children || [];\\r\\n        const oldChildren = oldNode.children || [];\\r\\n        const newLength = newChildren.length;\\r\\n        const oldLength = oldChildren.length;\\r\\n      \\r\\n        // 1. 자식 노드 업데이트 (공통 길이만큼)\\r\\n        for (let i = 0; i < newLength; i++) {\\r\\n          updateElement(existingDom, newChildren[i], oldChildren[i], i);\\r\\n        }\\r\\n      \\r\\n        // 2. 남는 old 자식 노드들 제거 (뒤에서부터)\\r\\n        if (oldLength > newLength) {\\r\\n          for (let i = oldLength - 1; i >= newLength; i--) {\\r\\n            const childToRemove = existingDom.childNodes[i];\\r\\n            if (childToRemove) {\\r\\n              existingDom.removeChild(childToRemove);\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        ```\\r\\n          - 이 코드는 `newChildren`과 `oldChildren` 배열을 인덱스(index)를 기준으로 순차적으로 비교합니다.(e.g. `newChildren[0]`, `oldChildren[0]` 비교)\\r\\n          - 문제점: 원래 자식 노드 리스트가 `[A, B, C]`, 새로운 자식 노드 리스트가 `[X, A, B, C]`일 경우에 \\r\\n            - X와 A 비교 업데이트 => A와 B 비교 업데이트 => B와 C 비교 업데이트 => C와 undefined(oldNode에 없음) 순서로 진행됨\\r\\n            - 현재 방식 때문에 `updateElement`는 **모두 \\\"다른 노드\\\"로 인식하고 불필요하게 DOM을 새로 생성하거나 변경**합니다.\\r\\n            - 이는 DOM 조작 비용에 악영향을 미칩니다.\\r\\n    - 이러한 문제를 **각 리스트 아이템에 고유한 `key` 속성을 부여해서 해결할 수 있는 방법**이 있다고 확인했고 향후 수정해볼 생각입니다.\\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n>처음 이 과제를 접했을 때는 1주차 과제보다 난이도는 쉽다고 생각했지만,\\r\\n>어떻게 시작해야할지에 대한 고민은 더 막막했어요.\\r\\n>\\r\\n>곰곰히 생각해보면 이러한 함수들을 왜 써야하고, 어떻게 적용되는지에 대한 이해도가 낮아서 그런 것 같습니다.\\r\\n>그래서, **이슈를 작성하면서 분할과 정복 방식으로 과제를 해결**해 나갔습니다.\\r\\n>\\r\\n>그러다 보니 작성한 코드에 대해서 이유를 찾게되고, 더 나은 코드에 대해서도 고민할 수 있는 계기가 되어서\\r\\n>한 주간 많이 배우고 학습했습니다.(이런 방식을 소개해준 [지훈님](https://github.com/JiHoon-0330). 감사합니다!)\\r\\n\\r\\n>이러한 학습 방법을 통해 한 주간 개발하며 얻은 지식은\\r\\n>- 가상돔\\r\\n>- 리액트(컴포넌트, 상태) 동작 원리\\r\\n>- diff 알고리즘 \\r\\n>같은 저에게 생소한 개념들이었습니다.\\r\\n\\r\\n>물론, 다 이해하진 못했고 아직 부족한 점도 많다고 생각합니다.\\r\\n>그래도 이런 식으로 접하게 되고, 나중에 여러 번 복기한다면\\r\\n>더 명확하고 상세하게 이해하게되어 기본기가 탄탄해질거라 믿습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n>현재 과제에서 구현하게되는 함수들이 왜 필요한지에 대한 사전 지식이 없는 사람들을 위해서\\r\\n>JSX 트렌스파일에 관한 내용을 좀 더 다뤄보면 좋을 것 같다고 생각했습니다.\\r\\n>\\r\\n>좋았던 점은 주어진 함수 내용을 작성하면 해결되는 과제였기에 학습 목적에서 **막히는 점 없이\\r\\n>많이 공부할 수 있어서 좋았습니다!**\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n1. 함수 내 조건문이 길어지고 있는데 가독성을 위해 분리하거나 `early return` 방식이 더 나은 구간이 있을까요? 예: `updateAttributes` / `createElement` 내부\\r\\n2. 현재 `updateElement`에서 타입이 다른 VNode는 교체하고 텍스트 노드는 바로 비교하는 방식이 `React`의 `Reconciliation`과 유사하다고 생각했는데 이 접근 방식에 논리적 허점이나 성능 문제가 있을까요?\\r\\n\",\"created_at\":\"2025-07-13T14:36:29Z\",\"updated_at\":\"2025-07-21T01:29:38Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"a3575cadf54d1bd47f861cbfbb3a8b875ab6c8dd\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/26/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/26/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/26/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/c75b8cef8ffe4551e0a0bec26da68ed76f48a099\",\"head\":{\"label\":\"yuhyeon99:main\",\"ref\":\"main\",\"sha\":\"c75b8cef8ffe4551e0a0bec26da68ed76f48a099\",\"user\":{\"login\":\"yuhyeon99\",\"id\":83055700,\"node_id\":\"MDQ6VXNlcjgzMDU1NzAw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/83055700?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yuhyeon99\",\"html_url\":\"https://github.com/yuhyeon99\",\"followers_url\":\"https://api.github.com/users/yuhyeon99/followers\",\"following_url\":\"https://api.github.com/users/yuhyeon99/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yuhyeon99/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yuhyeon99/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yuhyeon99/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yuhyeon99/orgs\",\"repos_url\":\"https://api.github.com/users/yuhyeon99/repos\",\"events_url\":\"https://api.github.com/users/yuhyeon99/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yuhyeon99/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018827775,\"node_id\":\"R_kgDOPLoT_w\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"yuhyeon99/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"yuhyeon99\",\"id\":83055700,\"node_id\":\"MDQ6VXNlcjgzMDU1NzAw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/83055700?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yuhyeon99\",\"html_url\":\"https://github.com/yuhyeon99\",\"followers_url\":\"https://api.github.com/users/yuhyeon99/followers\",\"following_url\":\"https://api.github.com/users/yuhyeon99/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yuhyeon99/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yuhyeon99/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yuhyeon99/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yuhyeon99/orgs\",\"repos_url\":\"https://api.github.com/users/yuhyeon99/repos\",\"events_url\":\"https://api.github.com/users/yuhyeon99/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yuhyeon99/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/yuhyeon99/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/yuhyeon99/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T06:08:42Z\",\"updated_at\":\"2025-07-17T16:37:46Z\",\"pushed_at\":\"2025-07-17T16:37:43Z\",\"git_url\":\"git://github.com/yuhyeon99/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:yuhyeon99/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/yuhyeon99/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/yuhyeon99/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":190,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":7,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":7,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/26\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/26\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/26\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/26/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/26/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/26/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/c75b8cef8ffe4551e0a0bec26da68ed76f48a099\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/27\",\"id\":2662367485,\"node_id\":\"PR_kwDOPJuWzM6esID9\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/27\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/27.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/27.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/27\",\"number\":27,\"state\":\"open\",\"locked\":false,\"title\":\"[1팀 이의찬] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2) \",\"user\":{\"login\":\"Legitgoons\",\"id\":101088491,\"node_id\":\"U_kgDOBgZ86w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/101088491?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Legitgoons\",\"html_url\":\"https://github.com/Legitgoons\",\"followers_url\":\"https://api.github.com/users/Legitgoons/followers\",\"following_url\":\"https://api.github.com/users/Legitgoons/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Legitgoons/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Legitgoons/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Legitgoons/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Legitgoons/orgs\",\"repos_url\":\"https://api.github.com/users/Legitgoons/repos\",\"events_url\":\"https://api.github.com/users/Legitgoons/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Legitgoons/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### [배포 링크](https://legitgoons.github.io/front_6th_chapter1-2/)\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [ ] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [ ] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [ ] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [ ] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [ ] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n- 과제를 구현하기 전, 왜 VirtualDOM을 써야하는지 학습했고 깊게 이해하였습니다.\\r\\n- JSX가 실제로 렌더링되어 사용자에게 보여지는 과정을 이해하게 되었습니다.\\r\\n  - `JSX` → `createVNode` → `normalizeVNode` → `createElement` → (`EventManager`) -> `renderElement`                                                    \\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n  - diff 알고리즘을 구현해보지 못해 추후 도전해볼 예정입니다.\\r\\n  - 왜 이렇게 구현하는가?는 이해했지만, 코드 레벨까지는 내려가서 고민해보지 못해 아쉽습니다. 이 부분도 추가적으로 개선해보고 싶습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n- 코드 레벨까지 내려가서 학습을 진행하지 못해, 따로 코드 리뷰받고 싶은 내용은 없습니다\",\"created_at\":\"2025-07-13T15:53:20Z\",\"updated_at\":\"2025-07-21T06:26:02Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"c34330c46a4c7bf6ebf855b48fd46059aaadf0af\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/27/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/27/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/27/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/d3749524e2e04c55f8b3cf90b2cfddeb1158f8d6\",\"head\":{\"label\":\"Legitgoons:main\",\"ref\":\"main\",\"sha\":\"d3749524e2e04c55f8b3cf90b2cfddeb1158f8d6\",\"user\":{\"login\":\"Legitgoons\",\"id\":101088491,\"node_id\":\"U_kgDOBgZ86w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/101088491?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Legitgoons\",\"html_url\":\"https://github.com/Legitgoons\",\"followers_url\":\"https://api.github.com/users/Legitgoons/followers\",\"following_url\":\"https://api.github.com/users/Legitgoons/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Legitgoons/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Legitgoons/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Legitgoons/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Legitgoons/orgs\",\"repos_url\":\"https://api.github.com/users/Legitgoons/repos\",\"events_url\":\"https://api.github.com/users/Legitgoons/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Legitgoons/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018418545,\"node_id\":\"R_kgDOPLPVcQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"Legitgoons/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"Legitgoons\",\"id\":101088491,\"node_id\":\"U_kgDOBgZ86w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/101088491?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Legitgoons\",\"html_url\":\"https://github.com/Legitgoons\",\"followers_url\":\"https://api.github.com/users/Legitgoons/followers\",\"following_url\":\"https://api.github.com/users/Legitgoons/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Legitgoons/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Legitgoons/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Legitgoons/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Legitgoons/orgs\",\"repos_url\":\"https://api.github.com/users/Legitgoons/repos\",\"events_url\":\"https://api.github.com/users/Legitgoons/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Legitgoons/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/Legitgoons/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/Legitgoons/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T08:07:11Z\",\"updated_at\":\"2025-07-21T06:26:06Z\",\"pushed_at\":\"2025-07-21T06:26:02Z\",\"git_url\":\"git://github.com/Legitgoons/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:Legitgoons/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/Legitgoons/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/Legitgoons/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":125,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"b9cdab63537921ebebb1e3051f5ff90d7496f0de\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/27\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/27\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/27\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/27/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/27/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/27/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/d3749524e2e04c55f8b3cf90b2cfddeb1158f8d6\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/28\",\"id\":2662399340,\"node_id\":\"PR_kwDOPJuWzM6esP1s\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/28\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/28.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/28.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/28\",\"number\":28,\"state\":\"open\",\"locked\":false,\"title\":\"[5팀 양성진]  Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"Yangs1s\",\"id\":92585734,\"node_id\":\"U_kgDOBYS_Bg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/92585734?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Yangs1s\",\"html_url\":\"https://github.com/Yangs1s\",\"followers_url\":\"https://api.github.com/users/Yangs1s/followers\",\"following_url\":\"https://api.github.com/users/Yangs1s/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Yangs1s/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Yangs1s/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Yangs1s/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Yangs1s/orgs\",\"repos_url\":\"https://api.github.com/users/Yangs1s/repos\",\"events_url\":\"https://api.github.com/users/Yangs1s/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Yangs1s/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"\\r\\n## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://yangs1s.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [X] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [X] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [X] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n개념관련 공부를 통해서 알게된 내용이 좀 생겼다.\\r\\n\\r\\n1. 브라우저의 로딩 과정\\r\\n- 전반적인 과정을 파악을 했고 그 흐름을 설명할수 있을거 같아요\\r\\n\\r\\n2. VirtualDom\\r\\n - 왜 가상돔을 이용하는지 이유를 정확하게 알게되었습니다.\\r\\n\\r\\n3. 당연하다고 생각한걸 이해해가는 과정이 좀 많았던 과제였던거 같아요\\r\\n- 브라우저의 로딩과정, 그리고 가상돔의 대한 내용을 공부를 하면서 리액트가 어떤 작동하는지, 이런것들은 약간 느껴보는 \\r\\n과제였던거 같습니다.\\r\\n- 그냥 리액트에서 당연하게 제공해주던 기능들이 복잡한 과정을 통해 구현되고 왜 그렇게 만들어졌는지 몸소 깨닫는?? 이런\\r\\n생각을 많이 하게 되는 과제였던거 같아요.\\r\\n4. 구현 과정에서 추천해준 책을 읽어 봤지만 많이 읽어보진 못해서 해결에는 큰도움을 못받은거 같았습니다.\\r\\n5. flat, Map,set을 약간 알게되었습니다.\\r\\n- 진짜 이런걸 많이 사용해본적도, 알려준적도 없었는데, 하다보니까 과제에 필요할거 같아서, 사용하게 되었습니다. \\r\\n- cdn도 보고 활용이 잘 안되면 AI를 이용해서 작업을 했습니다. \\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n```\\r\\nexport function normalizeVNode(vNode) {\\r\\n  // 1. falsy 값 처리\\r\\n  if (vNode === null || vNode === undefined || typeof vNode === \\\"boolean\\\") {\\r\\n    return \\\"\\\";\\r\\n  }\\r\\n  // 2. 문자열 또는 숫자 처리\\r\\n  if (typeof vNode === \\\"string\\\" || typeof vNode === \\\"number\\\") {\\r\\n    return vNode.toString();\\r\\n  }\\r\\n\\r\\n  if (typeof vNode === \\\"object\\\" && typeof vNode.type === \\\"function\\\") {\\r\\n    return normalizeComponent(vNode);\\r\\n  }\\r\\n\\r\\n  // false 값은 자식 노드에서 제거되어야 한다.\\r\\n  if (vNode && typeof vNode === \\\"object\\\" && typeof vNode.type === \\\"string\\\") {\\r\\n    return {\\r\\n      type: vNode.type,\\r\\n      props: vNode.props,\\r\\n      children: (vNode.children || []).map(normalizeVNode).filter((child) => {\\r\\n        return child !== \\\"\\\";\\r\\n      }),\\r\\n    };\\r\\n  }\\r\\n\\r\\n  return vNode;\\r\\n}\\r\\n\\r\\nconst normalizeComponent = (componentVnode) => {\\r\\n  const { type, props, children } = componentVnode;\\r\\n\\r\\n  const propsWithChildren = { ...props, children: children };\\r\\n  const normalized = type(propsWithChildren);\\r\\n  return normalizeVNode(normalized);\\r\\n};\\r\\n\\r\\n```\\r\\n\\r\\n처음에는 테스트코드를 맞춰서 통과만 하자는 식으로 만들었다가 좀더 범용적으로 만들어보자 했을때,  컴퍼넌트의 중첩의 뎁스나 구조에 구애받지않게 재귀적인 처리를 사용.\\r\\n\\r\\n**리팩토링이 되었으면 하는 부분**\\r\\nif문이 당연 필요한 내용들이 많았던걸로 생각하는데 너무 남발한거 같아서.. 코드가 너무 지져분 한거 같습니다.\\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\nrenderElement,updateElement 부분을 할떄 가장 배울게 많았던거 같아요.\\r\\n완벽하게 알순 없지만 ,Diffing알고리즘의 기본적인 원리나, 재귀를 통해서 순회하는거나 Map,set과 같이\\r\\n저의 기준에서 잘 사용해보지 않고 처음 접해본것들도 참 많고 배울거도 많구나 하는게 많았습니다.\\r\\n그만큼 저의 기본적인 지식도 많이 부족하고 열심히 더 봐야겠다 하는 꺠달음을 얻는 효과?가 더 생겼습니다. \\r\\n\\r\\n하지만 AI의존도는 줄여보고자 했는데 노력은 해봤지만 생각보다 잘 되지는 않네요 \\r\\n\\r\\n\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n```\\r\\n// 가상 노드객체를 생성하는 함수\\r\\nexport function createVNode(type, props, ...children) {\\r\\n  // 자바스크립트에서 0은 falsy값이라 테스트코드에서는 출력이 안될수 있으므로\\r\\n  // 예외처리를 해줘야할거 같음\\r\\n\\r\\n  return {\\r\\n    type,\\r\\n    props,\\r\\n    children: flattenChildren(children),\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction flattenChildren(children) {\\r\\n  return children.flat(Infinity).filter((child) => !isFalsy(child));\\r\\n}\\r\\n\\r\\nfunction isFalsy(value) {\\r\\n  return value === false || value === null || value === undefined;\\r\\n}\\r\\n\\r\\n```\\r\\n저는 그냥 flat으로 infinity뎁스를 줘서 만들었지만 flat을 펑션으로 만들어서 하시는 분들도 있으시더라고요,\\r\\n저는 오히려 짧지만 그역할을 하면 이상이 없다고 생각이 드는데, flat을 쓰는게 맞을까 궁금합니다.\\r\\n\\r\\n```\\r\\nfunction updateAttributes($el, props) {\\r\\n  if (props.props) {\\r\\n    for (const key in props.props) {\\r\\n      const value = props.props[key];\\r\\n\\r\\n      if (key === \\\"className\\\") {\\r\\n        $el.setAttribute(\\\"class\\\", props.props[\\\"className\\\"]);\\r\\n      } else if (key.startsWith(\\\"on\\\") && typeof value === \\\"function\\\") {\\r\\n        const eventType = key.slice(2).toLowerCase();\\r\\n        addEvent($el, eventType, value);\\r\\n      } else if (typeof value === \\\"boolean\\\" || value === null) {\\r\\n        // Boolean 또는 null 값 처리\\r\\n        if (key === \\\"checked\\\" || key === \\\"selected\\\") {\\r\\n          // Property만 설정하고 DOM 속성은 제거\\r\\n          if (value === null) {\\r\\n            $el[key] = false; // null이면 기본값으로\\r\\n          } else {\\r\\n            $el[key] = value;\\r\\n          }\\r\\n          $el.removeAttribute(key);\\r\\n        } else {\\r\\n          // 일반 boolean 속성들 (disabled, readOnly 등)\\r\\n          if (value === null) {\\r\\n            $el[key] = false; // null이면 기본값으로\\r\\n            $el.removeAttribute(key);\\r\\n          } else {\\r\\n            $el[key] = value;\\r\\n            if (value) {\\r\\n              $el.setAttribute(key, \\\"\\\");\\r\\n            } else {\\r\\n              $el.removeAttribute(key);\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      } else if (!key.startsWith(\\\"on\\\")) {\\r\\n        if (value === null || value === undefined) {\\r\\n          $el.removeAttribute(key);\\r\\n        } else {\\r\\n          $el.setAttribute(key, value);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return {\\r\\n    ...props,\\r\\n    $el,\\r\\n  };\\r\\n}\\r\\n\\r\\n```\\r\\ncreateElement에서 각각의 속성이나 class처리하는데 if문을 많이 썻는데, switch로 쓰기엔 그 case들이 너무 다양해서 if문으로 작성했는데 이렇게 너무 많이 쓰는게 좀 더럽기도 하고 보는 사람이 되게 어려울거 같아서.. 고민을 많이 했는데 보통 이럴때는 어떻게 처리해주면 좀 더 깔끔하게 코드를 만들수 있을까요..?\\r\\n\\r\\n\",\"created_at\":\"2025-07-13T16:36:32Z\",\"updated_at\":\"2025-07-20T01:07:11Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"29aad6c0d0857e461b4d44a7042200d3689b4e6b\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/28/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/28/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/28/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/90c0878fd747d5f1a94f0511346f4d31e190cb3d\",\"head\":{\"label\":\"Yangs1s:main\",\"ref\":\"main\",\"sha\":\"90c0878fd747d5f1a94f0511346f4d31e190cb3d\",\"user\":{\"login\":\"Yangs1s\",\"id\":92585734,\"node_id\":\"U_kgDOBYS_Bg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/92585734?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Yangs1s\",\"html_url\":\"https://github.com/Yangs1s\",\"followers_url\":\"https://api.github.com/users/Yangs1s/followers\",\"following_url\":\"https://api.github.com/users/Yangs1s/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Yangs1s/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Yangs1s/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Yangs1s/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Yangs1s/orgs\",\"repos_url\":\"https://api.github.com/users/Yangs1s/repos\",\"events_url\":\"https://api.github.com/users/Yangs1s/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Yangs1s/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018593576,\"node_id\":\"R_kgDOPLaBKA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"Yangs1s/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"Yangs1s\",\"id\":92585734,\"node_id\":\"U_kgDOBYS_Bg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/92585734?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Yangs1s\",\"html_url\":\"https://github.com/Yangs1s\",\"followers_url\":\"https://api.github.com/users/Yangs1s/followers\",\"following_url\":\"https://api.github.com/users/Yangs1s/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Yangs1s/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Yangs1s/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Yangs1s/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Yangs1s/orgs\",\"repos_url\":\"https://api.github.com/users/Yangs1s/repos\",\"events_url\":\"https://api.github.com/users/Yangs1s/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Yangs1s/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/Yangs1s/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/Yangs1s/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T15:44:43Z\",\"updated_at\":\"2025-07-18T00:47:19Z\",\"pushed_at\":\"2025-07-18T00:47:31Z\",\"git_url\":\"git://github.com/Yangs1s/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:Yangs1s/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/Yangs1s/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/Yangs1s/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":276,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":3,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":3,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/28\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/28\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/28\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/28/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/28/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/28/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/90c0878fd747d5f1a94f0511346f4d31e190cb3d\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/29\",\"id\":2662688415,\"node_id\":\"PR_kwDOPJuWzM6etWaf\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/29\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/29.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/29.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/29\",\"number\":29,\"state\":\"open\",\"locked\":false,\"title\":\"[7팀 최용훈] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"yhun940731\",\"id\":56425514,\"node_id\":\"MDQ6VXNlcjU2NDI1NTE0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/56425514?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yhun940731\",\"html_url\":\"https://github.com/yhun940731\",\"followers_url\":\"https://api.github.com/users/yhun940731/followers\",\"following_url\":\"https://api.github.com/users/yhun940731/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yhun940731/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yhun940731/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yhun940731/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yhun940731/orgs\",\"repos_url\":\"https://api.github.com/users/yhun940731/repos\",\"events_url\":\"https://api.github.com/users/yhun940731/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yhun940731/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\nhttps://yhun940731.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [ ] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [ ] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [ ] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [ ] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [ ] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n- 리액트의 가상돔에 대해서는 그저 면접 답변을 위해서만 외웠던 내용이었다. 이번 과제를 통해 개념을 좀 더 톺아볼 수 있는 기회가 되었다.\\r\\n다만 시간 부족과 파편적으로 알고있는 개념들이 논리적인 코드로 작성되지 못했다. 과제를 완벽히 수행하지 못한 점에 대해 아쉽게 생각된다.\\r\\n- 특히 eventManager 파트는 위임을 통해 핸들러를 어떻게 관리할지에 대한 고민으로 꽤나 많은 시간을 소모했다.\\r\\n막연하게 산개된 논리 흐름을 구체화 하는 능력이 부족하다고 생각된다. 차근차근 생각하며 코드를 작성하는 습관을 들여야겠다.\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n- React가 가상돔을 객체형태로 관리하고 이벤트를 최상위에 위임해서 관리하는 건 알았지만, 깊게 생각을 안해봤었다. 이번 기회에 어떤 식으로 가상돔을 생성하는지, 이벤트 위임을 관리하는지 학습하게 되었다. \\r\\n- WeakMap, WeakSet의 개념에 대해 학습했다.\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n- AI의 도움을 많이 받기도 했고, 모든 기능을 완성하지 못했기 때문에 만족스럽지 않다. 좀 더 시간을 투자해야할 필요를 느끼고 있다.\\r\\n- eventManager에서 eventTypes의 경우, event type이 모두 해제되었을 때, 해당 type을 제거하는 코드가 필요할 것 같다. 다만 효율적인 방법이 생각나지 않아 그만두었다.\\r\\n\\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n- event를 상위 container에 위임하고, Map, Set을 통해 관리하는 방식이 인상 깊었다.\\r\\n- React의 작동원리에 대해 따로 시간내서 학습해야겠다. 과제하기에 급급해서 개념에 대한 이해가 부족하다.\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\\r\\n- eventManager를 어떤식으로 접근하는게 효율적인 방식인지에 대한 의문이 있습니다. WeakMap의 경우 Map과 다르게 유용한 프로토타입 메서드가 없는데, 차라리 Map으로 순회 메서드 등을 사용하는게 오히려 효과적일까 생각했습니다.\\r\\n- updateAttribute하는 부분에서 각 엘리먼트마다 프로퍼티들이 다르고, React와 이름, 타입 등이 조금 씩 다른 경우가 있는 것 같은데, 모든 경우에 대해 분기로 대응하는 방법 말고 또 뭐가 있을까요?\\r\\n\",\"created_at\":\"2025-07-14T00:09:44Z\",\"updated_at\":\"2025-07-19T03:32:57Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"e2ecb13296798296823366ea61d52c012d037781\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/29/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/29/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/29/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/cddb0e2e0d4333f4e57ff8306a0cef38e9a87c9f\",\"head\":{\"label\":\"yhun940731:main\",\"ref\":\"main\",\"sha\":\"cddb0e2e0d4333f4e57ff8306a0cef38e9a87c9f\",\"user\":{\"login\":\"yhun940731\",\"id\":56425514,\"node_id\":\"MDQ6VXNlcjU2NDI1NTE0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/56425514?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yhun940731\",\"html_url\":\"https://github.com/yhun940731\",\"followers_url\":\"https://api.github.com/users/yhun940731/followers\",\"following_url\":\"https://api.github.com/users/yhun940731/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yhun940731/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yhun940731/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yhun940731/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yhun940731/orgs\",\"repos_url\":\"https://api.github.com/users/yhun940731/repos\",\"events_url\":\"https://api.github.com/users/yhun940731/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yhun940731/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018413270,\"node_id\":\"R_kgDOPLPA1g\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"yhun940731/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"yhun940731\",\"id\":56425514,\"node_id\":\"MDQ6VXNlcjU2NDI1NTE0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/56425514?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yhun940731\",\"html_url\":\"https://github.com/yhun940731\",\"followers_url\":\"https://api.github.com/users/yhun940731/followers\",\"following_url\":\"https://api.github.com/users/yhun940731/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yhun940731/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yhun940731/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yhun940731/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yhun940731/orgs\",\"repos_url\":\"https://api.github.com/users/yhun940731/repos\",\"events_url\":\"https://api.github.com/users/yhun940731/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yhun940731/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/yhun940731/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/yhun940731/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T07:52:12Z\",\"updated_at\":\"2025-07-19T03:18:39Z\",\"pushed_at\":\"2025-07-19T03:28:05Z\",\"git_url\":\"git://github.com/yhun940731/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:yhun940731/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/yhun940731/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/yhun940731/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":146,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/29\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/29\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/29\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/29/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/29/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/29/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/cddb0e2e0d4333f4e57ff8306a0cef38e9a87c9f\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/30\",\"id\":2662968492,\"node_id\":\"PR_kwDOPJuWzM6euays\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/30\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/30.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/30.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/30\",\"number\":30,\"state\":\"open\",\"locked\":false,\"title\":\"[9팀 임두현] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"ldhldh07\",\"id\":109324599,\"node_id\":\"U_kgDOBoQpNw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/109324599?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ldhldh07\",\"html_url\":\"https://github.com/ldhldh07\",\"followers_url\":\"https://api.github.com/users/ldhldh07/followers\",\"following_url\":\"https://api.github.com/users/ldhldh07/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ldhldh07/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ldhldh07/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ldhldh07/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ldhldh07/orgs\",\"repos_url\":\"https://api.github.com/users/ldhldh07/repos\",\"events_url\":\"https://api.github.com/users/ldhldh07/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ldhldh07/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://ldhldh07.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n2주차 과제는 1주차 과제와는 다른 해결과정을 요구했습니다. 1주차는 자유도가 높고 렌더링, 이벤트 위임과 관련된 동작을 구현해보는 과정에서 직접 로직을 구성하고 프로젝트 전체의 아키텍쳐를 짜는 경험을 제공했습니다.\\r\\n\\r\\n반면 2주차는 어느정도 정해진 로직을 구현해야했습니다.\\r\\n그래서 이번 과제에서 학습 포인트를 두가지로 잡았습니다.\\r\\n\\r\\n- SPA의 로직을 이해한다\\r\\n- 정해진 로직을 바닐라 JS 코드로 구현하는 능력을 기른다.\\r\\n\\r\\n\\r\\n#### AI 활용 과정\\r\\n\\r\\n해당 방향성에 맞게 AI를 활용하는 방식 또한 달랐습니다.\\r\\n\\r\\ndocs를 만들어서 현재 진행사항이나 rule 그리고 전체적인 계획을 기록해서 ai가 보다 큰 관점에서 대답할 수 있도록 하는 것은 유지했습니다.\\r\\n추가적으로 아래와 같이 지침을 정했습니다.\\r\\n\\r\\n- 직접 코드를 작성하거나 알려주지 않도록 했습니다. 그리고 단계별로 논리를 진행할 수 있도록 방향성을 말해달라 했습니다.\\r\\n- 실제 기존 SPA 기술들이 작동하는 방식을 참고해서 적용해달라고 했습니다.\\r\\n- 문제 해결 또한 원인을 분석하고 그 원인만 파악해달라고 했습니다.\\r\\n- 추가적으로 이슈가 생겼을 경우 그 트러블슈팅 과정을 정리해서 문서로 남기도록 했습니다.\\r\\n\\r\\n이는 이번 과제가 동작 로직을 이해하는 것에 중점이 있다 생각했고 이를 위해서는 어느정도 직접 고민하고 작성해야 생각했기 때문입니다.\\r\\n\\r\\n최대한 직접 코딩을 하고자 하였고, 적당한 고민 후에는 고민한 내용을 공유하고 그에 맞게 제시된 방향성으로 새롭게 로직을 만들어 나가는 식으로 진행했습니다. \\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n#### SPA의 동작\\r\\n직접 코드를 작성하고 동작을 시켜보니 가상돔이 필요한 이유를 알 수 있었습니다.\\r\\n\\r\\n가상DOM diff 로직중에서 렌더링 최적화에 기여한다고 판단되는 로직들이 있었습니다.\\r\\n\\r\\n- 속성만 변경될 경우 타입은 유지한채 속성만 변경(updateAttribute)\\r\\n```js\\r\\nfunction updateAttributes(target, newProps, oldProps) {\\r\\n  const attributes = new Set([...Object.keys(newProps || {}), ...Object.keys(oldProps || {})]);\\r\\n\\r\\n  attributes.forEach((attribute) => {\\r\\n    const newValue = newProps?.[attribute];\\r\\n    const oldValue = oldProps?.[attribute];\\r\\n    \\r\\n    if (newValue !== oldValue) {\\r\\n      // 값이 다를 때만 DOM 조작 수행\\r\\n      // 같으면 아무것도 하지 않아서 불필요한 setAttribute 방지\\r\\n      \\r\\n      if (attribute.startsWith(\\\"on\\\")) {\\r\\n        // 이벤트 핸들러 변경 처리\\r\\n      } else if (newValue == null) {\\r\\n        // 속성 제거\\r\\n      } else {\\r\\n        // 속성 설정\\r\\n      }\\r\\n    }\\r\\n    // newValue === oldValue인 경우 완전히 스킵\\r\\n  });\\r\\n}\\r\\n\\r\\n// updateElement에서 호출\\r\\nif (newNode.type === oldNode.type) {\\r\\n  // 같은 타입이면 요소 재사용하고 속성만 업데이트\\r\\n  updateAttributes(targetElement, newNode.props, oldNode.props);\\r\\n} else {\\r\\n  // 다른 타입이면 요소 전체 교체\\r\\n  parentElement.replaceChild(newChildElement, targetChildElement);\\r\\n}\\r\\n```\\r\\n- 특수 속성 직접 접근 수정\\r\\n```js\\r\\nconst specialProperties = [\\\"checked\\\", \\\"selected\\\", \\\"disabled\\\", \\\"readOnly\\\"];\\r\\n\\r\\nif (newValue == null) {\\r\\n  if (specialProperties.includes(attribute)) {\\r\\n    target[attribute] = false;\\r\\n    // DOM property에 직접 접근, setAttribute보다 빠름\\r\\n  } else {\\r\\n    target.removeAttribute(attribute);\\r\\n    // 일반 속성은 attribute 제거\\r\\n  }\\r\\n} else {\\r\\n  if (specialProperties.includes(attribute)) {\\r\\n    target[attribute] = newValue;\\r\\n    // Boolean 속성은 property로 직접 설정\\r\\n    // target.checked = true가 target.setAttribute('checked', 'true')보다 빠름\\r\\n  } else {\\r\\n    target.setAttribute(attribute, newValue);\\r\\n    // 일반 속성은 setAttribute 사용\\r\\n  }\\r\\n}\\r\\n```\\r\\n- 자식 노드 업데이트 순서로 인한 최적화\\r\\n```js\\r\\nconst newChildren = newNode.children || [];\\r\\nconst oldChildren = oldNode.children || [];\\r\\nconst commonLength = Math.min(newChildren.length, oldChildren.length);\\r\\n\\r\\n// 1단계: 공통 길이만큼 기존 요소들 재사용\\r\\nfor (let i = 0; i < commonLength; i++) {\\r\\n  updateElement(targetElement, newChildren[i], oldChildren[i], i);\\r\\n  // 기존 DOM 요소를 최대한 재사용\\r\\n}\\r\\n\\r\\n// 2단계: 초과하는 기존 요소들 삭제 (역순)\\r\\nif (oldChildren.length > newChildren.length) {\\r\\n  for (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n    targetElement.removeChild(targetElement.childNodes[i]);\\r\\n    // 뒤에서부터 삭제해야 인덱스가 안 꼬임\\r\\n    // 앞에서부터 삭제하면 removeChild 후 인덱스가 변경됨\\r\\n  }\\r\\n}\\r\\n\\r\\n// 3단계: 새로운 요소들 추가\\r\\nif (newChildren.length > oldChildren.length) {\\r\\n  for (let i = oldChildren.length; i < newChildren.length; i++) {\\r\\n    targetElement.appendChild(createElement(newChildren[i]));\\r\\n    // 새로 생성이 필요한 요소들만 createElement 호출\\r\\n  }\\r\\n}\\r\\n```\\r\\n- 이벤트 위임 방식\\r\\n```js\\r\\nconst prevContainers = new WeakSet();\\r\\n\\r\\nsetupEventListeners(root) {\\r\\n  if (prevContainers.has(root)) return;\\r\\n  // 같은 root에 중복으로 이벤트 등록하는 것 방지\\r\\n  \\r\\n  prevContainers.add(root);\\r\\n  registeredEvents.forEach((eventType) => {\\r\\n    root.addEventListener(eventType, (event) => {\\r\\n      let currentTarget = event.target;\\r\\n      \\r\\n      while (currentTarget && currentTarget !== root) {\\r\\n        const elementEvents = eventStore.get(currentTarget);\\r\\n        if (elementEvents && elementEvents.has(eventType)) {\\r\\n          // 해당 요소에 등록된 핸들러가 있으면 실행\\r\\n          const handlers = elementEvents.get(eventType);\\r\\n          handlers.forEach((handler) => handler(event));\\r\\n        }\\r\\n        currentTarget = currentTarget.parentElement;\\r\\n        // 이벤트 버블링을 활용해 부모로 올라가며 핸들러 찾기\\r\\n      }\\r\\n    });\\r\\n  });\\r\\n}\\r\\n\\r\\naddEvent(element, eventType, handler) {\\r\\n  registeredEvents.add(eventType);\\r\\n  // 실제 addEventListener는 하지 않고 Map에만 저장\\r\\n  // root에 위임된 리스너가 나중에 이 Map을 참조해서 핸들러 실행\\r\\n  \\r\\n  if (eventStore.has(element)) {\\r\\n    // 기존 요소에 새 이벤트 추가\\r\\n  } else {\\r\\n    // 새 요소에 첫 이벤트 등록\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n\\r\\n실제 DOM을 전체 재렌더링한다면 element 생성 -> 속성 설정 -> 내용 설정 -> appendChild와 같은 단계를 거쳐 새롭게 element를 만들고 전체를 다시 갈아끼워야 합니다.\\r\\n\\r\\n대신하여 이루어지는 가상 DOM에서는 어떤 식으로 최적화를 하는지 직접 작성함으로서 체감할 수 있었습니다.\\r\\n\\r\\n\\r\\n#### vNode의 데이터 구조\\r\\n\\r\\n이 최적화의 바탕이 되는것은 vNode의 객체 구조입니다.\\r\\n```js\\r\\n// src/lib/createVNode.js\\r\\nexport function createVNode(type, props, ...children) {\\r\\n  return {\\r\\n    type: type,                    // 함수 혹은 타입\\r\\n    props: props,                  // 속성\\r\\n    children: children.flat(2).filter(...)  // 평탄화된 자식요소\\r\\n  };\\r\\n}\\r\\n```\\r\\n- 객체 구조로서 생성 및 수정이 빠름\\r\\n- 메모리가 가벼움\\r\\n\\r\\n이 객체 구조로 인해 diff로 비교를 빠르게 할 수 있고 실제로 바뀐 부분만 찾아내어 실제 DOM 조작을 할 수 있습니다.\\r\\n과제를 수행하면서 초기에 이 vNode의 구조를 파악하는 것이 핵심이었습니다. 관련한 로직들을 개발할 때 이 구조를 계속 떠올리고 이 구조를 만들거나 혹은 조작하려면 어떤식으로 작동해야 할지 고민해야 했습니다. 특히 type에 함수가 들어가며 그 함수를 동작시키는 개념을 이해해야 했습니다.\\r\\n\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n처음에 언급했던 두가지 중 spa동작에 대한 이해도는 높아졌습니다.\\r\\n반면 자바스크립트 코드 작성에 대해서는 기본 자바스크립트 문법도 많이 잊어버리고 있었고, 아직 좀 더 발전해야겠다는 생각이 들었습니다.\\r\\n\\r\\n#### 가상DOM / 실제DOM 구분하기\\r\\n\\r\\n과제에서 신경써야 할 부분은 가상DOM을 처리해야할 때와 실제DOM을 처리해야할 때였습니다.\\r\\n\\r\\n- 타입, 속성, 내용 등의 객체 정보를 이용해서 비교하는 로직 -> 가상 DOM\\r\\n- 해당 diff로 알아낸 조작을 실행할 때  -> 실제 DOM\\r\\n\\r\\n간단한 분류지만 맥락을 잡기 전에는 어쩔때 실제 DOM을 호출하고, 조작하는 메소드를 써야할지, 어쩔때 가상 DOM에 해당하는 함수를 적용해서 비교를 해야할지 혼란스러운 경우가 있었습니다. 그 혼란을 해결하는 과정에서 SPA의 리렌더링 로직에 대한 이해도가 높아졌습니다.\\r\\n\\r\\n사용하는 속성과 메소드들도 각자 달랐습니다.\\r\\n- className / class\\r\\n- children / childNOde\\r\\n- on{이벤트명}/{이벤트명}\\r\\n- 특수속성들\\r\\n\\r\\n이 구분을 이해하고 적용하는 것에 시간이 들고 가장 학습이 많이 되었습니다.\\r\\n\\r\\n\\r\\n#### 자식 노드 반복 순서\\r\\n\\r\\ndiff 알고리즘을 구현하는 데 있어서 가장 이해하기 위해 노력한 부분은 자식 노드를 반복하는 순서였습니다.\\r\\n인덱스를 제거하고 추가하는 복잡한 동작 속에서 순회방식을 어떻게 해야 모든 자식 노드들을 기존 인덱스에 맞게 재정렬할 수 있을 지는 흥미롭고 알아가는 재미가 있는 과정이었습니다.\\r\\n\\r\\n처음에는 큰 고민없이 0부터 반복을 수행했지만 index를 참조를 못하는 오류가 발생했습니다. 참조 뿐 아니라 이 현상은 sort 변화로 인한 재배열이나 무한스크롤 시 예상치 못한 동작을 유발했습니다.\\r\\n\\r\\n본래의 순서로 요소를 제거하고 순회할 시 오작동하는 현상은 알고리즘에서도 많이 접한 현상입니다. 그래서 두번째로는 역순으로 해서 보다 오류가 적었지만 마찬가지로 제대로 작동하지 않았습니다.\\r\\n\\r\\n올바른 순서는 다음과 같았습니다:\\r\\n- 공통 길이만큼 기존 요소 재사용 - diff 알고리즘으로 변경된 부분만 업데이트\\r\\n- 초과하는 기존 요소들을 역순으로 삭제 - DOM 인덱스 변화를 방지\\r\\n- 새로운 요소들을 순차적으로 추가 - 새로 생성이 필요한 요소만 처리\\r\\n\\r\\n특히 2단계의 역순 삭제가 중요했는데, 순차 삭제 시 removeChild 후 배열 인덱스가 변경되어 잘못된 요소를 삭제하는 문제가 발생했습니다. 이런 세밀한 DOM 조작 로직을 직접 구현하면서 브라우저 API의 특성과 배열 인덱스 관리 또한 배울 수 있었습니다.\\r\\n\\r\\n\\r\\n#### 기존 프레임워크/라이브러리의 동작 이해\\r\\n과제를 하면서 가상DOM에 대한 이해도가 높아지고 사용경험이 있는 기존 툴들의 동작 방식을 읽으니 이해도가 높아지고 재밌었습니다.\\r\\n실제 코드를 작성하는 방식과 연결지어서 어떻게 동작하는지 파악하고자 했습니다.\\r\\n\\r\\n<a href=\\\"https://react.dev/learn/preserving-and-resetting-state\\\">\\r\\n  <img src=\\\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg\\\" width=\\\"50\\\" height=\\\"50\\\"/>\\r\\n</a>\\r\\n\\r\\n<a href=\\\"https://ko.vuejs.org/guide/extras/rendering-mechanism.html\\\">\\r\\n  <img src=\\\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/vuejs/vuejs-original.svg\\\" width=\\\"50\\\" height=\\\"50\\\"/>\\r\\n</a>\\r\\n\\r\\n\\r\\n##### 렌더링 최적화\\r\\n\\r\\nReact\\r\\n\\r\\n> React의 Fiber 아키텍처: React는 Fiber를 통해 렌더링 작업을 작은 단위로 나누어 우선순위를 부여하고, 메인 스레드를 블로킹하지 않고 중단 가능한 렌더링을 제공합니다.\\r\\n\\r\\nVue\\r\\n\\r\\n> Vue의 반응형 시스템: Vue는 의존성 추적을 통해 컴포넌트가 실제로 사용하는 데이터만 관찰하고, 해당 데이터 변경 시에만 정확한 컴포넌트를 재렌더링합니다.\\r\\n\\r\\n##### 자식 노드 순회 알고리즘\\r\\n\\r\\nReact\\r\\n> React의 Key 기반 Reconciliation: React는 key prop을 통해 요소의 identity를 추적하여, 순서가 바뀌어도 같은 요소를 인식하고 재사용할 수 있습니다.\\r\\n\\r\\nVue\\r\\n> Vue의 양방향 diff 알고리즘: Vue는 양쪽 끝에서부터 비교를 시작하여 중간으로 좁혀가는 방식으로, 단순한 앞뒤 추가/삭제를 빠르게 처리합니다.\\r\\n\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\\r\\nupdateElement는 케이스를 분리해서 동작을 처리하는 로직이 주가 되는 함수입니다. \\r\\n이런 경우 함수의 가독성을 높이기 위해 헬퍼 함수를 따로 분리하여 정의하고 각 경우의 수마다 적용하는 방식을 선호합니다.\\r\\n하지만 너무 이른 시점에 해당 작업을 수행하면 생산성이 떨어지고 , 과도하게 사용할 경우 오히려 복잡도가 올라가는 경험도 있었습니다.\\r\\n\\r\\n단순히 가독성 복잡도뿐이 아니라, 테스트 가능성, 유지보수성, 팀 개발 관점에서 함수 분리의 기준과 시점을 어떻게 판단하시는지, 그리고 과도한 분리로 인한 코드 파편화를 방지하는 방법에 대해 의견을 듣고 싶습니다.\",\"created_at\":\"2025-07-14T04:21:43Z\",\"updated_at\":\"2025-07-18T15:36:12Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"b1e74ccfd6f4ada6fb6cf2205982e94cde1541d3\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/30/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/30/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/30/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/ba0aae6a0e049b50e83c0fdf13e43b75be911ede\",\"head\":{\"label\":\"ldhldh07:main\",\"ref\":\"main\",\"sha\":\"ba0aae6a0e049b50e83c0fdf13e43b75be911ede\",\"user\":{\"login\":\"ldhldh07\",\"id\":109324599,\"node_id\":\"U_kgDOBoQpNw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/109324599?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ldhldh07\",\"html_url\":\"https://github.com/ldhldh07\",\"followers_url\":\"https://api.github.com/users/ldhldh07/followers\",\"following_url\":\"https://api.github.com/users/ldhldh07/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ldhldh07/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ldhldh07/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ldhldh07/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ldhldh07/orgs\",\"repos_url\":\"https://api.github.com/users/ldhldh07/repos\",\"events_url\":\"https://api.github.com/users/ldhldh07/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ldhldh07/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018412399,\"node_id\":\"R_kgDOPLO9bw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"ldhldh07/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"ldhldh07\",\"id\":109324599,\"node_id\":\"U_kgDOBoQpNw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/109324599?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ldhldh07\",\"html_url\":\"https://github.com/ldhldh07\",\"followers_url\":\"https://api.github.com/users/ldhldh07/followers\",\"following_url\":\"https://api.github.com/users/ldhldh07/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ldhldh07/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ldhldh07/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ldhldh07/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ldhldh07/orgs\",\"repos_url\":\"https://api.github.com/users/ldhldh07/repos\",\"events_url\":\"https://api.github.com/users/ldhldh07/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ldhldh07/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/ldhldh07/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/ldhldh07/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T07:49:41Z\",\"updated_at\":\"2025-07-17T16:27:52Z\",\"pushed_at\":\"2025-07-17T16:27:49Z\",\"git_url\":\"git://github.com/ldhldh07/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:ldhldh07/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/ldhldh07/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/ldhldh07/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":177,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/30\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/30\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/30\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/30/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/30/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/30/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/ba0aae6a0e049b50e83c0fdf13e43b75be911ede\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/31\",\"id\":2663101968,\"node_id\":\"PR_kwDOPJuWzM6eu7YQ\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/31\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/31.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/31.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/31\",\"number\":31,\"state\":\"open\",\"locked\":false,\"title\":\"[5팀 허정석] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"heojungseok\",\"id\":99116541,\"node_id\":\"U_kgDOBehl_Q\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/99116541?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/heojungseok\",\"html_url\":\"https://github.com/heojungseok\",\"followers_url\":\"https://api.github.com/users/heojungseok/followers\",\"following_url\":\"https://api.github.com/users/heojungseok/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/heojungseok/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/heojungseok/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/heojungseok/subscriptions\",\"organizations_url\":\"https://api.github.com/users/heojungseok/orgs\",\"repos_url\":\"https://api.github.com/users/heojungseok/repos\",\"events_url\":\"https://api.github.com/users/heojungseok/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/heojungseok/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 \\r\\n링크[와 다섯 영걸](https://heojungseok.github.io/front_6th_chapter1-2/)\\r\\n\\r\\nhttps://heojungseok.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n6기 동료분들은 1 주차 보다는 난이도가 낮다고 하나, 나에게는 똑같이 어려웠다.\\r\\n도움이 필요할 때는 팀원들의 도움으로 문제를 해결해나갔다.\\r\\n그 중 한 분이 나에게 과제를 풀어나가는 데 있어서 필요한 것이 내가 **어떤 도구를 활용** 할 수 있는지 아는 것이 중요한데, 그것을 모르고 **맨 손으로 과제를 헤쳐나가는 느낌**이 강하다고 했다.\\r\\n\\r\\n격하게 공감되는 조언이었다. 과제를 임하기 전에 나에게 **필요한 게 무엇인지 한 번은 생각하고 찾는 행위**가 필요해보인다.\\r\\n\\r\\n팀 5에서는 이번 주차는 하루에 하나 또는 그 이상 과제 구현 방식 또는 개발에 도움이 되는 학습 보고서를 작성했다. \\r\\n양식은 자유였으며 repo issue 또는 개인 블로그에 정리하고 팀내 공유했다.(추후에는 6기 모두에게 공유가 됐다.)\\r\\n\\r\\n이런 행위로 스스로 어떤 점이 부족한지 알게 됐고, 내 기준 실력이 우수한 인원의 보고서를 보고 있으면 글 자체도 깔끔하게 쓴 것을 볼 수 있었다. 그리고 다들 열심히 하고 있구나를 시각적으로 볼 수 있어서 더 자극이 되었다.\\r\\n\\r\\n이번 주차가 아니더라도 글 쓰는 것을 꾸준히 하기 위해 노력 해야겠다. 많이 읽고 많이 쓰고....\\r\\n그리고 매일 쓰는 거라면 힘을 빼고 쓰는 연습도 필요해 보인다. \\r\\n그리고 이번 과제도 당연히 Gemini CLI 와 함께했다.!\\r\\n아래는 이번주 과제를 하면서 하루씩 정리한 보고서 링크다☺️\\r\\n\\r\\n[TIL_1_Array 메소드](https://velog.io/@jungseokheo/til1st)\\r\\n[TIL_2_JSX](https://velog.io/@jungseokheo/til2nd)\\r\\n[TIL_3_재귀](https://velog.io/@jungseokheo/til3rd)\\r\\n[TIL_4_이벤트_위임](https://velog.io/@jungseokheo/til4th)\\r\\n[git-issue_학습보고서](https://github.com/heojungseok/front_6th_chapter1-2/issues)\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n이번 2 주차 과제에서는 1 주차 때 관심이 갔던 '이벤트 위임' 에 대해서 학습을 해볼 수 있던 좋은 과제였다.\\r\\n`eventManager` 를 구현하고 `renderElement`에 적용하면서 복잡한 이벤트 핸들링을 유지보수성 높게 설계하는 패턴을 배웠다. \\r\\n또한 diff 알고리즘이라는 새로운 개념도 학습 했다.\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n- -->\\r\\n\\r\\nupdateElement 함수를 작성해야 advanced 난이도를 통과할 수 있었습니다. \\r\\n지금 내 실력으론 어림도 없어서 전적으로 AI툴에 의존했다. 모르는 걸 물어봐가면서 하기엔 물리적 시간이 부족했기에 \\r\\n코드의 설계보다는 과제의 통과에 집중했다. 통과 후에 다시 보고 리뷰해도 늦지 않는단 생각에 진행했다. \\r\\n아래는 Gemini 로 구현한 updateElement 코드입니다. 시간 괜찮으신 분들은 코드 리뷰 작성해주셔도 좋은 것 같습니다.\\r\\n(코드 구현을 위한 질문 목록을 뽑질 못했습니다. 질문 목록을 뽑았다면 더 유익했을텐데... 다음 회고에 참고하겠습니다.)\\r\\n\\r\\n```javascript\\r\\n\\r\\nimport { addEvent, removeEvent } from \\\"./eventManager\\\";\\r\\nimport { createElement } from \\\"./createElement.js\\\";\\r\\n\\r\\nfunction updateAttributes(target, originNewProps, originOldProps) {\\r\\n  const newProps = originNewProps || {};\\r\\n  const oldProps = originOldProps || {};\\r\\n\\r\\n  // 1. 새로운 속성 추가 및 변경\\r\\n  for (const attr in newProps) {\\r\\n    const newValue = newProps[attr];\\r\\n    const oldValue = oldProps[attr];\\r\\n\\r\\n    if (newValue !== oldValue) {\\r\\n      if (attr.startsWith(\\\"on\\\") && typeof newValue === \\\"function\\\") {\\r\\n        const eventType = attr.toLowerCase().slice(2);\\r\\n        if (oldValue) {\\r\\n          removeEvent(target, eventType, oldValue);\\r\\n        }\\r\\n        addEvent(target, eventType, newValue);\\r\\n      } else if ([\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readOnly\\\"].includes(attr)) {\\r\\n        target[attr] = Boolean(newValue);\\r\\n      } else if (attr === \\\"className\\\") {\\r\\n        newValue ? target.setAttribute(\\\"class\\\", newValue) : target.removeAttribute(\\\"class\\\");\\r\\n      } else if (attr === \\\"style\\\" && typeof newValue === \\\"object\\\") {\\r\\n        for (const styleName in newValue) {\\r\\n          target.style[styleName] = newValue[styleName];\\r\\n        }\\r\\n        for (const styleName in oldValue) {\\r\\n          if (!(styleName in newValue)) {\\r\\n            target.style[styleName] = \\\"\\\";\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        target.setAttribute(attr, newValue);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // 2. 없어진 속성 제거\\r\\n  for (const attr in oldProps) {\\r\\n    if (!(attr in newProps)) {\\r\\n      if (attr.startsWith(\\\"on\\\") && typeof oldProps[attr] === \\\"function\\\") {\\r\\n        const eventType = attr.toLowerCase().slice(2);\\r\\n        removeEvent(target, eventType, oldProps[attr]);\\r\\n      } else if ([\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readOnly\\\"].includes(attr)) {\\r\\n        target[attr] = false;\\r\\n      } else if (attr === \\\"className\\\") {\\r\\n        target.removeAttribute(\\\"class\\\");\\r\\n      } else if (attr === \\\"style\\\") {\\r\\n        for (const styleName in oldProps[attr]) {\\r\\n          target.style[styleName] = \\\"\\\";\\r\\n        }\\r\\n      } else {\\r\\n        target.removeAttribute(attr);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\nexport function updateElement(parentElement, newNode, oldNode, index = 0) {\\r\\n  // 1. oldNode가 없는 경우 (새로운 노드 추가)\\r\\n  if (!oldNode) {\\r\\n    parentElement.appendChild(createElement(newNode));\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  const target = parentElement.childNodes[index];\\r\\n\\r\\n  // 2. newNode가 없는 경우 (기존 노드 제거)\\r\\n  if (!newNode) {\\r\\n    parentElement.removeChild(target);\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  // 3. 노드 타입이 변경된 경우 (기존 노드 교체)\\r\\n  if (newNode.type !== oldNode.type) {\\r\\n    parentElement.replaceChild(createElement(newNode), target);\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  // 4. 텍스트 노드인 경우\\r\\n  if (typeof newNode === \\\"string\\\" && newNode !== oldNode) {\\r\\n    target.nodeValue = newNode;\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  // 5. 엘리먼트 노드인 경우\\r\\n  if (newNode.type) {\\r\\n    // 속성 업데이트\\r\\n    updateAttributes(target, newNode.props, oldNode.props);\\r\\n\\r\\n    // 자식 노드 업데이트\\r\\n    const newChildren = newNode.children || [];\\r\\n    const oldChildren = oldNode.children || [];\\r\\n\\r\\n    // 새로운 자식들을 순회하며 업데이트 또는 추가\\r\\n    for (let i = 0; i < newChildren.length; i++) {\\r\\n      updateElement(target, newChildren[i], oldChildren[i], i);\\r\\n    }\\r\\n\\r\\n    // oldChildren이 newChildren보다 많을 경우, 초과하는 자식들을 제거\\r\\n    for (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n      target.removeChild(target.childNodes[i]);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n리액트를 한 번도 쓰지 않은 나에게 가상 DOM에 대한 개념을 알 수 있던 시간이었다. \\r\\n그 가상 DOM이 실제로 변화하는 과정을 로그로 본 경험이 큰 배움이라고 생각한다. \\r\\n또한, `createElement` 와 `normalizeVNode` 가 서로 상호작용하여 가상에서 실제 DOM 으로 구현되는 과정을 알 수 있었다.\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n라이브러리를 직접 구현해볼 수 있는 경험이 좋았습니다. \\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\\r\\n과제 피드백이라기보단 AI 활용법에 대한 의견을 듣고싶습니다.\\r\\n\\r\\n이번 주차 과제도 AI 툴을 많이 이용했습니다.  기본적으로는 Gemini CLI 통해 과제를 구현했습니다.\\r\\n그렇다보니 글로 내 의견을 피력해야하는게 너무나 중요하게 느껴졌습니다.\\r\\n개발 및 과제 학습하면서 AI 툴을 튜터 및 실용적으로 활용하기 위한 고민 두 항목 적어봤습니다.\\r\\n코치님의 경험이나 의견이 있으시면 답변 부탁드리겠습니다. \\r\\n\\r\\n1. AI의 답변을 단순히 수용하지 않고, 나만의 것으로 만들려면 어떤 질문을 던져야 할까?\\r\\n2. 프론트엔드 구현 중 막혔을 때 AI한테 도움을 요청하는 가장 좋은 방식은?\\r\\n\\r\\n감사합니다. \\r\\n\\r\\n\",\"created_at\":\"2025-07-14T05:57:50Z\",\"updated_at\":\"2025-07-20T05:50:09Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"9000f14ce741988da454464f037bd578229c0b0a\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/31/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/31/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/31/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/2f234b5ac183c0d61348d1d7de143a3ab4ace008\",\"head\":{\"label\":\"heojungseok:main\",\"ref\":\"main\",\"sha\":\"2f234b5ac183c0d61348d1d7de143a3ab4ace008\",\"user\":{\"login\":\"heojungseok\",\"id\":99116541,\"node_id\":\"U_kgDOBehl_Q\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/99116541?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/heojungseok\",\"html_url\":\"https://github.com/heojungseok\",\"followers_url\":\"https://api.github.com/users/heojungseok/followers\",\"following_url\":\"https://api.github.com/users/heojungseok/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/heojungseok/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/heojungseok/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/heojungseok/subscriptions\",\"organizations_url\":\"https://api.github.com/users/heojungseok/orgs\",\"repos_url\":\"https://api.github.com/users/heojungseok/repos\",\"events_url\":\"https://api.github.com/users/heojungseok/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/heojungseok/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019294769,\"node_id\":\"R_kgDOPME0MQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"heojungseok/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"heojungseok\",\"id\":99116541,\"node_id\":\"U_kgDOBehl_Q\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/99116541?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/heojungseok\",\"html_url\":\"https://github.com/heojungseok\",\"followers_url\":\"https://api.github.com/users/heojungseok/followers\",\"following_url\":\"https://api.github.com/users/heojungseok/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/heojungseok/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/heojungseok/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/heojungseok/subscriptions\",\"organizations_url\":\"https://api.github.com/users/heojungseok/orgs\",\"repos_url\":\"https://api.github.com/users/heojungseok/repos\",\"events_url\":\"https://api.github.com/users/heojungseok/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/heojungseok/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/heojungseok/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/heojungseok/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T05:41:01Z\",\"updated_at\":\"2025-07-17T19:30:59Z\",\"pushed_at\":\"2025-07-17T19:30:56Z\",\"git_url\":\"git://github.com/heojungseok/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:heojungseok/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/heojungseok/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/heojungseok/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":266,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":5,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":5,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/31\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/31\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/31\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/31/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/31/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/31/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/2f234b5ac183c0d61348d1d7de143a3ab4ace008\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/35\",\"id\":2664147617,\"node_id\":\"PR_kwDOPJuWzM6ey6qh\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/35\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/35.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/35.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/35\",\"number\":35,\"state\":\"open\",\"locked\":false,\"title\":\"[4팀 이유진] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"Elli-Lee\",\"id\":159514073,\"node_id\":\"U_kgDOCYH92Q\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/159514073?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Elli-Lee\",\"html_url\":\"https://github.com/Elli-Lee\",\"followers_url\":\"https://api.github.com/users/Elli-Lee/followers\",\"following_url\":\"https://api.github.com/users/Elli-Lee/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Elli-Lee/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Elli-Lee/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Elli-Lee/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Elli-Lee/orgs\",\"repos_url\":\"https://api.github.com/users/Elli-Lee/repos\",\"events_url\":\"https://api.github.com/users/Elli-Lee/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Elli-Lee/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://elli-lee.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n이번 과제의 가장 어려웠던 점은 각 함수들을 구현하는 과정에서 이 함수가 왜 필요한지, createVNode가 object를 return하는데 왜 normalizeVNode에서 한번 더 null / undefined를 처리하는지, 함수 내에서 각 분기처리를 그렇게 처리하는 이유 등등의 납득의 과정이었습니다. 과제의 목표를 명확히 이해하고 과제를 시작하고자 노력했고, 이를 위해 Virtual DOM이 필요한 이유, 동작 원리, Virtual DOM이 해결하고자 한 문제를 이해하기 위해 Vue 공식문서와 github 레포에 해당부분을 찾아보기도 하고, AI와 대화도 많이 나누는 등, 시간을 많이 투자했습니다. 이러한 노력이 과제 수행 시 덜 헤매는데 도움이 되었다고 생각합니다. \\r\\n그 다음으로 어려웠던 점은 재귀의 늪이었습니다... 원하는 결과를 내고 싶어도 이를 재귀로 구현하는게 익숙하지 않아서 여러번 테스트를 돌리고 콘솔도 찍으면서 방향을 잡았습니다. 알고리즘 학습의 필요성을 느끼기도 했습니다.\\r\\n여전히 코드를 깔끔하게 짜고 함수를 분리하고.. 등등은 매우 부족합니다. 그래도 최대한 이해하며 과제를 수행하려고 노력했다는 점에서는 저번주보다는 과제를 조금 더 만족스럽게 수행한 것 같습니다.\\r\\n\\r\\n### 기술적 성장\\r\\n새로 학습한 개념:\\r\\n- Virtual DOM의 내부 구현 메커니즘과 diff 알고리즘의 핵심 원리\\r\\n- 이벤트 위임 패턴을 활용한 효율적인 이벤트 관리 시스템\\r\\n\\r\\n### 코드 품질\\r\\n이벤트 관리자의 깔끔한 구조: WeakMap 기반의 계층적 이벤트 저장과 자동 정리\\r\\nupdateElement의 체계적인 분기 처리: 각 케이스별 명확한 로직 분리\\r\\n\\r\\n## 가장 큰 배움이 있었던 부분\\r\\nVirtual DOM의 동작 원리를 직접 구현하면서 이해하다보니, Vue등의 SPA 프레임워크들이 해결하고자 했던 문제가 조금은 보이는 것 같습니다. \\r\\n이번 과제를 통해 Virtual DOM의 내부 구현 메커니즘과 diff 알고리즘의 핵심 원리에 대해 명확히 알게 되었습니다.\\r\\n이번주에 실무에서 급하게 해결해야 했던 이슈 중 하나가 사실 \\r\\n\\\"이미 A페이지에 위치한 사용자가 알림 등을 클릭해서 다른 페이지로 router push가 발생할 때, 만약 이동하려는 페이지가 이미 사용자가 위치한 A 페이지라면, 화면상에서는 아무런 렌더링이 발생하지 않아 사용자 입장에서는 클릭 이벤트에 버그가 있어서 router를 이동하는 것에 실패했다고 여긴다.\\\" 였습니다.\\r\\n이번 과제를 수행하면서 해당 이슈를 접하니, 아무런 렌더링이 발생하지 않는 이유가 router 이동이 있어도 이동 전 후에 달라진 점이 없기 때문에  Vue의 Virtual DOM이 실제 DOM 업데이트를 진행하지 않아서임을 금방 이해할 수 있게 되었습니다.\\r\\n덕분에 문제를 빨리 해결할 수 있었고, 이렇게 근본적인 동작 원리까지 아는 것의 중요성을 다시 한번 느낄 수 있었습니다.\\r\\n\\r\\n## 추가 학습이 필요한 영역\\r\\n- 아직 이벤트 위임에 대해 스스로 누군가에게 설명할 정도로의 이해를 하지 못했습니다. 이번주 내용을 복습하고 여러번 읽으면서 추가학습을 할 예정입니다.\\r\\n- WeakMap 자료구조를 사용하는 것이 좋을거라고 추천받아 일단 사용하긴 했으나, 어떤 점에서 좋은지, Map과의 차이점은 무엇인지에 대해 아직 학습하지 못해서 추가학습이 필요합니다.\\r\\n- 아직은 배포가 쉽지 않습니다.. 왜 그렇게 수정하는지 이해하지 못한채로 AI가 시키는대로 배포를 수정하다보니 어떤 걸 수정해서 배포를 성공한건지 모르겠습니다..\\r\\n\\r\\n### 과제 피드백\\r\\n- Virtual DOM의 동작 원리를 직접 구현하다보니 Virtual DOM의 필요성에 대해 더 잘 이해할 수 있었고, 저번 과제와 비교하여 virtual DOM 덕분에 실제로 필요한 부분만 렌더링 됨을 직접 알 수 있어서 좋았습니다.\\r\\n- 촘촘한 테스트케이스로, 제가 처음 구현할 때 생각하지 못한 케이스들을 테스트를 통해 찾아서 계속 추가로 구현 할 수 있어서 좋았습니다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n불리언 속성 처리 방식 중 checked, readonly, selected 같은 불리언 속성을 property only로 다루고 있는데, 이런 처리 방식이 올바른 접근인지 궁금합니다.\\r\\n\\r\\nupdateAttributes에서 속성 처리 순서나 우선순위가 적절한지 궁금합니다.\\r\\nclassName → 이벤트 → boolean → 나머지 순으로 처리하고 있는데, 이런 순서가 DOM 업데이트 시 예상치 못한 사이드 이펙트를 막는 데 적절한지 궁금합니다. \\r\\n\\r\\n\\r\\n\\r\\n리뷰 받고 싶은 포인트를 찾기 위해 전체적으로 코드를 되돌아보다보니, createElement와 updateElement의 \\r\\n  const booleanProps = [\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readonly\\\", \\\"multiple\\\", \\\"autofocus\\\", \\\"required\\\"];\\r\\n  const propertyOnlyBooleanProps = [\\\"checked\\\", \\\"selected\\\"];\\r\\n  const propToAttributeMap = {\\r\\n    readOnly: \\\"readonly\\\",\\r\\n  };\\r\\n  부분을 공통으로 쓸 수 있을것 같아 보입니다. 과제 제출 이후 수정하겠습니다!\\r\\n\",\"created_at\":\"2025-07-14T12:37:19Z\",\"updated_at\":\"2025-07-19T17:22:09Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"e983d2f33c70c2ff3c9bf3bd7094233bfffb5a96\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/35/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/35/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/35/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/038ca38d0d2ed67ce2406de1bd0f1724d840e57f\",\"head\":{\"label\":\"Elli-Lee:main\",\"ref\":\"main\",\"sha\":\"038ca38d0d2ed67ce2406de1bd0f1724d840e57f\",\"user\":{\"login\":\"Elli-Lee\",\"id\":159514073,\"node_id\":\"U_kgDOCYH92Q\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/159514073?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Elli-Lee\",\"html_url\":\"https://github.com/Elli-Lee\",\"followers_url\":\"https://api.github.com/users/Elli-Lee/followers\",\"following_url\":\"https://api.github.com/users/Elli-Lee/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Elli-Lee/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Elli-Lee/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Elli-Lee/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Elli-Lee/orgs\",\"repos_url\":\"https://api.github.com/users/Elli-Lee/repos\",\"events_url\":\"https://api.github.com/users/Elli-Lee/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Elli-Lee/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018915828,\"node_id\":\"R_kgDOPLtr9A\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"Elli-Lee/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"Elli-Lee\",\"id\":159514073,\"node_id\":\"U_kgDOCYH92Q\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/159514073?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Elli-Lee\",\"html_url\":\"https://github.com/Elli-Lee\",\"followers_url\":\"https://api.github.com/users/Elli-Lee/followers\",\"following_url\":\"https://api.github.com/users/Elli-Lee/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Elli-Lee/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Elli-Lee/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Elli-Lee/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Elli-Lee/orgs\",\"repos_url\":\"https://api.github.com/users/Elli-Lee/repos\",\"events_url\":\"https://api.github.com/users/Elli-Lee/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Elli-Lee/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/Elli-Lee/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/Elli-Lee/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T10:37:21Z\",\"updated_at\":\"2025-07-17T21:09:05Z\",\"pushed_at\":\"2025-07-17T21:09:02Z\",\"git_url\":\"git://github.com/Elli-Lee/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:Elli-Lee/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/Elli-Lee/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/Elli-Lee/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":202,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/35\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/35\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/35\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/35/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/35/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/35/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/038ca38d0d2ed67ce2406de1bd0f1724d840e57f\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/36\",\"id\":2664171266,\"node_id\":\"PR_kwDOPJuWzM6ezAcC\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/36\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/36.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/36.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/36\",\"number\":36,\"state\":\"open\",\"locked\":false,\"title\":\"[2팀 박소연] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"soyalattee\",\"id\":68572832,\"node_id\":\"MDQ6VXNlcjY4NTcyODMy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/68572832?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/soyalattee\",\"html_url\":\"https://github.com/soyalattee\",\"followers_url\":\"https://api.github.com/users/soyalattee/followers\",\"following_url\":\"https://api.github.com/users/soyalattee/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/soyalattee/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/soyalattee/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/soyalattee/subscriptions\",\"organizations_url\":\"https://api.github.com/users/soyalattee/orgs\",\"repos_url\":\"https://api.github.com/users/soyalattee/repos\",\"events_url\":\"https://api.github.com/users/soyalattee/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/soyalattee/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://soyalattee.github.io/front_6th_chapter1-2/\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n#### Virtual DOM 과 vNode 에 대한 이해 \\r\\n처음 createVNode 에서 노드가 함수형태로 들어올것이라 예상. 그리고 함수를 풀어서 object화 해야한다고 생각했는데 object 형태로 들어오고 있었고, type 안에 function 이들어오는 구조. 그럼 type 값은? 이란 의문을 가짐.\\r\\n해결 :\\r\\nJSX함수는 안에 또 element 가 될 노드를 가지고있으니, 재귀형태로 vNode를 생성 가능. \\r\\n```\\r\\nif (typeof vNode.type === \\\"function\\\") {\\r\\n      const propsWithChildren = {\\r\\n        ...(vNode.props || {}),\\r\\n        children: vNode.children,  // children을 props에 포함시켜서 함수에 전달\\r\\n      };\\r\\n      return normalizeVNode(vNode.type(propsWithChildren));\\r\\n    }\\r\\n```\\r\\n```\\r\\n//해당 JSX함수는 안에 또 노드를 가지고있잖아.\\r\\nconst UnorderedList = ({ children, ...props }) => (\\r\\n  <ul {...props}>{children}</ul>  // ← 여기서 type: \\\"ul\\\" 결정!\\r\\n);\\r\\n```\\r\\n\\r\\n과제를 통해 JSX → createVNode → normalizeVNode → createElement의 흐름을 직접 구현하며 Virtual DOM의 작동 원리를 좀 깊게 이해할 수 있었습니다.  특히 함수형 컴포넌트가 재귀적으로 vNode 트리를 생성하는 방식에서 type이 함수인 경우의 처리와, children을 props에 포함시켜 다시 렌더링하는 구조를 구현하며 JSX의 변환 과정을 깊게 이해했습니다.  \\r\\n\\r\\n#### 이벤트매니저를 통해 메모리 관리 \\r\\n\\r\\n초기에는 eventRegistry를 배열로 관리하며 메모리 해제를 시도했으나, 테스트 환경에서 DOM 제거 후에도 이벤트가 남아 있는 문제가 발생  \\r\\n테스트코드 내에서 기존 container를 제거하고 새로운 container를 붙히는데 (beforeEach, afterEach) 이때 eventRegistry가 비워지지않아, 다음 테스트에서 이미 이벤트가 붙어있는 문제 발생  \\r\\n\\r\\n해결 :  \\r\\n1. setup시 eventRegistry를 정리하는 작업 추가. filter를 사용해 document에 해당 element가 없으면 제거하지만 여전히 event 가 제대로 remove 되지않음.\\r\\n2. 이때 윤우님과 태영님의 조언으로 eventRegistry 를 배열에서 WeakMap 으로 수정. 배열로 작업시 이벤트 제거가 제대로 되지않으며, WeakMap 을 사용하여 GC 가 돌도록하라고 조언을 얻음.\\r\\n\\r\\n기존 코드\\r\\n```\\r\\neventRegistry.forEach(({ eventType }) => {\\r\\n    root.addEventListener(eventType, (e) => {\\r\\n      eventRegistry\\r\\n        .filter((entry) => entry.eventType === eventType)\\r\\n        .forEach(({ element, handler }) => {\\r\\n          if (element.contains(e.target)) {\\r\\n            e.stopPropagation();\\r\\n            handler(e);\\r\\n          }\\r\\n        });\\r\\n```\\r\\n\\r\\n수정된 코드\\r\\n\\r\\n```\\r\\n// 모든 이벤트 타입에 대해 위임 리스너 등록\\r\\n  allTypes.forEach((type) => {\\r\\n    root.addEventListener(type, (e) => {\\r\\n      let currentElement = e.target;\\r\\n      // 이벤트 버블링: target에서 root까지 올라가면서 핸들러 찾기\\r\\n      while (currentElement && root.contains(currentElement)) {\\r\\n        // WeakMap에서 현재 element의 이벤트 맵 가져오기\\r\\n        const eventMap = eventRegistry.get(currentElement);\\r\\n\\r\\n        if (eventMap && eventMap.has(type)) {\\r\\n          const handlers = eventMap.get(type);\\r\\n\\r\\n          // 해당 이벤트 타입의 모든 핸들러 실행\\r\\n          handlers.forEach((handler) => {\\r\\n            try {\\r\\n              handler(e);\\r\\n            } catch (error) {\\r\\n              console.error(\\\"이벤트 핸들러 실행 중 오류:\\\", error);\\r\\n            }\\r\\n          });\\r\\n        }\\r\\n        // 부모 element로 이동\\r\\n        currentElement = currentElement.parentElement;\\r\\n        // root에 도달하면 중단\\r\\n        if (currentElement === root) break;\\r\\n      }\\r\\n```\\r\\n\\r\\n WeakMap 기반으로 element → Map(eventType → Set(handler)) 구조를 갖도록 했고, root에서 버블링을 타고 올라가며 최적의 핸들러를 찾아 실행하는 방식으로 재설계했습니다.\\r\\n구조로 수정하며 테스트 환경에서도 이벤트 중복, 누수 없이 안정적으로 작동하도록 구현할 수 있었고, 메모리 관리와 성능 개선에 대한 감각을 좀 얻었습니다. \\r\\n \\r\\n#### document 의 이해\\r\\n문제: innerHTML +=를 사용하면 기존에 appendChild로 추가한 DOM 요소들이 다시 파싱되면서 이벤트 핸들러가 모두 사라지는 이슈 발생  \\r\\n해결: 자식노드 추가를 appendChild로 코드수정   \\r\\n\\r\\n해결을 위해 appendChild 방식으로 DOM을 조작하며, DOM 파싱의 작동 방식과 이벤트 핸들러 보존의 중요성을 체감했습니다. \\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n과제를 빠듯하게 마무리하여 전체적인 리팩토링 여지가 많은 상태로 마무리되었습니다..\\r\\n 특히 createElement와 updateElement에서 요소의 속성을 설정하는 부분에서 반복되는 로직이 많았고, 조건 분기도 지나치게 세분화되어 있어 중복 제거 및 함수 분리가 필요하다고 느꼈습니다. (특히 updateAttribute 와 createAttribute의 중복코드 다수)  \\r\\n이후 작업에서 이런 공통 속성 처리 로직을 별도 유틸로 추출하고자 합니다.   \\r\\n \\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n이번 학습을 통해 프레임워크가 제공하는 추상화 뒤에 숨겨진 핵심 렌더링 원리와 이벤트 관리를 직접 다뤄보면서 실무에서 발생할 수 있는 문제 상황에서도 내부 동작을 추론하고 디버깅할 수 있는 근거를 마련할 수 있었습니다. \\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n저번 과제보다 양이 적은줄 알고, 금방하겠지? 했는데 오산이였습니다.  \\r\\n개인적으로 저번과제보다 더 어려웠습니다.. 기초가 부족해서 그런거라 생각됩니다.  \\r\\n그런의미에서 너무 좋은 과제였고 이번에도 머리 싸매면서 즐겁게 코딩했습니다. 감사합니다. \\r\\n\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n렌더링 흐름에서 renderElement 함수가 최초 렌더링과 업데이트 렌더링을 구분하기 위해 container._prevVNode를 직접 추가하여 상태를 유지하는 방식을 사용했습니다.\\r\\n\\r\\n기존코드 \\r\\n```\\r\\nif (!container._prevVNode) {\\r\\n  //최초 렌더링\\r\\n}else{\\r\\n  //업데이트 렌더링 \\r\\n...\\r\\n// 새로운 vNode로 업데이트\\r\\n container._prevVNode = vNode;\\r\\n}\\r\\n```\\r\\n\\r\\n하지만 이 방식으로 렌더링을 반복할 경우, 특정 상황에서 자식 엘리먼트들이 의도하지 않은 부모로 이동하거나, 기존 자식이 새로운 부모 아래로 재배치되는 버그가 발생했습니다.\\r\\n\\r\\n\\r\\nex)   \\r\\n초기 DOM 구조 \\r\\n```\\r\\n<div>\\r\\n  <div class=\\\"first-node\\\">\\r\\n    <div> 자식1 </div>\\r\\n    <div> 자식1 </div>\\r\\n  </div>\\r\\n  <div class=\\\"second-node\\\"></div> \\r\\n</div>\\r\\n```\\r\\n\\r\\n업데이트시 DOM 구조(잘못된 업데이트)\\r\\n```\\r\\n<div>\\r\\n  <div class=\\\"first-node\\\">\\r\\n    <div> 자식1 </div>\\r\\n    <div> 자식1 </div>\\r\\n  </div>\\r\\n  <div class=\\\"second-node\\\">\\r\\n    <div> 업데이트 자식1 </div>\\r\\n    <div> 업데이트 자식2 </div>\\r\\n  </div> \\r\\n</div>\\r\\n```\\r\\nsecond-node 아래에 first-node 자식들이 들어가 버리는 등의 비정상적인 구조가 되었습니다...!\\r\\n \\r\\n오랫동안 updateElement 과정에서 헤메다가 혹시 렌더링시에 꼬이나 싶어 기존 노드 저장방법을 변경했습니다.\\r\\n WeakMap()인 currentNodeMap을 만들어 사용하니 해결되었습니다. \\r\\n\\r\\n💡 궁금한 점\\r\\ncontainer._prevVNode처럼 단일 ref로 상태를 관리하는 방식은 왜 문제를 일으켰을까요?\\r\\n\\r\\n반면 WeakMap을 이용하니 문제가 해결된 원인은 무엇일까요?\\r\\n\",\"created_at\":\"2025-07-14T12:44:57Z\",\"updated_at\":\"2025-07-21T01:22:49Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"f64f686ebc1d5364953d9320b7469fdea7317180\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/36/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/36/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/36/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e15b614d6ab7645a39d60023799288ef022a7bc4\",\"head\":{\"label\":\"soyalattee:main\",\"ref\":\"main\",\"sha\":\"e15b614d6ab7645a39d60023799288ef022a7bc4\",\"user\":{\"login\":\"soyalattee\",\"id\":68572832,\"node_id\":\"MDQ6VXNlcjY4NTcyODMy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/68572832?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/soyalattee\",\"html_url\":\"https://github.com/soyalattee\",\"followers_url\":\"https://api.github.com/users/soyalattee/followers\",\"following_url\":\"https://api.github.com/users/soyalattee/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/soyalattee/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/soyalattee/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/soyalattee/subscriptions\",\"organizations_url\":\"https://api.github.com/users/soyalattee/orgs\",\"repos_url\":\"https://api.github.com/users/soyalattee/repos\",\"events_url\":\"https://api.github.com/users/soyalattee/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/soyalattee/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019505622,\"node_id\":\"R_kgDOPMRr1g\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"soyalattee/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"soyalattee\",\"id\":68572832,\"node_id\":\"MDQ6VXNlcjY4NTcyODMy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/68572832?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/soyalattee\",\"html_url\":\"https://github.com/soyalattee\",\"followers_url\":\"https://api.github.com/users/soyalattee/followers\",\"following_url\":\"https://api.github.com/users/soyalattee/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/soyalattee/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/soyalattee/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/soyalattee/subscriptions\",\"organizations_url\":\"https://api.github.com/users/soyalattee/orgs\",\"repos_url\":\"https://api.github.com/users/soyalattee/repos\",\"events_url\":\"https://api.github.com/users/soyalattee/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/soyalattee/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/soyalattee/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/soyalattee/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T12:34:53Z\",\"updated_at\":\"2025-07-21T01:22:52Z\",\"pushed_at\":\"2025-07-21T01:23:08Z\",\"git_url\":\"git://github.com/soyalattee/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:soyalattee/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/soyalattee/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/soyalattee/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":241,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/36\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/36\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/36\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/36/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/36/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/36/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e15b614d6ab7645a39d60023799288ef022a7bc4\"}},\"author_association\":\"FIRST_TIME_CONTRIBUTOR\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/37\",\"id\":2664196059,\"node_id\":\"PR_kwDOPJuWzM6ezGfb\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/37\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/37.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/37.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/37\",\"number\":37,\"state\":\"open\",\"locked\":false,\"title\":\"[1팀 신희원] Chapter 1-2. 프레임워크 없이 SPA 만들기 \",\"user\":{\"login\":\"Amelia-Shin\",\"id\":80433754,\"node_id\":\"MDQ6VXNlcjgwNDMzNzU0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/80433754?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Amelia-Shin\",\"html_url\":\"https://github.com/Amelia-Shin\",\"followers_url\":\"https://api.github.com/users/Amelia-Shin/followers\",\"following_url\":\"https://api.github.com/users/Amelia-Shin/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Amelia-Shin/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Amelia-Shin/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Amelia-Shin/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Amelia-Shin/orgs\",\"repos_url\":\"https://api.github.com/users/Amelia-Shin/repos\",\"events_url\":\"https://api.github.com/users/Amelia-Shin/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Amelia-Shin/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://amelia-shin.github.io/front_6th_chapter1-2\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\nVirtualDOM 에 대해 특징과 개념을 알게 되었다.\\r\\n이벤트 위임하는 부분이 진짜 어려웠는데... 어찌저찌 했다... 다시 공부가 필요할 것 같다.\\r\\n이번에도 많은 개념들을 배웠다. (weakmap , set , 평탄화/정규화)\\r\\n\\r\\n#### 기술적 성장\\r\\n**createVNode**\\r\\n평탄화를 왜 해주는가?\\r\\n: 중첩된 배열을 단일 배열로 펼쳐서 다루기 쉽게 만들기 위해서\\r\\n\\r\\n아래 코드를 보면 <div> 안에 자식 노드가 있다.\\r\\nmap은 배열을 반환하고 \\r\\n```js \\r\\n<div>\\r\\n   <div>hello</div>\\r\\n   Array.map((name) => { <div>${name}</div> });\\r\\n</div>\\r\\n----\\r\\n위와 같은 코드\\r\\n<div>\\r\\n   <div>hello</div>\\r\\n   <button>name1</button>\\r\\n   <button>name2</button>\\r\\n</div>\\r\\n---\\r\\n[{ type: div , props: '', children: 'hello'}, [{.type: button, props: '', children: name1 }, { .type: button, props: '', children: name2  }]]\\r\\n\\r\\n```\\r\\n\\r\\n**nomalizeVNode**\\r\\n정규화를 해주는 이유 : 객체/배열 구조 데이터를 평탄하고 효율적으로 구성하는 것\\r\\n```js\\r\\n// 정규화 전 (비정규화 상태)\\r\\n// company 정보가 사용자마다 중복되어 있다. 이렇게 되면 수정 시 모든 곳을 찾아서 바꿔야 한다.\\r\\nconst users = [\\r\\n  {\\r\\n    id: 1,\\r\\n    name: \\\"Alice\\\",\\r\\n    company: { id: 100, name: \\\"OpenAI\\\" }\\r\\n  },\\r\\n  {\\r\\n    id: 2,\\r\\n    name: \\\"Bob\\\",\\r\\n    company: { id: 100, name: \\\"OpenAI\\\" }\\r\\n  }\\r\\n];\\r\\n```\\r\\n\\r\\n```js\\r\\n// 회사 정보가 한 곳에만 있어서 변경, 추적이 쉽고 실수도 줄어든다.\\r\\nconst users = {\\r\\n  1: { id: 1, name: \\\"Alice\\\", companyId: 100 },\\r\\n  2: { id: 2, name: \\\"Bob\\\", companyId: 100 }\\r\\n};\\r\\n\\r\\nconst companies = {\\r\\n  100: { id: 100, name: \\\"OpenAI\\\" }\\r\\n};\\r\\n```\\r\\n\\r\\n**createElement**\\r\\nentries 사용하여 attr , value 로 배열화하여 element 요소 넣어주기.\\r\\n```js\\r\\nfunction updateAttributes($el, props) {\\r\\n    Object.entries(props).forEach(([attr, value]) => {\\r\\n      if (attr.startsWith(\\\"on\\\") && typeof value === \\\"function\\\") {\\r\\n        const eventType = attr.toLowerCase().slice(2);\\r\\n        addEvent($el, eventType, value);\\r\\n      } else if ([\\\"checked\\\", \\\"disabled\\\", \\\"selected\\\", \\\"readOnly\\\"].includes(attr)) {\\r\\n        $el[attr] = Boolean(value);\\r\\n      } else if (attr === \\\"className\\\") {\\r\\n        $el.setAttribute(\\\"class\\\", value);\\r\\n      } else if (attr === \\\"style\\\" && typeof value === \\\"object\\\") {\\r\\n        Object.assign($el.style, value);\\r\\n      } else {\\r\\n        $el.setAttribute(attr, value);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n```\\r\\n\\r\\n**eventManager**\\r\\n- 이벤트 위임\\r\\nMap, eventMap\\r\\nJavaScript에서 키-값 쌍을 저장하는 자료구조지만, 사용 목적과 내부 동작 방식에 큰 차이\\r\\n## 📊 Map vs WeakMap 차이 요약\\r\\n\\r\\n| 항목         | `Map`                         | `WeakMap`                                  |\\r\\n|--------------|-------------------------------|---------------------------------------------|\\r\\n| 키 타입      | 객체, 원시값 모두 가능        | 객체만 가능                                |\\r\\n| 반복         | 가능                           | 불가능                                     |\\r\\n| 크기 확인    | `.size` 가능                   | 불가능                                     |\\r\\n| GC 영향      | 수동 제거 필요                 | 자동 제거 (키가 없으면 값도 제거됨)        |\\r\\n| 사용 목적    | 일반적인 키-값 저장            | 프라이빗 데이터나 메모리 누수 방지 등       |\\r\\n\\r\\n- WeakMap 을 사용하는 이유\\r\\n메모리 누수 방지 (가비지 컬렉션)\\r\\nDOM 요소가 삭제되면 WeakMap의 키(= 요소)에 대한 참조도 사라짐\\r\\n그러면 JavaScript 엔진이 해당 entry를 자동으로 메모리에서 제거함\\r\\n\\r\\n```js\\r\\nconst el = document.createElement(\\\"div\\\");\\r\\naddEvent(el, \\\"click\\\", handler);\\r\\ndocument.body.removeChild(el); // el DOM에서 제거됨\\r\\n```\\r\\n만약 Map을 사용했다면 eventMap이 el을 계속 참조 → 메모리 누수 발생\\r\\n하지만 WeakMap은 el이 참조되지 않으면 자동으로 해당 데이터 제거됨\\r\\n\\r\\n**updateElement**\\r\\n- diffing 알고리즘 \\r\\n두 데이터 구조 간의 차이점(Difference)을 찾아내는 알고리즘\\r\\n* 주로 DOM을 효율적으로 업데이트하기 위해 사용\\r\\n* 성능 최적화를 위해 필요 (전체 DOM 대신 변경된 부분만 업데이트)\\r\\n\\r\\n**renderElement**\\r\\n- 이전 Node 와 현재 Node \\r\\n```js\\r\\nconst vNodeMap = new WeakMap();\\r\\n\\r\\nexport function renderElement(vNode, container) {\\r\\n  const normalizedVNode = normalizeVNode(vNode);\\r\\n  const oldNode = vNodeMap.get(container);\\r\\n  \\r\\n  if (!oldNode) {\\r\\n    // 최초 렌더링시에는 createElement로 DOM을 생성하고\\r\\n    const element = createElement(normalizedVNode);\\r\\n    container.appendChild(element);\\r\\n  } else {\\r\\n    // 이후에는 updateElement로 기존 DOM을 업데이트한다.\\r\\n    updateElement(container, normalizedVNode, oldNode, 0);\\r\\n  }\\r\\n\\r\\n  // 렌더링이 완료되면 container에 이벤트를 등록한다.\\r\\n  setupEventListeners(container);\\r\\n  vNodeMap.set(container, normalizedVNode);\\r\\n}\\r\\n```\\r\\n\\r\\n### 코드 품질\\r\\n#### 코드 리팩토링 필요한 부분 \\r\\n- flat 메서드 사용 (코드가 더 간결해짐)\\r\\n- flat 메서드의 존재를 모르고 AI를 통해 함수로 작성하였다. \\r\\n```js\\r\\nexport function createVNode(type, props, ...children) {\\r\\n  // Helper to flatten deeply nested arrays\\r\\n  function flatten(arr) {\\r\\n    return arr.reduce((acc, val) => {\\r\\n      if (Array.isArray(val)) {\\r\\n        acc.push(...flatten(val));\\r\\n      } else {\\r\\n        acc.push(val);\\r\\n      }\\r\\n      return acc;\\r\\n    }, []);\\r\\n  }\\r\\n\\r\\n  // Remove null, undefined, boolean (except 0/number)\\r\\n  function filterValid(child) {\\r\\n    return !(child === null || child === undefined || typeof child === \\\"boolean\\\");\\r\\n  }\\r\\n\\r\\n  // Flatten and filter children\\r\\n  const flatChildren = flatten(children).filter(filterValid);\\r\\n\\r\\n  return {\\r\\n    type,\\r\\n    props,\\r\\n    children: flatChildren,\\r\\n  };\\r\\n}\\r\\n```\\r\\n```js\\r\\n// children.flat(Infinity) 사용\\r\\n// flat(depth)는 배열을 얼마나 깊이까지 평탄화할지를 지정하는데, Infinity를 넣으면 모든 깊이까지 완전히 펼치라는 의미\\r\\nexport function createVNode(type, props, ...children) {\\r\\n  return {\\r\\n    type,\\r\\n    props,\\r\\n    children: children.flat(Infinity).filter((value) => value === 0 || Boolean(value)),\\r\\n  };\\r\\n```\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n- 이벤트 위임, 직접 바인딩의 차이점 \\r\\naddEvent (이벤트 위임) 과 addEventListener (직접 바인딩) 의 차이 요약표\\r\\n\\r\\n| 항목                    | `addEvent`                  | `addEventListener`           |\\r\\n|-------------------------|-------------------------------------------|----------------------------------------|\\r\\n| 리스너 수               | 1개 (이벤트 종류별 1개)                   | 요소마다 1개씩                         |\\r\\n| 메모리 사용량           | 적음                                      | 많아질 수 있음                         |\\r\\n| 동적 요소 대응          | 자동                                      | 수동 등록 필요                         |\\r\\n| 이벤트 타겟 정확성      | `event.target` 기반, 부모 탐색 필요        | 명확하게 해당 요소                    |\\r\\n| 이벤트 종류 제한        | 기본적으로 버블링되는 이벤트만 가능        | 캡처링 포함 모든 이벤트 가능          |\\r\\n| 성능 (많은 요소일 때)   | 우수                                      | 성능 저하 가능                         |\\r\\n| 구현 난이도             | 약간 복잡                                  | 간단함                                 |\\r\\n\\r\\n\\r\\n\\r\\n### 과제 피드백\\r\\ncreateElement.js 파일에서 createDocumentFragment 사용 이유 알아보기..!\\r\\n- VirtualDOM 을 직접 구현해보면서 VirtualDOM에 대해 알아갈 수 있어 좋은 기회가 된거 같습니다. [바뀐 부분만 업데이트 해주어서 효율적]\\r\\n \\r\\n## 리뷰 받고 싶은 내용\\r\\n1. 평탄화를 해줄 때 \\\"\\\" 으로 return 해주는 이유와 falsy한 값을 왜 필터링 해주는 지 궁금합니다.\\r\\n```js\\r\\nexport function normalizeVNode(vNode) {  \\r\\n  if (vNode == null || vNode == undefined || typeof(vNode) == \\\"boolean\\\") {\\r\\n    return \\\"\\\";\\r\\n  }\\r\\n  \\r\\n  if (typeof(vNode) == \\\"number\\\" || typeof(vNode) == \\\"string\\\") {\\r\\n    return String(vNode);\\r\\n  }\\r\\n  \\r\\n  if (typeof vNode.type === \\\"function\\\") {\\r\\n    return normalizeVNode(vNode.type({ ...vNode.props, children : vNode.children }));\\r\\n  }\\r\\n \\r\\n  return {\\r\\n    type: vNode.type,\\r\\n    props: vNode.props || null,\\r\\n    children: vNode.children.map(normalizeVNode).filter(Boolean),\\r\\n  };\\r\\n}\\r\\n```\\r\\n\\r\\n2. handleEvent 함수에서 elementEvents 를 디버그 찍어보면 아래 내용이 나오는데, 어떤 것인지 궁금합니다. \\r\\n[Function: spy] { `안에 있는 내용은 이벤트 핸들러들인가요 ? 무엇인지 궁금합니다. `}\\r\\n```text\\r\\nMap(1) {\\r\\n  'click' => Set(1) {\\r\\n    [Function: spy] {\\r\\n      getMockName: [Function (anonymous)],\\r\\n      mockName: [Function (anonymous)],\\r\\n      mockClear: [Function (anonymous)],\\r\\n      mockReset: [Function (anonymous)],\\r\\n      mockRestore: [Function (anonymous)],\\r\\n      getMockImplementation: [Function (anonymous)],\\r\\n      mockImplementation: [Function (anonymous)],\\r\\n      mockImplementationOnce: [Function (anonymous)],\\r\\n      withImplementation: [Function: withImplementation],\\r\\n      mockReturnThis: [Function (anonymous)],\\r\\n      mockReturnValue: [Function (anonymous)],\\r\\n      mockReturnValueOnce: [Function (anonymous)],\\r\\n      mockResolvedValue: [Function (anonymous)],\\r\\n      mockResolvedValueOnce: [Function (anonymous)],\\r\\n      mockRejectedValue: [Function (anonymous)],\\r\\n      mockRejectedValueOnce: [Function (anonymous)],\\r\\n      [Symbol(nodejs.dispose)]: [Function (anonymous)]\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n```js \\r\\nfunction handleEvent(event) {\\r\\n    let target = event.target;\\r\\n\\r\\n    while (target && target !== rootElement) {\\r\\n        const elementEvents = eventMap.get(target);\\r\\n        if (elementEvents) {\\r\\n            const handlers = elementEvents.get(event.type);\\r\\n            if (handlers) {\\r\\n                handlers.forEach((handler) => handler(event));\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        target = target.parentElement;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\",\"created_at\":\"2025-07-14T12:53:44Z\",\"updated_at\":\"2025-07-20T13:26:47Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"e91ac0f56eb655a6ed24665a916b6c9188f229f2\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/37/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/37/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/37/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/a04764bcf960b96cb2bc3b6671fec4240268d9de\",\"head\":{\"label\":\"Amelia-Shin:main\",\"ref\":\"main\",\"sha\":\"a04764bcf960b96cb2bc3b6671fec4240268d9de\",\"user\":{\"login\":\"Amelia-Shin\",\"id\":80433754,\"node_id\":\"MDQ6VXNlcjgwNDMzNzU0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/80433754?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Amelia-Shin\",\"html_url\":\"https://github.com/Amelia-Shin\",\"followers_url\":\"https://api.github.com/users/Amelia-Shin/followers\",\"following_url\":\"https://api.github.com/users/Amelia-Shin/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Amelia-Shin/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Amelia-Shin/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Amelia-Shin/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Amelia-Shin/orgs\",\"repos_url\":\"https://api.github.com/users/Amelia-Shin/repos\",\"events_url\":\"https://api.github.com/users/Amelia-Shin/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Amelia-Shin/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018400258,\"node_id\":\"R_kgDOPLOOAg\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"Amelia-Shin/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"Amelia-Shin\",\"id\":80433754,\"node_id\":\"MDQ6VXNlcjgwNDMzNzU0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/80433754?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/Amelia-Shin\",\"html_url\":\"https://github.com/Amelia-Shin\",\"followers_url\":\"https://api.github.com/users/Amelia-Shin/followers\",\"following_url\":\"https://api.github.com/users/Amelia-Shin/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/Amelia-Shin/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/Amelia-Shin/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/Amelia-Shin/subscriptions\",\"organizations_url\":\"https://api.github.com/users/Amelia-Shin/orgs\",\"repos_url\":\"https://api.github.com/users/Amelia-Shin/repos\",\"events_url\":\"https://api.github.com/users/Amelia-Shin/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/Amelia-Shin/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/Amelia-Shin/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/Amelia-Shin/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T07:15:13Z\",\"updated_at\":\"2025-07-20T05:01:14Z\",\"pushed_at\":\"2025-07-20T05:01:10Z\",\"git_url\":\"git://github.com/Amelia-Shin/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:Amelia-Shin/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/Amelia-Shin/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/Amelia-Shin/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":133,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/37\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/37\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/37\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/37/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/37/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/37/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/a04764bcf960b96cb2bc3b6671fec4240268d9de\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/38\",\"id\":2664316680,\"node_id\":\"PR_kwDOPJuWzM6ezj8I\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/38\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/38.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/38.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/38\",\"number\":38,\"state\":\"open\",\"locked\":false,\"title\":\"[1팀 주산들] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2) \",\"user\":{\"login\":\"DEV4N4\",\"id\":94872442,\"node_id\":\"U_kgDOBaejeg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/94872442?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/DEV4N4\",\"html_url\":\"https://github.com/DEV4N4\",\"followers_url\":\"https://api.github.com/users/DEV4N4/followers\",\"following_url\":\"https://api.github.com/users/DEV4N4/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/DEV4N4/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/DEV4N4/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/DEV4N4/subscriptions\",\"organizations_url\":\"https://api.github.com/users/DEV4N4/orgs\",\"repos_url\":\"https://api.github.com/users/DEV4N4/repos\",\"events_url\":\"https://api.github.com/users/DEV4N4/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/DEV4N4/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://dev4n4.github.io/front_6th_chapter1-2/\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n음.. 설명이 친절해서 과제를 어렵지 않게 진행할 수 있을 줄 알았는데 생각보다 어려웠다.\\r\\n\\r\\n디버깅을 할 줄 몰라서 초반에 조금 고생을 했고, 디버깅 하는 방법을 배우고 나서도 생각대로 로그가 찍히지 않거나 예상했던 결과가 나오지 않아서 고생을 했다.\\r\\n\\r\\n과제 초반에는 이런 함수를 왜 구현해야 하는지 의문을 가지고 한참 찾아보면서 이해하려고 애썼고, 조금 공부한 결과 흐름이 이해 되었지만 개념이나 원리를 이해하고 진행을 하더라도 그걸 코드로 녹여내 보여주는 것이 생각보다 까다로웠다. (개념이랑 흐름, 여기서 이 함수가 왜 필요한지나 이 조건문을 왜 넣는지 같은건 알겠는데 그래서 그 다음엔 어떻게 진행해야 할지를 잘 모르겠어서 다른 분들의 PR도 많이 참고하고 많이 물어가면서 개발을 진행했던 것 같다…)\\r\\n\\r\\n## 기술적 성장\\r\\n\\r\\n<!-- 예시\\r\\n\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n이번 과제를 수행하면서 Virtual DOM에 대해 깊게 이해하게 된 것 같다.\\r\\n\\r\\n구현한 각각의 함수의 역할에 대해 간략한 정리 & 설명을 한다면\\r\\n\\r\\n### 1. createVNode\\r\\n\\r\\ncreateVNode 함수는 Virtual Node를 생성하는 함수이다.\\r\\n\\r\\n각 페이지 파일마다 존재하는 /** @jsx createVNode */ (**JSX 프래그마(pragma)** 주석)을 통해 JSX가 `createVNode(...)` 함수로 변환되도록 지시해 사용한다.\\r\\n\\r\\nchildren을 평탄화하여 사용하였다.\\r\\n\\r\\n\\r\\n### 2. normalizeVNode\\r\\n\\r\\nnormalizeVNode 함수는 주어진 가상 노드(vNode)를 표준화된 형태로 변환하는 역할을 한다. \\r\\n\\r\\n이 함수는 다양한 타입의 입력을 처리하여 일관된 형식의 가상 노드를 반환하여 DOM 조작이나 렌더링 과정에서 일관된 데이터 구조를 사용할 수 있도록 하는 역할을 수행한다.\\r\\n\\r\\n\\r\\n### 3. createElement\\r\\n\\r\\nvNode를 Javascript Element로(가상돔(VirtualDOM)을 돔으로) 변환해주는 함수이다.\\r\\n\\r\\n\\r\\n### 4. eventManager\\r\\n\\r\\n1. addEvent와 removeEvent를 통해 element에 대한 이벤트 함수를 어딘가에 저장하거나 삭제한다.\\r\\n2. setupEventListeners를 이용해서 이벤트 함수를 가져와서 한 번에 root에 이벤트를 등록한다.\\r\\n\\r\\nfindParent 함수를 통해 이벤트 위임(버블링) 방식으로 등록하였다.\\r\\n\\r\\n\\r\\n### 5. renderElement\\r\\n\\r\\nrenderElement 함수는 앞에서 작성된 함수들을 조합하여 vNode를 container에 렌더링하는 작업을 수행한다.\\r\\n\\r\\n최초 렌더링일 때(container._previousVNode == null 일 때)는 createElement 함수를 사용하여 랜더링이 되고, 리렌더링일 때는 updateElement 함수를 사용한다.\\r\\n\\r\\n\\r\\n### 6. updateElement\\r\\n\\r\\nupdateElement 함수는 모든 태그를 비교하여 변경된 부분에 대해 수정/추가/삭제\xA0작업을 수행해준다.\\r\\n\\r\\n이렇게 정리가 될 수 있을 것 같다.\\r\\n\\r\\n이 함수들의 역할과 서로 각자 무슨 연관관계가 있는지가 처음에는 잘 와닿지 않았고 리액트 내부에서 왜 이런 동작이 필요한지 잘 모르고 진행을 했었는데, 여러 자료들을 찾아보고 코드를 작성해 나가면서 이해가 되었다..\\r\\n\\r\\n## 코드 품질\\r\\n\\r\\n<!-- 예시\\r\\n\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\nupdateElement 함수를 구현하면서 고민을 좀 했다.\\r\\n\\r\\n```jsx\\r\\n// 5. 같은 타입의 노드 업데이트\\r\\n  //   - 속성 업데이트\\r\\n  //   - 자식 노드 재귀적 업데이트\\r\\n  //   - 불필요한 자식 노드 제거\\r\\n  if (target) {\\r\\n    const oldProps = oldNode.props;\\r\\n    const newProps = newNode.props;\\r\\n    updateAttributes(target, newProps ?? {}, oldProps ?? {});\\r\\n\\r\\n    const oldChildren = oldNode.children ?? [];\\r\\n    const newChildren = newNode.children ?? [];\\r\\n    for (let i = 0; i < Math.max(newChildren.length, oldChildren.length); i++) {\\r\\n      updateElement(target, newChildren[i], oldChildren[i], i);\\r\\n    }\\r\\n\\r\\n// 이 부분!!\\r\\n// ************************************************ //\\r\\n    if (oldChildren.length > newChildren.length) {\\r\\n      for (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n        if (target.childNodes[i]) {\\r\\n          target.removeChild(target.childNodes[i]);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n// ************************************************ //\\r\\n\\r\\n```\\r\\n\\r\\n구현을 끝내고 코드를 다시 점검할 때,\\r\\n갑자기 주석으로 표시한 부분의 코드를 최적화 할 수 있지 않을까 하는 의문이 생겼었다.\\r\\n\\r\\n왜냐하면 상단에서 newChildren 혹은 oldChildren 중 length가 긴 쪽을 중심으로 이미 for문이 한번 돌아가면서 node들을 제거 혹은 교체를 한번씩 진행해줄텐데 굳이 아랫부분에서 한번 더 for문을 돌려서 제거를 진행할 필요가 있는지 의문이 들었다.\\r\\n\\r\\n그래서 GPT에게 더 좋은 방법이 없을지, 저 부분이 꼭 필요한 코드일지 물어보며 답을 얻었다.\\r\\n결과적으로 저 부분은 최적화를 해야하는 부분이 아니라 정확한 구현을 위해 그대로 필요한 코드였다.\\r\\n\\r\\n예를 들어서 설명하자면 아래와 같다.\\r\\n\\r\\n### 1. 초기 상태\\r\\n\\r\\n- **oldChildren**: [A, B, C, D]\\r\\n- **newChildren**: [A, C]\\r\\n- 실제 DOM의 `parent.childNodes`도 `A, B, C, D` 순이라고 가정을 하자.\\r\\n\\r\\n```jsx\\r\\nparent\\r\\n ├── A\\r\\n ├── B\\r\\n ├── C\\r\\n └── D\\r\\n```\\r\\n\\r\\n### 2. 재귀 호출(재귀 for 루프) 진행\\r\\n\\r\\n`for (let i = 0; i < Math.max(...); i++)` 루프가 `i = 0`에서 `3`까지 돌게 된다.\\r\\n\\r\\n1. **i = 0**\\r\\n    - oldChildren[0] = A, newChildren[0] = A\\r\\n    - 타입·키가 같으므로 속성만 업데이트하고 건너뜀\\r\\n    - DOM: A, B, C, D\\r\\n2. **i = 1**\\r\\n    - oldChildren[1] = B, newChildren[1] = C\\r\\n    - 타입이 다르므로 `parent.replaceChild(createElement(C), targetAtIndex1)` 수행\\r\\n    - 이때 B가 C로 교체되어, DOM이 `[A, C, C, D]`가 됨.\\r\\n3. **i = 2**\\r\\n    - oldChildren[2] = C, newChildren[2] = `undefined`\\r\\n    - newNode가 없고 oldNode가 있으므로 `removeChild(targetAtIndex2)` 수행\\r\\n    - 이때 두 번째 인덱스(0-based)였던 `childNodes[2]`(원래 교체 후의 두 번째 C)가 삭제되어\\r\\n        \\r\\n        DOM이 `[A, C, D]`가 됨.\\r\\n        \\r\\n4. **i = 3**\\r\\n    - oldChildren[3] = D, newChildren[3] = `undefined`\\r\\n    - `removeChild(targetAtIndex3)`을 시도하나,\\r\\n        \\r\\n        현재 `childNodes` 길이는 3 (인덱스 0,1,2)라서 아무 일도 일어나지 않아\\r\\n        \\r\\n    - 결과적으로 **D가 여전히 남아 있는 문제가 발생**.\\r\\n    - DOM: `[A, C, D]`\\r\\n\\r\\n### 3. 클린업(Cleanup) 단계\\r\\n\\r\\n```jsx\\r\\nif (oldChildren.length > newChildren.length) {\\r\\n  // oldChildren.length = 4, newChildren.length = 2\\r\\n  for (let i = oldChildren.length - 1; i >= newChildren.length; i--) {\\r\\n    if (target.childNodes[i]) {\\r\\n      target.removeChild(target.childNodes[i]);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n- `i = 3` (인덱스 3): `childNodes[3]`이 없으므로 건너뜀\\r\\n- `i = 2` (인덱스 2): `childNodes[2]`은 D → 제거\\r\\n- 이후 `i = 1`이면 반복 종료 조건(`i >= 2`)가 false가 되어 루프 끝\\r\\n\\r\\n최종 **DOM** 구조는 `[A, C]`가 되어 새로운 자식 배열(newChildren)과 정확히 일치한다.\\r\\n\\r\\n어차피 newChildren의 length보다 많게 남아있는 요소들은 필요가 없으므로 이 단계에서 삭제해줘야 한다. 그래서 필요한 로직이고 앞에서 for문을 한번 돌리는 것으로 모든것을 해결하기는 어려웠을 것 같다.\\r\\n\\r\\n결론은 처음 구현한 형태가 최선일 것 같아서 수정하지 않았다 였지만, 최적화를 시도해보려고 다시 한번 고민했던 경험이 좋았다.\\r\\n\\r\\n## 학습 효과 분석\\r\\n\\r\\n<!-- 예시\\r\\n\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n우리가 어떻게 JSX 문법을 쓸 수 있게 되었는지에 대해서 알게 되었고, 디버깅 하는 방법에 대해서도 새로 알게 되었다. 또한 구현을 위해 mdn에 들락날락 하면서 다양한 document 메서드에 대해서 읽어보는 기회도 되었던 것 같다.\\r\\n\\r\\n막연히 마법처럼 느껴졌던 과정이 좀 더 현실적으로 와닿아서 의의가 있었다는 생각이 들었다.\\r\\n\\r\\n아직 이러한 과정들을 흐름적으로만 설명할 수 있고 영서님께서 정리해주신 것 처럼 체계적으로 설명하기는 어려운 것 같아서 기회가 된다면 나중에 블로그에 내용을 정리해서 작성하면 더욱 좋을 것 같다는 생각이 들었다.\\r\\n\\r\\n## 과제 피드백\\r\\n\\r\\n<!-- 예시\\r\\n\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n과제의 지시사항이나 설명이 친절해서 좋았습니다!!\\r\\n\\r\\n사실 과제를 진행하면서 초반에는 지시사항을 따라서 함수를 작성하기만 하는건데 개념이 숙지가 될까..? 하는 걱정이 조금 있었지만 주신 자료를 충실히 읽어보고 이행하니 흐름이 다 이해가 되었어요\\r\\n\\r\\n제공해주신 자료들에 수강생들이 이 과제를 통해 배웠으면 하는 사항들이 잘 설명되어 있어서 편했고\\r\\n추가적인 자료를 많이 찾아볼 필요가 없이 진행되었던 것 같아 좋았습니다!!\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n#### 1. updateElement 함수의 “3. 텍스트 노드 업데이트” 주석 부분 코드 최적화에 대한 질문이 있습니다.\\r\\n\\r\\n```jsx\\r\\n // 3. 텍스트 노드 업데이트\\r\\n  const newEl = createElement(newNode);\\r\\n  const oldEl = createElement(oldNode);\\r\\n  if (newNode != null && oldNode != null && newEl.nodeType === Node.TEXT_NODE && oldEl.nodeType === Node.TEXT_NODE) {\\r\\n    if (newNode !== oldNode) {\\r\\n      const newTextNode = document.createTextNode(String(newNode));\\r\\n      if (target) {\\r\\n        parentElement.replaceChild(newTextNode, target);\\r\\n      } else {\\r\\n        parentElement.appendChild(newTextNode);\\r\\n      }\\r\\n    }\\r\\n    return;\\r\\n  }\\r\\n```\\r\\n\\r\\n지금은 TEXT_NODE 프로퍼티를 통해 같은 태그끼리 비교를 할 수 있게 하려고 newNode와 oldNode를 createElement 함수를 사용하여 element로 만들어서 사용을 하고 있는데요.\\r\\n정작 element로 만든 다음에 그 element를 사용하지 않는 게 성능 측면에서 안좋지 않을까 하고 걱정이 되었습니다.\\r\\n하지만 이 방식이 아니라면 일일히 태그명을 하드코딩해서 비교를 해주는 방식으로 개발을 해야할 것 같은데 그렇다면 코드가 상당히 지저분해 질 것 같다는 생각도 들었습니다.\\r\\n혹시 다른 더 좋은 구현 방법이 있을까요? 지금 방법이 성능에 많이 안좋은 방향일까요? 태그명으로 하드코딩 하는 방식으로 진행했어야 할까요?\\r\\n\\r\\n\\r\\n#### 2. eventManager의 setupEventListeners 함수 구현에 대해서 더 나은 방법을 얻고 싶습니다.\\r\\n\\r\\n```jsx\\r\\nexport function setupEventListeners(root) {\\r\\n  const allDomEvents = [\\r\\n    // 마우스 이벤트\\r\\n    \\\"click\\\",\\r\\n    \\\"dblclick\\\",\\r\\n    \\\"mousedown\\\",\\r\\n    \\\"mouseup\\\",\\r\\n    \\\"mousemove\\\",\\r\\n    \\\"mouseenter\\\",\\r\\n    \\\"mouseleave\\\",\\r\\n    \\\"mouseover\\\",\\r\\n    \\\"mouseout\\\",\\r\\n    \\\"contextmenu\\\",\\r\\n    \\\"auxclick\\\",\\r\\n\\r\\n    // 키보드 이벤트\\r\\n    \\\"keydown\\\",\\r\\n    \\\"keypress\\\",\\r\\n    \\\"keyup\\\",\\r\\n\\r\\n    // 입력/폼 이벤트\\r\\n    \\\"input\\\",\\r\\n    \\\"change\\\",\\r\\n    \\\"submit\\\",\\r\\n    \\\"reset\\\",\\r\\n    \\\"focus\\\",\\r\\n    \\\"blur\\\",\\r\\n    \\\"focusin\\\",\\r\\n    \\\"focusout\\\",\\r\\n    \\\"invalid\\\",\\r\\n\\r\\n    // 터치 이벤트\\r\\n    \\\"touchstart\\\",\\r\\n    \\\"touchmove\\\",\\r\\n    \\\"touchend\\\",\\r\\n    \\\"touchcancel\\\",\\r\\n\\r\\n    // 포인터 이벤트\\r\\n    \\\"pointerdown\\\",\\r\\n    \\\"pointerup\\\",\\r\\n    \\\"pointermove\\\",\\r\\n    \\\"pointercancel\\\",\\r\\n    \\\"pointerover\\\",\\r\\n    \\\"pointerout\\\",\\r\\n    \\\"pointerenter\\\",\\r\\n    \\\"pointerleave\\\",\\r\\n    \\\"gotpointercapture\\\",\\r\\n    \\\"lostpointercapture\\\",\\r\\n\\r\\n    // 휠 및 스크롤 이벤트\\r\\n    \\\"wheel\\\",\\r\\n    \\\"scroll\\\",\\r\\n\\r\\n    // 드래그 & 드롭 이벤트\\r\\n    \\\"drag\\\",\\r\\n    \\\"dragstart\\\",\\r\\n    \\\"dragend\\\",\\r\\n    \\\"dragenter\\\",\\r\\n    \\\"dragleave\\\",\\r\\n    \\\"dragover\\\",\\r\\n    \\\"drop\\\",\\r\\n\\r\\n    // 클립보드 이벤트\\r\\n    \\\"copy\\\",\\r\\n    \\\"cut\\\",\\r\\n    \\\"paste\\\",\\r\\n\\r\\n    // 컴포지션 이벤트\\r\\n    \\\"compositionstart\\\",\\r\\n    \\\"compositionupdate\\\",\\r\\n    \\\"compositionend\\\",\\r\\n\\r\\n    // 윈도우 이벤트\\r\\n    \\\"load\\\",\\r\\n    \\\"beforeunload\\\",\\r\\n    \\\"unload\\\",\\r\\n    \\\"resize\\\",\\r\\n    \\\"hashchange\\\",\\r\\n    \\\"popstate\\\",\\r\\n    \\\"DOMContentLoaded\\\",\\r\\n    \\\"visibilitychange\\\",\\r\\n    \\\"storage\\\",\\r\\n\\r\\n    // 네트워크 이벤트\\r\\n    \\\"online\\\",\\r\\n    \\\"offline\\\",\\r\\n\\r\\n    // 미디어 이벤트\\r\\n    \\\"play\\\",\\r\\n    \\\"pause\\\",\\r\\n    \\\"playing\\\",\\r\\n    \\\"waiting\\\",\\r\\n    \\\"ended\\\",\\r\\n    \\\"volumechange\\\",\\r\\n    \\\"timeupdate\\\",\\r\\n    \\\"seeking\\\",\\r\\n    \\\"seeked\\\",\\r\\n    \\\"loadeddata\\\",\\r\\n    \\\"loadedmetadata\\\",\\r\\n    \\\"canplay\\\",\\r\\n    \\\"canplaythrough\\\",\\r\\n\\r\\n    // 애니메이션/트랜지션 이벤트\\r\\n    \\\"animationstart\\\",\\r\\n    \\\"animationend\\\",\\r\\n    \\\"animationiteration\\\",\\r\\n    \\\"transitionstart\\\",\\r\\n    \\\"transitionend\\\",\\r\\n    \\\"transitionrun\\\",\\r\\n    \\\"transitioncancel\\\",\\r\\n\\r\\n    // 오류 및 기타\\r\\n    \\\"error\\\",\\r\\n    \\\"abort\\\",\\r\\n    \\\"close\\\",\\r\\n    \\\"open\\\",\\r\\n  ];\\r\\n\\r\\n  for (const eventType of allDomEvents) {\\r\\n    root.addEventListener(eventType, (e) => {\\r\\n      const events = eventList.filter((event) => event.eventType === eventType);\\r\\n      if (events.length <= 0) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      for (const event of events) {\\r\\n        if (event.element === findParent(e.target, event.element)) {\\r\\n          event.handler(e);\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n현재 allDomEvents 라는 이벤트명들을 모아둔 배열을 만들어서 여기서 이벤트 타입을 찾는 형태로 구현을 해두었습니다. \\r\\n사실상 하드코딩이고 이 방식이 유지보수 측면에서 좋을 것 같다는 생각이 들진 않았는데.. \\r\\n기본 제공하는 함수들 중에서 이벤트 타입들을 모아서 반환해주는 함수는 없다고 하여 미봉책으로 이렇게 개발하였지만 더 좋은 방법은 없을까 싶어 여쭙게 되었습니다. \\r\\n코치님께서는 이 함수를 리팩토링 하신다면 어떻게 개선하실지가 궁금합니다.\\r\\n\",\"created_at\":\"2025-07-14T13:37:52Z\",\"updated_at\":\"2025-07-20T01:29:44Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"51de5c1a8608ddbc128d1c1a48686ed229a96a62\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/38/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/38/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/38/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/11a422ff1c1a2eab7210792da8f35185fece65d3\",\"head\":{\"label\":\"DEV4N4:main\",\"ref\":\"main\",\"sha\":\"11a422ff1c1a2eab7210792da8f35185fece65d3\",\"user\":{\"login\":\"DEV4N4\",\"id\":94872442,\"node_id\":\"U_kgDOBaejeg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/94872442?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/DEV4N4\",\"html_url\":\"https://github.com/DEV4N4\",\"followers_url\":\"https://api.github.com/users/DEV4N4/followers\",\"following_url\":\"https://api.github.com/users/DEV4N4/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/DEV4N4/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/DEV4N4/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/DEV4N4/subscriptions\",\"organizations_url\":\"https://api.github.com/users/DEV4N4/orgs\",\"repos_url\":\"https://api.github.com/users/DEV4N4/repos\",\"events_url\":\"https://api.github.com/users/DEV4N4/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/DEV4N4/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019514812,\"node_id\":\"R_kgDOPMSPvA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"DEV4N4/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"DEV4N4\",\"id\":94872442,\"node_id\":\"U_kgDOBaejeg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/94872442?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/DEV4N4\",\"html_url\":\"https://github.com/DEV4N4\",\"followers_url\":\"https://api.github.com/users/DEV4N4/followers\",\"following_url\":\"https://api.github.com/users/DEV4N4/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/DEV4N4/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/DEV4N4/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/DEV4N4/subscriptions\",\"organizations_url\":\"https://api.github.com/users/DEV4N4/orgs\",\"repos_url\":\"https://api.github.com/users/DEV4N4/repos\",\"events_url\":\"https://api.github.com/users/DEV4N4/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/DEV4N4/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/DEV4N4/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/DEV4N4/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T12:52:30Z\",\"updated_at\":\"2025-07-17T17:52:50Z\",\"pushed_at\":\"2025-07-17T17:52:59Z\",\"git_url\":\"git://github.com/DEV4N4/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:DEV4N4/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/DEV4N4/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/DEV4N4/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":264,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/38\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/38\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/38\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/38/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/38/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/38/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/11a422ff1c1a2eab7210792da8f35185fece65d3\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/40\",\"id\":2664547779,\"node_id\":\"PR_kwDOPJuWzM6e0cXD\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/40\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/40.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/40.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/40\",\"number\":40,\"state\":\"open\",\"locked\":false,\"title\":\"[2팀 유윤우] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"yunwoo-yu\",\"id\":100748721,\"node_id\":\"U_kgDOBgFNsQ\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/100748721?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yunwoo-yu\",\"html_url\":\"https://github.com/yunwoo-yu\",\"followers_url\":\"https://api.github.com/users/yunwoo-yu/followers\",\"following_url\":\"https://api.github.com/users/yunwoo-yu/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yunwoo-yu/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yunwoo-yu/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yunwoo-yu/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yunwoo-yu/orgs\",\"repos_url\":\"https://api.github.com/users/yunwoo-yu/repos\",\"events_url\":\"https://api.github.com/users/yunwoo-yu/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yunwoo-yu/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://yunwoo-yu.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n이번엔 Jsx가 추가 된 환경에서 SPA에서 Virtual DOM을 다루는 코어 코드를 학습했습니다.\\r\\n테스트 코드가 존재해 순서대로 진행할 수 있었지만 만약 테스트 코드가 없는 환경에서 vNode를 생성하고 정규화한 뒤\\r\\nElement를 생성하는 과정을 생각해낼 수 있었을까? 라고 한다면 시작하기가 굉장히 어렵지 않았을까 생각이 드는 과제였습니다.\\r\\n\\r\\nAI는 최소한으로 사용하고자 했고 이해하지 못한 코드는 사용하지 않으려 노력했습니다! 개인적으로는 diff, event쪽 구현을 했지만 아직 꽤 어려운 부분인 것 같습니다.😅\\r\\n\\r\\n전체적인 구조를 이해하려고 Jsx 플러그인 문서를 보며 커스텀 함수로 트랜스파일링되어 실행이 되는 부분부터 차근차근 되짚어보며 복기했고\\r\\n개인적으로 한번 더 살펴보며 리팩토링을 진행해봤지만 반복 코드 한곳밖에 개선한 게 없는 것 같아 아쉬움이 조금 남는 것 같습니다.\\r\\n\\r\\n이제 또 블로그에 기록하며 한번 더 살펴봐서 이해도를 높일 생각입니다. 유익하고 재밌는 과제 감사합니다. 🙇‍♂️\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n**WeakMap 활용**\\r\\n\\r\\n```js\\r\\n// WeakMap의 Key는 객체이며 객체를 참조하는 곳이 없다면 객체는 메모리에서 제거된다.\\r\\nlet john = { name: \\\"John\\\" };\\r\\n\\r\\nlet weakMap = new WeakMap();\\r\\nweakMap.set(john, \\\"...\\\");\\r\\n\\r\\njohn = null; // 참조를 덮어씀\\r\\n\\r\\n// john을 나타내는 객체는 이제 메모리에서 제거\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n**Virtual DOM + JSX 구조의 전체적인 실행 플로우**\\r\\n\\r\\n```js\\r\\nfunction main() {\\r\\n  initRender();\\r\\n  router.start();\\r\\n}\\r\\n```\\r\\n\\r\\nmain 함수 호출로 initRender 실행\\r\\n\\r\\n```js\\r\\n/**\\r\\n * 렌더링 초기화 - Store 변화 감지 설정\\r\\n */\\r\\nexport function initRender() {\\r\\n  // 각 Store의 변화를 감지하여 자동 렌더링\\r\\n  productStore.subscribe(render);\\r\\n  cartStore.subscribe(render);\\r\\n  uiStore.subscribe(render);\\r\\n  router.subscribe(render);\\r\\n}\\r\\n```\\r\\n1. 각 Store를 구독, 렌더함수 전달\\r\\n2. 이후 router.start() 실행하여 현재 url에 해당하는 router를 찾아 알림 전송 (notify 함수 실행)\\r\\n\\r\\n```jsx\\r\\n/** @jsx createVNode */\\r\\nimport { createVNode } from \\\"../lib\\\";\\r\\n\\r\\nconst HomePage = withLifecycle(\\r\\n  return (/* JSX 문법...*/)\\r\\n)\\r\\n\\r\\nexport const render = withBatch(() => {\\r\\n  const rootElement = document.getElementById(\\\"root\\\");\\r\\n  if (!rootElement) return;\\r\\n\\r\\n  const PageComponent = router.target;\\r\\n\\r\\n  // App 컴포넌트 렌더링\\r\\n  renderElement(<PageComponent />, rootElement);\\r\\n});\\r\\n\\r\\n// /** @jsx createVNode */ JSX 커스텀 함수 이용으로 인해 컴포넌트는 트랜스파일링 된다.\\r\\nrenderElement(<PageComponent />, rootElement); -> renderElement(createVNode(<PageComponent />), rootElement);\\r\\n\\r\\n```\\r\\n1. notify 함수 실행으로 첫 PageComponent인 HomePage render 실행\\r\\n2. 컴포넌트는 `createVNode(<HomePage />)` 형태로 변환되어 renderElement 함수의 vNode로 전달된다.\\r\\n3. [JSX 플러그인 문서](https://babeljs.io/docs/babel-plugin-transform-react-jsx)\\r\\n\\r\\n```js\\r\\nexport function renderElement(vNode, container) {\\r\\n  const currentNodeTree = currentNodeMap.get(container);\\r\\n  const progressWorkInNodeTree = normalizeVNode(vNode);\\r\\n\\r\\n  if (!currentNodeTree) {\\r\\n    container.appendChild(createElement(progressWorkInNodeTree));\\r\\n  } else {\\r\\n    updateElement(container, progressWorkInNodeTree, currentNodeTree);\\r\\n  }\\r\\n\\r\\n  currentNodeMap.set(container, progressWorkInNodeTree);\\r\\n  setupEventListeners(container);\\r\\n}\\r\\n```\\r\\n1. 이후 전달된 vNode를 normalize 하고 기존 Virtual DOM Tree가 있다면 updateElement를 (diff)\\r\\n2. 없다면 container에 appendChild를 통해 Tree대로 Element를 생성하여 붙여준다.\\r\\n3. 이후 새로 EventListeners를 Setup한다.\\r\\n4. 만약 기존 트리가 존재한다면 updateElement를 실행하여 기존 트리와 비교하며 **변경 된 부분**만 업데이트를 진행한다.\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n**특히 만족스러운 구현**\\r\\n\\r\\ncreateElement, updateElement 에서 반복되지만 따로 만들어져있던 AttributeUpdate 함수를 하나로 합쳐 재사용해봤습니다.\\r\\n\\r\\n```js\\r\\nexport function setAttribute(target, key, value) {\\r\\n  if (key.startsWith(\\\"on\\\") && typeof value === \\\"function\\\") {\\r\\n    const eventType = key.slice(2).toLowerCase();\\r\\n\\r\\n    addEvent(target, eventType, value);\\r\\n  } else if (key === \\\"className\\\") {\\r\\n    target.setAttribute(\\\"class\\\", value);\\r\\n  } else if (key === \\\"style\\\") {\\r\\n    Object.assign(target.style, value);\\r\\n  } else if (value === true) {\\r\\n    target[key] = true;\\r\\n  } else if (value === false) {\\r\\n    target[key] = false;\\r\\n  } else {\\r\\n    target.setAttribute(key, value);\\r\\n  }\\r\\n}\\r\\n\\r\\nexport function createElement(vNode) {\\r\\n\\r\\n  if (vNode.props) {\\r\\n    Object.entries(vNode.props).forEach(([key, value]) => {\\r\\n      setAttribute($element, key, value);\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // ...etc\\r\\n}\\r\\n```\\r\\n\\r\\n```js\\r\\nfunction updateAttributes(target, newProps, oldProps) {\\r\\n  // newProps, oldProps가 없을경우 빈 객체로 초기화\\r\\n  const safeNewProps = newProps || {};\\r\\n  const safeOldProps = oldProps || {};\\r\\n\\r\\n  // 기존 속성 중 새 속성에 없는 것들 제거\\r\\n  Object.keys(safeOldProps).forEach((key) => {\\r\\n    if (!(key in safeNewProps)) {\\r\\n      removeAttribute(target, key, safeOldProps[key]);\\r\\n    }\\r\\n  });\\r\\n\\r\\n  // 새 속성 추가/업데이트\\r\\n  Object.keys(safeNewProps).forEach((key) => {\\r\\n    if (key.startsWith(\\\"on\\\")) {\\r\\n      const eventType = key.slice(2).toLowerCase();\\r\\n      if (safeOldProps[key]) {\\r\\n        removeEvent(target, eventType, safeOldProps[key]);\\r\\n      }\\r\\n\\r\\n      if (safeNewProps[key]) {\\r\\n        addEvent(target, eventType, safeNewProps[key]);\\r\\n      }\\r\\n    } else {\\r\\n      setAttribute(target, key, safeNewProps[key]);\\r\\n    }\\r\\n  });\\r\\n}\\r\\n\\r\\nexport function updateElement(parentElement, newNode, oldNode, index = 0) {\\r\\n\\r\\n  updateAttributes(currentElement, newNode.props, oldNode.props);\\r\\n  // ...etc\\r\\n}\\r\\n```\\r\\n\\r\\n**리팩토링이 필요한 부분**\\r\\n\\r\\n- 가독성이 좋지않은 조건문들을 한눈에 들어오게 만들기\\r\\n- updateElement 시 조건별로 돌아가는 for문 개선\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n  - Virtual DOM을 이용한 SPA의 전체적인 흐름과 구현방식\\r\\n- 추가 학습이 필요한 영역\\r\\n  - 더 많은 문제들을 해결한 React의 Fiber 아키텍처\\r\\n\\r\\n### 과제 피드백\\r\\n- 과제에서 좋았던 부분\\r\\n  - 테스트를 보며 하나씩 코어 함수들을 만들어가며 어떤 부분이 부족한지 빠졌는지 적절한 고민과 확인이 가능해서 너무 좋았습니다!\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n- 현재 updateElement, createElement 모두 재귀를 이용해 구현했습니다! 선택해볼법한 더 좋은 알고리즘이 있을까요?\\r\\n- 조건문이 많아져서 가독성이 많이 떨어지게 되었는데 if, else if 를 줄이거나 혹은 다른 선택지가 있을까요? 그리고\\r\\nif(조건) {\\r\\n... 내용\\r\\nreturn\\r\\n}\\r\\n이런 여러개의 if return 형태와 if else if 중 뭐가 더 나은 코드라고 생각하시나요?\\r\\n- eventManager 쪽에서 \\\"이벤트 위임\\\" 은 작성했지만 while 루프를 돌며 부모 엘리먼트를 재할당하며 이벤트가 있는 요소까지 찾아가는 이벤트 버블링 형태로 처리를 했습니다. 정상적으로 동작은 하지만 이게 맞는건지 잘 모르겠습니다.. 매번 이벤트마다 while 루프가 실행된다고 생각하면 성능이 좋지 않은 것 같다는 생각이 듭니다!\\r\\n- updateElement에서 children을 처리할 때 조건별로 돌아가는 for문이 3개 있습니다. 아무래도 3개의 for문이 거부감이 좀 드는데 적절한 코드가 맞을까요?\\r\\n- 이벤트가 제거됐는지 확인하는 방법이 궁금합니다! 테스트는 통과했는데 현재 코드레벨에서 확인해볼 방법이 있을까요? (메모리가 누수되는지 체크)\",\"created_at\":\"2025-07-14T14:59:17Z\",\"updated_at\":\"2025-07-17T01:32:32Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"1bbb6ab2435def8e862ba25d82376f6f1d623141\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/40/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/40/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/40/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/5760159eacfa0c4c8a4da64cd2598c195f4e2cb9\",\"head\":{\"label\":\"yunwoo-yu:main\",\"ref\":\"main\",\"sha\":\"5760159eacfa0c4c8a4da64cd2598c195f4e2cb9\",\"user\":{\"login\":\"yunwoo-yu\",\"id\":100748721,\"node_id\":\"U_kgDOBgFNsQ\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/100748721?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yunwoo-yu\",\"html_url\":\"https://github.com/yunwoo-yu\",\"followers_url\":\"https://api.github.com/users/yunwoo-yu/followers\",\"following_url\":\"https://api.github.com/users/yunwoo-yu/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yunwoo-yu/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yunwoo-yu/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yunwoo-yu/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yunwoo-yu/orgs\",\"repos_url\":\"https://api.github.com/users/yunwoo-yu/repos\",\"events_url\":\"https://api.github.com/users/yunwoo-yu/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yunwoo-yu/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018398109,\"node_id\":\"R_kgDOPLOFnQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"yunwoo-yu/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"yunwoo-yu\",\"id\":100748721,\"node_id\":\"U_kgDOBgFNsQ\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/100748721?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yunwoo-yu\",\"html_url\":\"https://github.com/yunwoo-yu\",\"followers_url\":\"https://api.github.com/users/yunwoo-yu/followers\",\"following_url\":\"https://api.github.com/users/yunwoo-yu/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yunwoo-yu/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yunwoo-yu/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yunwoo-yu/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yunwoo-yu/orgs\",\"repos_url\":\"https://api.github.com/users/yunwoo-yu/repos\",\"events_url\":\"https://api.github.com/users/yunwoo-yu/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yunwoo-yu/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/yunwoo-yu/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/yunwoo-yu/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T07:09:28Z\",\"updated_at\":\"2025-07-15T11:51:24Z\",\"pushed_at\":\"2025-07-15T11:48:20Z\",\"git_url\":\"git://github.com/yunwoo-yu/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:yunwoo-yu/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/yunwoo-yu/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/yunwoo-yu/front_6th_chapter1-2\",\"homepage\":\"\",\"size\":152,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/40\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/40\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/40\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/40/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/40/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/40/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/5760159eacfa0c4c8a4da64cd2598c195f4e2cb9\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/41\",\"id\":2664644877,\"node_id\":\"PR_kwDOPJuWzM6e00EN\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/41\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/41.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/41.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/41\",\"number\":41,\"state\":\"open\",\"locked\":false,\"title\":\"[9팀 임규원] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"q1Lim\",\"id\":19428455,\"node_id\":\"MDQ6VXNlcjE5NDI4NDU1\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/19428455?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/q1Lim\",\"html_url\":\"https://github.com/q1Lim\",\"followers_url\":\"https://api.github.com/users/q1Lim/followers\",\"following_url\":\"https://api.github.com/users/q1Lim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/q1Lim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/q1Lim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/q1Lim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/q1Lim/orgs\",\"repos_url\":\"https://api.github.com/users/q1Lim/repos\",\"events_url\":\"https://api.github.com/users/q1Lim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/q1Lim/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://q1lim.github.io/front_6th_chapter1-2/\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [ ] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [ ] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [ ] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [ ] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [ ] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n1주차 과제를 완성하지 않았지만, 가상 DOM 구현이라는 부분은 다시 새로운 시작이라고 생각하고 과제를 진행했습니다.\\r\\n\\r\\n1. 기본 과제 : Virtual DOM에 대해서는 책에서 그려진 트리 구조의 이론적인 부분만 생각했는데, 실제로 구현하는 부분에 대해 머릿속으로 정확히 그려지지 않았습니다. 함수를 하나씩 작성하면서 몰랐던 타입이나 함수에 대해 확인하는 작업을 문서에 작성하고 추후에 딥다이브 할 파트에 대해 리스트업하는 과정을 반복적으로 진행했습니다. (큰 틀의 흐름은 AI에게 문의함)\\r\\n2. 심화 과제 : 기본과제의 AI 의존도가 40%정도라면, 심화 과제의 경우 AI 의존도가 90%로.. 좋지 않았습니다. AI가 작성한 코드를 이해하는데 급급했고, 일부 테스트를 통과하지 못해 로컬에만 남았습니다.. :( \\r\\n\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n- 평소에 사용하는 jsx가 createVNode -> normalizeVNode -> createElement -> renderElement로 변환/매핑되는 흐름을 단계적으로 확인할 수 있었습니다.  jsx는 객체 구조로 변환 & 재구성 되어야함을 다시 한번 깨닫게 되었습니다.\\r\\n- \\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n- 리팩토링이 필요한 부분 : 반복적으로 타입을 체크하는 과정이 있었습니다. \\r\\n```\\r\\n  // 함수형 컴포넌트 오류 발생 에러 추가\\r\\n  if (typeof vNode === CHECK_TYPES.FUNCTION) {\\r\\n    throw new Error('컴포넌트는 createElement로 처리할 수 없습니다.');\\r\\n  }\\r\\n  // null, undefined, boolean값에 빈 텍스트 노드로 반환\\r\\n  if (vNode === null || vNode === undefined || vNode === true || vNode === false) {\\r\\n    return document.createTextNode('');\\r\\n  }\\r\\n  // 숫자에 대해 텍스트 노드로 반환\\r\\n  if (typeof vNode === CHECK_TYPES.STRING || typeof vNode === CHECK_TYPES.NUMBER) {\\r\\n    return document.createTextNode(String(vNode));\\r\\n  }\\r\\n```\\r\\n유사하게 노드의 타입을 체크하는 부분이 있었는데, 이 부분을 함수로 만들어서 공통적으로 적용할 수 있는 방향으로 만들고 싶었습니다. \\r\\n\\r\\nnormalizedVNode.js \\r\\n```\\r\\n  // null, undefined, boolean 값은 빈 문자열로 변환되어야 한다.\\r\\n  if (vNode === null || vNode === undefined || vNode === true || vNode === false) {\\r\\n    return '';\\r\\n  }\\r\\n  // 문자열과 숫자는 문자열로 변환되어야 한다.\\r\\n  if (typeof vNode === CHECK_TYPES.STRING) {\\r\\n    return vNode;\\r\\n  }\\r\\n  if (typeof vNode === CHECK_TYPES.NUMBER) {\\r\\n    return String(vNode);\\r\\n  }\\r\\n```\\r\\n- String() vs toString() : 개인적으로 어떤 함수를 쓰는 게 더 좋을지를 잘 몰라 AI를 통해 물어보곤 하는데, toString()을 자주 쓰다가 이번에는 안정적인 방향으로 가고자 String()을 썼는데,  이미 null / undefined를 구분해서 분기 상 안전적인 상태였던 걸 이후 코드를 보고나서야 생각했습니다(!) 이후 디스코드를 보니 toString()이 성능상 더 이점이 있다고해서 이 부분은 toString으로 수정해도 될 것 같다는 생각을 했습니다.  \\r\\n\\r\\n만족스러운 구현..은 아니고 다행이었던 부분! \\r\\nconstants.js\\r\\n```\\r\\n// 자주 사용하게 되는 문자열 정리\\r\\nexport const CHECK_TYPES = {\\r\\n  STRING: 'string',\\r\\n  NUMBER: 'number',\\r\\n  BOOLEAN: 'boolean',\\r\\n  FUNCTION: 'function',\\r\\n  OBJECT: 'object',\\r\\n};\\r\\n\\r\\nexport const ATTR = {\\r\\n  CLASSNAME: 'className',\\r\\n  STYLE: 'style',\\r\\n  CLASS: 'class',\\r\\n};\\r\\n\\r\\nexport const BOOLEAN_ATTR = ['checked', 'selected', 'readOnly', 'disabled'];\\r\\n\\r\\nexport const EVENT_TYPES = ['click', 'focus', 'blur', 'mouseover', 'keydown', 'keyup', 'change'];\\r\\n\\r\\n```\\r\\n- 처음에 basic test만 수행하다가, 나중에 e2e를 수행하면서 정상적으로 작동하는지, 확인 중이었는데 상품 정렬이 가격 높은 순으로 설정하면, 정상적으로 url과 목록이 바뀌지 않는 것을 보고 당황했습니다. 알고보니 EVNET_TYPES에 'change'를 추가하지 않아 발생했던 것으로.. 가벼운 이슈지만 그래도 따로 리스트를 모아두어서 바로 고칠 수 있었던 부분이 시간 절약상 다행이라고 생각했습니다. 하지만 과제로 보았을 때 변수명이 명확하지 않다면 다른사람이 코드를 볼 때 직관적이지 않을 수도 있겠다라고 반면에 들기도 했습니다. \\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n- 추가 학습이 필요한 영역 : 반복적으로 수행하는 재귀함수 부분에 대해 연습하기 / Map() - WeakMap() 차이점과 효율적으로 쓰는 방법 공부하기 / 함수형 컴포넌트에 대한 이해 높이기\\r\\n\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n- 과제에서 좋았던 부분 : 함수를 단계적으로 구현하면서 흐름을 알 수 있게 구성이 되어있던 부분이 좋았고, 특히 renderElement에서 퍼즐조각이 맞춰지는 느낌이 들었습니다. \\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-14T15:36:32Z\",\"updated_at\":\"2025-07-20T13:30:00Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"d8fb202b3efeb50e942ac632c48263e179895a7d\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/41/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/41/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/41/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/767b05d65d10a50cd3538895380c62efc9aba214\",\"head\":{\"label\":\"q1Lim:main\",\"ref\":\"main\",\"sha\":\"767b05d65d10a50cd3538895380c62efc9aba214\",\"user\":{\"login\":\"q1Lim\",\"id\":19428455,\"node_id\":\"MDQ6VXNlcjE5NDI4NDU1\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/19428455?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/q1Lim\",\"html_url\":\"https://github.com/q1Lim\",\"followers_url\":\"https://api.github.com/users/q1Lim/followers\",\"following_url\":\"https://api.github.com/users/q1Lim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/q1Lim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/q1Lim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/q1Lim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/q1Lim/orgs\",\"repos_url\":\"https://api.github.com/users/q1Lim/repos\",\"events_url\":\"https://api.github.com/users/q1Lim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/q1Lim/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019587926,\"node_id\":\"R_kgDOPMWtVg\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"q1Lim/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"q1Lim\",\"id\":19428455,\"node_id\":\"MDQ6VXNlcjE5NDI4NDU1\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/19428455?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/q1Lim\",\"html_url\":\"https://github.com/q1Lim\",\"followers_url\":\"https://api.github.com/users/q1Lim/followers\",\"following_url\":\"https://api.github.com/users/q1Lim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/q1Lim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/q1Lim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/q1Lim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/q1Lim/orgs\",\"repos_url\":\"https://api.github.com/users/q1Lim/repos\",\"events_url\":\"https://api.github.com/users/q1Lim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/q1Lim/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/q1Lim/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/q1Lim/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T14:59:55Z\",\"updated_at\":\"2025-07-17T20:08:19Z\",\"pushed_at\":\"2025-07-17T20:08:15Z\",\"git_url\":\"git://github.com/q1Lim/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:q1Lim/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/q1Lim/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/q1Lim/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":254,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/41\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/41\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/41\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/41/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/41/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/41/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/767b05d65d10a50cd3538895380c62efc9aba214\"}},\"author_association\":\"FIRST_TIME_CONTRIBUTOR\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/42\",\"id\":2664897311,\"node_id\":\"PR_kwDOPJuWzM6e1xsf\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/42\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/42.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/42.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/42\",\"number\":42,\"state\":\"open\",\"locked\":false,\"title\":\"[4팀 김소희] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"esoby\",\"id\":138556584,\"node_id\":\"U_kgDOCEI0qA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/138556584?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/esoby\",\"html_url\":\"https://github.com/esoby\",\"followers_url\":\"https://api.github.com/users/esoby/followers\",\"following_url\":\"https://api.github.com/users/esoby/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/esoby/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/esoby/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/esoby/subscriptions\",\"organizations_url\":\"https://api.github.com/users/esoby/orgs\",\"repos_url\":\"https://api.github.com/users/esoby/repos\",\"events_url\":\"https://api.github.com/users/esoby/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/esoby/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n[esoby.github.io/front_6th_chapter1-2/](https://esoby.github.io/front_6th_chapter1-2/)\\r\\n\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n- 가상 DOM을 활용해 실제 DOM을 업데이트하는 흐름을 어설프게나마 구현해보니 이론으로만 외웠던 이전보다 더 뚜렷하게 가상 DOM의 핵심 원리를 이해할 수 있었습니다. 특히 뭔가 아주 고도의 내용일 것만 같던 diff 알고리즘을 코드 구현해보았다는 게 성취감이 컸던 거 같습니다.\\r\\n- 오랜만에 재귀 함수를 만나서 그런지 낯을 좀 가렸는데 다시 꽤나 친해진 것 같습니다.\\r\\n- 예상 외로 구현보다는 돔의 property와 attribute의 상호작용을 이해하는 데에 많은 시간이 든 것 같습니다. 척척 동기화가 되지 않는다는 사실을 알기까지도 시간이 많이 걸렸습니다. 두 개념을 모호하게 알고 있어서 테스트 실패가 거의 두 요소의 동기화를 빠뜨린 데에서 났던 것 같습니다 ㅠ\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n- 이벤트 매니저에서 리스너 재설정 시 위임 이벤트 중복 리스너 등록을 방지하는 로직이 가장 마음에 드는 것 같습니다! 아이디어는 지피티가 줬지만 ...,,\\r\\n- element를 만들 때 updateAttributes를 거치는데 create와 update 시 사용하는 함수가 분리되어 있는 점이 아쉽습니다. 테스트 통과를 목표로 일단 보류했지만 시간적 여유가 더 있었다면 중복 코드 제거하고 하나의 함수로 리팩토링했을 것 같습니다! \\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n- 포기하지 말자 ,,,는 마인드 획득\\r\\n- 실무에서 라이브러리나 프레임워크 의존도가 높았는데 이번 경험으로 바닐라 js 구현에 대한 망설임이 줄었숩니다!\\r\\n- 최적화된 고오급 diffing 알고리즘에 대해 더 공부해보고 싶고, 실제 프레임워크 구현 내용도 뜯어보고 싶다는 생각이 듭니다!\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n- boolean 속성 처리하는 부분 가이드라인이 애매하게 느껴져서 테스트 코드를 뜯어보면서 조건을 추가했는데 그 과정에서 삽질을 많이 한 것 같습니다 ㅠ.ㅠ\\r\\n- 첫번째 과제에서 이벤트를 등록할 때 이벤트 위임 방식을 적용해보고자 최대한 부모의 컨테이너에 리스너를 붙여보면서 이런저런 의문이 들었었는데 event manager 구현으로 싹 해소 됐습니다. 공부가 정말 많이 된 것 같아요!\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\\r\\n- 코드 작성 스타일에 대해 ,, 혹시나 어떤 습관이 발견되었다면 알려주세요!\\r\\n- 지금까지 구현된 내용에서 리액트와 같은 프레임워크 구현으로 이어간다면 이 다음 스텝은 어떤 게 되어야 하는지 궁금합니다!\\r\\n\\r\\n감사합니당 ☺️\",\"created_at\":\"2025-07-14T17:19:05Z\",\"updated_at\":\"2025-07-19T17:08:24Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"48b474ba4fcf39d1b3cba16a509608a4c44389d4\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/42/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/42/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/42/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/60882fee9ece98eba8252a1ff3f8f95b8dc5f299\",\"head\":{\"label\":\"esoby:main\",\"ref\":\"main\",\"sha\":\"60882fee9ece98eba8252a1ff3f8f95b8dc5f299\",\"user\":{\"login\":\"esoby\",\"id\":138556584,\"node_id\":\"U_kgDOCEI0qA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/138556584?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/esoby\",\"html_url\":\"https://github.com/esoby\",\"followers_url\":\"https://api.github.com/users/esoby/followers\",\"following_url\":\"https://api.github.com/users/esoby/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/esoby/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/esoby/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/esoby/subscriptions\",\"organizations_url\":\"https://api.github.com/users/esoby/orgs\",\"repos_url\":\"https://api.github.com/users/esoby/repos\",\"events_url\":\"https://api.github.com/users/esoby/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/esoby/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018439941,\"node_id\":\"R_kgDOPLQpBQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"esoby/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"esoby\",\"id\":138556584,\"node_id\":\"U_kgDOCEI0qA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/138556584?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/esoby\",\"html_url\":\"https://github.com/esoby\",\"followers_url\":\"https://api.github.com/users/esoby/followers\",\"following_url\":\"https://api.github.com/users/esoby/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/esoby/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/esoby/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/esoby/subscriptions\",\"organizations_url\":\"https://api.github.com/users/esoby/orgs\",\"repos_url\":\"https://api.github.com/users/esoby/repos\",\"events_url\":\"https://api.github.com/users/esoby/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/esoby/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/esoby/front_6th_chapter1-2\",\"description\":null,\"fork\":true,\"url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/esoby/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T09:07:47Z\",\"updated_at\":\"2025-07-28T13:25:49Z\",\"pushed_at\":\"2025-07-18T01:13:56Z\",\"git_url\":\"git://github.com/esoby/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:esoby/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/esoby/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/esoby/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":296,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/42\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/42\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/42\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/42/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/42/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/42/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/60882fee9ece98eba8252a1ff3f8f95b8dc5f299\"}},\"author_association\":\"FIRST_TIME_CONTRIBUTOR\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/43\",\"id\":2664983927,\"node_id\":\"PR_kwDOPJuWzM6e2G13\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/43\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/43.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/43.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/43\",\"number\":43,\"state\":\"open\",\"locked\":false,\"title\":\"[2팀 정도은] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"nemobim\",\"id\":112849712,\"node_id\":\"U_kgDOBrnzMA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/112849712?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/nemobim\",\"html_url\":\"https://github.com/nemobim\",\"followers_url\":\"https://api.github.com/users/nemobim/followers\",\"following_url\":\"https://api.github.com/users/nemobim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/nemobim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/nemobim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/nemobim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/nemobim/orgs\",\"repos_url\":\"https://api.github.com/users/nemobim/repos\",\"events_url\":\"https://api.github.com/users/nemobim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/nemobim/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://nemobim.github.io/front_6th_chapter1-2/\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n### 기술적 성장\\r\\n\\r\\n#### 중첩 배열과 JSX 트랜스파일 이해\\r\\n\\r\\n```jsx\\r\\n<div>\\r\\n  Hello\\r\\n  world\\r\\n  !\\r\\n</div>\\r\\n```\\r\\n\\r\\n위와 같은 JSX 구조는 트랜스파일 과정을 거치며 다음과 같이 변환될 수 있습니다:\\r\\n\\r\\n```jsx\\r\\ncreateVNode(\\\"div\\\", null, \\\"Hello\\\", [\\\"world\\\", \\\"!\\\"]);\\r\\n```\\r\\n\\r\\n이 과정에서 중첩 배열이 생기는 이유에 대해 궁금했는데, 아래와 같은 경우들로 인해 발생할 수 있음을 이해하게 되었습니다.\\r\\n\\r\\n#### 왜 중첩 배열이 발생하는가?\\r\\n\\r\\n- **map() 함수 사용 시** → 각 순회 결과가 배열로 반환되므로 전체 결과가 중첩 구조가 됨\\r\\n\\r\\n```jsx\\r\\n{items.map(item => <span>{item}</span>)} // 배열의 배열\\r\\n```\\r\\n\\r\\n- **조건부 렌더링** → `condition && <Component />` 패턴은 `false`를 반환할 수 있고, 결과적으로 배열 내에 다양한 값이 혼재함\\r\\n\\r\\n```jsx\\r\\n{isLoggedIn && <UserInfo />}\\r\\n```\\r\\n\\r\\n- **복합 표현식** → JSX 안에서 여러 표현식을 콤마 없이 나열하면 내부적으로 배열처럼 처리됨\\r\\n\\r\\n```jsx\\r\\n<>{\\\"Hello\\\"}{\\\"World\\\"}{\\\"!\\\"}</>\\r\\n```\\r\\n\\r\\n- **함수형 컴포넌트가 배열을 반환할 때** → 일부 컴포넌트는 `return [<A />, <B />]` 형태로 배열을 직접 반환함\\r\\n\\r\\n```jsx\\r\\nconst List = () => [<Item1 />, <Item2 />];\\r\\n```\\r\\n---\\r\\n#### WeakMap이란 무엇인가\\r\\n\\r\\n`WeakMap`은 자바스크립트 내장 객체 중 하나로 **key로 \\\"객체만\\\" 가질 수 있는 Map**으로 이름처럼 \\\"약하게 연결(weakly held)\\\"되어있다.\\r\\n\\r\\n| 특징 | Map | WeakMap |\\r\\n|------|-----|---------|\\r\\n| key 타입 | 어떤 값이든 가능 | ❗️ 객체만 가능 |\\r\\n| 순회 가능 | ✅ 가능 | ❌ 불가능 |\\r\\n| GC(가비지 컬렉션) | ❌ 키가 메모리에 남음 | ✅ 키가 참조 사라지면 자동 삭제됨 |\\r\\n\\r\\n----\\r\\n#### 코어 시스템 이해\\r\\n\\r\\n#### 1. **createVNode.js** - Virtual Node 생성\\r\\n\\r\\n**React의 `createElement`와 유사한 Virtual Node 생성 함수**\\r\\n\\r\\n- **기능**: `type`, `props`, `children`을 가진 VNode 객체 생성\\r\\n- **역할**: JSX나 함수 호출을 Virtual DOM 객체로 변환\\r\\n\\r\\n```jsx\\r\\n// 예시\\r\\ncreateVNode('div', { className: 'container' }, ['Hello', 'World'])\\r\\n// → { type: 'div', props: { className: 'container' }, children: ['Hello', 'World'] }\\r\\n```\\r\\n\\r\\n#### 2. **createElement.js** - DOM 요소 생성\\r\\n\\r\\n**VNode를 실제 DOM 요소로 변환하는 핵심 함수**\\r\\n\\r\\n**주요 처리 로직:**\\r\\n- **배열** → `DocumentFragment` 생성\\r\\n- **null/undefined/boolean** → 빈 텍스트 노드\\r\\n- **문자열/숫자** → 텍스트 노드\\r\\n- **VNode** → 실제 DOM 요소 생성\\r\\n\\r\\n**속성 처리:**\\r\\n- `className` → `class` 어트리뷰트\\r\\n- 이벤트 핸들러 (`onClick` 등)\\r\\n- 불린 속성 (`checked`, `disabled` 등)\\r\\n- `style` 객체 처리\\r\\n\\r\\n#### 3. **normalizeVNode.js** - VNode 정규화\\r\\n\\r\\n**다양한 타입의 노드를 일관된 형태로 정규화**\\r\\n\\r\\n- **null/undefined/boolean** → 빈 문자열\\r\\n- **문자열/숫자** → 문자열 변환\\r\\n- **함수 컴포넌트** → 재귀적 실행 후 정규화\\r\\n- **VNode** → children도 재귀적으로 정규화\\r\\n\\r\\n```jsx\\r\\n// 예시\\r\\nnormalizeVNode(null) // → \\\"\\\"\\r\\nnormalizeVNode(42) // → \\\"42\\\"\\r\\nnormalizeVNode(MyComponent) // → 컴포넌트 실행 결과\\r\\n```\\r\\n\\r\\n#### 4. **renderElement.js** - 렌더링 엔진\\r\\n\\r\\n**VNode를 실제 DOM에 렌더링하는 메인 함수**\\r\\n\\r\\n- **최초 렌더링**:\\r\\n  - 컨테이너 초기화 (`innerHTML = ''`)\\r\\n  - 새 요소 생성 및 추가\\r\\n  - 이벤트 리스너 설정\\r\\n- **업데이트**:\\r\\n  - `updateElement`를 통한 diff 기반 효율적 업데이트\\r\\n  - 변경된 부분만 선택적 업데이트\\r\\n\\r\\n#### 5. **updateElement.js** - DOM 업데이트\\r\\n\\r\\n**Virtual DOM의 핵심인 diff 알고리즘 구현**\\r\\n\\r\\n1. **노드 제거** - 새 노드 없음\\r\\n2. **노드 추가** - 기존 노드 없음\\r\\n3. **텍스트 노드 업데이트** - 문자열/숫자 변경\\r\\n4. **타입 변경** - 완전 교체 (`<div>` → `<span>`)\\r\\n5. **같은 타입** - 속성 및 자식 업데이트\\r\\n\\r\\n```jsx\\r\\n// Diff 과정 예시\\r\\n// 이전: <div>Hello</div>\\r\\n// 새로: <div>World</div>\\r\\n// → 텍스트 노드만 \\\"Hello\\\" → \\\"World\\\"로 변경\\r\\n```\\r\\n\\r\\n#### 6. **eventManager.js** - 이벤트 위임 시스템\\r\\n\\r\\n**효율적인 이벤트 관리를 위한 이벤트 위임 구현**\\r\\n\\r\\n- **WeakMap** 사용한 요소별 이벤트 저장\\r\\n- **루트 요소**에서 모든 이벤트 위임 처리\\r\\n- **event.target** 기반 상위 노드 탐색\\r\\n- **자동 정리** - 요소 제거 시 이벤트도 자동 정리\\r\\n\\r\\n**주요 함수**\\r\\n- `setupEventListeners`: 루트에 이벤트 리스너 등록\\r\\n- `addEvent`: 요소에 이벤트 핸들러 등록\\r\\n- `removeEvent`: 이벤트 핸들러 제거\\r\\n\\r\\n```jsx\\r\\n// 이벤트 위임 동작 예시\\r\\n// 1. 루트에 click 리스너 등록\\r\\n// 2. 자식 요소 클릭 시 이벤트 버블링\\r\\n// 3. 루트에서 실제 타겟 확인 후 핸들러 실행\\r\\n```\\r\\n\\r\\n#### 전체 동작 흐름\\r\\n\\r\\n```mermaid\\r\\ngraph TD\\r\\n    A[JSX/함수 호출] --> B[createVNode]\\r\\n    B --> C[normalizeVNode]\\r\\n    C --> D[renderElement]\\r\\n    D --> E{최초 렌더링?}\\r\\n    E -->|Yes| F[createElement]\\r\\n    E -->|No| G[updateElement]\\r\\n    F --> H[setupEventListeners]\\r\\n    G --> I[DOM 업데이트 완료]\\r\\n    H --> I\\r\\n```\\r\\n\\r\\n### 코드 품질\\r\\n```js\\r\\n/**\\r\\n * vNode를 실제 DOM에 렌더링하는 함수\\r\\n * @param {Object|string|number|null} vNode - 렌더링할 가상 DOM 노드\\r\\n * @param {HTMLElement} container - 렌더링할 대상 컨테이너 요소\\r\\n */\\r\\nexport function renderElement(vNode, container) {\\r\\n  // vNode 정규화\\r\\n  const normalizedNode = normalizeVNode(vNode);\\r\\n  // 이전 vNode 저장\\r\\n  const oldVNode = container._vNode;\\r\\n\\r\\n  if (!oldVNode) {\\r\\n    // 최초 렌더링\\r\\n    container.innerHTML = \\\"\\\";\\r\\n    const element = createElement(normalizedNode);\\r\\n    container.appendChild(element);\\r\\n\\r\\n    //이벤트는 초기에 한번만 등록\\r\\n    setupEventListeners(container);\\r\\n  } else {\\r\\n    // 업데이트: 기존 DOM과 비교하여 변경사항만 적용\\r\\n    updateElement(container, normalizedNode, oldVNode, 0);\\r\\n  }\\r\\n\\r\\n  // 현재 vNode 저장\\r\\n  container._vNode = normalizedNode;\\r\\n}\\r\\n```\\r\\n처음 렌더링된 VNode는 container의 _vNode 속성에 저장해두고 이후 화면이 다시 렌더링될 경우 이전 VNode와 새 VNode를 비교해 필요한 부분만 변경하도록 updateElement를 호출하는 방식으로 구현했습니다. 매번 전체를 다시 그리는 게 아니라 변경된 부분만 DOM에 반영하도록 하고 이때 이벤트는 초기에 한 번만 등록되도록 처리했습니다.\\r\\n\\r\\n```js\\r\\n// 전체 시스템에서 사용 중인 이벤트 타입들 추적\\r\\nconst delegatedEvents = new Set();\\r\\n\\r\\n...생략\\r\\n\\r\\n// 새로운 이벤트 타입이면 delegatedEvents에 추가하고 루트에 리스너 재등록\\r\\n  if (!delegatedEvents.has(eventType)) {\\r\\n    delegatedEvents.add(eventType);\\r\\n\\r\\n    // 루트 요소를 찾아서 새로운 이벤트 타입 리스너 등록\\r\\n    let current = element;\\r\\n    while (current) {\\r\\n      if (current._eventHandler) {\\r\\n        current.removeEventListener(eventType, current._eventHandler);\\r\\n        current.addEventListener(eventType, current._eventHandler, false);\\r\\n        break;\\r\\n      }\\r\\n      current = current.parentElement;\\r\\n    }\\r\\n  }\\r\\n\\r\\n\\r\\n..생략\\r\\n\\r\\n/**\\r\\n * @param {HTMLElement} root - 이벤트 리스너를 등록할 루트 엘리먼트\\r\\n */\\r\\nexport function setupEventListeners(root) {\\r\\n  // 루트 요소 저장\\r\\n  rootElement = root;\\r\\n\\r\\n  // 리스너 등록\\r\\n  delegatedEvents.forEach((eventType) => {\\r\\n    rootElement.removeEventListener(eventType, handleEvent);\\r\\n    root.addEventListener(eventType, handleEvent, false);\\r\\n  });\\r\\n}\\r\\n\\r\\n```\\r\\n처음에는 사용할 이벤트 타입들을 코드에 직접 하드코딩했는데, 이렇게 하면 새로운 이벤트가 생길 때마다 일일이 코드를 수정해줘야 할거 같아서 이벤트 타입을 동적으로 관리할 수 있도록 delegatedEvents라는 Set을 만들었습니다. 새로운 이벤트 타입이 등장하면 해당 타입을 Set에 등록하고, 루트 요소에 한 번만 리스너를 붙이도록 구조를 변경했습니다.\\r\\n\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n#### eventManager 관련\\r\\n```js\\r\\nif (eventListeners.has(type)) return;\\r\\neventListeners.set(type, true);\\r\\n```\\r\\nMap을 사용하여 같은 이벤트 타입이 여러 번 등록되는 것을 방지할 수 있었다.\\r\\n\\r\\n#### 버블링을 활용한 이벤트 탐색\\r\\n```js\\r\\nlet target = e.target;\\r\\nwhile (target && target !== container) {\\r\\n  const events = eventStore.get(target);\\r\\n  if (events?.[type]) {\\r\\n    for (const handler of events[type]) {\\r\\n      handler.call(target, e);\\r\\n    }\\r\\n  }\\r\\n  target = target.parentNode;\\r\\n}\\r\\n```\\r\\n실제 클릭된 요소부터 컨테이너까지 DOM 트리를 역순으로 탐색하며 등록된 핸들러를 찾아 실행해준다.\\r\\n이 방법을 사용하면 수천 개의 요소에 개별 리스너를 다는 대신, 하나의 부모에서 모든 이벤트를 처리할 수 있다.\\r\\n\\r\\n\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n- 나머지 부분들이 구현되어 있어서 vNode 작성 함수에 집중할 수 있어서 좋았습니다.\\r\\n- 이론만 봤을 땐 너무 추상적이라 어려웠는데, 테스트 코드 가이드를 따라가다 보니 구현이 가능해서 이해하기 수월했습니다..\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n```js\\r\\nexport function createVNode(type, props, ...children) {\\r\\n  return {\\r\\n    type,\\r\\n    props,\\r\\n    children: flattenArray(children),\\r\\n  };\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * 배열 평탄화\\r\\n * @param {Array} arr - 평탄화할 배열\\r\\n * @returns {Array} 평탄화된 배열\\r\\n */\\r\\nexport function flattenArray(arr) {\\r\\n  const result = [];\\r\\n\\r\\n  for (const item of arr) {\\r\\n    if (Array.isArray(item)) {\\r\\n      result.push(...flattenArray(item));\\r\\n    } else if (item !== null && item !== undefined && typeof item !== \\\"boolean\\\") {\\r\\n      result.push(item); // falsy 값이 아닐 때만 추가, boolean 값도 제외\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return result;\\r\\n}\\r\\n```\\r\\n처음에는 flat(Infinity)를 사용했지만, 배열의 깊이가 2차원으로 고정되어 있는 것 같아 재귀 함수로 다시 구현했습니다. 이처럼 배열의 뎁스를 명확히 알고 있을 경우, flat() 대신 직접 구현하는 방식이 성능면에서 더 좋을까요... 차이가 미미하다면 가독성을 우선하는 게 더 나을 것 같은데 일반적으로 어느 정도를 \\\"미미하다\\\"고 보는지도 궁금합니다.\\r\\n\\r\\n---\\r\\n\\r\\n처음에는 `normalizeVNode`를 아래와 같이 작성했습니다:\\r\\n\\r\\n```js\\r\\nexport function normalizeVNode(vNode) {\\r\\n  if (typeof vNode === \\\"object\\\" && vNode?.type) {\\r\\n    return {\\r\\n      ...vNode,\\r\\n      children: (vNode.children || []).map(normalizeVNode),\\r\\n    };\\r\\n  }\\r\\n\\r\\n  return vNode;\\r\\n}\\r\\n```\\r\\n\\r\\n이 코드는 단위 테스트에서는 통과했지만, e2e 테스트에서 실패해서 다음과 같이 `filter(Boolean)`을 추가해 수정했습니다:\\r\\n\\r\\n```js\\r\\nconst normalized = {\\r\\n  ...vNode,\\r\\n  children: (vNode.children || []).map(normalizeVNode).filter(Boolean),\\r\\n};\\r\\n```\\r\\n\\r\\n앞단에서도 `filter(Boolean)` 처리를 해주는 부분이 많았고 이 시점에서 추가로 필터링하지 않아도 된다고 생각했는데 이 코드를 추가하자 테스트가 통과했습니다. 왜 이 필터링이 필요한 건지, 어떤 값이 `false` 처리되어 걸러지는지 정확히 이해하지 못하겠습니다… 혹시 어떤 케이스 때문에 이런 처리가 꼭 필요한 걸까요?\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\",\"created_at\":\"2025-07-14T17:55:36Z\",\"updated_at\":\"2025-07-17T20:10:19Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"3d7d1d5f1b55cd27dd80c600e6a2eacf825fcc7a\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/43/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/43/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/43/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e0f79d853b8d6984bab6ae7803e6cdaf509393a0\",\"head\":{\"label\":\"nemobim:main\",\"ref\":\"main\",\"sha\":\"e0f79d853b8d6984bab6ae7803e6cdaf509393a0\",\"user\":{\"login\":\"nemobim\",\"id\":112849712,\"node_id\":\"U_kgDOBrnzMA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/112849712?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/nemobim\",\"html_url\":\"https://github.com/nemobim\",\"followers_url\":\"https://api.github.com/users/nemobim/followers\",\"following_url\":\"https://api.github.com/users/nemobim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/nemobim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/nemobim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/nemobim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/nemobim/orgs\",\"repos_url\":\"https://api.github.com/users/nemobim/repos\",\"events_url\":\"https://api.github.com/users/nemobim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/nemobim/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019205357,\"node_id\":\"R_kgDOPL_W7Q\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"nemobim/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"nemobim\",\"id\":112849712,\"node_id\":\"U_kgDOBrnzMA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/112849712?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/nemobim\",\"html_url\":\"https://github.com/nemobim\",\"followers_url\":\"https://api.github.com/users/nemobim/followers\",\"following_url\":\"https://api.github.com/users/nemobim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/nemobim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/nemobim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/nemobim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/nemobim/orgs\",\"repos_url\":\"https://api.github.com/users/nemobim/repos\",\"events_url\":\"https://api.github.com/users/nemobim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/nemobim/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/nemobim/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/nemobim/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T00:55:57Z\",\"updated_at\":\"2025-07-17T17:44:59Z\",\"pushed_at\":\"2025-07-17T17:44:55Z\",\"git_url\":\"git://github.com/nemobim/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:nemobim/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/nemobim/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/nemobim/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":194,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/43\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/43\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/43\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/43/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/43/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/43/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e0f79d853b8d6984bab6ae7803e6cdaf509393a0\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/44\",\"id\":2667652987,\"node_id\":\"PR_kwDOPJuWzM6fASd7\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/44\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/44.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/44.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/44\",\"number\":44,\"state\":\"open\",\"locked\":false,\"title\":\"[5팀 여찬규] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2) \",\"user\":{\"login\":\"chan9yu\",\"id\":80776262,\"node_id\":\"MDQ6VXNlcjgwNzc2MjYy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/80776262?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/chan9yu\",\"html_url\":\"https://github.com/chan9yu\",\"followers_url\":\"https://api.github.com/users/chan9yu/followers\",\"following_url\":\"https://api.github.com/users/chan9yu/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/chan9yu/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/chan9yu/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/chan9yu/subscriptions\",\"organizations_url\":\"https://api.github.com/users/chan9yu/orgs\",\"repos_url\":\"https://api.github.com/users/chan9yu/repos\",\"events_url\":\"https://api.github.com/users/chan9yu/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/chan9yu/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://chan9yu.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n1주차보다는 비교적 순탄했던? 2주차였습니다. 하지만 1주차보다 얻어간 내용들이 많아서 좋았어요.\\r\\nVirtual DOM이 무엇인지 왜 쓰는지에 대해 깊이 고민할 수 있었던 시간이었습니다.\\r\\n\\r\\n그리고 이번주차는 팀원분들이 시간을 내서 과제한 내용을 정리하고 서로 공유해보자고 제안해주셨고,\\r\\n덕분에 틈틈히 정리를 해봤는데 정말 도움이 많이 되었던거 같습니다\\r\\n정말 5팀 분들이 서로 도와주고 열심히 하는 모습을 보면서 덩달아 저까지 자극받고 열심히 하게 되었습니다 🙂\\r\\n\\r\\n현재까지 정리한 내용들:\\r\\n\\r\\n- https://github.com/chan9yu/front_6th_chapter1-2/issues/4\\r\\n- https://github.com/chan9yu/front_6th_chapter1-2/issues/5\\r\\n- https://github.com/chan9yu/front_6th_chapter1-2/issues/8\\r\\n\\r\\n(시간이 된다면 나머지 내용도 정리를 할 예정입니다)\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n이번 주차 메인 기능인 Virtual DOM에 대해서 좀 더 딥하게 알 수 있었고, JSX를 사용만 했던 관점을 벗어나 리액트가 어떤 고민을 했고 어떤 생각으로 구현했는지 많이 느껴졌던 것 같습니다.\\r\\n\\r\\n처음 createVNode를 구현할 때는 엄청 막막했지만, 직접 하나씩 타입을 분기, 자식 노드를 평탄화, 함수형 컴포넌트와 일반 엘리먼트, 텍스트 노드 등 다양한 케이스를 처리하다 보니 JSX가 실제로 어떻게 객체로 변환되는지 이해할 수 있었습니다.\\r\\n\\r\\nupdateElement로 diff & patch를 구현하면서 DOM 업데이트의 효율성과 일관성을 위해 어떤 구조와 로직이 필요한지 고민하게 되었고, 실제로 불필요한 렌더링을 줄이기 위한 포인트(?)도 자연스럽게 이해할 수 있었어요\\r\\n\\r\\n이벤트 위임 방식의 구현을 통해 동적으로 추가/제거되는 엘리먼트에서도 이벤트가 일관되게 동작하도록 만드는 것이 얼마나 중요한지 직접 경험했습니다.\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n이번에 구현하면서 개인적으로 고민을 많이했던 부분입니다. 바로 이벤트 위임의 구현인데요\\r\\n\\r\\n```javascript\\r\\n/**\\r\\n * 루트 요소에 이벤트 위임 리스너를 설정\\r\\n * 등록된 모든 이벤트 타입에 대해 위임 방식으로 이벤트를 처리\\r\\n *\\r\\n * @param {HTMLElement} rootElement - 이벤트 위임의 루트 요소\\r\\n */\\r\\nexport function setupEventListeners(rootElement) {\\r\\n  eventMap.forEach((handlers, eventType) => {\\r\\n    rootElement.addEventListener(eventType, (event) => {\\r\\n      let currentTarget = event.target;\\r\\n\\r\\n      // 이벤트가 발생한 요소부터 루트까지 버블링하면서 핸들러 찾기\\r\\n      while (currentTarget && currentTarget !== rootElement) {\\r\\n        const elementHandlers = handlers.get(currentTarget);\\r\\n        if (elementHandlers) elementHandlers.forEach((handler) => handler(event));\\r\\n\\r\\n        // 부모 요소로 이동하여 버블링 효과 구현\\r\\n        currentTarget = currentTarget.parentElement;\\r\\n      }\\r\\n    });\\r\\n  });\\r\\n}\\r\\n```\\r\\n\\r\\n이벤트 위임 방식으로 이벤트를 한 번만 등록하고, 각 엘리먼트별로 핸들러를 효율적으로 관리할 수 있도록 구현하였습니다.\\r\\n\\r\\n리액트가 왜 이벤트 위임을 사용했는지 이번을 통해서 조금은 느껴졌는데, 제 생각에는 동적으로 추가/제거되는 엘리먼트에서도 일관되게 이벤트가 동작하도록 하기 위함인 것 같다는 생각이 들었습니다.\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n이번 과제를 통해 Virtual DOM의 구조와 동작 원리를 직접 구현해보면서,\\r\\n단순히 리액트의 사용법이 아니라 \\\"왜 이런 구조가 필요한지\\\", \\\"어떻게 동작하는지\\\"를 깊이 이해할 수 있었던 거 같습니다\\r\\n\\r\\n특히, JSX가 실제로 어떻게 객체로 변환되고, diff와 patch 과정에서 어떤 기준으로 DOM이 갱신되는지\\r\\n직접 코드를 작성하며 배울 수 있었던 점이 가장 좋았습니다\\r\\n\\r\\n기본적인 Virtual DOM과 이벤트 위임, 속성 처리 등은 이해했지만,\\r\\n실제 리액트처럼 더 복잡한 최적화\\r\\n- key 기반 리스트 diff\\r\\n- memoization\\r\\n- 비동기 렌더링\\r\\n에 대해서는 더 깊이 공부를 해봐야 겠다는 생각이 들었습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n1주차때보다 많이 얻어갔다고 생각하는 과제입니다. 좋은 과제 감사합니다. 3주차때도 기대가 됩니다!\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n코드 구현부에 대해서 클린코드 관점으로 리뷰를 받아보고 싶습니다. \\r\\nupdateElement.js 부분인데, 함수 내용이 많다고 생각이 들고 여러 가지 동작을 처리하고 있다고 생각됩니다.\\r\\n\\r\\n나름 함수 분리도 시도해봤지만 오히려 가독성이 안 좋고 코드 읽기가 힘들어지는 것 같습니다.\\r\\n어떤 방식으로 코드를 구현해야 읽는 사람 입장에서 쉽게 읽혀질 수 있는지 여쭙고 싶습니다.\\r\\n\\r\\n그리고 구현을 하다보니\\r\\n\\r\\n```javascript\\r\\nif (\\r\\n  typeof newNode !== typeof oldNode ||\\r\\n  (typeof newNode === \\\"string\\\" && typeof oldNode !== \\\"string\\\") ||\\r\\n  (typeof newNode !== \\\"string\\\" && typeof oldNode === \\\"string\\\") ||\\r\\n  (isVNode(newNode) &&\\r\\n    isVNode(oldNode) &&\\r\\n    (newNode.type !== oldNode.type || newNode.props?.key !== oldNode.props?.key))\\r\\n)\\r\\n```\\r\\n\\r\\n이런식으로 조건문이 복잡해지는 경우가 있는데\\r\\n이런 복잡한 조건문을 더 읽기 쉽고 의도가 명확한 형태로 리팩토링할 수 있는 방법이 있는지, 아니면 저렇게 하는 게 최선인지도 궁금합니다.\\r\\n\",\"created_at\":\"2025-07-15T14:39:51Z\",\"updated_at\":\"2025-07-20T01:17:38Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"c194504d9e224f356cf4b1383f579bce90b6615f\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/44/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/44/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/44/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/81fe387a1cfec905395873314c9a6368b76bb3f2\",\"head\":{\"label\":\"chan9yu:main\",\"ref\":\"main\",\"sha\":\"81fe387a1cfec905395873314c9a6368b76bb3f2\",\"user\":{\"login\":\"chan9yu\",\"id\":80776262,\"node_id\":\"MDQ6VXNlcjgwNzc2MjYy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/80776262?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/chan9yu\",\"html_url\":\"https://github.com/chan9yu\",\"followers_url\":\"https://api.github.com/users/chan9yu/followers\",\"following_url\":\"https://api.github.com/users/chan9yu/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/chan9yu/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/chan9yu/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/chan9yu/subscriptions\",\"organizations_url\":\"https://api.github.com/users/chan9yu/orgs\",\"repos_url\":\"https://api.github.com/users/chan9yu/repos\",\"events_url\":\"https://api.github.com/users/chan9yu/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/chan9yu/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018894416,\"node_id\":\"R_kgDOPLsYUA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"chan9yu/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"chan9yu\",\"id\":80776262,\"node_id\":\"MDQ6VXNlcjgwNzc2MjYy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/80776262?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/chan9yu\",\"html_url\":\"https://github.com/chan9yu\",\"followers_url\":\"https://api.github.com/users/chan9yu/followers\",\"following_url\":\"https://api.github.com/users/chan9yu/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/chan9yu/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/chan9yu/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/chan9yu/subscriptions\",\"organizations_url\":\"https://api.github.com/users/chan9yu/orgs\",\"repos_url\":\"https://api.github.com/users/chan9yu/repos\",\"events_url\":\"https://api.github.com/users/chan9yu/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/chan9yu/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/chan9yu/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/chan9yu/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T09:34:11Z\",\"updated_at\":\"2025-07-17T16:21:50Z\",\"pushed_at\":\"2025-07-17T16:22:02Z\",\"git_url\":\"git://github.com/chan9yu/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:chan9yu/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/chan9yu/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/chan9yu/front_6th_chapter1-2\",\"homepage\":\"https://chan9yu.github.io/front_6th_chapter1-2/\",\"size\":292,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":3,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":3,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/44\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/44\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/44\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/44/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/44/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/44/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/81fe387a1cfec905395873314c9a6368b76bb3f2\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/46\",\"id\":2670634522,\"node_id\":\"PR_kwDOPJuWzM6fLqYa\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/46\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/46.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/46.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/46\",\"number\":46,\"state\":\"open\",\"locked\":false,\"title\":\"[7팀 강병준] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2) \",\"user\":{\"login\":\"BangDori\",\"id\":44726494,\"node_id\":\"MDQ6VXNlcjQ0NzI2NDk0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/44726494?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/BangDori\",\"html_url\":\"https://github.com/BangDori\",\"followers_url\":\"https://api.github.com/users/BangDori/followers\",\"following_url\":\"https://api.github.com/users/BangDori/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/BangDori/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/BangDori/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/BangDori/subscriptions\",\"organizations_url\":\"https://api.github.com/users/BangDori/orgs\",\"repos_url\":\"https://api.github.com/users/BangDori/repos\",\"events_url\":\"https://api.github.com/users/BangDori/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/BangDori/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\nhttps://hanghae-plus.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n- 처음에 문제를 Step by Step으로 요구사항을 해결하다 보니, 큰 그림을 이해하지 못했는데 흐름도를 직접 그리면서 문제를 이해하다보니 문제가 요구하는 것이 무엇이며 내가 어떤 것들을 해야하는 지 알게 되었다. 또 가장 중요한 내가 작성한 코드가 가상 객체(vNode)로 변환되고, 실제 DOM에 어떻게 변환되는지 설명할 수 있게 된 것이 가장 많이 배운 점인 것 같다.\\r\\n\\r\\n<img width=\\\"12520\\\" height=\\\"5384\\\" alt=\\\"image\\\" src=\\\"https://github.com/user-attachments/assets/4ffd72c5-1c7d-4c08-b2fb-ed7bd650942e\\\" />\\r\\n\\r\\n- 처음부터 완벽한 코드를 작성하는 것이 아닌 테스트를 통과하는 코드를 우선 작성하고 리팩토링 하는 과정을 거치니, 더욱 명확하고 안정적인 코드 작성이 가능해진 것 같다. 이전에는 너무 완벽하게 코드를 작성하려고 하다 보니 오히려 시작도 제대로 못하는 경우가 있었는데, 완벽함이라는 마음가짐을 어느정도는 빼버려도 좋을 것 같다는 생각을 하게 되었다.\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n- WeakMap이라는 자료구조를 알기만하고 직접 사용해볼 기회가 없었는데, 이번 계기를 통해 WeakMap을 사용하면서 Map과 WeakMap이 각각 어떤 역할을 하며 언제 사용해야 하는 지 배우게 되었다.\\r\\n- `String()`과 `toString()`의 차이가 궁금해서 찾아보았는데, nullish 처리 가능 여부라는 사실을 알게 되었고 새롭게 알게된 정보를 다른 분들께도 공유하였는데 정말 많은 분들이 호응해주셔서 기분이 좋았다. (다들 너무 착하신 것 같다.)\\r\\n\\r\\n<img width=\\\"1574\\\" height=\\\"712\\\" alt=\\\"image\\\" src=\\\"https://github.com/user-attachments/assets/b13062eb-c797-42e4-962a-2d0df170d36e\\\" />\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n- [eventManager.js](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/46/files#diff-1cb14093c464b40c681da56fd8e8958e39e04d372091c2cd23ed97367ebfa6c5)에서 eventHandler가 위임받은 이벤트를 처리하고 있는데, 깊게 생각하지 못하고 코드를 짜다보니 다른 사람이 이해하기 쉬운 코드가 되지는 못한 것 같았다. 주석을 활용하거나, 리팩토링을 통해 읽기 좋은? 이해하기 좋은 코드가 될 수 있을 것 같다.\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n- WeakMap이 실제로 어떻게 동작하는지, 그리고 Map과 어떻게 다른 지 [tc39](https://tc39.es/ecma262/#sec-intro)를 통해서 내부 동작 과정을 한 번 확인해 볼 필요가 있을 것 같다.\\r\\n- React가 코드 작성 외에 내부적인 과정을 모두 처리해주는 것이 새삼 얼마나 편리한 지 깨닫게 되었고, 이런 편리함을 더 잘 누리기 위해서는 내부 동작 과정과 규칙이 왜 만들어졌는지를 이해하는 것이 앞으로의 성장에 큰 도움이 될 거라고 생각했다. 그래서 앞으로 미션에서나 실무에서도 코드를 작성하는 데 있어, 단순히 코드를 작성하는 것에 그치지 않고 \\\"Hooks는 왜 항상 최상단에 선언되어야 할까?\\\"와 같이 규칙이 만들어진 이유에 대해 파고들어야겠다는 마인드를 가지게 되었다.\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n- 이벤트 매니저를 구현한 것은 처음이었는데, 이 과정에서 실제로 React에서는 이벤트를 어떻게 관리하고 처리하는지를 배우게 되었고 또 이벤트 위임이 실제로 이렇게 된다는 사실을 알게 되었다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\\r\\n1. 처음부터 AI의 도움을 받아 코드를 작성하고, 이후 스스로 이해할 수 있도록 수정해나가는 방식으로 진행 중입니다. 이 방법이 바람직한 학습 방식일까요, 아니면 먼저 스스로 코드를 모두 작성한 뒤, 이후에 AI의 도움을 받아 개선하는 것이 더 좋을까요?\\r\\n2. 현재 과제에서 [createElement.js의 updateAttributes](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/46/files#diff-3db7906ab7fecca86da6b2290346734e466f6a8d2ef35c3847bd99f41752cd8b)와 [updateElement.js의 updateAttributes](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/46/files#diff-eaee21edcafccd4f0981b2b439c8ba1d3728c84b45971b3947e1367fadcc592b)가 유사한 작업을 수행합니다. 이럴 때, 공통 로직을 하나의 모듈로 분리해서 사용하는 것과 각각 파일 내에 따로 정의하는 것에는 어떤 차이가 있을까요? 멘토님은 이처럼 중복된 메서드가 있을 때, 보통 어떤 기준으로 모듈화를 결정하시나요?\\r\\n   - 저는 현재 두 함수가 서로 유사한 작업을 수행하기는 하지만 큰 맥락(초기 렌더링, 리렌더링)으로 보았을 때, 서로 다른 맥락을 가지고 수행되어지는 작업이라고 생각해서 분리하지 않았습니다..!\",\"created_at\":\"2025-07-16T12:57:20Z\",\"updated_at\":\"2025-07-18T10:30:31Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"b9c490d0c3eeebb8845cd0326872c71b333501b6\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/46/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/46/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/46/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/87e039e56ec3e494e2f512410e95fd2508b367ab\",\"head\":{\"label\":\"BangDori:main\",\"ref\":\"main\",\"sha\":\"87e039e56ec3e494e2f512410e95fd2508b367ab\",\"user\":{\"login\":\"BangDori\",\"id\":44726494,\"node_id\":\"MDQ6VXNlcjQ0NzI2NDk0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/44726494?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/BangDori\",\"html_url\":\"https://github.com/BangDori\",\"followers_url\":\"https://api.github.com/users/BangDori/followers\",\"following_url\":\"https://api.github.com/users/BangDori/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/BangDori/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/BangDori/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/BangDori/subscriptions\",\"organizations_url\":\"https://api.github.com/users/BangDori/orgs\",\"repos_url\":\"https://api.github.com/users/BangDori/repos\",\"events_url\":\"https://api.github.com/users/BangDori/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/BangDori/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018402895,\"node_id\":\"R_kgDOPLOYTw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"BangDori/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"BangDori\",\"id\":44726494,\"node_id\":\"MDQ6VXNlcjQ0NzI2NDk0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/44726494?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/BangDori\",\"html_url\":\"https://github.com/BangDori\",\"followers_url\":\"https://api.github.com/users/BangDori/followers\",\"following_url\":\"https://api.github.com/users/BangDori/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/BangDori/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/BangDori/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/BangDori/subscriptions\",\"organizations_url\":\"https://api.github.com/users/BangDori/orgs\",\"repos_url\":\"https://api.github.com/users/BangDori/repos\",\"events_url\":\"https://api.github.com/users/BangDori/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/BangDori/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/BangDori/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/BangDori/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T07:22:33Z\",\"updated_at\":\"2025-07-16T17:49:40Z\",\"pushed_at\":\"2025-07-16T17:49:36Z\",\"git_url\":\"git://github.com/BangDori/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:BangDori/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/BangDori/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/BangDori/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":131,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/46\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/46\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/46\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/46/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/46/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/46/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/87e039e56ec3e494e2f512410e95fd2508b367ab\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/47\",\"id\":2671099273,\"node_id\":\"PR_kwDOPJuWzM6fNb2J\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/47\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/47.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/47.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/47\",\"number\":47,\"state\":\"open\",\"locked\":false,\"title\":\"[8팀 현지수] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"hyunzsu\",\"id\":108773199,\"node_id\":\"U_kgDOBnu_Tw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/108773199?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hyunzsu\",\"html_url\":\"https://github.com/hyunzsu\",\"followers_url\":\"https://api.github.com/users/hyunzsu/followers\",\"following_url\":\"https://api.github.com/users/hyunzsu/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hyunzsu/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hyunzsu/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hyunzsu/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hyunzsu/orgs\",\"repos_url\":\"https://api.github.com/users/hyunzsu/repos\",\"events_url\":\"https://api.github.com/users/hyunzsu/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hyunzsu/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://hyunzsu.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n- **JSX Transform 구현**: Classic Transform 방식과 createVNode 함수로 React jsx-runtime.js 역할을 직접 구현\\r\\n  - JSX Transform 방식 비교 학습: Classic Transform(React 17 이전)과 Automatic Transform(React 17 이후) 차이점 이해\\r\\n  - 빌드 타임 vs 런타임 처리: esbuild가 JSX를 JavaScript로 변환하는 과정과 런타임에서 createVNode가 실행되는 과정 구분\\r\\n\\r\\n- **가상 DOM 구현**: React 내부 동작 원리를 직접 구현해보며 개념 이해\\r\\n  - 6단계 정규화 프로세스: normalizeVNode의 null/boolean → 원시타입 → 배열 → 객체 → 함수컴포넌트 → HTML엘리먼트 처리 과정\\r\\n  - 타입 안전성 구현: 다양한 vNode 타입(문자열, 숫자, 배열, 객체, 함수)을 안전하게 처리하는 메커니즘\\r\\n\\r\\n- **이벤트 위임 시스템**: eventManager를 통한 동적 요소들의 효율적인 이벤트 처리 메커니즘 구현\\r\\n  - 3단계 저장소 구조: element → eventType → handlers Set 구조로 이벤트 관리\\r\\n  - 버블링 탐색 알고리즘: event.target부터 루트까지 올라가며 핸들러를 찾는 시스템\\r\\n\\r\\n- **DOM 업데이트 최적화**: updateElement 함수로 가상 DOM 비교 및 DOM 패칭 알고리즘 구현\\r\\n  - 6단계 diff 알고리즘: 노드 추가 → 제거 → 텍스트 → 배열 → 타입변경 → 속성업데이트 순서로 처리\\r\\n  - DocumentFragment 활용: 여러 DOM 요소를 한 번에 조작하여 성능 최적화\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n**updateAttributes 함수 성능 개선**\\r\\n- 변경사항: ([updateElement.js](https://github.com/hyunzsu/front_6th_chapter1-2/commit/d9165dd))\\r\\n\\r\\n- 문제점\\r\\n기존 updateAttributes 함수는 속성 처리가 2단계로 나뉘어져 불필요한 중복 순회가 발생했습니다. \\r\\n또한 이벤트 핸들러, className, Boolean 속성 처리 로직이 제거 단계와 추가 단계에서 각각 중복 구현되어 있어 특정 속성 처리 방식을 수정할 때 여러 곳을 동시에 고쳐야 하는 문제가 있었습니다.\\r\\n\\r\\n- 개선 의도\\r\\n이러한 문제들을 해결하기 위해 함수를 역할별로 분리했습니다. updateAttributes는 전체적인 흐름만 관리하고, \\r\\n실제 속성 제거는 removeAttribute가, 설정은 setAttribute가 각각 담당하도록 구조를 개선했습니다.\\r\\n\\r\\n```javascript\\r\\n// 개선 후: 메인 함수 - 전체 플로우만 관리\\r\\nfunction updateAttributes(target, newProps, oldProps) {\\r\\n  const oldKeys = Object.keys(oldProps || {});\\r\\n  const newKeys = Object.keys(newProps || {});\\r\\n\\r\\n  // 1. 제거 단계\\r\\n  oldKeys.forEach((key) => {\\r\\n    if (!(key in (newProps || {}))) {\\r\\n      removeAttribute(target, key, oldProps[key]);\\r\\n    }\\r\\n  });\\r\\n\\r\\n  // 2. 추가/변경 단계\\r\\n  newKeys.forEach((key) => {\\r\\n    const oldValue = oldProps?.[key];\\r\\n    const newValue = newProps[key];\\r\\n\\r\\n    if (oldValue === newValue) return; // 조기 반환으로 성능 최적화\\r\\n\\r\\n    setAttribute(target, key, newValue, oldValue);\\r\\n  });\\r\\n}\\r\\n\\r\\n/**\\r\\n * 속성 제거 전용 헬퍼 함수\\r\\n * @param {HTMLElement} target - 대상 DOM element\\r\\n * @param {string} key - 제거할 속성 키\\r\\n * @param {*} oldValue - 제거할 속성의 이전 값\\r\\n */\\r\\nfunction removeAttribute(target, key, oldValue) {\\r\\n  // ... 제거 로직 구현\\r\\n}\\r\\n\\r\\n/**\\r\\n * 속성 설정 전용 헬퍼 함수\\r\\n * @param {HTMLElement} target - 대상 DOM element\\r\\n * @param {string} key - 설정할 속성 키\\r\\n * @param {*} newValue - 설정할 새 값\\r\\n * @param {*} oldValue - 이전 값 (이벤트 핸들러 교체 시 필요)\\r\\n */\\r\\nfunction setAttribute(target, key, newValue, oldValue) {\\r\\n  // ... 설정 로직 구현\\r\\n}\\r\\n```\\r\\n\\r\\n### 학습 효과 분석 ([상세 문서화](https://therapeutic-princess-27b.notion.site/Chapter-1-2-SPA-2300b60a3d1480628465e0a1795aaba6?source=copy_link) 작성하며 학습한 핵심 개념들)\\r\\n\\r\\n- **https://github.com/hyunzsu/front_6th_chapter1-2/issues/1:** JSX를 Virtual\xA0DOM 객체로 변환\\r\\n- **https://github.com/hyunzsu/front_6th_chapter1-2/issues/2:** 다양한 타입을 일관된\xA0Virtual DOM 구조로\xA0정규화\\r\\n- **https://github.com/hyunzsu/front_6th_chapter1-2/issues/3:** Virtual\xA0DOM을 실제 DOM으로\xA0변환\\r\\n- **eventManager.js:** 이벤트 위임 시스템\\r\\n- **renderElement.js:** Virtual DOM 렌더링의 진입점 - 전체 렌더링 프로세스 조율\\r\\n- **updateElement.js:** Virtual\xA0DOM diff 알고리즘\xA0구현\\r\\n\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n\\r\\n### 1. Virtual DOM diff 알고리즘의 성능과 개선 방향\\r\\n\\r\\n현재 `updateElement` 함수는 **인덱스 기반 비교**로 구현되어 있어, 리스트 순서 변경 시 성능 이슈가 있을 것 같습니다.\\r\\n\\r\\n```javascript\\r\\n// 현재 구현 방식의 문제점\\r\\n// Before: <li>Apple</li><li>Banana</li><li>Cherry</li>\\r\\n// After:  <li>Banana</li><li>Apple</li><li>Cherry</li>\\r\\n// → Apple과 Banana의 텍스트 내용을 모두 교체 (비효율적)\\r\\n\\r\\n// 이상적인 방식: key 기반 비교로 DOM 요소 이동만 수행\\r\\n```\\r\\n\\r\\n**질문:**\\r\\n1. 현재 과제 수준에서 **키 기반 diff 알고리즘 구현이 필요한지**, 아니면 인덱스 기반으로도 충분한지 궁금합니다.\\r\\n2. 만약 키 기반 구현이 필요하다면, **어떤 우선순위**로 접근하는 것이 좋을까요?\\r\\n\\r\\n### 2. updateAttributes 함수 리팩토링의 설계 방향성\\r\\n\\r\\n성능 개선을 위해 `updateAttributes` 함수를 **헬퍼 함수로 분리**했습니다:\\r\\n\\r\\n```javascript\\r\\n// 개선 후: 메인 함수(30줄) + removeAttribute(30줄) + setAttribute(35줄)\\r\\n```\\r\\n\\r\\n**질문:**\\r\\n1. 이런 **함수 분리 방식**이 적절한지 궁금해요!\\r\\n\\r\\n### 3. 이벤트 위임 시스템의 확장성\\r\\n\\r\\n현재 구현한 이벤트 위임 시스템에서 성능과 메모리 효율성에 대해 궁금합니다:\\r\\n\\r\\n```javascript\\r\\n// 현재 구현: 3단계 저장소 구조\\r\\neventMap = Map {\\r\\n  element => Map {\\r\\n    eventType => Set { handlers }\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n**질문:**\\r\\n1. 대규모 애플리케이션에서 eventMap이 메모리 누수의 원인이 될 가능성은 없을까요?\\r\\n2. WeakMap 사용을 고려해야 하는 상황이 있을까요?\\r\\n\\r\\n### 4. Boolean 속성 처리의 브라우저 호환성\\r\\n\\r\\nupdateAttributes에서 Boolean 속성을 처리할 때 checked/selected는 Property만, readOnly는 Attribute+Property, 일반 Boolean은 둘 다 설정하는 방식으로 구현했는데:\\r\\n\\r\\n```javascript\\r\\nif (key === 'checked' || key === 'selected') {\\r\\n  $el[key] = value; // Property만\\r\\n} else if (key === 'readOnly') {\\r\\n  // Attribute + Property 둘 다\\r\\n} else {\\r\\n  // 일반 Boolean: Attribute + Property 둘 다\\r\\n}\\r\\n```\\r\\n\\r\\n**질문:**\\r\\n1. 이런 케이스별 다른 처리 방식이 모든 브라우저에서 안전한지 궁금합니다.\\r\\n2. 더 일관성 있는 처리 방법이 있을까요?\",\"created_at\":\"2025-07-16T15:20:12Z\",\"updated_at\":\"2025-07-21T09:51:33Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"41b8947725951f3b2a2ce33d91d9817fc97d63a0\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/47/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/47/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/47/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e0fb6e242fe3d5a3fbfe1fdc00b740bc424ff88c\",\"head\":{\"label\":\"hyunzsu:main\",\"ref\":\"main\",\"sha\":\"e0fb6e242fe3d5a3fbfe1fdc00b740bc424ff88c\",\"user\":{\"login\":\"hyunzsu\",\"id\":108773199,\"node_id\":\"U_kgDOBnu_Tw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/108773199?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hyunzsu\",\"html_url\":\"https://github.com/hyunzsu\",\"followers_url\":\"https://api.github.com/users/hyunzsu/followers\",\"following_url\":\"https://api.github.com/users/hyunzsu/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hyunzsu/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hyunzsu/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hyunzsu/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hyunzsu/orgs\",\"repos_url\":\"https://api.github.com/users/hyunzsu/repos\",\"events_url\":\"https://api.github.com/users/hyunzsu/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hyunzsu/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019379723,\"node_id\":\"R_kgDOPMKACw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hyunzsu/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hyunzsu\",\"id\":108773199,\"node_id\":\"U_kgDOBnu_Tw\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/108773199?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hyunzsu\",\"html_url\":\"https://github.com/hyunzsu\",\"followers_url\":\"https://api.github.com/users/hyunzsu/followers\",\"following_url\":\"https://api.github.com/users/hyunzsu/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hyunzsu/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hyunzsu/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hyunzsu/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hyunzsu/orgs\",\"repos_url\":\"https://api.github.com/users/hyunzsu/repos\",\"events_url\":\"https://api.github.com/users/hyunzsu/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hyunzsu/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hyunzsu/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hyunzsu/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T08:35:54Z\",\"updated_at\":\"2025-07-21T05:50:12Z\",\"pushed_at\":\"2025-07-18T08:44:30Z\",\"git_url\":\"git://github.com/hyunzsu/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hyunzsu/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hyunzsu/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hyunzsu/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":265,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":3,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":3,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/47\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/47\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/47\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/47/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/47/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/47/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e0fb6e242fe3d5a3fbfe1fdc00b740bc424ff88c\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/48\",\"id\":2671257394,\"node_id\":\"PR_kwDOPJuWzM6fOCcy\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/48\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/48.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/48.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/48\",\"number\":48,\"state\":\"open\",\"locked\":false,\"title\":\"[2팀 김연수] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"yeonsookk\",\"id\":39474489,\"node_id\":\"MDQ6VXNlcjM5NDc0NDg5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/39474489?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yeonsookk\",\"html_url\":\"https://github.com/yeonsookk\",\"followers_url\":\"https://api.github.com/users/yeonsookk/followers\",\"following_url\":\"https://api.github.com/users/yeonsookk/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yeonsookk/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yeonsookk/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yeonsookk/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yeonsookk/orgs\",\"repos_url\":\"https://api.github.com/users/yeonsookk/repos\",\"events_url\":\"https://api.github.com/users/yeonsookk/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yeonsookk/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [ ] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [ ] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [ ] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [ ] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [ ] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [ ] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [ ] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [ ] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [ ] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [ ] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [ ] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [ ] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-16T16:16:02Z\",\"updated_at\":\"2025-07-17T10:19:29Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"d19f6c6f77bb7db7d028090a0c944ed0deff9653\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/48/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/48/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/48/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/1f2b4ba3f40cebb12435d64d1a54fc585a4de9f2\",\"head\":{\"label\":\"yeonsookk:main\",\"ref\":\"main\",\"sha\":\"1f2b4ba3f40cebb12435d64d1a54fc585a4de9f2\",\"user\":{\"login\":\"yeonsookk\",\"id\":39474489,\"node_id\":\"MDQ6VXNlcjM5NDc0NDg5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/39474489?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yeonsookk\",\"html_url\":\"https://github.com/yeonsookk\",\"followers_url\":\"https://api.github.com/users/yeonsookk/followers\",\"following_url\":\"https://api.github.com/users/yeonsookk/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yeonsookk/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yeonsookk/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yeonsookk/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yeonsookk/orgs\",\"repos_url\":\"https://api.github.com/users/yeonsookk/repos\",\"events_url\":\"https://api.github.com/users/yeonsookk/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yeonsookk/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019306593,\"node_id\":\"R_kgDOPMFiYQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"yeonsookk/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"yeonsookk\",\"id\":39474489,\"node_id\":\"MDQ6VXNlcjM5NDc0NDg5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/39474489?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/yeonsookk\",\"html_url\":\"https://github.com/yeonsookk\",\"followers_url\":\"https://api.github.com/users/yeonsookk/followers\",\"following_url\":\"https://api.github.com/users/yeonsookk/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/yeonsookk/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/yeonsookk/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/yeonsookk/subscriptions\",\"organizations_url\":\"https://api.github.com/users/yeonsookk/orgs\",\"repos_url\":\"https://api.github.com/users/yeonsookk/repos\",\"events_url\":\"https://api.github.com/users/yeonsookk/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/yeonsookk/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/yeonsookk/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/yeonsookk/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T06:08:42Z\",\"updated_at\":\"2025-07-17T10:19:31Z\",\"pushed_at\":\"2025-07-17T10:19:27Z\",\"git_url\":\"git://github.com/yeonsookk/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:yeonsookk/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/yeonsookk/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/yeonsookk/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":177,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":false,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/48\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/48\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/48\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/48/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/48/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/48/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/1f2b4ba3f40cebb12435d64d1a54fc585a4de9f2\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/49\",\"id\":2671496553,\"node_id\":\"PR_kwDOPJuWzM6fO81p\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/49\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/49.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/49.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/49\",\"number\":49,\"state\":\"open\",\"locked\":false,\"title\":\"[1팀 한아름] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"areumH\",\"id\":94692566,\"node_id\":\"U_kgDOBaTk1g\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/94692566?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/areumH\",\"html_url\":\"https://github.com/areumH\",\"followers_url\":\"https://api.github.com/users/areumH/followers\",\"following_url\":\"https://api.github.com/users/areumH/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/areumH/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/areumH/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/areumH/subscriptions\",\"organizations_url\":\"https://api.github.com/users/areumH/orgs\",\"repos_url\":\"https://api.github.com/users/areumH/repos\",\"events_url\":\"https://api.github.com/users/areumH/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/areumH/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://areumh.github.io/front_6th_chapter1-2/\\r\\n\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n가상 돔에 대한 사전적 정의와 사용 이유에 대해서만 얕게 알고 있었는데, 이번 과제를 통해 가상 DOM과 실제 DOM의 동작 차이, 이벤트 위임과 버블링의 구체적인 동작 방식 등에 대해 더 깊이 알게 된 것 같다.\\r\\n\\r\\n\\r\\n\\r\\n### 코드 품질\\r\\n현재는 과제로 출제된 각 함수 파일 그대로 구현했는데, 추후에 리팩토링을 한다면 createElement, normalizeVNode 함수에서 조건문에 사용되는 vNode의 타입을 확인하는 함수를 따로 작성하고 싶다. 그리고 updateElement 함수 내에서 속성 업데이트에 사용되는 updateAttribute 함수가 가독성 면에서 조잡해보이는 느낌이 있어서 만약 리팩토링을 한다면 유틸 함수로 역할을 분리하거나 createElement의 updateAttribute에도 재사용할 수 있는 함수로 분리하여 진행해보고 싶다. \\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n- **updateAttribute - boolean 타입 props의 직접 업데이트**\\r\\n\\r\\nupdateElement에서 boolean 타입의 속성 값을 업데이트할 때 createElement에서와 같은 동작인 `setAttribute(attr, \\\"\\\")`으로 작성하여 헤맨 기억이 있다. \\r\\n\\r\\n```javascript\\r\\nelse if (typeof value === \\\"boolean\\\") {\\r\\n  if (attr in target) {\\r\\n    // target에 attr가 존재하는지 확인\\r\\n    target[attr] = value; // 있으면 직접 업데이트\\r\\n    if (!value) {\\r\\n      // attr가 존재하는데 값이 false\\r\\n      // 해당 attr 삭제\\r\\n      target.removeAttribute(attr);\\r\\n    }\\r\\n  } else {\\r\\n    // attr가 존재하지 않음\\r\\n    // true일 때 빈 문자열로 속성 추가\\r\\n    value && target.setAttribute(attr, \\\"\\\");\\r\\n  }\\r\\n}\\r\\n```\\r\\n실제 DOM은 직접 속성을 업데이트해줘야 하기 때문에 ` target[attr] = value;` 처럼 해당 속성이 존재할 경우엔 값을 직접 업데이트해주도록 하여 해결했다. \\r\\n\\r\\n<br />\\r\\n\\r\\n- **이벤트 버블링**\\r\\n```javascript\\r\\n// src/lib/eventManager.js (setupEventListeners())\\r\\n\\r\\nconst handleEvent = (event) => {\\r\\n  const target = event.target;\\r\\n  if (!handlerMap.has(target)) return;\\r\\n  \\r\\n  const handler = handlerMap.get(target);\\r\\n  if (handler) handler(event);\\r\\n};\\r\\n```\\r\\n처음 setupEventListener 함수를 작성했을 때, 이벤트 실행 시 해당 요소에 등록된 이벤트만을 검사하여 실행하도록 구현했는데 이 때문에 제일 기본적인 페이지 라우트 테스트를 통과하지 못해 많은 시간을 허비했다. \\r\\n\\r\\n```javascript\\r\\nconst handleEvent = (event) => {\\r\\n  let target = event.target;\\r\\n\\r\\n  // 클릭된 요소와 이벤트가 연결된 요소가 다름\\r\\n  while (target && target !== event.currentTarget) {\\r\\n    if (handlerMap.has(target)) {\\r\\n      // 등록된 이벤트 함수\\r\\n      const handler = handlerMap.get(target);\\r\\n      // 실행시킨 후 종료\\r\\n      if (handler) handler(event);\\r\\n      break;\\r\\n    }\\r\\n    // 부모 요소로 올라가며 반복\\r\\n    target = target.parentElement;\\r\\n  }\\r\\n};\\r\\n```\\r\\n위의 코드처럼 현재 요소의 부모 요소를 하나씩 검사하면서 이벤트 함수가 있으면 해당 이벤트를 실행하도록 코드를 수정하여 해결했다.\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n이번 과제를 통해 가상 돔을 다뤄보면서, 평소라면 깊게 고민하지 않았을 부분까지 깊이 있게 이해할 수 있었습니다. 만약 이번 과제처럼 구체적으로 다뤄보는 기회가 없었다면, 가상 돔이 어떻게 동작하는지, 왜 필요한지에 대해 학습할 일은 없었을 것 같아서 의미있었다고 생각한다!! \\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\nsetupEventListener 함수에서 이벤트 핸들러 저장, root에 연결된 이벤트 관리에 Map이 적절히 사용된건지 의견을 여쭤보고 싶습니다. (이벤트를 연결하는 데에 더 좋은 방안이 있는지.) 그리고 어떠한 요소에 대해 발생해야 하는 이벤트가 부모 요소에 연결된 이벤트일 경우  `event.currentTarget`을 사용하여 부모 요소를 차례로 확인하여 연결하도록 구현하였는데, 이 또한 적절한 방식인지 궁금합니다. \\r\\n\",\"created_at\":\"2025-07-16T17:50:16Z\",\"updated_at\":\"2025-07-20T13:20:12Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"53712fe57051d43ea5eed1b4090f55a2cdc98956\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/49/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/49/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/49/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/32a410b0cd7558eda4171df70f633b924dd51b6f\",\"head\":{\"label\":\"areumH:main\",\"ref\":\"main\",\"sha\":\"32a410b0cd7558eda4171df70f633b924dd51b6f\",\"user\":{\"login\":\"areumH\",\"id\":94692566,\"node_id\":\"U_kgDOBaTk1g\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/94692566?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/areumH\",\"html_url\":\"https://github.com/areumH\",\"followers_url\":\"https://api.github.com/users/areumH/followers\",\"following_url\":\"https://api.github.com/users/areumH/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/areumH/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/areumH/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/areumH/subscriptions\",\"organizations_url\":\"https://api.github.com/users/areumH/orgs\",\"repos_url\":\"https://api.github.com/users/areumH/repos\",\"events_url\":\"https://api.github.com/users/areumH/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/areumH/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018835933,\"node_id\":\"R_kgDOPLoz3Q\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"areumH/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"areumH\",\"id\":94692566,\"node_id\":\"U_kgDOBaTk1g\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/94692566?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/areumH\",\"html_url\":\"https://github.com/areumH\",\"followers_url\":\"https://api.github.com/users/areumH/followers\",\"following_url\":\"https://api.github.com/users/areumH/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/areumH/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/areumH/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/areumH/subscriptions\",\"organizations_url\":\"https://api.github.com/users/areumH/orgs\",\"repos_url\":\"https://api.github.com/users/areumH/repos\",\"events_url\":\"https://api.github.com/users/areumH/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/areumH/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/areumH/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/areumH/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T06:34:37Z\",\"updated_at\":\"2025-07-17T19:49:10Z\",\"pushed_at\":\"2025-07-19T08:54:36Z\",\"git_url\":\"git://github.com/areumH/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:areumH/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/areumH/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/areumH/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":156,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/49\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/49\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/49\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/49/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/49/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/49/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/32a410b0cd7558eda4171df70f633b924dd51b6f\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/50\",\"id\":2672350615,\"node_id\":\"PR_kwDOPJuWzM6fSNWX\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/50\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/50.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/50.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/50\",\"number\":50,\"state\":\"open\",\"locked\":false,\"title\":\"[9팀 박상수] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2) \",\"user\":{\"login\":\"parksangsoo\",\"id\":37687621,\"node_id\":\"MDQ6VXNlcjM3Njg3NjIx\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/37687621?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/parksangsoo\",\"html_url\":\"https://github.com/parksangsoo\",\"followers_url\":\"https://api.github.com/users/parksangsoo/followers\",\"following_url\":\"https://api.github.com/users/parksangsoo/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/parksangsoo/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/parksangsoo/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/parksangsoo/subscriptions\",\"organizations_url\":\"https://api.github.com/users/parksangsoo/orgs\",\"repos_url\":\"https://api.github.com/users/parksangsoo/repos\",\"events_url\":\"https://api.github.com/users/parksangsoo/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/parksangsoo/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://parksangsoo.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n가상돔이 실제로 어떻게 생성되고 어떻게 실제돔과 비교해서 바뀐 부분만 렌더링 하는 지 과정에 대해 좀 더 자세히 알게 된 거 같다\\r\\n\\r\\n### 코드 품질\\r\\n테스트 코드가 원하는 값을 받을 수 있도록 구현에만 초점 둬서 코드 품질에 대해서는 어떻게 하면 좋은 품질의 코드가 될 지 고민은 못해본 거 같다\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n가상돔이 어떻게 작동하는 지에 대한 과제인 거 같아 뭘 리뷰를 받아야 할 지 모르겠습니다;\\r\\n\",\"created_at\":\"2025-07-17T01:21:41Z\",\"updated_at\":\"2025-07-19T04:15:17Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"2ad71331a4312ae5be084e312feeb342400732a0\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/50/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/50/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/50/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/51702a2917c0b37ecf267dc25ced0082aa1d7f49\",\"head\":{\"label\":\"parksangsoo:main\",\"ref\":\"main\",\"sha\":\"51702a2917c0b37ecf267dc25ced0082aa1d7f49\",\"user\":{\"login\":\"parksangsoo\",\"id\":37687621,\"node_id\":\"MDQ6VXNlcjM3Njg3NjIx\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/37687621?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/parksangsoo\",\"html_url\":\"https://github.com/parksangsoo\",\"followers_url\":\"https://api.github.com/users/parksangsoo/followers\",\"following_url\":\"https://api.github.com/users/parksangsoo/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/parksangsoo/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/parksangsoo/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/parksangsoo/subscriptions\",\"organizations_url\":\"https://api.github.com/users/parksangsoo/orgs\",\"repos_url\":\"https://api.github.com/users/parksangsoo/repos\",\"events_url\":\"https://api.github.com/users/parksangsoo/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/parksangsoo/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019199388,\"node_id\":\"R_kgDOPL-_nA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"parksangsoo/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"parksangsoo\",\"id\":37687621,\"node_id\":\"MDQ6VXNlcjM3Njg3NjIx\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/37687621?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/parksangsoo\",\"html_url\":\"https://github.com/parksangsoo\",\"followers_url\":\"https://api.github.com/users/parksangsoo/followers\",\"following_url\":\"https://api.github.com/users/parksangsoo/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/parksangsoo/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/parksangsoo/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/parksangsoo/subscriptions\",\"organizations_url\":\"https://api.github.com/users/parksangsoo/orgs\",\"repos_url\":\"https://api.github.com/users/parksangsoo/repos\",\"events_url\":\"https://api.github.com/users/parksangsoo/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/parksangsoo/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/parksangsoo/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/parksangsoo/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T00:31:52Z\",\"updated_at\":\"2025-07-17T05:50:35Z\",\"pushed_at\":\"2025-07-17T05:50:55Z\",\"git_url\":\"git://github.com/parksangsoo/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:parksangsoo/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/parksangsoo/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/parksangsoo/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":212,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/50\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/50\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/50\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/50/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/50/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/50/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/51702a2917c0b37ecf267dc25ced0082aa1d7f49\"}},\"author_association\":\"FIRST_TIME_CONTRIBUTOR\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/52\",\"id\":2673314906,\"node_id\":\"PR_kwDOPJuWzM6fV4xa\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/52\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/52.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/52.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/52\",\"number\":52,\"state\":\"open\",\"locked\":false,\"title\":\"[7팀 정건휘] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"geonhwiii\",\"id\":44767362,\"node_id\":\"MDQ6VXNlcjQ0NzY3MzYy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/44767362?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/geonhwiii\",\"html_url\":\"https://github.com/geonhwiii\",\"followers_url\":\"https://api.github.com/users/geonhwiii/followers\",\"following_url\":\"https://api.github.com/users/geonhwiii/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/geonhwiii/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/geonhwiii/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/geonhwiii/subscriptions\",\"organizations_url\":\"https://api.github.com/users/geonhwiii/orgs\",\"repos_url\":\"https://api.github.com/users/geonhwiii/repos\",\"events_url\":\"https://api.github.com/users/geonhwiii/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/geonhwiii/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://geonhwiii.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n이전 1차 과제에서는 제대로된 이해 없이 과제를 시작하여, 무작정 과제를 하는 방향이었습니다.\\r\\n\\r\\n그래서 이번에는 과제를 시작하기 전에 부담을 내려놓고 `VDom`에 대해 이해하는 시간을 가지고 시작한 점이\\r\\n\\r\\n오히려 과제를 진행함에 있어 도움이 된 것 같습니다 :)\\r\\n\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n기술 질문 문제의 대답처럼 단순하게 \\\"리액트는 가상돔을 이용해서 렌더링 성능을 개선한다.\\\"\\r\\n\\r\\n라는 단순한 생각에서, `React`가 실제로 `Dom element`를 그려가는 과정을 이해하면서,\\r\\n\\r\\n가상돔에 대해 좀 더 이해하고, 리액트라는 프레임워크의 방향성에 대해 좀 더 공감할 수 있는 시간이었습니다\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n-\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n이번 과제는 이해에 좀 더 집중할 수 있는 시간이어서 만족스러웠습니다.\\r\\n\\r\\n한번 더 공부를 하면서, 리팩토링과 재구현을 진행해보고 싶습니다.\\r\\n\\r\\n과제 내용에서 없는 리액트의 동작 과정 중  조금 더 구현하면 좋을 내용이 있을까요?\\r\\n\\r\\n발제 리뷰를 통해 `Fragment`와 같은 것들을 구현하면 좋다고 들어서요~!\",\"created_at\":\"2025-07-17T09:35:19Z\",\"updated_at\":\"2025-07-19T05:23:27Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"4ec6ab31eed0e9e4d7f2ba12a72056ad46d9068b\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/52/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/52/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/52/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/36246861c430835c9e20b2af6762c0ccebeab175\",\"head\":{\"label\":\"geonhwiii:main\",\"ref\":\"main\",\"sha\":\"36246861c430835c9e20b2af6762c0ccebeab175\",\"user\":{\"login\":\"geonhwiii\",\"id\":44767362,\"node_id\":\"MDQ6VXNlcjQ0NzY3MzYy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/44767362?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/geonhwiii\",\"html_url\":\"https://github.com/geonhwiii\",\"followers_url\":\"https://api.github.com/users/geonhwiii/followers\",\"following_url\":\"https://api.github.com/users/geonhwiii/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/geonhwiii/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/geonhwiii/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/geonhwiii/subscriptions\",\"organizations_url\":\"https://api.github.com/users/geonhwiii/orgs\",\"repos_url\":\"https://api.github.com/users/geonhwiii/repos\",\"events_url\":\"https://api.github.com/users/geonhwiii/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/geonhwiii/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019570007,\"node_id\":\"R_kgDOPMVnVw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"geonhwiii/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"geonhwiii\",\"id\":44767362,\"node_id\":\"MDQ6VXNlcjQ0NzY3MzYy\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/44767362?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/geonhwiii\",\"html_url\":\"https://github.com/geonhwiii\",\"followers_url\":\"https://api.github.com/users/geonhwiii/followers\",\"following_url\":\"https://api.github.com/users/geonhwiii/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/geonhwiii/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/geonhwiii/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/geonhwiii/subscriptions\",\"organizations_url\":\"https://api.github.com/users/geonhwiii/orgs\",\"repos_url\":\"https://api.github.com/users/geonhwiii/repos\",\"events_url\":\"https://api.github.com/users/geonhwiii/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/geonhwiii/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/geonhwiii/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/geonhwiii/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T14:28:54Z\",\"updated_at\":\"2025-07-17T16:27:42Z\",\"pushed_at\":\"2025-07-17T16:27:38Z\",\"git_url\":\"git://github.com/geonhwiii/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:geonhwiii/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/geonhwiii/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/geonhwiii/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":276,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/52\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/52\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/52\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/52/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/52/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/52/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/36246861c430835c9e20b2af6762c0ccebeab175\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/53\",\"id\":2673403439,\"node_id\":\"PR_kwDOPJuWzM6fWOYv\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/53\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/53.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/53.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/53\",\"number\":53,\"state\":\"open\",\"locked\":false,\"title\":\"[6팀 조영민] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"0miiii\",\"id\":85497694,\"node_id\":\"MDQ6VXNlcjg1NDk3Njk0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/85497694?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/0miiii\",\"html_url\":\"https://github.com/0miiii\",\"followers_url\":\"https://api.github.com/users/0miiii/followers\",\"following_url\":\"https://api.github.com/users/0miiii/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/0miiii/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/0miiii/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/0miiii/subscriptions\",\"organizations_url\":\"https://api.github.com/users/0miiii/orgs\",\"repos_url\":\"https://api.github.com/users/0miiii/repos\",\"events_url\":\"https://api.github.com/users/0miiii/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/0miiii/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://0miiii.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n1주차 때도 마찬가지고 실력에 대한 부족함을 많이 느끼고 있고, 제가 고민한 부분이나 알게 된 부분을 정리하는 것이 약한데 다른분들이 작성하신 것을 참고하고 느낀것이 많습니다. 이번 주가 가기 전에 내용을 최대한 이해하고 정리하는 것이 목표입니다.\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-17T10:05:36Z\",\"updated_at\":\"2025-07-22T05:52:22Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"91cdb4f7b10fb5d300d474c55005899d4ee1c297\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/53/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/53/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/53/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/f1542d1c0b6ee61864695e9cccf6512fa9816f78\",\"head\":{\"label\":\"0miiii:main\",\"ref\":\"main\",\"sha\":\"f1542d1c0b6ee61864695e9cccf6512fa9816f78\",\"user\":{\"login\":\"0miiii\",\"id\":85497694,\"node_id\":\"MDQ6VXNlcjg1NDk3Njk0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/85497694?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/0miiii\",\"html_url\":\"https://github.com/0miiii\",\"followers_url\":\"https://api.github.com/users/0miiii/followers\",\"following_url\":\"https://api.github.com/users/0miiii/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/0miiii/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/0miiii/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/0miiii/subscriptions\",\"organizations_url\":\"https://api.github.com/users/0miiii/orgs\",\"repos_url\":\"https://api.github.com/users/0miiii/repos\",\"events_url\":\"https://api.github.com/users/0miiii/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/0miiii/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019550895,\"node_id\":\"R_kgDOPMUcrw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"0miiii/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"0miiii\",\"id\":85497694,\"node_id\":\"MDQ6VXNlcjg1NDk3Njk0\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/85497694?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/0miiii\",\"html_url\":\"https://github.com/0miiii\",\"followers_url\":\"https://api.github.com/users/0miiii/followers\",\"following_url\":\"https://api.github.com/users/0miiii/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/0miiii/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/0miiii/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/0miiii/subscriptions\",\"organizations_url\":\"https://api.github.com/users/0miiii/orgs\",\"repos_url\":\"https://api.github.com/users/0miiii/repos\",\"events_url\":\"https://api.github.com/users/0miiii/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/0miiii/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/0miiii/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/0miiii/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T13:55:55Z\",\"updated_at\":\"2025-07-22T05:52:25Z\",\"pushed_at\":\"2025-07-22T05:52:20Z\",\"git_url\":\"git://github.com/0miiii/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:0miiii/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/0miiii/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/0miiii/front_6th_chapter1-2\",\"homepage\":\"https://0miiii.github.io/front_6th_chapter1-2/\",\"size\":217,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":1,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":1,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/53\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/53\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/53\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/53/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/53/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/53/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/f1542d1c0b6ee61864695e9cccf6512fa9816f78\"}},\"author_association\":\"FIRST_TIME_CONTRIBUTOR\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/54\",\"id\":2673537630,\"node_id\":\"PR_kwDOPJuWzM6fWvJe\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/54\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/54.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/54.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/54\",\"number\":54,\"state\":\"open\",\"locked\":false,\"title\":\"[9팀 최재환] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"lieblichoi\",\"id\":79303416,\"node_id\":\"MDQ6VXNlcjc5MzAzNDE2\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/79303416?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/lieblichoi\",\"html_url\":\"https://github.com/lieblichoi\",\"followers_url\":\"https://api.github.com/users/lieblichoi/followers\",\"following_url\":\"https://api.github.com/users/lieblichoi/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/lieblichoi/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/lieblichoi/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/lieblichoi/subscriptions\",\"organizations_url\":\"https://api.github.com/users/lieblichoi/orgs\",\"repos_url\":\"https://api.github.com/users/lieblichoi/repos\",\"events_url\":\"https://api.github.com/users/lieblichoi/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/lieblichoi/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\nhttps://lieblichoi.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n이번 프로젝트를 하면서 가상돔이 왜 필요한지, 그리고 실제로 어떻게 동작하는지에 대해 감을 잡을 수 있었습니다.  \\r\\n특히, `createElement` 함수를 직접 구현하면서 재귀적으로 DOM을 만들어가는 과정이 기억에 남습니다.\\r\\n이전에는 막연하게만 알던 부분들을 하나씩 구현해보니 보다 명확하게 보였습니다.\\r\\n\\r\\n사실 아직 기본기가 부족하다고 느끼는 부분이 많습니다.\\r\\n특히 diff 알고리즘이 적용된 `updateElement` 부분은 아직도 완전히 이해가지 않습니다.  \\r\\n그래도 각 함수의 역할과 구조를 단계별로 분석하고, 몰랐던 부분을 하나씩 채워가는 과정 자체가 도움이 많이 되었습니다.\\r\\n\\r\\n이번에는 모든 기능을 완벽하게 이해하는 것보다는 일단 전반적인 DOM 구조와 렌더링 방식에 대한 큰 그림을 그릴 수 있었던 것에 만족합니다.  \\r\\n그동안 궁금했던 부분이 많이 해소된 느낌이라 앞으로 더 신나게(?) 공부할 동기부여가 되었습니다.\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n코드 품질에 대해서는 솔직히 AI의 도움을 많이 받으면서 작성하다 보니 제 손에 완전히 타서 나온 코드라고 하기는 어렵습니다.  \\r\\n그래도 각 함수의 역할을 나누고, 구조를 파악하려고 노력하면서 예전보다 체계적으로 코드를 바라볼 수 있게 된 것 같습니다.\\r\\n\\r\\n특히, `createElement`의 재귀 구조를 직접 따라가면서 함수가 어떻게 동작하는지, 그리고 왜 이렇게 설계되어야 하는지에 대한 감을 잡을 수 있었습니다.\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n가장 크게 배운 점은 가상돔이 단순히 객체로 DOM을 흉내내는 것이 아니라 실제 DOM과의 차이를 효율적으로 관리하기 위한 핵심적인 구조라는 것이었습니다. \\r\\n\\r\\ndiff 알고리즘이나 이벤트 위임 등을 직접 구현해보면서 이론으로만 접했던 개념들이 실제로 어떻게 코드로 구현되는지 체감할 수 있었던 것 또한 긍정적이었습니다. \\r\\n\\r\\n아직 완전히 이해하지 못한 부분도 많지만 이번 기회를 통해 앞으로 어떤 부분을 어떻게 더 공부해야 할지 방향을 잡을 수 있었습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n과제 자체가 단계별로 잘 나누어져 있어서 부담 없이 따라갈 수 있었던 점이 좋았습니다.\\r\\n\\r\\n다만, diff 알고리즘 부분은 처음 접하는 입장에서는 조금 더 구체적인 예시나 설명이 있었으면 더 좋았을 것 같다는 아쉬움이 남습니다. 그래도 제공해주신 학습 자료가 구현 방향을 잡는 데 큰 도움이 되었습니다.\\r\\n\\r\\n### 자랑하고 싶은 내용\\r\\n\\r\\n이번 과제를 하면서 특별하게 자랑할 만한 코드는 없지만 막연하게만 알고 있던 가상돔과 DOM 렌더링 과정을 직접 코드로 구현해보고, 재귀적으로 동작하는 구조를 내 손으로 따라가 보면서 이해하려고 노력했다는 점은 좋았던 점이라 생각합니다.\\r\\n\\r\\n특히, `createElement`를 구현하면서 이렇게 해서 실제로 DOM이 만들어지는구나라는 깨달음을 얻었을 때 제일 큰 재미가 느껴졌습니다.\\r\\n\\r\\n### 리뷰 받고 싶은 내용\\r\\n\\r\\n- **updateElement의 diff 알고리즘 구조**  \\r\\n  `updateElement` 함수에서 `newNode`와 `oldNode`를 비교해서 DOM을 업데이트하는 로직이 아직 완전히 익숙하지 않습니다.  \\r\\n  지금은 타입이 다르면 노드를 교체하고, 속성만 다르면 `updateAttributes`로 처리하고, 자식 노드는 재귀적으로 `updateElement`를 호출하는 방식으로 구현했는데, 이 구조가 실제로 효율적인지, 혹은 더 나은 비교/업데이트 방식이 있는지 궁금합니다. 특히, 자식 노드가 많아질 때 성능이나 코드 복잡도 측면에서 개선할 수 있는 부분이 있는지 피드백 주시면 감사하겠습니다.\\r\\n\\r\\n- **createElement의 재귀 구조와 함수 분리**  \\r\\n  `createElement` 함수에서 vNode의 타입에 따라 텍스트 노드, 배열, 일반 노드로 분기해서 처리하고, 자식이 있을 때는 재귀적으로 `createElement`를 호출하는 구조로 만들었습니다. 이 과정에서 함수 분리나 코드 구조가 적절한지, 혹은 더 명확하게 역할을 나눌 수 있는 방법이 있는지 피드백 주시면 감사하겠습니다.\\r\\n\",\"created_at\":\"2025-07-17T10:52:14Z\",\"updated_at\":\"2025-07-19T04:59:06Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"7102bace6f732c55ecd6dd309137aceed19d9769\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/54/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/54/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/54/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/cc0d184e0d9acd2353cd84a735fff9194285c5c7\",\"head\":{\"label\":\"lieblichoi:main\",\"ref\":\"main\",\"sha\":\"cc0d184e0d9acd2353cd84a735fff9194285c5c7\",\"user\":{\"login\":\"lieblichoi\",\"id\":79303416,\"node_id\":\"MDQ6VXNlcjc5MzAzNDE2\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/79303416?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/lieblichoi\",\"html_url\":\"https://github.com/lieblichoi\",\"followers_url\":\"https://api.github.com/users/lieblichoi/followers\",\"following_url\":\"https://api.github.com/users/lieblichoi/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/lieblichoi/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/lieblichoi/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/lieblichoi/subscriptions\",\"organizations_url\":\"https://api.github.com/users/lieblichoi/orgs\",\"repos_url\":\"https://api.github.com/users/lieblichoi/repos\",\"events_url\":\"https://api.github.com/users/lieblichoi/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/lieblichoi/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1020607194,\"node_id\":\"R_kgDOPNU62g\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"lieblichoi/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"lieblichoi\",\"id\":79303416,\"node_id\":\"MDQ6VXNlcjc5MzAzNDE2\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/79303416?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/lieblichoi\",\"html_url\":\"https://github.com/lieblichoi\",\"followers_url\":\"https://api.github.com/users/lieblichoi/followers\",\"following_url\":\"https://api.github.com/users/lieblichoi/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/lieblichoi/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/lieblichoi/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/lieblichoi/subscriptions\",\"organizations_url\":\"https://api.github.com/users/lieblichoi/orgs\",\"repos_url\":\"https://api.github.com/users/lieblichoi/repos\",\"events_url\":\"https://api.github.com/users/lieblichoi/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/lieblichoi/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/lieblichoi/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/lieblichoi/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-16T06:10:27Z\",\"updated_at\":\"2025-07-18T16:08:35Z\",\"pushed_at\":\"2025-07-18T16:08:31Z\",\"git_url\":\"git://github.com/lieblichoi/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:lieblichoi/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/lieblichoi/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/lieblichoi/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":175,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/54\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/54\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/54\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/54/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/54/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/54/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/cc0d184e0d9acd2353cd84a735fff9194285c5c7\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/55\",\"id\":2673708057,\"node_id\":\"PR_kwDOPJuWzM6fXYwZ\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/55\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/55.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/55.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/55\",\"number\":55,\"state\":\"open\",\"locked\":false,\"title\":\"[6팀 이지현] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"j2h30728\",\"id\":60846068,\"node_id\":\"MDQ6VXNlcjYwODQ2MDY4\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/60846068?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/j2h30728\",\"html_url\":\"https://github.com/j2h30728\",\"followers_url\":\"https://api.github.com/users/j2h30728/followers\",\"following_url\":\"https://api.github.com/users/j2h30728/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/j2h30728/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/j2h30728/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/j2h30728/subscriptions\",\"organizations_url\":\"https://api.github.com/users/j2h30728/orgs\",\"repos_url\":\"https://api.github.com/users/j2h30728/repos\",\"events_url\":\"https://api.github.com/users/j2h30728/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/j2h30728/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://j2h30728.github.io/front_6th_chapter1-2/\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n테스트코드를 따라서 가상돔과 Diff 알고리즘을 구현해보면서 항상 사용하는 리액트 동작에 대해서 좀 더 알게되었습니다.\\r\\n\\r\\n과제 진행 중 가장 큰 실수는 vNode 객체에 실제 DOM 요소를 저장한 것이었습니다. \\r\\n\\r\\n커밋 [`99089b1`](https://github.com/hanghae-plus/front_6th_chapter1-2/pull/55/commits/99089b11cfe1c85f6ab431130f71b912c35fda78)에서 확인할 수 있듯이 `vNode.el = element`처럼 실제 DOM을 저장했고, 아이러니하게도 이 잘못된 방식이 겉보기에는 정상 작동했습니다.\\r\\n\\r\\n```jsx\\r\\n// ❌ 잘못된 방식\\r\\nvNode.el = element; // 실제 DOM을 vNode에 저장\\r\\nupdateElement(oldNode.el, newChildren[i], oldChildren[i], i);\\r\\n\\r\\n// ✅ 올바른 방식  \\r\\nconst currentElement = parentElement.childNodes[index]; // 인덱스 기반 접근\\r\\n```\\r\\n\\r\\n실제 DOM요소가 oldNode.el에 저장되어 있어서, 이를 parentNode로 사용하고 diff 알고리즘을 실행했습니다. 결과적으로 화면은 정상적으로 렌더링되지만, 가상돔의 본질을 놓치고 있었습니다.\\r\\n\\r\\n과제를 진행하면서 \\\"왜 내가 리얼돔을 객체에 넣었을까?\\\"라는 의문이 생기게 되었습니다. createVNode가 반환하는 { type, props, children } 구조의 순수한 객체, 실제 DOM과의 분리 등에 대해서 다시 한 번 더 되짚어 가며 리팩토링을 진행했습니다.\\r\\n\\r\\n회고를 작성하면서 돌이켜보니, 당시에는 \\\"작동하는 코드\\\"에만 집중하여 설계 원칙을 깊이 고려하지 못했던 것 같습니다. \\r\\n이를 통해 표면적인 구현을 넘어 근본적인 이해의 중요성을 깨달았습니다.\\r\\n\\r\\n### 기술적 성장\\r\\n\\r\\n**children과 childNodes의 차이**\\r\\n\\r\\nDOM\xA0API의 children과\xA0childNodes의\xA0미묘한\xA0차이점을\xA0과제를 구현하면서 경험했습니다. \\r\\n처음에는 children가져와 사용했지만 텍스트 노드가 존재하지 않기떄문에\xA0diff 알고리즘이 실행되면서 인덱스가 일치하지 않아서\xA0인한 버그를 유발시켰습니다. \\r\\n실제 화면에서도 제대로 나오지않을 뿐만아니라, 테스트 코드가 실패하는 것을 시작으로 디버깅을 진행했습니다. \\r\\nAPI를 제대로 찾아보지 않고 사용했던 점과 그로인해 DOM API 차이점을 알게 되었고, 테스트 코드의 중요성도 덤으로 알게 되었습니다.\\r\\n\\r\\n**이벤트 위임(Event Delegation) 패턴의\xA0실제 구현**\\r\\n\\r\\n학습자료에서 제공한 내용을 토대로, 루트 요소에서 이벤트를\xA0캐치하고\xA0event.target부터 상위로 탐색하며\xA0적절한\xA0핸들러를\xA0찾는 패턴을 구현했습니다. 동적으로 생성되는 DOM\xA0요소들에도 일관된 이벤트 처리가\xA0가능한\xA0구조의 핵심을 이해했습니다.\\r\\n\\r\\n### 코드 품질\\r\\n\\r\\n특히 만족스러운 구현은 WeakMap으로 메모리 누수 방지, Map으로 이벤트 타입 분류, Set으로 핸들러 중복 방지를 했던 부분입니다. 각 계층이 명확한 역할을 담당하여 동작하도록 구현했습니다.\\r\\n\\r\\n```jsx\\r\\n// WeakMap<element, Map<eventType, Set<handler>>> 구조\\r\\nconst eventListeners = new WeakMap();\\r\\n```\\r\\n\\r\\n### 리팩토링이 필요한 부분\\r\\n\\r\\n기능 구현에 집중했기 때문에 클린 코드에 대해서 깊게 고려하지 못했습니다. 하나의 함수에 여러 역할을 하기도 합니다. \\r\\n이런 함수들에 대해서 관심사 분리를 진행하고 단일책임원칙을 지키고 싶습니다.\\r\\n\\r\\n### 코드 설계 관련 고민과 결정\\r\\n\\r\\n처음에는 단순히 이벤트 매니저내의 이벤트 타입을 미리 정의한 상수 배열로 관리했습니다. \\r\\n하지만 이 방식은 새로운 이벤트를 추가할 때마다 코드를 수정해야 하고, 사용하지 않는 이벤트에도 리스너를 등록하는 비효율성이 있었습니다.\\r\\n\\r\\n```jsx\\r\\n// ❌ 초기 방식 - 정적 관리\\r\\nconst SUPPORTED_EVENTS = ['click', 'mousedown', 'keyup', 'change'];\\r\\n\\r\\n// ✅ 개선된 방식 - 동적 관리\\r\\nconst delegatedEvents = new Set(); // 실제 사용되는 이벤트만\\r\\n```\\r\\n\\r\\n이후 `Set`을 활용한 동적 관리 방식으로 변경했습니다. \\r\\n실제로 `addEvent`가 호출될 때만 해당 이벤트 타입을 `delegatedEvents`에 추가하여, 필요한 이벤트에만 root 리스너를 등록하겠끔 했습니다.\\r\\n\\r\\n### 학습 효과 분석\\r\\n\\r\\n**가장 큰 배움이 있었던 부분**\\r\\n\\r\\n`removeEvent` 함수를 처음 구현할 때는 handler 파라미터의 진짜 용도를 깊게 생각하지 못했습니다. \\r\\n단순히 이벤트 타입만 제거하면 된다고 생각했고, 특정 핸들러만 정밀하게 제거해야 하는 상황을 고려하지 못했습니다.\\r\\n\\r\\n```jsx\\r\\n// ❌ 초기의 잘못된 생각\\r\\nremoveEvent(element, eventType); // 모든 핸들러 제거\\r\\n// ✅ 올바른 접근\\r\\nremoveEvent(element, eventType, handler); // 특정 핸들러만 제거\\r\\n\\r\\n```\\r\\n\\r\\n과제의 모든 테스트 코드를 통과시킨 후, 스터디원 영서님의 글을 읽으면서 handler 파라미터가 제공된 진짜 이유를 깨닫게 되었습니다. \\r\\n같은 요소에 여러 컴포넌트가 동일한 이벤트 타입의 핸들러를 등록했을 때, 특정 컴포넌트가 언마운트되면 해당 핸들러만 정확히 제거해야 메모리 누수를 방지할 수 있다는 것이었습니다.\\r\\n\\r\\n이를 바탕으로 `removeEvent` 함수를 리팩토링했습니다. \\r\\nhandler 참조를 정확히 끊어내고, 빈 Set/Map을 정리하여 메모리 누수를 방지하는 방식으로 개선했습니다. \\r\\n이런 일련의 경험을 통해 지식공유의 힘을 더 깊이 깨달았습니다. 나 또한 누군가에게 도움이 되는 글을 써보고 싶다는 동기가 생겼습니다.\\r\\n\\r\\n### 실무 연결\\r\\n\\r\\n- React의 내부 동작 원리를 이해함으로써 성능 최적화나 디버깅 시 더 효과적인 접근이 가능해졌습니다.\\r\\n- SPA에서 발생할 수 있는 메모리 누수 패턴을 인식하고 방지하는 능력을 기를 수 있었습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n- **이벤트를 저장하는 저장소 계층**\\r\\n이벤트위임에서 사용되는 이벤트들을 저장해두는 저장소의 계층에 대해서 궁금합니다\\r\\n요소를 보여주고 보여주지않는다는 기준으로 제일 상위계층을 element를 담았습니다.\\r\\n그래서 element > event > handler 순으로 저장했었는데요. 다른 분들의 코드를 확인하니 각각 다르게 만들수가 있더라구요. 제가 접근을 좀 다르게 했던 것일까요? 멘토님이 생각하시는 최적의 계층설계가 궁금합니다. \\r\\n- **런타임 에러 처리**\\r\\n현재 구현에는 에러 처리가 전혀 존재하지않는데, vNode 생성 실패나 DOM 조작 에러 시 핸들링하는 함수는 어떤방향으로 구현이 될까요?\",\"created_at\":\"2025-07-17T11:53:02Z\",\"updated_at\":\"2025-07-21T12:24:45Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"04ddf6a05d65d41048419b92bad2cfbde40b6c45\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/55/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/55/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/55/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/a4700fd3ecba4089e3ddbe4b0d8a1c1c07ce8d31\",\"head\":{\"label\":\"j2h30728:main\",\"ref\":\"main\",\"sha\":\"a4700fd3ecba4089e3ddbe4b0d8a1c1c07ce8d31\",\"user\":{\"login\":\"j2h30728\",\"id\":60846068,\"node_id\":\"MDQ6VXNlcjYwODQ2MDY4\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/60846068?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/j2h30728\",\"html_url\":\"https://github.com/j2h30728\",\"followers_url\":\"https://api.github.com/users/j2h30728/followers\",\"following_url\":\"https://api.github.com/users/j2h30728/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/j2h30728/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/j2h30728/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/j2h30728/subscriptions\",\"organizations_url\":\"https://api.github.com/users/j2h30728/orgs\",\"repos_url\":\"https://api.github.com/users/j2h30728/repos\",\"events_url\":\"https://api.github.com/users/j2h30728/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/j2h30728/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018671743,\"node_id\":\"R_kgDOPLeyfw\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"j2h30728/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"j2h30728\",\"id\":60846068,\"node_id\":\"MDQ6VXNlcjYwODQ2MDY4\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/60846068?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/j2h30728\",\"html_url\":\"https://github.com/j2h30728\",\"followers_url\":\"https://api.github.com/users/j2h30728/followers\",\"following_url\":\"https://api.github.com/users/j2h30728/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/j2h30728/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/j2h30728/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/j2h30728/subscriptions\",\"organizations_url\":\"https://api.github.com/users/j2h30728/orgs\",\"repos_url\":\"https://api.github.com/users/j2h30728/repos\",\"events_url\":\"https://api.github.com/users/j2h30728/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/j2h30728/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/j2h30728/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/j2h30728/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T19:16:17Z\",\"updated_at\":\"2025-07-17T17:33:15Z\",\"pushed_at\":\"2025-07-17T19:29:59Z\",\"git_url\":\"git://github.com/j2h30728/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:j2h30728/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/j2h30728/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/j2h30728/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":192,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/55\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/55\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/55\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/55/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/55/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/55/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/a4700fd3ecba4089e3ddbe4b0d8a1c1c07ce8d31\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/56\",\"id\":2673859325,\"node_id\":\"PR_kwDOPJuWzM6fX9r9\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/56\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/56.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/56.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/56\",\"number\":56,\"state\":\"open\",\"locked\":false,\"title\":\"[4팀 김수민] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"nimusmix\",\"id\":109320569,\"node_id\":\"U_kgDOBoQZeQ\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/109320569?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/nimusmix\",\"html_url\":\"https://github.com/nimusmix\",\"followers_url\":\"https://api.github.com/users/nimusmix/followers\",\"following_url\":\"https://api.github.com/users/nimusmix/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/nimusmix/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/nimusmix/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/nimusmix/subscriptions\",\"organizations_url\":\"https://api.github.com/users/nimusmix/orgs\",\"repos_url\":\"https://api.github.com/users/nimusmix/repos\",\"events_url\":\"https://api.github.com/users/nimusmix/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/nimusmix/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://nimusmix.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n면접 단골 질문~~ 가상 돔~~ 직접 만들어볼 기회가 생길 줄 몰랐어요!\\r\\n사실 지난 주 과제에 지쳐서 이번 주에는 컴퓨터 앞에 앉기가 두려웠는데요(..)\\r\\n막상 과제를 시작하니 가상 돔이 어떤 과정을 통해 동작하는지,\\r\\n그 안에서 함수들은 어떤 역할을 하고 있는지 알아가는 게 정말 재밌었습니다!\\r\\n\\r\\n\\r\\n### 기술적 성장\\r\\n**Boolean attribute**\\r\\nBoolean attribute는 setAttribute로 할당하지 않고 DOM 프로퍼티에 직접 할당해야 한다는 사실을 알게 되었습니다.\\r\\n`el.checked = true/false`, `el.selected = true/false` 식으로 처리해야 실제 요소의 상태가 즉시 반영되고,\\r\\nremoveAttribute로 완전히 제거할 수 있어 렌더링과 자바스크립트 로직이 완전히 일치한다는 것을 알게 되었습니다.\\r\\n\\r\\n(질문)\\r\\n언젠가 실무에서 `<div readOnly></div>` 이런 식으로 코드를 짠 적이 있어요.\\r\\n그 때 사수가 `readOnly={true}` 이렇게 항상 명시해주는 게 좋다고 말씀해주셨어요.\\r\\n어.. 그런데 오늘 보니까 어떤 의도로 그렇게 말씀하신 건지 잘 이해가 안 갑니다..!!!\\r\\n\\r\\n**WeakMap**\\r\\neventManager에서 event를 저장하기 위한 자료구조로 WeakMap을 사용했습니다.\\r\\n객체가 메모리에서 없어지면 자동으로 가비지 컬렉션이 된다는 점이 흥미로웠어요.\\r\\n특히 dom에서 사라지면 unmount 되기 때문에 딱 맞는 자료구조라고 생각했습니다.\\r\\n적절한 자료구조를 쓰는 것만으로 손으로 쓰는 코드를 얼마나 줄일 수 있던지!\\r\\n자료구조의 중요성에 대해 알 수 있었던 시간이었습니다. ><\\r\\n\\r\\n**가상 돔 동작 과정**\\r\\n`createVNode`, `normalizeVNode` 등 각 함수들이 어떤 역할을 하는지 알 수 있었습니다.\\r\\n그 과정에서 몇 가지 의문이 생기기도 했는데요. 그 질문들은 아래와 같았습니다!\\r\\n\\r\\n1 . createVNode에서 왜 자식을 평탄화(flatten)해야 하지? 어떤 경우에 중첩되는 거지?\\r\\n-> 아래와 같은 경우가 흔하게 발생한다!\\r\\n```javascript\\r\\n<div>\\r\\n  {selecetedItems.map((item) => <div>{item}</div>}\\r\\n  {unselectedItems.map((item) => <div>{item}</div>}\\r\\n</div>\\r\\n```\\r\\n이 경우 평탄화하지 않는다면 vNode.children에 중첩 배열이 생기고, 이후에 재귀적으로 순회하거나 비교하기 어려워진다.\\r\\n그래서 children.flat(Infinity)로 평탄화해서 한 번에 처리 가능한 배열로 만들어줘야 한다.\\r\\n\\r\\n2. createVNode를 거쳤다면 전부 객체일 텐데, normalizeVNode에서 왜 객체가 아닌 타입에 대한 처리를 해줘야 하지?\\r\\n-> createVNode를 거치지 않고 직접 값이 들어오는 경우가 있다.\\r\\n```javascript\\r\\n<div>\\r\\n  Hello\\r\\n  <span>World</span>\\r\\n</div>\\r\\n```\\r\\n위 코드는 결국 `createVNode('div', null, 'Hello', createVNode('span', null, 'World'))`으로 파싱되기 때문에,\\r\\nchildren 배열에 'Hello' 같은 순수 문자열이 들어올 수 있다.\\r\\n\\r\\n또한, 사용자 정의 컴포넌트가 반환하는 값이 string, number, null일 수도 있다.\\r\\n```javascript\\r\\nfunction MyComponent() {\\r\\n  return \\\"Hello world\\\";\\r\\n}\\r\\n```\\r\\n\\r\\n### 코드 품질\\r\\n1. 조건 분기 시 typeof 나 복잡한 null 체크 대신, isNil, isBoolean, isArray 등의 의미가 명확한 헬퍼 함수를 사용했습니다.\\r\\n- 덕분에 normalizeVNode 내부의 로직이 한눈에 읽히는 선언형 스타일로 바뀌어 가독성이 크게 향상되었습니다.\\r\\n\\r\\n```javascript\\r\\nexport function normalizeVNode(vNode) {\\r\\n  if (isNil(vNode) || isBoolean(vNode)) {\\r\\n    return \\\"\\\";\\r\\n  }\\r\\n\\r\\n  if (isString(vNode) || isNumber(vNode)) {\\r\\n    return vNode.toString();\\r\\n  }\\r\\n\\r\\n  if (isArray(vNode)) {\\r\\n    return vNode.map(normalizeVNode).filter((v) => !isEmptyString(v));\\r\\n  }\\r\\n\\r\\n  if (isFunction(vNode.type)) {\\r\\n    const props = { ...(vNode.props ?? {}), children: normalizeChildren(vNode.children) };\\r\\n    return normalizeVNode(vNode.type(props));\\r\\n  }\\r\\n\\r\\n  return {\\r\\n    ...vNode,\\r\\n    children: normalizeChildren(vNode.children),\\r\\n  };\\r\\n}\\r\\n```\\r\\n\\r\\n2. 단일 책임 원칙을 적용해 각 함수가 하나의 일만 하도록 분리했습니다.\\r\\n- setAttributes: 필요한 속성을 추가하거나 수정\\r\\n- removeAttributes: 더 이상 필요 없는 속성을 제거\\r\\n- 이로 인해 코드의 가독성이 높아졌고, 이후 유지보수나 리팩토링이 쉬워졌습니다.\\r\\n\\r\\n```javascript\\r\\nconst updateAttributes = (target, originNewProps, originOldProps) => {\\r\\n  const newProps = originNewProps || {};\\r\\n  const oldProps = originOldProps || {};\\r\\n\\r\\n  setAttributes(target, newProps, oldProps);\\r\\n  removeAttributes(target, newProps, oldProps);\\r\\n};\\r\\n\\r\\nconst setAttributes = (target, newProps, oldProps) => {\\r\\n  for (const [key, newValue] of Object.entries(newProps)) {\\r\\n    const oldValue = oldProps[key];\\r\\n    if (newValue === oldValue) continue;\\r\\n\\r\\n...중략...\\r\\n};\\r\\n\\r\\nconst removeAttributes = (target, newProps, oldProps) => {\\r\\n  for (const key in oldProps) {\\r\\n    if (key in newProps) continue;\\r\\n\\r\\n...중략...\\r\\n\\r\\n    target.removeAttribute(key);\\r\\n  }\\r\\n};\\r\\n```\\r\\n\\r\\n3. updateChildren 최적화\\r\\n- minLength를 기준으로 newChildren과 oldChildren의 공통 구간에서만 children을 update하고,\\r\\n- 이후 남은 부분은 삽입/제거로 분리했습니다.\\r\\n- 불필요한 연산을 줄이고, 가독성을 높일 수 있었습니다.\\r\\n\\r\\n\\r\\n### 학습 효과 분석\\r\\n이렇게 바닐라 자바스크립트로 가상 돔을 만들어 보니까, 과정을 이해하면 다 논리적으로 이해가 되는구나~ 깨닫게 됐어요\\r\\n면접 질문에 대한 답을 달달 외우기 보다 이렇게 공부하면 좋겠다!는 생각이 들었습니다.\\r\\n\\r\\n\\r\\n### 과제 피드백\\r\\n이번 과제는 구조적으로 틀이 짜져 있어서 너무나 마음이 편안했습니다..!!\\r\\n과제 제출이 4시간 남은 시점에 PR을 쓰면서 이런 말 웃기긴 하지만(ㅋㅋ)\\r\\n선택 과제로 좀 더 deep한 주제가 주어졌어도 좋을 것 같아요.\\r\\n\\r\\n회사 사람한테 자바스크립트로 가상 돔 만든다고 하니까\\r\\nReconciliation 구현하는 게 어려울 거다, 제약 조건(예를 들면 react의 key) 같은 것을 두는 게 편할 거다\\r\\n라고 이야기해서 좀 긴장했는데\\r\\n그 부분을 경험하지 못해서 좋으면서 아쉬우면서 다행이면서 궁금합니다!\\r\\n(물론 난이도가 엄청 높다고 들었어요! 나왔으면 울었을지도 흑흑)\\r\\n\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n1. (질문) eventManager에서 각 eventType에 대해 handler를 여러 개 걸 수 있어야 할까요?\\r\\n바닐라 자바스크립트로 가능한 것은 알고 있습니다만, 리액트의 경우에는 한 이벤트에 여러 개의 handler가 전달되지는 않으니..\\r\\n이번 과제에서도 하나만 받게 했다가 remove 시 handler를 쓸 데가 없어서 (..) 수정했었습니다!\\r\\n```javascript\\r\\nexport function addEvent(element, eventType, handler) {\\r\\n  if (!eventStore.has(element)) {\\r\\n    eventStore.set(element, new Map());\\r\\n  }\\r\\n\\r\\n  const eventMap = eventStore.get(element);\\r\\n  if (!eventMap.has(eventType)) {\\r\\n    eventMap.set(eventType, new Set());\\r\\n  }\\r\\n\\r\\n  eventMap.get(eventType).add(handler);\\r\\n  eventTypes.add(eventType);\\r\\n}\\r\\n```\\r\\n\\r\\n2. eventManager에서 eventTypes를 전역으로 저장해두고 add해서 쓰고 있는데,\\r\\n다른 친구들 코드를 보니 미리 constant로 선언해두고 쓰는 경우가 많더라구요.\\r\\nconstant로 선언해두고 써도 Array의 크기가 크지 않아 메모리, 연산 측면에서도 유의미한 차이는 나지 않을 거라고 생각하는데,\\r\\n이런 경우에는 그냥 아무거나 (!!) 쓰면 될까요?\\r\\n```javascript\\r\\nconst eventTypes = new Set();\\r\\n\\r\\n...중략...\\r\\n  eventTypes.add(eventType);\\r\\n```\",\"created_at\":\"2025-07-17T12:43:39Z\",\"updated_at\":\"2025-07-19T08:20:02Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"9edf57ce5f30a327cb724083b83b932984cd048e\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/56/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/56/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/56/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/9870452229fec792c1e500571ecc50ce941dc8d2\",\"head\":{\"label\":\"nimusmix:main\",\"ref\":\"main\",\"sha\":\"9870452229fec792c1e500571ecc50ce941dc8d2\",\"user\":{\"login\":\"nimusmix\",\"id\":109320569,\"node_id\":\"U_kgDOBoQZeQ\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/109320569?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/nimusmix\",\"html_url\":\"https://github.com/nimusmix\",\"followers_url\":\"https://api.github.com/users/nimusmix/followers\",\"following_url\":\"https://api.github.com/users/nimusmix/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/nimusmix/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/nimusmix/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/nimusmix/subscriptions\",\"organizations_url\":\"https://api.github.com/users/nimusmix/orgs\",\"repos_url\":\"https://api.github.com/users/nimusmix/repos\",\"events_url\":\"https://api.github.com/users/nimusmix/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/nimusmix/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019072898,\"node_id\":\"R_kgDOPL3Rgg\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"nimusmix/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"nimusmix\",\"id\":109320569,\"node_id\":\"U_kgDOBoQZeQ\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/109320569?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/nimusmix\",\"html_url\":\"https://github.com/nimusmix\",\"followers_url\":\"https://api.github.com/users/nimusmix/followers\",\"following_url\":\"https://api.github.com/users/nimusmix/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/nimusmix/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/nimusmix/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/nimusmix/subscriptions\",\"organizations_url\":\"https://api.github.com/users/nimusmix/orgs\",\"repos_url\":\"https://api.github.com/users/nimusmix/repos\",\"events_url\":\"https://api.github.com/users/nimusmix/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/nimusmix/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/nimusmix/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/nimusmix/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T17:16:39Z\",\"updated_at\":\"2025-07-17T18:50:50Z\",\"pushed_at\":\"2025-07-17T18:50:47Z\",\"git_url\":\"git://github.com/nimusmix/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:nimusmix/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/nimusmix/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/nimusmix/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":175,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/56\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/56\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/56\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/56/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/56/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/56/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/9870452229fec792c1e500571ecc50ce941dc8d2\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/57\",\"id\":2673872666,\"node_id\":\"PR_kwDOPJuWzM6fYA8a\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/57\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/57.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/57.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/57\",\"number\":57,\"state\":\"open\",\"locked\":false,\"title\":\"[7팀 박의근] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"adds-bug\",\"id\":152849151,\"node_id\":\"U_kgDOCRxK_w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/152849151?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/adds-bug\",\"html_url\":\"https://github.com/adds-bug\",\"followers_url\":\"https://api.github.com/users/adds-bug/followers\",\"following_url\":\"https://api.github.com/users/adds-bug/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/adds-bug/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/adds-bug/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/adds-bug/subscriptions\",\"organizations_url\":\"https://api.github.com/users/adds-bug/orgs\",\"repos_url\":\"https://api.github.com/users/adds-bug/repos\",\"events_url\":\"https://api.github.com/users/adds-bug/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/adds-bug/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\nhttps://adds-bug.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [ ] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [ ] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [ ] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [ ] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [ ] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n- 문제 이해를 위한 학습에 충분한 시간을 할애했고, 그래서 문제 해결 과정이 (1주차에 비해) 매끄러웠다.\\r\\n- 시간 관리에 더 신경써야한다. 학습 과정의 비율이 너무 높아서, 코드로서 문제를 직접 다루는 시간이 적었다.\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n- 가상 Dom 생성 과정을 직접 확인함\\r\\n- 디바운스, 스로틀링 개념에 대한 학습\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n- 가상 돔이 무적의 치트키가 아닐 수 있다는 점을 고려해야 함 -> 회사 직원분들을 위한 아고라 페이지를 React를 사용하여 만든 것은 적절한 선택이 아니었다는 생각을 하게 됨\\r\\n- 추후 이번 주차 심화 과제 해결에 다시 도전해서 Diff 알고리즘을 더 이해해보고자 함\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n저는 주어진 시간 안에 과제를 해결해야 할 때,\\r\\n관련된 개념이나 기술에 대한 학습에 너무 많은 시간을 쓰는 경향이 있는 것 같습니다.\\r\\n\\r\\n이번에도 금요일이 마감이었는데,\\r\\n수요일까지는 제공해주신 학습 자료를 기반으로 필요하다고 느낀 개념들을 확인하는 데 집중했고,\\r\\n실제 구현은 목요일부터 시작하게 됐습니다.\\r\\n\\r\\n사실 이런 패턴은 이번 과제뿐 아니라 실무를 할 때도 반복되는 것 같습니다.\\r\\n관련 내용을 충분히 이해하고 싶다는 마음이 앞서다 보니,\\r\\n정작 구현에는 상대적으로 늦게 착수하게 되고, 결국 시간에 쫓기게 되며\\r\\n‘조금 더 일찍 손을 대볼 걸’ 하는 아쉬움이 늘 남습니다.\\r\\n\\r\\n물론 기반 지식을 쌓는 건 중요하지만,\\r\\n혹시 실제 해결 단계로 들어가는 데 막연한 부담감이나 두려움 때문에\\r\\n상대적으로 편한 학습에 머무르고 있었던 건 아닐까, 스스로 의문이 들었습니다.\\r\\n\\r\\n혹시 멘토님도 예전에 비슷한 경험이 있으셨는지,\\r\\n그리고 이런 스타일은 개선이 필요한 부분인지 궁금합니다.\\r\\n좀 더 저돌적으로 코딩을 시작해보는 연습이 필요한 걸까요?\\r\\n\\r\\n같은 맥락에서, 멘토님은 시간이 촉박한 과제를 진행하실 때\\r\\n관련 개념 학습과 구현 사이의 균형을 어떻게 잡으시는지도 듣고 싶습니다.\\r\\n먼저 손을 움직여 보면서 감을 잡는 식으로 가시는지,\\r\\n아니면 기본을 먼저 정리하고 시작하시는지도요.\\r\\n효율적인 실행 루틴이나 판단 기준이 있다면 조언 부탁드립니다.\",\"created_at\":\"2025-07-17T12:48:34Z\",\"updated_at\":\"2025-07-17T23:58:21Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"74cf9091d47ffe59bb4de8c73161ef6cb3583803\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/57/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/57/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/57/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/cd92895b3a260df18a14df7d3d581377d0b26493\",\"head\":{\"label\":\"adds-bug:main\",\"ref\":\"main\",\"sha\":\"cd92895b3a260df18a14df7d3d581377d0b26493\",\"user\":{\"login\":\"adds-bug\",\"id\":152849151,\"node_id\":\"U_kgDOCRxK_w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/152849151?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/adds-bug\",\"html_url\":\"https://github.com/adds-bug\",\"followers_url\":\"https://api.github.com/users/adds-bug/followers\",\"following_url\":\"https://api.github.com/users/adds-bug/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/adds-bug/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/adds-bug/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/adds-bug/subscriptions\",\"organizations_url\":\"https://api.github.com/users/adds-bug/orgs\",\"repos_url\":\"https://api.github.com/users/adds-bug/repos\",\"events_url\":\"https://api.github.com/users/adds-bug/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/adds-bug/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1021444376,\"node_id\":\"R_kgDOPOIBGA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"adds-bug/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"adds-bug\",\"id\":152849151,\"node_id\":\"U_kgDOCRxK_w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/152849151?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/adds-bug\",\"html_url\":\"https://github.com/adds-bug\",\"followers_url\":\"https://api.github.com/users/adds-bug/followers\",\"following_url\":\"https://api.github.com/users/adds-bug/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/adds-bug/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/adds-bug/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/adds-bug/subscriptions\",\"organizations_url\":\"https://api.github.com/users/adds-bug/orgs\",\"repos_url\":\"https://api.github.com/users/adds-bug/repos\",\"events_url\":\"https://api.github.com/users/adds-bug/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/adds-bug/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/adds-bug/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/adds-bug/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-17T12:04:12Z\",\"updated_at\":\"2025-07-17T14:06:41Z\",\"pushed_at\":\"2025-07-17T14:10:32Z\",\"git_url\":\"git://github.com/adds-bug/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:adds-bug/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/adds-bug/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/adds-bug/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":278,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/57\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/57\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/57\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/57/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/57/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/57/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/cd92895b3a260df18a14df7d3d581377d0b26493\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/58\",\"id\":2673879592,\"node_id\":\"PR_kwDOPJuWzM6fYCoo\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/58\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/58.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/58.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/58\",\"number\":58,\"state\":\"open\",\"locked\":false,\"title\":\"[3팀 이정우] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"JungWoo0203\",\"id\":102477444,\"node_id\":\"U_kgDOBhuuhA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/102477444?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JungWoo0203\",\"html_url\":\"https://github.com/JungWoo0203\",\"followers_url\":\"https://api.github.com/users/JungWoo0203/followers\",\"following_url\":\"https://api.github.com/users/JungWoo0203/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JungWoo0203/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JungWoo0203/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JungWoo0203/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JungWoo0203/orgs\",\"repos_url\":\"https://api.github.com/users/JungWoo0203/repos\",\"events_url\":\"https://api.github.com/users/JungWoo0203/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JungWoo0203/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://jungwoo0203.github.io/front_6th_chapter1-2/\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-17T12:51:01Z\",\"updated_at\":\"2025-07-19T08:01:44Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"e493775a16196412ef2f23e8cc9ebb1847a6592e\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/58/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/58/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/58/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/be7bfa6d7328129be43c7eb813acbf6667e00a59\",\"head\":{\"label\":\"JungWoo0203:main\",\"ref\":\"main\",\"sha\":\"be7bfa6d7328129be43c7eb813acbf6667e00a59\",\"user\":{\"login\":\"JungWoo0203\",\"id\":102477444,\"node_id\":\"U_kgDOBhuuhA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/102477444?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JungWoo0203\",\"html_url\":\"https://github.com/JungWoo0203\",\"followers_url\":\"https://api.github.com/users/JungWoo0203/followers\",\"following_url\":\"https://api.github.com/users/JungWoo0203/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JungWoo0203/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JungWoo0203/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JungWoo0203/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JungWoo0203/orgs\",\"repos_url\":\"https://api.github.com/users/JungWoo0203/repos\",\"events_url\":\"https://api.github.com/users/JungWoo0203/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JungWoo0203/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019038422,\"node_id\":\"R_kgDOPL1K1g\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"JungWoo0203/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"JungWoo0203\",\"id\":102477444,\"node_id\":\"U_kgDOBhuuhA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/102477444?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JungWoo0203\",\"html_url\":\"https://github.com/JungWoo0203\",\"followers_url\":\"https://api.github.com/users/JungWoo0203/followers\",\"following_url\":\"https://api.github.com/users/JungWoo0203/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JungWoo0203/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JungWoo0203/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JungWoo0203/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JungWoo0203/orgs\",\"repos_url\":\"https://api.github.com/users/JungWoo0203/repos\",\"events_url\":\"https://api.github.com/users/JungWoo0203/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JungWoo0203/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/JungWoo0203/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/JungWoo0203/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T15:51:05Z\",\"updated_at\":\"2025-07-17T19:47:45Z\",\"pushed_at\":\"2025-07-17T19:48:20Z\",\"git_url\":\"git://github.com/JungWoo0203/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:JungWoo0203/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/JungWoo0203/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/JungWoo0203/front_6th_chapter1-2\",\"homepage\":\"https://jungwoo0203.github.io/front_6th_chapter1-2/\",\"size\":207,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/58\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/58\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/58\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/58/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/58/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/58/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/be7bfa6d7328129be43c7eb813acbf6667e00a59\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/59\",\"id\":2673884786,\"node_id\":\"PR_kwDOPJuWzM6fYD5y\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/59\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/59.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/59.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/59\",\"number\":59,\"state\":\"open\",\"locked\":false,\"title\":\"[3팀 장루빈] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"JangRuBin2\",\"id\":124133863,\"node_id\":\"U_kgDOB2Yh5w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/124133863?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JangRuBin2\",\"html_url\":\"https://github.com/JangRuBin2\",\"followers_url\":\"https://api.github.com/users/JangRuBin2/followers\",\"following_url\":\"https://api.github.com/users/JangRuBin2/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JangRuBin2/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JangRuBin2/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JangRuBin2/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JangRuBin2/orgs\",\"repos_url\":\"https://api.github.com/users/JangRuBin2/repos\",\"events_url\":\"https://api.github.com/users/JangRuBin2/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JangRuBin2/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://jangrubin2.github.io/front_6th_chapter1-2/\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [ ] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [ ] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [ ] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [ ] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [ ] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [ ] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\nreact를 사용하지 않고 virtual node를 만들어내고 그것을 DOM요소로 생성하는 과정에서\\r\\n직접 불편함을 느끼며 왜 리액트가 만들어졌는지 알 수 있었습니다.\\r\\n\\r\\n### 기술적 성장\\r\\nvirtual node를 생성할 때 children이 중첩 배열로 넘어오는 경우가 많은데 그것을 평탄화해주고\\r\\nVNode를 렌더러가 처리하기 쉽게 일관된 형태로 변환해야한다는 사실을 알게됨\\r\\n대부분 로직이 정규화를 거치고 falsy값 제거하고의 반복이었다.\\r\\n\\r\\n```javascript\\r\\n\\r\\nfunction updateAttributes($el, props) {\\r\\n  if (!props) return;\\r\\n  Object.entries(props).forEach(([key, value]) => {\\r\\n    if (key === \\\"className\\\") {\\r\\n      $el.setAttribute(\\\"class\\\", value);\\r\\n    } else if (key.startsWith(\\\"data-\\\")) {\\r\\n      $el.setAttribute(key, value);\\r\\n    } else if (key.startsWith(\\\"on\\\")) {\\r\\n      addEvent($el, key.slice(2).toLowerCase(), value);\\r\\n    } else if (key === \\\"selected\\\" && $el.tagName === \\\"OPTION\\\") {\\r\\n      $el.selected = !!value;\\r\\n      return;\\r\\n    } else if ([\\\"checked\\\", \\\"disabled\\\", \\\"readOnly\\\"].includes(key)) {\\r\\n      $el[key] = !!value;\\r\\n      if (value) {\\r\\n        $el.setAttribute(key, \\\"\\\");\\r\\n      }\\r\\n      return;\\r\\n    } else {\\r\\n      $el.setAttribute(key, value);\\r\\n    }\\r\\n  });\\r\\n}\\r\\n\\r\\n``` \\r\\nupdateAttributes 함수에서 매번 이렇게 조건문 추가해줘야하는건가요? 다른 방법이 있는지 궁금하네요\\r\\n\\r\\n### 코드 품질\\r\\n```javascript\\r\\nconst eventTypes = [];\\r\\nconst elementMap = new Map();\\r\\n\\r\\n// 실제 이벤트 발생\\r\\nconst handleEvent = (e) => {\\r\\n  const handlerMap = elementMap.get(e.target);\\r\\n  const handler = handlerMap?.get(e.type);\\r\\n  // 실행\\r\\n  if (handler) handler.call(e.target, e);\\r\\n};\\r\\n\\r\\nexport function setupEventListeners(root) {\\r\\n  eventTypes.forEach((eventType) => {\\r\\n    root.addEventListener(eventType, handleEvent);\\r\\n  });\\r\\n}\\r\\n\\r\\nexport function addEvent(element, eventType, handler) {\\r\\n  if (!eventTypes.includes(eventType)) eventTypes.push(eventType);\\r\\n  const handlerMap = elementMap.get(element) || new Map();\\r\\n  if (handlerMap.get(eventType) === handler) return;\\r\\n  handlerMap.set(eventType, handler);\\r\\n  elementMap.set(element, handlerMap);\\r\\n}\\r\\n\\r\\nexport function removeEvent(element, eventType, handler) {\\r\\n  const handlerMap = elementMap.get(element);\\r\\n  if (!handlerMap) return;\\r\\n\\r\\n  if (handlerMap.get(eventType) === handler) handlerMap.delete(eventType);\\r\\n\\r\\n  if (handlerMap.size === 0) elementMap.delete(element);\\r\\n  else elementMap.set(element, handlerMap);\\r\\n}\\r\\n``` \\r\\n이벤트 위임 기반의 이벤트 관리 시스템 구현\\r\\n이벤트를 중복해서 생성하면 안되기 때문에 html element, 이벤트 타입을 각각 키로둬서 중첩\\r\\n문제점을 찾아보니 위와 같이 map으로 구현하면 메모리 누수 위험이 있다고 들었습니다. elementMap이 Map이라서\\r\\nDOM이 제거돼도 강하게 참조되기 때문이라는데 weak map을 사용하면 해결될 문제일까요?\\r\\n\\r\\n### 학습 효과 분석\\r\\nvirtual DOM을 직접 만들고 리액트의 기본원리에 대해 깊게 탐구할 수 있었다.\\r\\n실무에서 적용할 일이 있을까...? 하지만 준일 코치님이 말씀하신대로 리액트를 사용하지 못하는 상황에서 \\r\\n유용하게 쓸 수 있을듯 하다\\r\\n\\r\\n### 과제 피드백\\r\\n이걸 과연 현업에서 쓸 수 있을까...?\\r\\n과제를 하면서 좋았던 부분은 이런 과제를 하지 않았으면 가상돔에 대해서 평생 뜯어보지 않았을 것 같다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\neventManager의 전반적인 내용에 대한 피드백을 원합니다.\\r\\nweakMap을 사용하는 것 외에 문제가 될만한 부분이나 방식이 적절한지에 대해 의구심이듭니다.\\r\\n\\r\\n\",\"created_at\":\"2025-07-17T12:52:39Z\",\"updated_at\":\"2025-07-19T08:16:37Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"3075185a7fe79e989f19bcbfc240e383bca42f82\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/59/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/59/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/59/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/628f5e6ef533aa9071ec4cd3735a5a5e030815dd\",\"head\":{\"label\":\"JangRuBin2:main\",\"ref\":\"main\",\"sha\":\"628f5e6ef533aa9071ec4cd3735a5a5e030815dd\",\"user\":{\"login\":\"JangRuBin2\",\"id\":124133863,\"node_id\":\"U_kgDOB2Yh5w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/124133863?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JangRuBin2\",\"html_url\":\"https://github.com/JangRuBin2\",\"followers_url\":\"https://api.github.com/users/JangRuBin2/followers\",\"following_url\":\"https://api.github.com/users/JangRuBin2/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JangRuBin2/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JangRuBin2/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JangRuBin2/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JangRuBin2/orgs\",\"repos_url\":\"https://api.github.com/users/JangRuBin2/repos\",\"events_url\":\"https://api.github.com/users/JangRuBin2/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JangRuBin2/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1019479741,\"node_id\":\"R_kgDOPMQGvQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"JangRuBin2/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"JangRuBin2\",\"id\":124133863,\"node_id\":\"U_kgDOB2Yh5w\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/124133863?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/JangRuBin2\",\"html_url\":\"https://github.com/JangRuBin2\",\"followers_url\":\"https://api.github.com/users/JangRuBin2/followers\",\"following_url\":\"https://api.github.com/users/JangRuBin2/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/JangRuBin2/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/JangRuBin2/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/JangRuBin2/subscriptions\",\"organizations_url\":\"https://api.github.com/users/JangRuBin2/orgs\",\"repos_url\":\"https://api.github.com/users/JangRuBin2/repos\",\"events_url\":\"https://api.github.com/users/JangRuBin2/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/JangRuBin2/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/JangRuBin2/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/JangRuBin2/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-14T11:44:09Z\",\"updated_at\":\"2025-07-17T17:44:30Z\",\"pushed_at\":\"2025-07-17T17:44:26Z\",\"git_url\":\"git://github.com/JangRuBin2/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:JangRuBin2/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/JangRuBin2/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/JangRuBin2/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":278,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":true,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/59\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/59\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/59\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/59/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/59/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/59/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/628f5e6ef533aa9071ec4cd3735a5a5e030815dd\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/60\",\"id\":2674294964,\"node_id\":\"PR_kwDOPJuWzM6fZoC0\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/60\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/60.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/60.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/60\",\"number\":60,\"state\":\"open\",\"locked\":false,\"title\":\"[4팀 오하늘] Chapter 1-2. 프레임워크 없이 SPA 만들기 \",\"user\":{\"login\":\"eveneul\",\"id\":99119406,\"node_id\":\"U_kgDOBehxLg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/99119406?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/eveneul\",\"html_url\":\"https://github.com/eveneul\",\"followers_url\":\"https://api.github.com/users/eveneul/followers\",\"following_url\":\"https://api.github.com/users/eveneul/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/eveneul/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/eveneul/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/eveneul/subscriptions\",\"organizations_url\":\"https://api.github.com/users/eveneul/orgs\",\"repos_url\":\"https://api.github.com/users/eveneul/repos\",\"events_url\":\"https://api.github.com/users/eveneul/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/eveneul/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### [배포 링크](https://eveneul.github.io/front_6th_chapter1-2/)\\r\\nhttps://eveneul.github.io/front_6th_chapter1-2/\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n🗺️ `map` VS `Weakmap`\\r\\n- 과제를 시작하기 전, 학습메이트분께서 어디에선가 `Weakmap`을 사용할 일이 있다고 힌트를 주셨는데, eventManager.js 구현에 필요하다는 것을 알게 되었습니다.\\r\\n- 처음 접하는 `Weakmap`에 대해 먼저 공부하고, 일반 Object와 map, 그리고 weakmap의 차이점을 먼저 습득하고 eventManager.js 구현에 나섰습니다.\\r\\n- 그럼, 이벤트 데이터를 어떻게 구조화하면 효율적으로 저장하고 꺼낼 수 있을까 고민하게 되었고, 문득 준일 코치님께서 이벤트 위임을 사용할 경우, 보통 최상위 엘리먼트(root container) 하나에 이벤트 리스너를 등록하고, 내부의 자식 요소들에서 발생하는 이벤트 버블링을 통하여 감지하고 처리한다라는 말씀을 하신 게 생각이 났고,\\r\\n- 이를 바탕으로 `eventType(click, blur, change...)`을 키로 삼고, `{ element, handler }` 형태로 구성해 보려고 했지만, `Weakmap`은 반복문 사용이 불가능하다는 점을 알게 되어, `map`으로 대체하게 되었습니다.\\r\\n- 최종적으로 `Map`을 기반으로 한 `eventStore`를 만들었고, 각 eventType에 대해 내부적으로 또 다른 Map을 사용해 element와 handler를 저장했습니다. \\r\\n- 이벤트 핸들러는 `Set`을 사용해 중복 등록을 방지했습니다.\\r\\n```javascript\\r\\nexport function addEvent(element, eventType, handler) {\\r\\n  if (!eventStore.has(eventType)) {\\r\\n    // 스토어에 이벤트타입이 없으면 set\\r\\n    // 내부 맵은 어떤 element에 어떤 handler가 등록되어 있는지를 저장\\r\\n    eventStore.set(eventType, new Map());\\r\\n  }\\r\\n\\r\\n  // eventStore에서 이벤트 타입에 맞는 값을 뽑아온 후\\r\\n  const elementMap = eventStore.get(eventType);\\r\\n\\r\\n  // 뽑아오려고 했는데 없으면 set\\r\\n  if (!elementMap.has(element)) {\\r\\n    // 핸들러의 중복 방지를 위해 set\\r\\n    elementMap.set(element, new Set());\\r\\n  }\\r\\n\\r\\n  elementMap.get(element).add(handler);\\r\\n}\\r\\n\\r\\nexport function removeEvent(element, eventType, handler) {\\r\\n  const elementMap = eventStore.get(eventType); // evenType\\r\\n\\r\\n  if (!elementMap) return;\\r\\n  const handlers = elementMap.get(element); // element에 맞는 handler들이 추출됨\\r\\n\\r\\n  if (!handlers) return;\\r\\n\\r\\n  // 인자로 받은 핸들러를 삭제\\r\\n  handlers.delete(handler);\\r\\n\\r\\n  if (handlers.size === 0) elementMap.delete(element); // 핸들러가 아예 없으면 (element에 등록된 이벤트가 아무것도 없으면) elementMap(eventStore)에서 삭제\\r\\n  if (elementMap.size === 0) eventStore.delete(eventType); // 이벤트 타입에 등록된 element가 아예 없으면 이벤트 타입 자체를 스토어에서 삭제\\r\\n}\\r\\n```\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n- 특히 만족스러운 구현\\r\\n```javascript\\r\\n  const newNodeChildren = Array.isArray(newNode.children) ? newNode.children : [];\\r\\n  const oldNodeChildren = Array.isArray(oldNode.children) ? oldNode.children : [];\\r\\n  const max = Math.max(newNodeChildren.length, oldNodeChildren.length);\\r\\n\\r\\n  for (let i = 0; i < max; i++) {\\r\\n    updateElement(targetElement, newNodeChildren[i], oldNodeChildren[i], i);\\r\\n  }\\r\\n```\\r\\n- `newNodeChildren`을 기준으로 비교하자니 삭제된 요소를 감지하지 못하고, `oldNodeChildren`기준으로 비교하자니 추가된 요소를 감지하지 못해서 둘 중 length가 더 긴 기준으로 비교하려고 `Math.max()`를 사용했습니다.\\r\\n- 리팩토링이 필요한 부분 + 코드 설계 관련 고민과 결정\\r\\n    - `createElement`.. 이대로 괜찮은 건가 싶습니다. if문 떡칠입니다. 한 함수에 3개 이상 if문 들어가는 거 안 좋아하는데, 여러 타입에 대응해야 하다 보니 `if문`이 많이 쓰였습니다. 클린 코드 책을 미리 읽었으면 이런 참사도 없었겠지요..\\r\\n```javascript\\r\\n  for (const [key, value] of Object.entries(props)) {\\r\\n    if (key === \\\"children\\\") continue;\\r\\n\\r\\n    if (key.startsWith(\\\"on\\\") && typeof value === \\\"function\\\") {\\r\\n      // 이벤트 처리 - 위임 방식으로 처리하므로 DOM 속성으로 설정하지 않음\\r\\n      const eventType = key.slice(2).toLowerCase();\\r\\n      addEvent($el, eventType, value);\\r\\n      continue;\\r\\n    }\\r\\n\\r\\n    if (key === \\\"style\\\") {\\r\\n      Object.assign($el.style, value);\\r\\n    }\\r\\n\\r\\n    if (key === \\\"className\\\") {\\r\\n      $el.setAttribute(\\\"class\\\", value);\\r\\n      continue;\\r\\n    }\\r\\n\\r\\n    if (booleanAttr.includes(key)) {\\r\\n      $el[key] = !!value;\\r\\n      continue;\\r\\n    }\\r\\n```\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n- DOM에서 `node`는 브라우저가 실제로 화면에 렌더링하는 요소의 최소 단위라는 것을 명확히 이해했습니다. HTML 요소, 텍스트, 주석 등 모든 DOM 구성 요소가 `Node` 객체로 표현된다는 점이 재미있었다. \\r\\n- React.js에서는 어떻게 필요한 부분만 쏙 골라서 새로운 DOM으로 변경하는 것인지 이번 과제를 통해 배웠습니다. vNode(Virtual DOM Node)를 먼저 만들고, 그것을 원본과 비교하여 변화가 생긴 부분만 실제 DOM에 반영하는 방식으로 성능을 최적화한다는 점을 배웠습니다.\\r\\n- vNode를 비교해 실제 DOM과 비교해 반영하는 과정(diff 알고리즘 등)은 아직 낯설어서 추가 학습이 필요할 것 같습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n- 이번 기회가 아니었으면 리액트가 어떤 식으로 SPA를 구성했는지, 왜 리액트에서는 기존 자바스크립트에서 무엇을 해결하고자 했는지 배웠습니다. \\r\\n- 기본 과제에는 `renderElement.js` 항목만 테스트에 있어서 `updateElement.js`는 구현 안 해도 기본 과제는 통과하는 건가? 했는데...... 마지막 두 개의 테스트에서 막혔습니다. 그리고 e2e 테스트도 `updateElement.js`가 정상적으로 구현되어야 pass가 되어서 그냥 다 구현했습니다. 😭 \\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\\r\\n- `eventManager.js`에서 저는 `new Map()`을 사용했지만, `map`이 아닌 `weakmap`을 사용한다면 어떤 구조로 작성을 했어야 할까요?\\r\\n- `weakmap`의 key는 오직 객체만 가능하고, 그 객체가 다른 곳에서 더 이상 참조되지 않으면 자동으로 가비지 컬렉션의 대상이 된다고 하지만, 반복문을 돌리지 못하는 것 때문에 구현에 어려움을 겪어 `map`을 사용했지만 다른 분들은 `weakmap`을 사용했다는 분들도 계셔서요. 코치님 같은 경우에는, 어떤 방식으로 `eventManager.js`를 구현하셨을지 궁금합니다.\",\"created_at\":\"2025-07-17T15:09:59Z\",\"updated_at\":\"2025-07-19T08:05:53Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"a3f295e127e9ce946b7d6f489b4d1e8a23d4acfa\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/60/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/60/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/60/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/2c0b9249320bb3fdf90797c589e781b57d200b1e\",\"head\":{\"label\":\"eveneul:main\",\"ref\":\"main\",\"sha\":\"2c0b9249320bb3fdf90797c589e781b57d200b1e\",\"user\":{\"login\":\"eveneul\",\"id\":99119406,\"node_id\":\"U_kgDOBehxLg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/99119406?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/eveneul\",\"html_url\":\"https://github.com/eveneul\",\"followers_url\":\"https://api.github.com/users/eveneul/followers\",\"following_url\":\"https://api.github.com/users/eveneul/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/eveneul/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/eveneul/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/eveneul/subscriptions\",\"organizations_url\":\"https://api.github.com/users/eveneul/orgs\",\"repos_url\":\"https://api.github.com/users/eveneul/repos\",\"events_url\":\"https://api.github.com/users/eveneul/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/eveneul/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018402301,\"node_id\":\"R_kgDOPLOV_Q\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"eveneul/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"eveneul\",\"id\":99119406,\"node_id\":\"U_kgDOBehxLg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/99119406?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/eveneul\",\"html_url\":\"https://github.com/eveneul\",\"followers_url\":\"https://api.github.com/users/eveneul/followers\",\"following_url\":\"https://api.github.com/users/eveneul/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/eveneul/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/eveneul/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/eveneul/subscriptions\",\"organizations_url\":\"https://api.github.com/users/eveneul/orgs\",\"repos_url\":\"https://api.github.com/users/eveneul/repos\",\"events_url\":\"https://api.github.com/users/eveneul/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/eveneul/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/eveneul/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/eveneul/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T07:20:57Z\",\"updated_at\":\"2025-07-17T19:29:07Z\",\"pushed_at\":\"2025-07-17T19:29:03Z\",\"git_url\":\"git://github.com/eveneul/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:eveneul/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/eveneul/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/eveneul/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":212,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/60\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/60\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/60\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/60/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/60/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/60/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/2c0b9249320bb3fdf90797c589e781b57d200b1e\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/61\",\"id\":2674435952,\"node_id\":\"PR_kwDOPJuWzM6faKdw\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/61\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/61.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/61.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/61\",\"number\":61,\"state\":\"open\",\"locked\":false,\"title\":\"[4팀 김지혜] Chapter 1-2. 프레임워크 없이 SPA 만들기\",\"user\":{\"login\":\"adds9810\",\"id\":46422329,\"node_id\":\"MDQ6VXNlcjQ2NDIyMzI5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/46422329?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/adds9810\",\"html_url\":\"https://github.com/adds9810\",\"followers_url\":\"https://api.github.com/users/adds9810/followers\",\"following_url\":\"https://api.github.com/users/adds9810/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/adds9810/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/adds9810/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/adds9810/subscriptions\",\"organizations_url\":\"https://api.github.com/users/adds9810/orgs\",\"repos_url\":\"https://api.github.com/users/adds9810/repos\",\"events_url\":\"https://api.github.com/users/adds9810/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/adds9810/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n[https://adds9810.github.io/front_6th_chapter1-2/](https://adds9810.github.io/front_6th_chapter1-2/)\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n이번 과제를 통해 웹 개발의 핵심 원리를 깊이 있게 이해할 수 있었습니다. React나 Vue 같은 프레임워크 없이 순수 JavaScript로 가상돔, 이벤트 위임, 상태 관리 등을 직접 구현해보면서 \\\"프레임워크가 내부적으로 어떻게 동작하는지\\\"를 체감할 수 있었습니다.\\r\\n처음에는 \\\"평탄화\\\", \\\"재귀적으로 표준화\\\", \\\"DocumentFragment\\\" 같은 용어들조차 몰랐는데, 이번 과제를 통해 이런 개념들을 실제로 구현해보면서 이해하게 되었습니다. 특히 가상돔의 Diff 알고리즘을 구현하면서 DOM 조작의 비용과 최적화의 중요성을 깨달았습니다.\\r\\n생소한 단어들과 그 단어들에 대한 얕은 이해도로 AI 의존을 줄이기로 했던 이전의 다짐과 다르게 더욱 많이 사용하였습니다.(바이브 코딩 수준) 직접 구현보다는 AI에게 요구사항과 테스트 항목을 주고 작업하는 과정을 보고 어떻게 작업하는지, 내가 이번에 알게된 개념들이 어떻게 사용되는지 물어보고 확인하는 시간이었습니다.\\r\\n하지만 이런 높은 AI 의존도에 대해 고민이 생겼습니다. 팀원들이 같은 수강생에게 물어보고 해결할 것을 권하던데, 다음주에는 그 방법으로 시도해보려고 합니다. AI는 빠른 해결책을 제공해주지만, 팀원들과의 소통을 통해 더 깊이 있는 이해와 다양한 관점을 얻을 수 있을 것 같습니다.\\r\\n\\r\\n### 기술적 성장\\r\\n- **가상 DOM 시스템 구현**: createVNode, normalizeVNode, createElement, updateElement 함수를 체계적으로 구현하면서 가상 DOM의 생성부터 업데이트까지 전체 생명주기를 이해할 수 있었습니다. 특히 updateElement에서 다섯 가지 케이스를 처리하는 로직을 구성하며 DOM 조작이 얼마나 복잡하고 조건 분기가 중요한 작업인지 체감했습니다.\\r\\n- **평탄화(flat) 개념 이해**: createVNode에서 children.flat(Infinity)를 사용하는 이유를 처음에는 이해하지 못했지만, JSX에서 중첩 배열이 자주 생기기 때문에 이를 평탄화해 일관된 children 배열로 만드는 전처리 과정임을 깨달았습니다.\\r\\n- **재귀적 표준화 방식 습득**: normalizeVNode 함수 내부에서 자기 자신을 다시 호출하는 재귀 구조가 처음에는 낯설고 어려웠지만, 함수형 컴포넌트를 처리하는 과정에서 필요한 핵심 구조라는 것을 이해했습니다.\\r\\n- **DocumentFragment 활용**: createElement 함수에서 children이 배열일 때 DocumentFragment를 활용해 여러 DOM 요소를 한 번에 추가하는 방법을 배웠습니다. 단순히 반복문으로 처리하는 것보다, DOM 삽입 시 리플로우를 줄이고 성능을 개선할 수 있는 효율적인 기법임을 알게 되었습니다.\\r\\n- **Map을 활용한 데이터 저장**: eventManager.js에서 Map을 사용해 이벤트 저장소를 구현하면서, 객체보다 효율적인 키-값 저장 방식을 배웠습니다. 특히 DOM 요소를 키로 사용할 때 Map의 장점을 이해할 수 있었습니다.\\r\\n- **이벤트 위임 시스템**: eventManager를 통해 이벤트 위임 패턴을 직접 구현하는 과정을 지켜보면서 이벤트 위임의 원리를 이해할 수 있었습니다. 각 요소마다 개별적으로 이벤트를 등록하는 대신, 루트 요소에서 이벤트를 위임받아 처리하는 방식으로 성능을 최적화할 수 있다는 것을 배웠습니다.\\r\\n\\r\\n### 코드 품질\\r\\n이번 과제에서는 작동하는 기능 구현에 집중한 탓에 코드 품질 측면에서는 여러 개선 지점이 있었습니다. 특히 바이브 코딩으로 빠르게 구현하면서 중복 로직, 긴 함수, 모호한 네이밍 등이 발생했고, 이는 유지보수성과 가독성을 크게 떨어뜨렸습니다.\\r\\n예를 들어 updateElement.js는 하나의 긴 메서드 안에서 다양한 조건 분기를 처리하고 있는데, 이로 인해 코드 흐름 파악이 어려워지고 테스트도 어려운 구조가 되었습니다. 기능별로 분리된 작은 함수로 쪼개거나, 각 조건을 명확히 표현하는 변수명과 함수명을 사용하는 등 클린 코드 원칙을 적용하는 노력이 필요함을 느꼈습니다.\\r\\nAI와 함께 코드를 리뷰하며 구조 개선의 중요성을 체감할 수 있었습니다. 특히 중복된 로직 제거, 이벤트 위임 방식의 정리, 조건 처리 최적화 등에서 AI가 제안한 코드가 더 간결하고 명확했습니다. 이를 통해 단순히 작동하는 코드를 넘어, 읽기 쉽고 확장 가능한 구조를 고민하는 것이 얼마나 중요한지를 다시 생각하게 되었습니다.\\r\\n또한, 코드를 처음부터 끝까지 다시 읽어보는 과정에서 “어떻게 작동하는가”가 아닌 “왜 이렇게 설계했는가”에 대한 설명이 어려운 코드가 많다는 점을 자각했습니다. 이는 구현 당시 코드 품질에 대한 기준이 부족했음을 보여주는 지점이라고 생각합니다.\\r\\n앞으로는 기능 구현과 동시에 구조적 일관성, 역할 분리, 의미 있는 네이밍, 리팩토링 가능성을 염두에 두고 작업하는 습관을 들이고자 합니다. 좋은 코드란 단순히 작동하는 것이 아니라, 타인이 읽고 이해하고 수정할 수 있는 코드라는 점을 잊지 않겠습니다. \\r\\n\\r\\n### 학습 효과 분석\\r\\n- **가장 큰 배움이 있었던 부분**: 바이브 코딩으로 빠르게 구현하면서도 가상돔 시스템의 전체 생명주기를 이해하게 되었습니다. createVNode로 가상노드 생성부터 normalizeVNode로 표준화, createElement로 실제 DOM 생성, updateElement로 업데이트까지 전체 흐름을 체계적으로 구현해보면서 프레임워크의 내부 동작 원리를 깊이 이해할 수 있었습니다.\\r\\n- **추가 학습이 필요한 영역**: 바이브 코딩으로 구현하다 보니 성능 최적화와 메모리 관리에 대한 고려가 부족했습니다. 현재 updateElement.js는 매우 길고, eventManager.js에서 이벤트 리스너 관리 시 메모리 누수 가능성과 대용량 데이터 처리 시 성능 이슈에 대한 개선이 필요합니다.\\r\\n- **실무 적용 가능성**: 바이브 코딩으로 구현했지만, 가상돔과 이벤트 위임의 기본 개념을 이해하게 되었습니다. 당장 실무에 적용하기는 어렵겠지만, 이런 기초 개념들을 알게 된 것이 앞으로 개발할 때 도움이 될 것 같습니다.\\r\\n\\r\\n### 과제 피드백\\r\\n- **과제에서 어려웠던 부분**: 가상돔의 Diff 알고리즘 이해는 했지만 구현이 어려웠습니다. 특히 updateElement에서 5가지 케이스를 모두 처리하는 로직을 구현할 때 재귀 속 재귀가 계속 이어지고, 값에 따라 분류하기가 너무 힘들었습니다. 또한, 마치 암호문 같았던 \\\"평탄화\\\", \\\"재귀적 표준화\\\", \\\"DocumentFragment\\\" 같은 개념이 없어 처음 작업에 막막했었습니다.\\r\\n- **과제에서 좋았던 부분**: 테스트 통과도 있었지만, 개념을 이해할 수 있는 과정이 있어서 좋았습니다. 바이브 코딩으로 빠르게 구현하면서도 테스트 코드를 통과시키기 위해 노력하는 과정을 경험할 수 있었고, 특히 renderElement에서 최초 렌더링과 리렌더링을 구분하여 처리하는 요구사항을 만족시키면서 성능 최적화의 중요성을 깨달았습니다.\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n- **재귀 함수 최적화**: normalizeVNode에서 함수형 컴포넌트를 처리할 때 return normalizeVNode(result);로 재귀 호출을 하는데, 만약 컴포넌트가 깊게 중첩되어 있거나 무한 루프가 발생하면 스택 오버플로우가 일어날 수 있을 것 같습니다. 현재 구현에서는 이런 예외 상황에 대한 처리가 없어서 위험할 수 있다고 생각하는데, 실제로 문제가 될 가능성이 있는지와 개선 방안이 있는지 궁금합니다.\\r\\n- **(코드외 질문)바이브 코딩 후 학습 효과 높이기**: 현재 AI 도움으로 빠르게 구현했지만 별로 남는 게 없는 것 같아서 고민입니다. 생소한 단어들을 적어두고, 구현을 다 하고 나서 요구사항이 어떻게 구현되었는지를 보는 식으로 접근했는데, 이런 방식이 효과적인지 확신이 서지 않습니다. 리뷰어님께서 비슷한 상황에 계셨다면 어떤 방식으로 학습을 진행하셨는지 궁금합니다. 이미 구현된 코드를 활용해서 학습 효과를 높일 수 있는 더 나은 방법이 있을까요?\\r\\n\",\"created_at\":\"2025-07-17T16:01:29Z\",\"updated_at\":\"2025-07-19T08:42:18Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"c9e7ea405e1af39e0381eb1a0802d1a37bd8c8fc\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/61/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/61/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/61/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/779d0725d7f56b78dcc76f5cd43222b2e4e5ffcf\",\"head\":{\"label\":\"adds9810:main\",\"ref\":\"main\",\"sha\":\"779d0725d7f56b78dcc76f5cd43222b2e4e5ffcf\",\"user\":{\"login\":\"adds9810\",\"id\":46422329,\"node_id\":\"MDQ6VXNlcjQ2NDIyMzI5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/46422329?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/adds9810\",\"html_url\":\"https://github.com/adds9810\",\"followers_url\":\"https://api.github.com/users/adds9810/followers\",\"following_url\":\"https://api.github.com/users/adds9810/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/adds9810/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/adds9810/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/adds9810/subscriptions\",\"organizations_url\":\"https://api.github.com/users/adds9810/orgs\",\"repos_url\":\"https://api.github.com/users/adds9810/repos\",\"events_url\":\"https://api.github.com/users/adds9810/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/adds9810/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018952513,\"node_id\":\"R_kgDOPLv7QQ\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"adds9810/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"adds9810\",\"id\":46422329,\"node_id\":\"MDQ6VXNlcjQ2NDIyMzI5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/46422329?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/adds9810\",\"html_url\":\"https://github.com/adds9810\",\"followers_url\":\"https://api.github.com/users/adds9810/followers\",\"following_url\":\"https://api.github.com/users/adds9810/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/adds9810/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/adds9810/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/adds9810/subscriptions\",\"organizations_url\":\"https://api.github.com/users/adds9810/orgs\",\"repos_url\":\"https://api.github.com/users/adds9810/repos\",\"events_url\":\"https://api.github.com/users/adds9810/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/adds9810/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/adds9810/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/adds9810/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-13T12:20:36Z\",\"updated_at\":\"2025-07-17T15:47:37Z\",\"pushed_at\":\"2025-07-17T17:39:33Z\",\"git_url\":\"git://github.com/adds9810/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:adds9810/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/adds9810/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/adds9810/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":245,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/61\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/61\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/61\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/61/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/61/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/61/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/779d0725d7f56b78dcc76f5cd43222b2e4e5ffcf\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/63\",\"id\":2674484375,\"node_id\":\"PR_kwDOPJuWzM6faWSX\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/63\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/63.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/63.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/63\",\"number\":63,\"state\":\"open\",\"locked\":false,\"title\":\"[4팀 이송이] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"2Estella\",\"id\":96452250,\"node_id\":\"U_kgDOBb--mg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/96452250?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/2Estella\",\"html_url\":\"https://github.com/2Estella\",\"followers_url\":\"https://api.github.com/users/2Estella/followers\",\"following_url\":\"https://api.github.com/users/2Estella/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/2Estella/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/2Estella/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/2Estella/subscriptions\",\"organizations_url\":\"https://api.github.com/users/2Estella/orgs\",\"repos_url\":\"https://api.github.com/users/2Estella/repos\",\"events_url\":\"https://api.github.com/users/2Estella/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/2Estella/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\n\\r\\n<!--\\r\\n배포 링크를 적어주세요\\r\\n예시: https://<username>.github.io/front-6th-chapter1-1/\\r\\n\\r\\n배포가 완료되지 않으면 과제를 통과할 수 없습니다.\\r\\n배포 후에 정상 작동하는지 확인해주세요.\\r\\n-->\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [x] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [x] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [x] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [x] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n오랜만에 과제해서 힘들었다. 휴!\\r\\n\\r\\n4팀 공주님들 화이팅 😘\\r\\n\\r\\n\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n\\r\\n### 기술적 성장\\r\\n<!-- 예시\\r\\n- 새로 학습한 개념\\r\\n- 기존 지식의 재발견/심화\\r\\n- 구현 과정에서의 기술적 도전과 해결\\r\\n-->\\r\\n\\r\\n### 코드 품질\\r\\n<!-- 예시\\r\\n- 특히 만족스러운 구현\\r\\n- 리팩토링이 필요한 부분\\r\\n- 코드 설계 관련 고민과 결정\\r\\n-->\\r\\n\\r\\n### 학습 효과 분석\\r\\n<!-- 예시\\r\\n- 가장 큰 배움이 있었던 부분\\r\\n- 추가 학습이 필요한 영역\\r\\n- 실무 적용 가능성\\r\\n-->\\r\\n\\r\\n### 과제 피드백\\r\\n<!-- 예시\\r\\n- 과제에서 모호하거나 애매했던 부분\\r\\n- 과제에서 좋았던 부분\\r\\n-->\\r\\n\\r\\n## 리뷰 받고 싶은 내용\\r\\n\\r\\n<!--\\r\\n피드백 받고 싶은 내용을 구체적으로 남겨주세요\\r\\n모호한 요청은 피드백을 남기기 어렵습니다.\\r\\n\\r\\n참고링크: https://chatgpt.com/share/675b6129-515c-8001-ba72-39d0fa4c7b62\\r\\n\\r\\n모호한 요청의 예시)\\r\\n- 코드 스타일에 대한 피드백 부탁드립니다.\\r\\n- 코드 구조에 대한 피드백 부탁드립니다.\\r\\n- 개념적인 오류에 대한 피드백 부탁드립니다.\\r\\n- 추가 구현이 필요한 부분에 대한 피드백 부탁드립니다.\\r\\n\\r\\n구체적인 요청의 예시)\\r\\n- 현재 함수와 변수명을 보면 직관성이 떨어지는 것 같습니다. 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언해주실 수 있나요?\\r\\n- 현재 파일 단위로 코드가 분리되어 있지만, 모듈화나 계층화가 부족한 것 같습니다. 어떤 기준으로 클래스를 분리하거나 모듈화를 진행하면 유지보수에 도움이 될까요?\\r\\n- MVC 패턴을 따르려고 했는데, 제가 구현한 구조가 MVC 원칙에 맞게 잘 구성되었는지 검토해주시고, 보완할 부분을 제안해주실 수 있을까요?\\r\\n- 컴포넌트 간의 의존성이 높아져서 테스트하기 어려운 상황입니다. 의존성을 낮추고 테스트 가능성을 높이는 구조 개선 방안이 있을까요?\\r\\n-->\\r\\n\",\"created_at\":\"2025-07-17T16:18:57Z\",\"updated_at\":\"2025-07-17T16:21:26Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"1f21745bc51c39fe45dcf19c954908fdeaa3da2a\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/63/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/63/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/63/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/7423e5f564506c5826a827671ed96317da5c4140\",\"head\":{\"label\":\"2Estella:main\",\"ref\":\"main\",\"sha\":\"7423e5f564506c5826a827671ed96317da5c4140\",\"user\":{\"login\":\"2Estella\",\"id\":96452250,\"node_id\":\"U_kgDOBb--mg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/96452250?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/2Estella\",\"html_url\":\"https://github.com/2Estella\",\"followers_url\":\"https://api.github.com/users/2Estella/followers\",\"following_url\":\"https://api.github.com/users/2Estella/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/2Estella/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/2Estella/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/2Estella/subscriptions\",\"organizations_url\":\"https://api.github.com/users/2Estella/orgs\",\"repos_url\":\"https://api.github.com/users/2Estella/repos\",\"events_url\":\"https://api.github.com/users/2Estella/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/2Estella/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1021588786,\"node_id\":\"R_kgDOPOQ1Mg\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"2Estella/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"2Estella\",\"id\":96452250,\"node_id\":\"U_kgDOBb--mg\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/96452250?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/2Estella\",\"html_url\":\"https://github.com/2Estella\",\"followers_url\":\"https://api.github.com/users/2Estella/followers\",\"following_url\":\"https://api.github.com/users/2Estella/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/2Estella/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/2Estella/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/2Estella/subscriptions\",\"organizations_url\":\"https://api.github.com/users/2Estella/orgs\",\"repos_url\":\"https://api.github.com/users/2Estella/repos\",\"events_url\":\"https://api.github.com/users/2Estella/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/2Estella/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/2Estella/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/2Estella/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-17T16:17:30Z\",\"updated_at\":\"2025-07-17T16:17:37Z\",\"pushed_at\":\"2025-07-17T16:17:32Z\",\"git_url\":\"git://github.com/2Estella/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:2Estella/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/2Estella/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/2Estella/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":277,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":false,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/63\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/63\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/63\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/63/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/63/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/63/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/7423e5f564506c5826a827671ed96317da5c4140\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null},{\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/64\",\"id\":2675109883,\"node_id\":\"PR_kwDOPJuWzM6fcu_7\",\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/64\",\"diff_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/64.diff\",\"patch_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/64.patch\",\"issue_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/64\",\"number\":64,\"state\":\"open\",\"locked\":false,\"title\":\"[2팀 이진희] Chapter 1-2. 프레임워크 없이 SPA 만들기 (2)\",\"user\":{\"login\":\"bebusl\",\"id\":49019236,\"node_id\":\"MDQ6VXNlcjQ5MDE5MjM2\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/49019236?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/bebusl\",\"html_url\":\"https://github.com/bebusl\",\"followers_url\":\"https://api.github.com/users/bebusl/followers\",\"following_url\":\"https://api.github.com/users/bebusl/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/bebusl/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/bebusl/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/bebusl/subscriptions\",\"organizations_url\":\"https://api.github.com/users/bebusl/orgs\",\"repos_url\":\"https://api.github.com/users/bebusl/repos\",\"events_url\":\"https://api.github.com/users/bebusl/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/bebusl/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"body\":\"## 과제 체크포인트\\r\\n### 배포 링크\\r\\nhttps://bebusl.github.io/front_6th_chapter1-2/\\r\\n\\r\\n\\r\\n### 기본과제\\r\\n\\r\\n#### 가상돔을 기반으로 렌더링하기\\r\\n\\r\\n- [x] createVNode 함수를 이용하여 vNode를 만든다.\\r\\n- [x] normalizeVNode 함수를 이용하여 vNode를 정규화한다.\\r\\n- [x] createElement 함수를 이용하여 vNode를 실제 DOM으로 만든다.\\r\\n- [x] 결과적으로, JSX를 실제 DOM으로 변환할 수 있도록 만들었다.\\r\\n\\r\\n#### 이벤트 위임\\r\\n\\r\\n- [x] 노드를 생성할 때 이벤트를 직접 등록하는게 아니라 이벤트 위임 방식으로 등록해야 한다\\r\\n- [x] 동적으로 추가된 요소에도 이벤트가 정상적으로 작동해야 한다\\r\\n- [x] 이벤트 핸들러가 제거되면 더 이상 호출되지 않아야 한다\\r\\n\\r\\n### 심화 과제\\r\\n\\r\\n#### Diff 알고리즘 구현\\r\\n\\r\\n- [x] 초기 렌더링이 올바르게 수행되어야 한다\\r\\n- [ ] diff 알고리즘을 통해 변경된 부분만 업데이트해야 한다\\r\\n- [ ] 새로운 요소를 추가하고 불필요한 요소를 제거해야 한다\\r\\n- [ ] 요소의 속성만 변경되었을 때 요소를 재사용해야 한다\\r\\n- [ ] 요소의 타입이 변경되었을 때 새로운 요소를 생성해야 한다\\r\\n\\r\\n## 과제 셀프회고\\r\\n\\r\\n<!-- 과제에 대한 회고를 작성해주세요 -->\\r\\n이번주 뜬금없는 코로나에 걸려 정신없이 보냈습니다;;\\r\\n심화과제는 진행하지 못했지만, 기본과제를 하면서 가상돔의 역할과 기존에 jsx가 어떻게 DOM으로 변환되는지 과정을 알 수 있어 좋은 경험이었던 것 같습니다.\\r\\n심화과제는 다음주가 시작되기 전에 꼭 한 번 해결해보고 넘어가려고 합니다.\\r\\n\\r\\n\\r\\n### 궁금한점\\r\\n저는 얼리 리턴을 매우 선호하는 편인데요,(얼리 리턴 가능한 거의 모든 상황에서 얼리 리턴을 하는 편인 것 같습니다.)\\r\\n얼리 리턴을 비선호하시는 분들도 있다고 알고 있어서요. \\r\\n코치님은 얼리 리턴을 선호하시는 편인지, 어떠한 경우에는 얼리 리턴을 쓰고 그 외 조건문으로 분기 처리하시는 지 궁금합니다.\\r\\n\\r\\n\\r\\n\",\"created_at\":\"2025-07-17T20:47:43Z\",\"updated_at\":\"2025-07-19T08:16:13Z\",\"closed_at\":null,\"merged_at\":null,\"merge_commit_sha\":\"5f6c61cea7cc3e00c35cc244ff75ec56ed921c08\",\"assignee\":null,\"assignees\":[],\"requested_reviewers\":[],\"requested_teams\":[],\"labels\":[],\"milestone\":null,\"draft\":false,\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/64/commits\",\"review_comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/64/comments\",\"review_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/64/comments\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e553ff62e596d82c3bcebfd0d2c0c6db63b9c77a\",\"head\":{\"label\":\"bebusl:main\",\"ref\":\"main\",\"sha\":\"e553ff62e596d82c3bcebfd0d2c0c6db63b9c77a\",\"user\":{\"login\":\"bebusl\",\"id\":49019236,\"node_id\":\"MDQ6VXNlcjQ5MDE5MjM2\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/49019236?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/bebusl\",\"html_url\":\"https://github.com/bebusl\",\"followers_url\":\"https://api.github.com/users/bebusl/followers\",\"following_url\":\"https://api.github.com/users/bebusl/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/bebusl/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/bebusl/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/bebusl/subscriptions\",\"organizations_url\":\"https://api.github.com/users/bebusl/orgs\",\"repos_url\":\"https://api.github.com/users/bebusl/repos\",\"events_url\":\"https://api.github.com/users/bebusl/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/bebusl/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1018345232,\"node_id\":\"R_kgDOPLK3EA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"bebusl/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"bebusl\",\"id\":49019236,\"node_id\":\"MDQ6VXNlcjQ5MDE5MjM2\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/49019236?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/bebusl\",\"html_url\":\"https://github.com/bebusl\",\"followers_url\":\"https://api.github.com/users/bebusl/followers\",\"following_url\":\"https://api.github.com/users/bebusl/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/bebusl/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/bebusl/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/bebusl/subscriptions\",\"organizations_url\":\"https://api.github.com/users/bebusl/orgs\",\"repos_url\":\"https://api.github.com/users/bebusl/repos\",\"events_url\":\"https://api.github.com/users/bebusl/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/bebusl/received_events\",\"type\":\"User\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/bebusl/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":true,\"url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/bebusl/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-12T04:27:06Z\",\"updated_at\":\"2025-07-17T23:23:25Z\",\"pushed_at\":\"2025-07-17T23:56:02Z\",\"git_url\":\"git://github.com/bebusl/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:bebusl/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/bebusl/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/bebusl/front_6th_chapter1-2\",\"homepage\":\"https://bebusl.github.io/front_6th_chapter1-2/\",\"size\":263,\"stargazers_count\":0,\"watchers_count\":0,\"language\":\"JavaScript\",\"has_issues\":false,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":0,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":0,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":0,\"open_issues\":0,\"watchers\":0,\"default_branch\":\"main\"}},\"base\":{\"label\":\"hanghae-plus:main\",\"ref\":\"main\",\"sha\":\"84c5f19fc33c1f6a5351b4860d2a5544546f4569\",\"user\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"repo\":{\"id\":1016829644,\"node_id\":\"R_kgDOPJuWzA\",\"name\":\"front_6th_chapter1-2\",\"full_name\":\"hanghae-plus/front_6th_chapter1-2\",\"private\":false,\"owner\":{\"login\":\"hanghae-plus\",\"id\":144507192,\"node_id\":\"O_kgDOCJ0BOA\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/144507192?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hanghae-plus\",\"html_url\":\"https://github.com/hanghae-plus\",\"followers_url\":\"https://api.github.com/users/hanghae-plus/followers\",\"following_url\":\"https://api.github.com/users/hanghae-plus/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hanghae-plus/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hanghae-plus/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hanghae-plus/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hanghae-plus/orgs\",\"repos_url\":\"https://api.github.com/users/hanghae-plus/repos\",\"events_url\":\"https://api.github.com/users/hanghae-plus/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hanghae-plus/received_events\",\"type\":\"Organization\",\"user_view_type\":\"public\",\"site_admin\":false},\"html_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"description\":\"항해플러스 챕터 1-2 과제: 가상돔과 이벤트 위임 시스템을 직접 구현하기\",\"fork\":false,\"url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2\",\"forks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/forks\",\"keys_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/keys{/key_id}\",\"collaborators_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/collaborators{/collaborator}\",\"teams_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/teams\",\"hooks_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/hooks\",\"issue_events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/events{/number}\",\"events_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/events\",\"assignees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/assignees{/user}\",\"branches_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/branches{/branch}\",\"tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/tags\",\"blobs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/blobs{/sha}\",\"git_tags_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/tags{/sha}\",\"git_refs_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/refs{/sha}\",\"trees_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/trees{/sha}\",\"statuses_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/{sha}\",\"languages_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/languages\",\"stargazers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/stargazers\",\"contributors_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contributors\",\"subscribers_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscribers\",\"subscription_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/subscription\",\"commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/commits{/sha}\",\"git_commits_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/git/commits{/sha}\",\"comments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/comments{/number}\",\"issue_comment_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/comments{/number}\",\"contents_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/contents/{+path}\",\"compare_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/compare/{base}...{head}\",\"merges_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/merges\",\"archive_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/{archive_format}{/ref}\",\"downloads_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/downloads\",\"issues_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues{/number}\",\"pulls_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls{/number}\",\"milestones_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/milestones{/number}\",\"notifications_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/notifications{?since,all,participating}\",\"labels_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/labels{/name}\",\"releases_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/releases{/id}\",\"deployments_url\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/deployments\",\"created_at\":\"2025-07-09T15:32:33Z\",\"updated_at\":\"2025-07-15T14:52:50Z\",\"pushed_at\":\"2025-07-18T13:16:13Z\",\"git_url\":\"git://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"ssh_url\":\"git@github.com:hanghae-plus/front_6th_chapter1-2.git\",\"clone_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2.git\",\"svn_url\":\"https://github.com/hanghae-plus/front_6th_chapter1-2\",\"homepage\":\"https://hanghae-plus.github.io/front_6th_chapter1-2/\",\"size\":306,\"stargazers_count\":1,\"watchers_count\":1,\"language\":\"JavaScript\",\"has_issues\":true,\"has_projects\":true,\"has_downloads\":true,\"has_wiki\":false,\"has_pages\":true,\"has_discussions\":false,\"forks_count\":61,\"mirror_url\":null,\"archived\":false,\"disabled\":false,\"open_issues_count\":55,\"license\":null,\"allow_forking\":true,\"is_template\":false,\"web_commit_signoff_required\":false,\"topics\":[],\"visibility\":\"public\",\"forks\":61,\"open_issues\":55,\"watchers\":1,\"default_branch\":\"main\"}},\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/64\"},\"html\":{\"href\":\"https://github.com/hanghae-plus/front_6th_chapter1-2/pull/64\"},\"issue\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/64\"},\"comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/issues/64/comments\"},\"review_comments\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/64/comments\"},\"review_comment\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/comments{/number}\"},\"commits\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/pulls/64/commits\"},\"statuses\":{\"href\":\"https://api.github.com/repos/hanghae-plus/front_6th_chapter1-2/statuses/e553ff62e596d82c3bcebfd0d2c0c6db63b9c77a\"}},\"author_association\":\"MEMBER\",\"auto_merge\":null,\"active_lock_reason\":null}]");
export { pulls_default as default };
