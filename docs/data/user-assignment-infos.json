[
  {
    "_id": "6868a342a8a052ad6145431a",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "박의근",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/61"
      }
    ],
    "feedback": "",
    "enrolledId": "671993df7e7008df3ebb7f4e",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145431c",
    "result": "",
    "isBestPractice": false,
    "name": "정명훈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "6697caec1cfd0ff2d737c0f6",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145431e",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김연수",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/70"
      }
    ],
    "feedback": "",
    "enrolledId": "6792d9a67ea42ce47df4e27e",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454320",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김지혜",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/72"
      }
    ],
    "feedback": "",
    "enrolledId": "679ce583ada1879bb5adddf0",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454322",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김소희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/74"
      }
    ],
    "feedback": "",
    "enrolledId": "67cae59e3255d88e88383b13",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454324",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/39"
      }
    ],
    "feedback": "",
    "enrolledId": "681dd962e7dc2519a9b4585f",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454326",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한아름",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/67"
      }
    ],
    "feedback": "",
    "enrolledId": "68205c830a72040b80c72cf1",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145432a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "주산들",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/14"
      }
    ],
    "feedback": "",
    "enrolledId": "6821d2570a72040b80c25f8c",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145432c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최용훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/24"
      }
    ],
    "feedback": "",
    "enrolledId": "682334f50a72040b80ba7b91",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145432e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "오하늘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/59"
      }
    ],
    "feedback": "",
    "enrolledId": "682457100a72040b80776d24",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454330",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김민지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/35"
      }
    ],
    "feedback": "",
    "enrolledId": "68245a760a72040b807a5c2c",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454332",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최재환",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/42"
      }
    ],
    "feedback": "",
    "enrolledId": "68245c9b0a72040b807c704a",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454334",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "임규원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/43"
      }
    ],
    "feedback": "안녕하세요 규원님~\n이번에 시간이 많이 부족했나보네요 ㅠㅠ\n2주차는 잘 진행할 수 있기를 바랍니다!\n고생하셨어요!",
    "enrolledId": "68247d1b0a72040b8094ff55",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454336",
    "result": "PASS",
    "isBestPractice": false,
    "name": "유윤우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/10"
      }
    ],
    "feedback": "",
    "enrolledId": "68249f4e0a72040b80b3568e",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145433a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박소연",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/17"
      }
    ],
    "feedback": "",
    "enrolledId": "6824c3ac0a72040b80cbc2a3",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145433e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이유진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/71"
      }
    ],
    "feedback": "",
    "enrolledId": "682546800a72040b80150daf",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454340",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "신희원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/16"
      }
    ],
    "feedback": "",
    "enrolledId": "68254af40a72040b801869c8",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454342",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이지현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/27"
      }
    ],
    "feedback": "",
    "enrolledId": "682566140a72040b80300e04",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454344",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이의찬",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/15"
      }
    ],
    "feedback": "",
    "enrolledId": "682576d80a72040b803dc418",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454346",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "장루빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/57"
      }
    ],
    "feedback": "",
    "enrolledId": "682578680a72040b803edb7c",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454348",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박창준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/18"
      }
    ],
    "feedback": "",
    "enrolledId": "6825b2810a72040b8071d8af",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145434a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신홍준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/compare/main...jun17183:front_6th_chapter1-1:main"
      }
    ],
    "feedback": "",
    "enrolledId": "682983e90a72040b80d5107f",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145434c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이민재",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/11"
      }
    ],
    "feedback": "",
    "enrolledId": "682b2fc10a72040b80322848",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145434e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이태영",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/46"
      }
    ],
    "feedback": "",
    "enrolledId": "6825c7b00a72040b8086a6af",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454352",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정도은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/12"
      }
    ],
    "feedback": "",
    "enrolledId": "682d428a0a72040b80bf93a5",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454354",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이은지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/64"
      }
    ],
    "feedback": "",
    "enrolledId": "6833c8d54e1c73fff246f798",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454356",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양창훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/23"
      }
    ],
    "feedback": "",
    "enrolledId": "6835a5664e1c73fff2ddfa55",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454358",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "이진희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/41"
      }
    ],
    "feedback": "",
    "enrolledId": "683f18534e1c73fff2105065",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145435a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/40"
      }
    ],
    "feedback": "",
    "enrolledId": "683fa08b4e1c73fff25b6b7e",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145435c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양성진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/60"
      }
    ],
    "feedback": "",
    "enrolledId": "68417c4a4e1c73fff2a66073",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145435e",
    "result": "PASS",
    "isBestPractice": true,
    "name": "임두현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/31"
      }
    ],
    "feedback": "",
    "enrolledId": "684149af4e1c73fff27b2528",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454360",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "이가은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/54"
      }
    ],
    "feedback": "",
    "enrolledId": "68479688614fe33053f10a5f",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454362",
    "result": "PASS",
    "isBestPractice": false,
    "name": "허정석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/19"
      }
    ],
    "feedback": "",
    "enrolledId": "68479c49614fe33053f4b25d",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454364",
    "result": "PASS",
    "isBestPractice": true,
    "name": "정유열",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/28"
      }
    ],
    "feedback": "",
    "enrolledId": "6847a18a614fe33053f85c23",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454366",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박준형",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/38"
      }
    ],
    "feedback": "",
    "enrolledId": "6847a79c614fe33053fc070a",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad61454368",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수민",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/69"
      }
    ],
    "feedback": "",
    "enrolledId": "68497d2484ed0f3459b09aca",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a342a8a052ad6145436a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여찬규",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/20"
      }
    ],
    "feedback": "",
    "enrolledId": "684a8d6184ed0f34595bafbf",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad6145436c",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "조영민",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/45"
      }
    ],
    "feedback": "",
    "enrolledId": "684a92b384ed0f34596009d9",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad6145436e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/66"
      }
    ],
    "feedback": "",
    "enrolledId": "684aad6b84ed0f3459763b8d",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454370",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "강병준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/76"
      }
    ],
    "feedback": "",
    "enrolledId": "684abe3784ed0f345985eaaf",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454372",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "정민기",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/33"
      }
    ],
    "feedback": "",
    "enrolledId": "684cd08584ed0f3459eb21b9",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454374",
    "result": "PASS",
    "isBestPractice": true,
    "name": "이지훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/58"
      }
    ],
    "feedback": "",
    "enrolledId": "6852337e851b4a7da82175ff",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454376",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김효진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/53"
      }
    ],
    "feedback": "",
    "enrolledId": "6852955b851b4a7da86f237b",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454378",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김휘린",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/13"
      }
    ],
    "feedback": "",
    "enrolledId": "6853a924851b4a7da8357a5c",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad6145437a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "장희진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/68"
      }
    ],
    "feedback": "",
    "enrolledId": "6853f85d851b4a7da883412b",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad6145437c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "현지수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/51"
      }
    ],
    "feedback": "",
    "enrolledId": "68542193851b4a7da8a3a270",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad6145437e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정건휘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/65"
      }
    ],
    "feedback": "",
    "enrolledId": "6859f165c85f37c525cd8f44",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454380",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여진석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/50"
      }
    ],
    "feedback": "",
    "enrolledId": "685aa4a8c85f37c52555e223",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454382",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "정용준",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/34"
      }
    ],
    "feedback": "",
    "enrolledId": "685e1202c85f37c525604396",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454384",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한재원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/30"
      }
    ],
    "feedback": "",
    "enrolledId": "685e1e58c85f37c52567068f",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454386",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이정우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/55"
      }
    ],
    "feedback": "",
    "enrolledId": "685e5710c85f37c5258cd6b6",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad61454388",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김유현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/yuhyeon99/front_6th_chapter1-1"
      }
    ],
    "feedback": "",
    "enrolledId": "685f3badc85f37c5250804fa",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad6145438a",
    "result": "PASS",
    "isBestPractice": true,
    "name": "윤영서",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/2"
      }
    ],
    "feedback": "",
    "enrolledId": "68623210c85f37c525712305",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad6145438c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "차현빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/75"
      }
    ],
    "feedback": "",
    "enrolledId": "68678936c85f37c52506d1fc",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad6145438e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "권지호",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428d",
          "name": "STEP01 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.700Z",
          "updatedAt": "2025-07-08T21:36:55.845Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/29"
      }
    ],
    "feedback": "",
    "enrolledId": "686387e2c85f37c52555fc22",
    "assignmentId": "6868a341a8a052ad61454293",
    "assignmentName": "STEP01 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6868a343a8a052ad614543cb",
    "result": "PASS",
    "isBestPractice": false,
    "name": "권지호",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/29"
      }
    ],
    "feedback": "안녕하세요 지호님!\n1주차 과제 잘 진행해주셨군요 ㅎㅎ 너무 고생 많으셨어요!!\n\n> 서론이 길었지만, 결론은 완주(과제 통과)를 목표로 하고, \"ai를 최대한 다루면서 ai가 짠 코드에 의문이 있다면 하나라도 그냥 넘어가지 않고 많이 물어보자\" 를 경험하기로 했습니다. 어떻게든 만들어 내야된다는 집착(?)으로 ai로 점점 원하는 결과를 내는 정확도가 올라갔습니다. 활용능력 + 10..\n\n이 또한 이 시대에 살아남는 혹은 성장하는 방법이라고 생각합니다 ㅋㅋ\nAI를 활용하는 능력도 이제 무척 중요하니까요!\n다만 AI를 잘 활용하려면 기본기도 중요하기 때문에 잘 소화하는 시간도 꼭 가져주세요!\n\n> 상태관리와 이벤트버스\n\n직접 이벤트 버스를 구현해주셨군요 ㅎㅎ\n다만 이벤트 버스의 경우 어디서 어떻게 무슨 이유 때문에 트리거가 되었는지 추적하기가 어렵달까... 이런 부분만 조심해주시면 무척 좋답니다!\n실제로 저희 팀에서도 잘 쓰이고 있는 방식 중에 하나랍니다.\n\n> 라우팅 설계에 대해 코멘트 들어보고 싶습니다! 다른 분들은 어떻게 구현하셨을지, 혹은 코치님이 생각하시는 best practice가 무엇인지 궁금합니다. SPA에 적절한 설계를 한 것인지 잘 모르겠습니다(?)\n\n좋은 코드는 내가 만든 프로젝트 뿐만 아니라 다른 사람이 만든 프로젝트에서도 잘 동작하고 결합할 수 있어야 한다고 생각합니다 ㅎㅎ\n\n이런 측면에서 생각해보면 나쁘지 않은 방식이라고 생각해요!\nNotFoundComponent의 경우 이걸 지금 처럼 내제화 하는 방법이 있고, 혹은 외부에 위임하는 방법도 있는데 이 또한 잘 만들어주신 것 같네요!\n\nSPA에 적합한 방식은... 무엇으로 판단해야 좋을지에 대해 먼저 생각해봐야 합니다.\n\n**핵심 기능**\n- 클라이언트 사이드 라우팅 지원\n- 브라우저 히스토리 API 활용 (pushState/popState)\n- 페이지 새로고침 없는 네비게이션\n\n**라우팅 기능**\n- 동적 라우트 매칭 (파라미터, 쿼리스트링)\n- 중첩 라우팅 지원\n- 프로그래매틱 네비게이션 (코드로 라우트 이동)\n- 라우트 가드/보호 기능 (인증, 권한)\n\n**성능 최적화**\n- 지연 로딩 (Lazy Loading) 지원\n- 코드 스플리팅 호환성\n- 가벼운 번들 사이즈\n\n**개발 편의성**\n- 선언적 라우팅 구문\n- TypeScript 지원\n- 개발 도구 지원\n- 에러 바운더리 처리\n\n**호환성**\n- SSR/SSG 지원\n- 메타 태그 관리 (SEO)\n- 404 에러 처리\n- 뒤로가기/앞으로가기 정상 동작\n\n위와 같은 조건들이 있는데, 저는 여기서 제일 중요한게 \n뒤로가기/앞으로가기/동적라우팅/라우트가드 등이라고 생각해요 ㅎㅎ\n\n다만 지금 요구사항에서 라우트가드나 중첩 라우팅 같은건 이야기 해놓질 않기 때문에 고려하지 못했을 것 같네요..!\n\n---\n\n고생하셨습니다 지호님!",
    "enrolledId": "686387e2c85f37c52555fc22",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a343a8a052ad614543cd",
    "result": "PASS",
    "isBestPractice": false,
    "name": "차현빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/75"
      }
    ],
    "feedback": "ㅋㅋㅋ 매니저님 피드백은 PR에 남겨놓을게요~\nPR을 확인해주세요!\n\n1주차 너무 고생 많으셨습니다!! 부디 주말엔 푹 쉬셨길...",
    "enrolledId": "68678936c85f37c52506d1fc",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a343a8a052ad614543cf",
    "result": "PASS",
    "isBestPractice": true,
    "name": "윤영서",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/2"
      }
    ],
    "feedback": "안녕하세요 영서님!!!\n이번 주에 제일 고생하신 영서님.... ㅠㅠ 정말 너무너무 감사합니다. 말로 다 표현하기가 어렵네요 ㅋㅋ\n\n> 배포를 진행하면서 다른분들을 도와드리고 gh-pages를 통한 spa 배포에 대한 이해가 높아진 것 같습니다...ㅎㅎ;; 이렇게 다양한 에러를 접하게 될 줄은...\n\n\"배포 오류, 어디까지 경험해봤니?\" 이런 주제로 하나 글을 작성해주셔도 좋겠네요 ㅋㅋ\n\n> 요컨데 지금은 카테고리와 상품을 동시에 불러야한다는 요구사항이 없고, 테스트 코드상에서 다음과 같이 상품은 findByText를 통해 찾고 카테고리는 getByText를 통해서 찾게되어 '동시에 불러야한다는'의미가 조금 모호하지 않나라는 생각이 들었습니다. 그리고 RTL의 내장함수들을 사용하는것이 아닌 querySelector를 사용하는 코드가 많았는데 테스트가 불안정하고, 디버깅도 어렵다는 생각이 들었습니다. 요 부분도 다음 기수에 반영이 되면 어떨까...하는 생각이 들었습니다 ㅎㅎ...\n\n저도 이번에 많이 느낀 부분인데요, 다음에는 아예 1주차에는 단위테스트를 없애버릴 생각입니다. 모호한 부분도 많고, 정확하게 테스트 하지 못하는 부분도 많아서요.\n좋은 의견 너무 감사합니다 영서님!\n\n> 사실 AI를 사용함에 있어서 그렇게까지 잘 사용하고있는지는 모르겠고, 좀 더 제가 처해있는 상황을 설명하려고 하면 말을 잘 알아듣는 느낌이었습니다. (요건 프롬프트 엔지니어링을 잘 몰라 그럴 수도 있겠습니다만) 빠르게 컴포넌트를 분리하는 과정에서 디자인등이 누락되는것들이 있었는데, 그 이전에 디자인을 누락하지 않고 그대로 분리해달라고 좀 더 자세히 명세를 하면 제가 의도한 바와 동일하게 작성해주는것 같았습니다.\n\n어떤 방식으로 명령했는지 기억나는게 있으면 같이 명시해주셔도 좋답니다!\n\n> 한계점이 있다면 전체적인 아키텍처 설계나 근본적인 문제 해결은 여전히 사람이 판단해야 했습니다. AI가 제안한 코드도 결국 테스트를 통해 검증하는 과정이 필요했습니다\n\n이에 대한 내용도 동의합니다 ㅎㅎ 다만 요즘엔 역으로, AI에게 테스트를 작성하게 하는 것 같네요 ㅋㅋ\n\n> 이렇게 로컬스토리지를 명시적으로 초기화하는경우에 어떻게하면 클라이언트에서도 상태가 비워짐을 알 수 있을까요?\n\n사실 이번에 저도 솔루션 만들면서 겪어던 문제인데요,\n\n제가 해결한 방법은, 값을 조회할 때 무조건 localStorage 를 통해 조회하도록 만들었어요. 근데.. 이게 좋은 방법이라는 생각은 안 들어요 ㅋㅋ\n\n정석은 storage 이벤트를 통해 관리하는 방법이 이라고 생각해요.\n\n성호 코치님의 아티클: https://blog.shiren.dev/ko/post/2023-04-18\n공식문서: https://developer.mozilla.org/en-US/docs/Web/API/Window/storage_event\n\n아마 react에서 storage를 관리할 때도 똑같은 문제를 겪는 경우가 많으리라 생각합니다 ㅋㅋ",
    "enrolledId": "68623210c85f37c525712305",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a343a8a052ad614543d1",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김유현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/yuhyeon99/front_6th_chapter1-1"
      }
    ],
    "feedback": "안녕하세요 유현님!\n\n다음에는 과제 제출하실 때 PR 링크를 올려주시면 좋을 것 같아요!\n지금은 저장소 링크를 올려주셨네요 ㅎㅎ\n\n---\n\n과제 진행해주신 내용 보니까 \n라우터 기능과 정렬, 장바구니 등의 기능이 누락되어있네요 ㅠㅠ\n그래도 끝까지 포기하지 않고 잘 진행해주셔서 감사해요!\n\n---\n\n> SPA 구조/라우터 설계가 더 깔끔하게 개선될 여지가 있는지\n\n저는 이럴 때 \"요구사항\"을 확장해서 생각해보면 좋다고 생각합니다!\n가령 지금은 유현님의 어플리케이션에 강하게 종속된 라우터인데요(pages 폴더에 있는 코드를 가져와 사용하고 있음),\n\n이걸 다른 사람이 만들어놓은 어플리케이션에 적용한다고 했을 때 정상적으로 동작하도록 만들 수 있는 방법을 고민해보시면 좋답니다!\n\n> 현재 구현된 옵저버 기반 상태 관리의 한계점과 개선 방안\n\n무척 세심하게 설계해주셨네요 ㅎㅎ\n이건 제가 선호하는 방식이긴 한데, observer와 상태를 분리해주는 방식이면 좋겠어요! 옵저버는 어디서는 쓰일 수 있는 개념이니까요. 라우터랑도 결합할 수 있고?\n\n그리고 notify를 할 때, 항상 notify를 할 것인지 아닌지에 대한 판단이 필요해요 ㅎㅎ\n가령 state가 변경된게 없는지 깊은 비교를 통해 검사하여, 실제로 변경된 경우에만 notify를 실행하는거죠.\n\n> 현재 테스트코드가 안전하게 작동하도록 설계된 구조인지에 대한 피드백\n\n프론트엔드에서 테스트가 안전하게 동작하기 위한 조건은 이벤트 관리라고 생각합니다. 이벤트를 잘 초기화 해준다거나, 이미 등록된 이벤트를 다시 등록하지 않도록 해준다거나?\n\n다만 이번 기본과제에서 제공하는 단위 테스트의 경우 제가 적절하게 작성하질 못한 것 같아요 ㅠㅠ\n그래서 코드의 문제라기보단 테스트의 문제가 많아서 발생했던 것들이 많았으리라 생각해요. ",
    "enrolledId": "685f3badc85f37c5250804fa",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a343a8a052ad614543d3",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이정우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/55"
      }
    ],
    "feedback": "안녕하세요 이정우님, 수고하셨습니다. 이번 과제는 프레임워크 없이 SPA를 구현하면서 라이브러리와 프레임워크가 해결해온 문제들을 직접 경험해보는 의도를 가진 과제였어요. 특히 라우팅, 상태 관리, 컴포넌트 구조화 등의 핵심 개념들을 바닐라 자바스크립트로 구현하면서 깊이 있는 학습을 하셨기를 바랍니다.\n\n과제를 보면서 특히 폴더 구조를 역할에 맞게 체계적으로 정리하신 점이 인상적이었습니다. controllers, services, pages로 명확하게 분리하여 MVC 패턴에 가까운 구조를 만드셨네요. 또한 Router 클래스를 직접 구현하여 SPA 네비게이션을 처리하신 부분도 잘하셨습니다.\n\n아직은 데이터와 DOM 렌더링이 완전히 분리되지 않은 혼합된 형태가 보이네요. HomePage.js에서 HTML 문자열을 직접 반환하고, HomePageController에서 상태 변경 후 전체를 다시 렌더링하는 구조라거나 이벤트 처리시에 state는 값으로 변경하고 this.render()를 수동으로 실행하는 코드도 보이고, DOM 조작을 직접하는 코드도 종종 섞여있네요.\n\n이렇게 만들게 되면 작은 변경사항에도 큰 DOM 조작이 필요하고, 상태와 뷰의 동기화를 수동으로 관리해야 합니다. 이런 구조가 왜 개발을 어렵게 만드는지를 몸소 체험하는 소중한 경험이 되었을거에요.\n\n앞으로도 이런 low-level 구현 경험이 프레임워크를 더 깊이 이해하는 데 큰 도움이 될 거예요. 2주차도 화이팅입니다! :)\n\nps\n테스트 실패를 보니 **\"총 ㅇㅇ개의 상품\"** 텍스트를 찾지 못하는 문제가 반복적으로 발생하고 있네요. HomePage.js에서 `<span>총 </span><span>${total}</span><span>개의 상품</span>` 형태로 분리되어 있는데, 테스트가 이를 하나의 텍스트로 인식하지 못하는 것 같습니다. `총 ${total}개의 상품`처럼 하나의 문자열로 만들어보세요.\n",
    "enrolledId": "685e5710c85f37c5258cd6b6",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a343a8a052ad614543d5",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한재원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/30"
      }
    ],
    "feedback": "안녕하세요 한재원님, 수고하셨습니다. 이번 과제는 프레임워크 없이 순수 JavaScript로 SPA를 구현하면서 프레임워크가 내부적으로 처리해주는 복잡한 작업들을 직접 경험해보는 것이 목표였습니다. 라우팅, 상태 관리, 렌더링 최적화 등을 직접 구현하면서 React나 Vue 같은 프레임워크의 가치를 더 깊이 이해하셨기를 바랍니다.\n\n특히 이벤트 위임 패턴을 활용하여 동적으로 생성되는 요소들의 이벤트를 효율적으로 처리하신 점과 URL 상태 관리를 통해 새로고침 시에도 상태가 유지되도록 구현하신 점이 잘하셨습니다. Cart.js에서 클래스 기반 싱글톤 패턴을 사용하여 장바구니 상태를 관리한 것도 좋은 접근이었습니다.\n\n아직 컴포넌트 개념을 도입하지 않아서 지금 모든 화면이 main.js에 1500줄이 넘는 코드가 집중되어 있는 점은 개선이 필요하겠지요. 아마 스스로도 답답했을텐데 코드의 크키가 너무 크다면 코드를 잘게 분리를 하는 연습도 해보시면 좋겠습니다.\n\n아무래도 라우터의 책임과 컴포넌트의 책임이 하나의 코드에 다 모여있다보니 코드가 커질 수 밖에 없으므로 단일책임의 원칙은 항상 기억해보면 좋겠습니다.\n\n이제 새롭게 시작하는데 앞으로도 함께 성장해나가길 바랍니다. 화이팅입니다!\n\n다음은 질문 주신 내용에 대한 구체적인 답변입니다.\n\n---\n\nQ) 이벤트 핸들링 로직 분리와 유지보수성 개선 방법\n\n=> 현재의 렌더링 구조가 html 방식이다보니 어쩔 수 없이 선택자 방식으로 만들어져야 하겠지만 state.js / events.js / render.js / router.js / main.js 이런식으로 역할별 분리만으로는 다 달성하기가 어렵습니다.\n\n위와 같이 수평적으로 잘라내어 계층을 만들었다면 이제 각각의 목적에 따라 해당 계층을 쌓아서 만든 모듈적 분리가 필요하죠. 지금 main.js가 거대해진 이유는 레이어는 분리를 했지만 모듈적 분리가 되지 못해서 입니다.\n\nProductDetail.js를 보면 그러한 모듈적 분리가 되어 있는데 라우터의 분기의 책임과 라우터의 렌더링의 책임도 분리하면서 이거 하나만으로도 가치가 있는 코드 특정 코드가 다 지워져도 괜찮은 코드등을 생각하면서 모듈적 분리의 생각으로 나아가보면 좋겠습니다.\n\n\nQ) state 변경 + render() + updateURL 반복 패턴 개선\n\n=> 상태 변경을 중앙화하는 setState 함수를 만들어 사용하면 좋습니다:\n\n```javascript\nfunction setState(updates) {\n  Object.assign(state, updates);\n  updateURL();\n  render();\n}\n\n// 사용 예\nsetState({ sort: newSort, page: 1, loading: true });\n```\n\nQ) 클래스 vs 함수 기반 모듈 구성\n\n=> js는 둘다 할 수 있는 멀티 패러다임의 언어죠. 두 방법은 모두 일장일단이 있습니다. 아무래도 클래스 기반의 언어가 문법적으로 더 복잡함을 요구하므로 대개 클래스 보다는 함수 기반을 우선적으로 선호하게 됩니다.\n\n=> 그렇지만 인스턴스의 생성이 많고 타입의 상속과 확장을 중심으로 해야하는 구성이라면 ex) Node -> Element -> HTMLElement -> HTMLDivElement 등 이러한 경우는 함수형 프로그래밍 방법으로 접근하기 어려운 방식이므로 객체지향을 써야만 합니다.\n\n=> 보편적으로 함수형 방식을 근간으로 하나 타입추론이 어렵다거나 다양한 타입이 필요한 경우 ex) figma API등 클래스로 많이 활용되니 각 특징을 잘 알고 써보시면 좋겠네요.\n\n=> 어쩄든 본인의 체험과 경험이 중요하니 이것 저것 다양하게 시도하면서 그 느낌을 이해보길 바랍니다.\n\n```javascript\n// 함수형 방식\nexport const createCart = () => {\n  let items = [];\n  \n  return {\n    addItem: (item) => { items.push(item); },\n    getItems: () => [...items],\n    // ...\n  };\n};\n```\n\n근데 사실은 팀의 코딩 컨벤션과 프로젝트 특성에 따라 선택하시면 됩니다. ㅋㅋ\n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "685e1e58c85f37c52567068f",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a343a8a052ad614543d7",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "정용준",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/34"
      }
    ],
    "feedback": "안녕하세요 용준님~\n1주차 과제 잘 진행해주셨네요!! 너무 고생 많으셨습니다 ㅠㅠ\n\n다만 테스트를 통과하지 못해서, 과제는 불합격으로 남겨놓을게요..!\n\n---\n\n>   View 또한 외부의 영역이고 View와 Service를 이어주는 Adapter 계층이 필요한 것 같습니다. 이 Adapter를 만들 때 사용할 로직이 상태나 이벤트 리스너 바인딩처럼 보이는데 맞을까요?? 이벤트 바인딩과 상태가 저 구조에서 어떻게 들어가야할지 잘 모르겠습니다.\n\n말씀하시는 Adapter가 아마 MVC 로 따지면 Controller 같은 계층일 것 같네요 ㅎㅎ\n리액트는 이 영역을 ViewModel 라고 정의하고 있답니다. \n\nhttps://junilhwang.github.io/TIL/CodeSpitz/Object-Oriented-Javascript/02-MVVM/\n\n저도 이런 글을 작성했었는데, 한 번 참고해주세요!\n\n> 아직 순수 js로 프론트엔드를 작성할 때 계층을 어떻게 나눌지, 각 계층에 책임과 역할은 어느정도로 부여할건지가 명확하게 머리 속에 잡히지 않네요. 프로덕트와 팀의 상황에 따라 달라지는 것이고 지금 상황에서는 오버엔지니어링이지만 비즈니스, 엔티티와 외부를 분리하고 객체지향적으로 프론트엔드를 작성한다는 것을 알아보고 싶어 고민을 남겨봅니다.\n\nhttps://junilhwang.github.io/TIL/Javascript/Design/Vanilla-JS-Server-Side-Rendering/\n\n제가 이전에 이런 글을 작성했는데요, SSR을 위해 어떤 방식으로 코드를 설계할 수 있는지에 대한 글입니다. SSR에 대해 다루는 글이지만 설계에 대한 측면도 다루고 있기 때문에 참고해보셔도 좋을 것 같아요!\n\n저는 \"런타임\"을 기반으로 생각했는데요,\n브라우저에서만 실행 가능한 코드와, \n브라우저에 종속적이지 않은 코드로 구분해서 사용한답니다.\n\n이벤트와 돔은 브라우저에 종속적이고\n데이터와 비즈니스 로직은 브라우저에 종속적이지 않겠죠?\n이 사이에 API 호출 같은것도 있을 것이고...\n\n이를 토대로 구성해보시면 좋을 것 같아요!",
    "enrolledId": "685e1202c85f37c525604396",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a343a8a052ad614543d9",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여진석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/50"
      }
    ],
    "feedback": "안녕하세요 여진석님, 수고하셨습니다. 이번 과제는 프레임워크 없이 SPA의 핵심 기능들을 직접 구현하면서 React가 해결해온 문제들을 깊이 이해하는 것이 목표였습니다. 일부 코드들은 TypeScript로 마이그레이션하면서 완성도 높은 구조를 만들어주신 점이 인상적이네요.\n\ncommon쪽 설계구조를 참 탄탄하게 잘 고민해서 구성한 것 같아요. Component 추상 클래스의 생명주기 관리와 EventDelegator의 타입 안전한 이벤트 위임 구현이 잘 되어있습니다. MVC 구조로 관심사를 분리하고 옵저버 패턴으로 상태 관리를 구현한 접근도 좋았습니다.\n\n아쉬운 점이 있다면 구조는 잘 잡아두었는데 상태 변경 -> 렌더링 -> 이벤트 연동 -> 이벤트 -> 상태 변경 ... 등의 사이클이 내재화되어 동작하지 못하고 계층을 넘나들며 호출을 하고 있는 부분입니다.\n\n그리고 코드 전반적으로 이벤트를 연동하는 방식이나 상태를 업데이트를 하는 방법,  DOM을 사용하는 방식들에서 일관성이 부족하다 느껴졌습니다. \n\n1주차인만큼 그렇게 여러가지 시도를 하게 되면서 이런 방법은 이런게 좋구나 혹은 이건 분명 여기에 안 써도 될 코드인걸 알겠는데 어떻게 하면 좋을까? 하는 고민들로 하여금 성장의 발판이 되어 주었기를 바랍니다.\n\n앞으로도 함께 성장해나가요. 2주차도 화이팅입니다! :)\n\n---\n\nQ) MVC 구조가 잘 구성되었는지\n=> 전반적으로 잘 구성되었습니다. Store(Model), Component(View), Controller(API 핸들링) 분리가 명확합니다. 다만 시간 부족으로 일관성을 지키지 못하고 구조가 지켜지지 않거나 DOM이 추가가 된다거나 render나 subsctibe를 수동으로 작업하고 있는 부분들이 아쉽습니다.\n\n\nQ) 옵저버 패턴 구현\n=> SearchParams → Controller → Store → Component 흐름이 잘 구성되어 있습니다. 단방향 데이터 흐름이 명확해서 디버깅과 유지보수가 용이할 것 같네요. 다만 구독 해제 로직이 누락되기 쉬운 구조라 메모리 누수 위험이 있어 보입니다.\n\n**Q) mount/unmount 보일러플레이트 개선**\n=> 컴포넌트 트리 구조를 만들어 자식 컴포넌트를 자동으로 관리하면 어떨까요? 부모 컴포넌트가 mount/unmount될 때 자식들도 자동으로 처리되도록 하면 보일러플레이트를 크게 줄일 수 있습니다.\n\n```javascript\nabstract class Component {\n  children: Component[] = [];\n  \n  addChild(child: Component) {\n    this.children.push(child);\n  }\n  \n  mount(target: HTMLElement) {\n    // ...기존 로직\n    this.children.forEach(child => child.mount(this.el));\n  }\n}\n```\n\n**Q) 구현 방식의 완성도**\n=> 핵심 개념(라우터, 컴포넌트, 이벤트 위임)은 80% 정도 잘 구현되었습니다. 심화 과제 실패는 주로 라우터의 쿼리 파라미터 처리와 새로고침 시 상태 복원 로직 때문으로 보입니다. History API 사용 시 `pushState`와 `replaceState`의 차이를 명확히 하고, URL 파싱/생성 로직을 더 견고하게 만들면 해결될 것 같습니다.",
    "enrolledId": "685aa4a8c85f37c52555e223",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a343a8a052ad614543db",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "정건휘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/65"
      }
    ],
    "feedback": "안녕하세요 정건휘님, 수고하셨습니다. 이번 과제는 프레임워크 없이 순수 JavaScript로 SPA를 구현하며, 상태 관리와 라우팅의 본질을 이해하는 것이 목표였습니다. 바닐라 JS 개발이 익숙하지 않으셨다고 하셨는데, 이런 경험을 통해 프레임워크가 해결하는 문제들을 더 깊이 이해하셨기를 바랍니다.\n\n코드를 살펴보니 특히 라우터 구현(`src/routes/router.js`)이 인상적이네요. 전반적인 구조나 설계 측면에서 상당히 모던하게 잘 구현이 된것 같아 좋습니다. `popstate` 이벤트 처리와 `navigate` 메서드 구현이 체계적이고, production 환경을 고려한 BASE_PATH 처리도 잘 되어있네요. 서비스 레이어를 분리한 아키텍처도 좋은 접근입니다.\n\n코드 전반적으로 폴더 구조나 코드의 폴더구조면에서 실제 역할과 계층구조가 잘 못지켜지고 있어요. utils인데 events-handlers에서 주요 비즈니스 로직을 처리한다거나 라우터가 DOM을 조작하고 있다거나 등등이요.\n\nAI를 이용해서 검증을 할때 이러한 역할과 구조적인 측면으로 많이 물어보고 작성을 해보시기를 권해드립니다\n\n또한 DOM을 직접 건들지 않고 모델과 렌더링을 분리해달라는 조건을 넣어가면서 AI에게 어떻게 하는지를 배워가며 익혀가 보면 더 좋을 것같네요.\n\n---\n\nQ) userEvent.click과 element.click()의 차이는?\n\n=> `userEvent.click()`은 테스트 도구에서 실제 사용자의 클릭을 더 정확히 시뮬레이션합니다. 마우스 이벤트(mousedown, mouseup, click) 순서대로 발생시키고, 포커스 이동, disabled 상태 체크 등을 처리합니다. 반면 `element.click()`은 단순히 click 이벤트를 호출시키는 것이죠. 다른 이유들로 하여금 click이 발생되지 않더라도 강제로 함수 호출을 시킨거라고 생각해주세요.\n\n이번 테스트에는 실제클릭이 동작하지 않을 이유가 없기에 함수호출이나 실제 클릭이나 다를게 없기 때문입니다. 하지만 실제 사용자 인터랙션을 정확히 테스트하려면 `userEvent`를 사용하는 것이 좋습니다.\n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "6859f165c85f37c525cd8f44",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543dd",
    "result": "PASS",
    "isBestPractice": false,
    "name": "현지수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/51"
      }
    ],
    "feedback": "지수님 고생하셨어요~\n상태관리 설계에 있어서 특히 잘 고민해주신 것 같은데요.\n과제에서 기대했던 여러가지 학습 부분을 잘 고민해주셨던 것 같아서 좋네요.\n\n질문 주신거 답변을 드려볼게요.\n\n> 현재 Redux 패턴을 모방해서 Store-Reducer-Action 구조로 상태관리를 구현했습니다. 이런 방식으로 구현한 것이 바닐라 JavaScript 환경에서 적절한 선택이었는지 궁금합니다. 특히 매번 전체 렌더링이 발생하는 부분이 성능상 문제가 될 것 같아 고민입니다.\n\n맞아요! 지금의 단계에서는 사실 브라우저 성능으로 충분할 것 같지만,, 결국 상태를 바라보는 해당 지점에 대해서만 명확하게 DOM이 업데이트 되는 로직이 필요하게 될 것 같아요. 이런 로직들을 실수 없이 빠르게 제어하기 위해 리액트에서는 명확한 구조가 있는데요! 어떤 구조가 있는지 찾아보고 한번 적용해보는 것도 큰 공부가 될 것 같아요. \n\n> 현재 렌더링 시마다 이벤트 리스너를 재등록하는 구조로 되어 있습니다. 이 방식이 메모리 누수를 유발할 수 있다고 생각되는데, 바닐라 JavaScript 환경에서는 어떤 식으로 이벤트 생명주기를 관리하는 것이 좋을까요?\n\n넵 좋은 고민이네요! 위임패턴을 통해 구현을 하고 있지만, 아직 좀 처리가 필요한게 필요한것 같아요 ㅎㅎ 클로저로 참조를 물고 있으면 해제가 되지 않는 문제가 발생할 수 있고, 중복 이벤트가 등록되거나 할 수 있는 구조인것 같아요. 별도의 이벤트 생명주기를 관리하는 것들 보다는 WeakRef 같은것들을 활용해서 더 이상 쓸모가 없어지면 명시적이게 참조를 정리한다! 라고 생각하고 바라봐도 충분할 것 같아요.\n\n> JavaScript로 SPA를 구현할 때 실무에서 자주 사용하는 패턴이나 베스트 프랙티스가 있는지 궁금합니다!\n\n지금의 방식과 대부분 유사한 것 같아요! 관통하는 공통 컴포넌트로 로직을 모으고 렌더링 로직과 라이프사이클 등을 관리하는 거죠. 어떻게 보면 베스트 프랙티스가 리액트와 뷰가 될 수 있지 않을까요? ㅎㅎ \n\n내가 알고 있는 지식의 범위를 넘어서는 추상화나 최적화가 필요할 때는 AI한테 물어보는 것도 방법일 수 있겠지만, 제 개인적으로는 결국 비슷한 문제를 풀고있는 다른 라이브러리를 벤치마킹 하는게 가장 쉬운 방법인것 같아요. \n라이브러리 구현체들을 보면 내가 해야 하는 고민들이 미리 다 이뤄져 있다보니 (그것도 훨씬 더 복잡한 수준으로) 이런 추상화, 구현이 필요하겠구나 쉽게 알아차릴수 있는거죠. 실제 구현도 확인할 수 있고요.\n지금 과제에 있어서는 상태 관리에 있어서는 가벼운 반응형 상태 라이브러리를 참고하거나 (jotai나 zustand가 될 수 있고, 구현을 가볍게 한 바닐라 자바스크립트도 있죠!) 라우터에 대해서는 말해주신 react-router-dom나 tanstack router를 참고해 구현하기도 하구요. \n\n각각의 주제들이 명확하게 나눠지면 Pubsub 패턴이라던지, 이벤트 버스 패턴이라던지 모듈 패턴이라던지 구현에 대한 패턴을 고민하게 될 수 있지 않을까 싶어요~~\n\n> 현재 코드가 많이 꼬여있고 리팩토링을 진행하고 싶은데, 어떤 순서로 진행하는게 좋을까요?\n\n이 과제 뿐만 아니라 앞으로 개발을 진행해가는 방향에도 동일한 것 같은데요!\n우선은 리팩토링이라는 것의 핵심 전제로써는 작은 범위의 수정 -> 명확한 검증이 반복되어야 하죠! 전면적인 재설계 보다는 지금 현재의 구조에서 맘에 들지 않는 부분에 대해서 개선 방향을 명확하게 잡고 점진적으로 개선해나가는게 실무 관점이든 내 개발 연습 관점이든 좋지 않을까 싶어요! \n\n고생하셨고 다음 주도 화이팅입니다!",
    "enrolledId": "68542193851b4a7da8a3a270",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543df",
    "result": "PASS",
    "isBestPractice": false,
    "name": "장희진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/68"
      }
    ],
    "feedback": "안녕하세요 희진님!\n1주차 과제 잘 진행해주셨네요!! 너무 고생 많으셨습니다 ㅠㅠ\n\n> 특히 테스트 코드 수정이 여러 번 필요했고, 한 테스트가 다른 테스트에도 영향을 주는 문제가 발생해 혼란스러웠습니다. 이런 점에 대한 사전 안내나 테스트 격리 방법에 대한 가이드가 있으면 좋겠습니다.\n\n이 부분은 저도 많이 느껴서요. 혼란을 드려 죄송합니다..! 나머지 2~3주차 과제는 이런 일이 없도록 주의해볼게요..!\n\n> 현재 정규표현식을 활용한 라우팅 매칭 방식이 간단한 경로에는 적합하지만, 복잡한 동적 라우팅(예: 쿼리파라미터, 중첩 라우트 등)에도 확장 가능할지 궁금합니다.\n\n그럼요 ㅎㅎ 충분히 가능하답니다! 사실 지금 코드를 그대로 사용한다면 어렵겠죠..? 코드는 수정해야할 것 같아요.\n특히 중첩 라우터의 경우 지금과 같은 구조를 그대로 사용하긴 어렵고, 라우터가 다시 라우터를 만드는? 그런 과정이 필요해요.\n라우터 하위에 서브 라우터 같은게 있는거죠 ㅎㅎ\n\n쿼리 파라미터는 쉽게 다룰 수 있을 것 같아요! 이건 지금 라우터랑은 딱히 관련 없고.. 그냥 쿼리 파라미터에 대한 관리 시스템을 추가해주면 된답니다.\n\n> window.onpopstate 이벤트 핸들러로 라우트 재실행을 구현했는데, 향후 복잡한 상태 관리가 필요할 때 더 좋은 설계 방안이나 패턴이 있을지 알고 싶습니다.\n\n\"향후 복잡한 상태관리\"의 상황을 먼저 가정해보면 좋겠죠?\n지금은 뒤로가기/앞으로가기 그리고 직접적으로 실행하기 등에 대한 대응이 되어있는데요,\n이 외에 또 무엇이 있을지 고민해보시면 좋겠어요 ㅎㅎ\n\n> 전반적으로 이 라우터 구조가 규모가 커졌을 때 유지보수나 기능 확장에 유리한지, 아니면 리팩토링이 필요할지 조언을 받고 싶습니다\n\n위에 언급한 내용들을 종합해보시면 좋겠어요.\n이럴 때 희진님께선 \"확장에 유리한 이유\" 등을 다루는게 중요해요. 이를 기반으로 이야기를 전개해야 저희가 더 디테일한 소통이 가능하답니다.\n\n일단 유지보수 상황을 먼저 가정해주세요.\n어떤 상황에 대응을 할 수 있을지 랄까..\n엣지케이스를 정의해보는거죠.\n이 과정 없이 \"대응 가능해?\" 라고 하는건 이야기 하기에 어렵다고 생각해요.",
    "enrolledId": "6853f85d851b4a7da883412b",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543e1",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김휘린",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/13"
      }
    ],
    "feedback": "휘린님 수고하셨습니다!\n\n* 저는 작은 컴포넌트 단위에서 해당 컴포넌트만 다시 렌더링을 시킬 수 있는지 궁금합니다.\n\n지금은 렌더링을 컨트롤할 수 있는 방법이 없기때문에 부분렌더링을 할 수 없는 것이 맞습니다.\n향후 과제를 진행하면서는 좀 더 리액트에 가까운 과제로 진행되는데요 그때 해결될 수 있을 것 같아욥!\n\n* 제가 현재 이해한 바로는 리액트는 가상돔이 있어서 돔트리를 비교해서 반영하지만, 가상돔이 없는 제 코드에서는 그게 불가능 하다고 생각하는데, 혹시 가상돔이 없어도 구현할만한 방법이 있는지 궁금합니다.\n\n현재 제출해주신 과제를 기반으로는 불가능하고요.\n가상돔이 없이 선언적으로 구현한다고 하면 컴포넌트가 개별적으로 렌더링을 할 수 있는 방법이 일단 마련되어야할 것 같아요.\n즉 컴포넌트가 렌더링되면 부분적으로 업데이트가 가능해야겠죠\n그러려면 컴포넌트가 어떤 엘리먼트에 속해있는지를 알아야합니다. 현재로는 고려할 것이 많네요 ㅎㅎ\n만약 그런 구조가 만들어졌다면\n만들어주신 스토어를 조금 개선해서\n특정 관심사가 업데이트될때 해당 컴포넌트를 재실행하는 옵저버패턴을 구현하면 될 것 같아요~\n어차피 과제가 진행되면서 해당부분들을 배워나갈 것이라서 지금은 일단 이정도만 생각하셔도 되지 않을까 싶습니다 :)\n\n나중에 추가로 확인하시기 좋게 말씀드리면 react는 해당문제를 리컨실레이션(vdom)을 활용해서 해결했고요 뷰는 반응형 시스템을 활용해서 해결했습니다!\n",
    "enrolledId": "6853a924851b4a7da8357a5c",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543e3",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김효진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/53"
      }
    ],
    "feedback": "안녕하세요 김효진님, 수고하셨습니다. 이번 과제는 프레임워크 없이 순수 JavaScript로 SPA를 구현하면서 현대 프레임워크들이 해결하는 문제들을 직접 경험해보는 것이 목표였습니다. 옵저버 패턴을 적용한 상태 관리와 라우터 구현, 이벤트 핸들러 분리 등 중요한 개념들을 잘 적용해주셨네요.\n\n특히 `src/store/productStore.js`에서 구현한 옵저버 패턴 기반 스토어가 인상적입니다. \n\nconst subscribe = (callback) => {\n  subscribers.push(callback);\n  return () => {\n    const idx = subscribers.indexOf(callback);\n    if (idx > -1) subscribers.splice(idx, 1);\n  };\n};\n```\n\n특히나 return값을 통해서 구독 해제 함수를 반환하는 패턴으로 메모리 누수를 방지한 점이 좋습니다.\n\n아쉽지만 심화과정이 기대요건을 충족하지 못해서 코드의 완성도와 무관하게 심화 과정은 불합격을 드리도록 하겠습니다. 개발자에게 있어서 좋은 코드와 구조는 중요하지만 그 이유가 버그가 없이 요구사항을 만족하는 가치를 전달하는데 있는 것인만큼 우선 완성을 제일 먼저 생각해주기를 발바니다.\n\nAI 도구를 활용하면서도 핵심 개념을 이해하려 노력하신 점이 좋습니다. 다음 과제에서는 꼭 완성부터 하고 나서 테스트를 먼저 확인하며 진행하시면 더 좋은 결과를 얻으실 수 있을 것입니다.\n\n2주차도 화이팅입니다! 😊",
    "enrolledId": "6852955b851b4a7da86f237b",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543e5",
    "result": "PASS",
    "isBestPractice": true,
    "name": "이지훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/58"
      }
    ],
    "feedback": "안녕하세요 지훈님!\n1주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!!\n\n> 바닐라 자바스크립트로 컴포넌트를 작성한 예시들을 보면 이벤트리스너를 document가 아닌 컴포넌트 요소에 할당하는 예시를 많이 볼 수 있었다.\n\n리액트의 경우 정확히는 root component 에 등록하고 있답니다.\n대신 컴포넌트가 언마운트 될 때 현재 등록된 이벤트를 해제하는? 그런 로직을 수행하고 있을꺼에요!\n\n> queueMicrotask 를 사용하는 것을 추천 받았는데, 알맞게 사용되고 있는지 궁금합니다.\n\n지금은 그냥 실행을 지연할 뿐 모아서 처리되거나 하고 있진 않은 것 같아요!\n즉, queueMicrotask의 실행이 시작될 때 이후에 실행될 함수는 실행하지 않는 방식으로 처리되어야 하지 않을까요!? 이건 솔루션을 참고해보면 좋을 것 같아요!\n\n> observable 내부 observerMap 의 메모리를 최적화 할 수 있는 더 좋은 방법이 있는지 궁긍합니다.\n\n이미지 잘 최적화 해주신 것 같아요 ㅎㅎ\n다만 어차피 map에서 제거하면 set은 자연스럽게 제거되지 않을까!? 라고 추측이 되네요.\n\n아니면 Set 대신에 WeakSet을 사용한다거나!?\nhttps://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\n\n> src/pages/products.js 를 진입점으로 홈 화면 컴포넌트들을 보았을 때 코치님이 해당 src/core/Component.js 컴포넌트를 사용해야 한다면 어떤 점을 개선하고 싶으신가요?\n\n너무 포괄적인 질문이라서요, 지훈님이 문제라고 생각하는 지점을 이야기 해주시면 제가 이에 대한 답변은 드릴 수 있을 것 같아요 ㅎㅎ\n\nhttps://github.com/JunilHwang/black-coffee-study-lv3/blob/main/step3/frontend/src/_core/Component.ts\nhttps://github.com/JunilHwang/black-coffee-study-lv3/blob/main/step3/frontend/src/pages/LinesPage.ts\n\n저는 옛날에 이런식으로 만들었답니다!\n지금은 클래스를 쓰지 않아도 충분히 잘 추상화 할 수 있다고 생각해서 아예 클래스를 쓰고 있지 않아요.\n\nComponent가 쓰이는 모습을 토대로 판단해보면 지금 지훈님께서 만들어주신 모습이 더 직관적이라고 생각해요!\n\n> 생명주기를 관리할 때 꼼꼼하게 봐야할 부분은 어떤게 있을까요?\n\n이 또한 너무 포괄적인 질문이라... 지훈님의 생각을 먼저 이야기 해주시면 좋았을 것 같아요 ㅎㅎ\n저는 \"정확하게 실행되는 것\"이 무엇보다 중요하다고 생각합니다.\nmount 는 정말 마운트를 할 때 실행이 되는가 같은..?\n어떤 생명주기를 만들 것이고 각각의 생명주기마다 어떤 일이 일어나는지 명시하는 문서 같은게 일단 있어야 한다고 생각합니다.\n\n그리고 특히 컴포넌트가 사라지게 되면 없애야할 정보를 꼼꼼하게 없애는 과정이 필요하겠죠?\n이벤트나 상태 같은 것들이요!",
    "enrolledId": "6852337e851b4a7da82175ff",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543e7",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "정민기",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/33"
      }
    ],
    "feedback": "안녕하세요 정민기님, 수고하셨습니다. 이번 과제는 프레임워크 없이 순수 JavaScript로 SPA를 구현하면서 상태 관리, 라우팅, 컴포넌트 시스템의 핵심 개념을 직접 경험해보는 것이 목표였습니다. \n\n코드를 보니 컴포넌트 분리와 라우터 구현을 시도해보려고 한건 보이지만 현재의 코드만 가지고는 채점도 피드백도 드리기가 어렵네요.\n\n비록 이번에는 통과하지 못했지만, 바닐라 JS로 SPA를 만들어보신 경험 자체가 큰 자산이 될 것입니다. 2주차도 화이팅입니다! 😊\n\n---\n\nQ) state와 handler를 어떤식으로 나눠서 관리를 해야할지\n\n=> 우선 state를 변경하는 함수를 만들고 그 함수에서 값이 변경이 되면 화면을 업데이트를 하는 가장 단순한 경로를 만들어 봅시다. 그리고 모든 상태 변경시 화면을 업데이트하는 로직을 만들고 값을 변경시켜보는 로직까지 먼저 만들어봐요.\n\n위 멘트를 기준으로 AI와 함께 조금 놀아보시면 무슨 말인지 감을 잡아가기를 바래요.\n\n\nQ) 컴포넌트 단위를 어떤식으로 잘게 쪼개서 관리를 해야할지\n\n=> 컴포넌트는 상태 -> 화면 -> 이벤트 -> 상태 변화 -> 화면 변화 라는 사이클을 돌게 되어 있는데 우선 필요한 화면을 먼저 만들고 화면에서 변해야 하는 데이터를 상태로 분리하고 사용자가 할 수 있는 행동을 이벤트로 만드는 순서대로  진행해보면 됩니다.\n\n우선은 화면을 기준으로 먼저 생각하고 나중에는 상태(데이터)를 기준으로 생각할 수 있도록 발전할 수 있습니다.\n\n과제와 질문이 너무 피상적이어서 답변을 이정도 밖에 못하겠네요. 다음 번 과제는 훨씬 더 구체적인 상황에 대한 질문이길 기대할게요. 수고하셨습니다.",
    "enrolledId": "684cd08584ed0f3459eb21b9",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543e9",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "강병준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/76"
      }
    ],
    "feedback": "안녕하세요 강병준님, 제출해주신 과제를 검토했습니다. \n\n이번 과제는 프레임워크 없이 순수 JavaScript로 SPA를 구현하면서, 현대 프레임워크들이 해결하고자 하는 문제들을 직접 경험해보는 것이 목적이었습니다. 상태 관리, 라우팅, 렌더링 최적화 등의 핵심 개념을 직접 구현하면서 깊이 있는 학습이 이루어지길 기대했습니다.\n\n이번 과제의 코드 구현이 이루어지지 않아 아쉽게도 이번 과제는 불합격처리됩니다.\n\n혹시 기술적인 어려움이나 시간 부족 등의 문제가 있으셨다면, 다음 과제 진행 시에는 미리 질문 채널을 통해 도움을 요청하시는 것을 권장드립니다. 또한 부분적으로라도 구현한 내용이 있다면 제출하시는 것이 학습 측면에서 더 도움이 될 것입니다.\n\n다음 기회에는 꼭 완성된 과제를 만나뵐 수 있기를 기대합니다. 화이팅입니다!",
    "enrolledId": "684abe3784ed0f345985eaaf",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543eb",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "박상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/66"
      }
    ],
    "feedback": "안녕하세요 상수님! 1주차 과제 잘 진행해주셨네요 ㅎㅎ\n다만 배포는 해주셨는데, 배포된 페이지가 정상적으로 동작하지 않고 있어요..!\n배포 후 정상동작까지가 심화과제의 채점 범위이다보니.. 이 부분은 아쉽지만 불합격으로 남겨놓겠습니다 ㅠㅠ\n\n그리고 과제 제출 후에도 PR의 내용은 수정해도 무방하기 때문에,\n꼭 PR에 질문이 있으면 남겨주세요!\n\n고생하셨씁니다~",
    "enrolledId": "684aad6b84ed0f3459763b8d",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543ed",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "조영민",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/45"
      }
    ],
    "feedback": "안녕하세요 영민님!\n1주차 과제 잘 진힝해주셨군요! 고생하셨습니다 ㅎㅎ\n다만 과제를 아직 다 마무리하질 못했군요 ㅠㅠ \n2주차는 잘 마무리할 수 있기를 바랍니다!!\n\n---\n\n현재 특별한 질문이 없는 상태군요..!\n\n> 초기 설계해놓은 코드에 문제가 있으면 기능 구현 중에 코드를 엎어버려서 시간이 오래걸리는데 일단 기능 구현부터 끝내야할지 이게 맞는지 항상 고민임\n\n저는 기능 구현부터 끝내야 한다고 생각해요.\n저희가 실무에서 만들어가는 제품도 어쨌든 \"완성된 상태\"가 중요하고,\n완성된 상태를 유지하면서 리팩토링을 하는게 안전한 방법이라고 생각합니다.",
    "enrolledId": "684a92b384ed0f34596009d9",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543ef",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여찬규",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/20"
      }
    ],
    "feedback": "안녕하세요 찬규님! 1주차 과제 잘 진행해주셨네요 ㅎㅎ 너무 고생하셨어요!\n\n> 회사 제품 특성상 요구사항이 빠르게 변경되기 때문에 실무에서 사용하기는 다소 어려울 것 같다는 생각도 들지만, 테스트라는 것 자체가 어떻게 보면 제품의 히스토리와 경험을 쌓는 과정이기 때문에 시도해볼 만하다고 생각합니다.\n\n요구사항이 빠르게 변할수록 오히려 테스트가 더 필요하다고 생각합니다 ㅎㅎ\n이에 대한 부분은 아마 7주차~8주차 때 알게되리라 생각해요.\n꼭 지금처럼 단위테스트 방식으로 작성하지 않아도 e2e 테스트 방식으로 작성되어있다면 요구사항에도 더 빠르게 더 정확하게 대응할 수 있다고 생각해요.\n\nplaywright autogen 같은 기능을 이용해보시면 알 수 있답니다 ㅋㅋ\n\n> 빠르게 변경되는 요구사항이 문제라면 런타임이나 완전한 서비스 비즈니스 로직을 테스트하는 것이 아닌, 코어 레벨의 코드만 테스트해봐도 충분히 의미가 있을 것 같아요.\n\n이에해 완전히 동의합니다! 코어로직에 대한 테스트는 필수라고 생각해요!\n\n> 이벤트 관리 관련\n\n바닐라로 작성한다고 했을 때, 사실 지금이 최선의 방식이지 않을까? 라는 생각이 들어요 ㅎㅎ\n\n다만 이벤트 위임에 대한 코드를 추상화해서 관리하면 좋답니다.\n제가 만들어놓은 솔루션을 토대로 참고해보세요!\n저는 이벤트를 하나의 파일에 만들어서 관리했는데, 사실 각각의 컴포넌트에 만들어서 관리하는게 더 좋다고 생각해요. ",
    "enrolledId": "684a8d6184ed0f34595bafbf",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543f1",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수민",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/69"
      }
    ],
    "feedback": "수민님 수고많으셨습니다!\n\n* (리뷰는 아닌데 궁금한 점) MVC 패턴이랑 SPA가 궁합이 맞지 않는 것인지 아니면 해결할 방법이 있었는데 제가 잘 몰랐던 것인지 궁금합니다!\n\nSPA와 MVC 패턴은 궁합이 딱히 안맞다고는 할 수 없을 것 같아요.\nMVC보다 나은 것들이 나왔다고 보는 편이 좋을 것 같습니다 :)\n사실 무엇이 궁금한것인지 좀더 자세히 질문을 해주시면 좋을 것 같아요!\n제가 알고 있는 MVC패턴으로 구현한 SPA 프레임웍으로는 백본이라는 녀석이 있어요! 그 프레임웍의 코드 모양세를 조금 살펴보시면 조금 힌트가 되실 것 같습니다!\n\n* 제가 구현한 라우터와 Component class가 과한 렌더링을 유발하지는 않는지 궁금합니다. 코드만으로 몇 회 불필요한 렌더링이 일어나는지 이런 걸 생각하는 게 어려운데 잘하고 싶어요..!\n\n이런건 사실 코드만으로는 측정하기가 힘들 수 있어요. 이럴때 사용하기 좋은 것아 바로 크롬 개발자 도구인 것 같아요. 퍼포먼스탭을 활용해보세요!\nhttps://developer.chrome.com/docs/devtools/performance/reference?hl=ko\n처음에는 익숙하지 않은데 막상 보시면 금세 익숙해지실 것 같아요!\n저도 코드로 예측한대로 동작하지 않아 이런 도구를 활용해서 실제로 어떻게 실행되는지 의도한 대로 동작하는지 아닌지 확인해봅니다.\n\n* 디스코드로 질문 드렸던 내용인데, 단위 테스트 환경에서 query가 {}로 인식되어 통과하지 못하는 문제가 있었어요. 테스트 환경에서 window 객체가 없는데 window에 바인딩한 router를 사용해서 그런 걸까요? 근데.. 테스트 환경에서 window 객체 없는 거 맞..나..?\n\n아마 jsdom 때문인 것 같은데요. 이상하네요 jsdom에도 window는 있을텐데요. 아무래도 모킹이다보니 실제 브라우저의 동작과 달라서 그럴수도 있는데요.\n움 해당 코드에 준하는 솔루션 코드의 조각을 살펴보시면 좋을 것 같습니다!",
    "enrolledId": "68497d2484ed0f3459b09aca",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543f3",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박준형",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/38"
      }
    ],
    "feedback": "안녕하세요 준형님, 수고하셨습니다. 이번 과제는 프레임워크 없이 SPA를 구현하면서 React와 같은 프레임워크가 해결하는 문제들을 직접 경험해보는 것이 목표였어요. \n\n코드의 구현이 초창기 React의 클래스 컴포넌트의 모습을 보는 것 같아서 인상깊었습니다. 컴포넌트 베이스를 바닐라 자바스크립트로 구현하고, Pub-Sub 패턴 기반의 전역 상태 관리 시스템까지 만들어내셨네요. 특히 메모리 누수 방지를 위한 이벤트 핸들러 관리와 미들웨어 시스템 구현이 인상적입니다.\n\nAI와의 바이브코딩 경험도 흥미롭게 읽었습니다. 단순히 코드를 생성하는 것이 아니라 아키텍처 설계부터 디버깅 미들웨어까지 함께 고민하며 개발하신 과정이 잘 드러나네요.\n\n너무 너무 잘하셨습니다. :)\n\n---\n\nQ) 상속 대신 합성을 어떻게 활용할 수 있을까요?\n\n=> 전통적으로 객체에서 합성을 한다는 건 아래처럼 공통 기능을 만든다음에 this를 넘겨주는 것입니다. this는 baseComponent의 공통 메소드를 가지고 있으니 로직을 분리할수가 있죠.\n\n// 공통 기능을 별도 클래스로 분리\nclass SearchHandler {\n  constructor(component) {\n    this.component = component;  // this를 통째로 받음\n  }\n  \n  handleSearch(query) {\n    this.component.setState({ search: query });\n    this.component.loadProducts();  // component의 메서드 호출\n  }\n}\n```\n\n그렇지만 이런 방식으로 만들면 재사용을 하기 위해 분리를 했는데 Search기능을 활용하기 위한 method들을 각자 만들어줘야 하는 문제가 발생합니다. 내부 구조를 모른채로 재사용을 하고 싶지만 객체지향은 내부 구조의 약속(=인터페이스)를 기준으로 소통하도록 되어 있으니까요.\n\n이러한 이유가 클래스 컴포넌트를 포기하고 hook으로 넘어간 이유이죠. 합성 자체가 잘못된 방식은 아니구요. 명시적으로 좋은 구조를 유지할 수 있다는 장점과 개발자 경험이 더 복잡해진다는 단점을 포기하고 FE 특성상 견고한 구조보다는 단순하고 수정하기 좋은 코드를 만들기 위한 선택이라고 생각해주세요.\n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "6847a79c614fe33053fc070a",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543f5",
    "result": "PASS",
    "isBestPractice": true,
    "name": "정유열",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/28"
      }
    ],
    "feedback": "유열님 과제 퀄리티가 엄청 높네요 ㅎㅎ 고생하셨습니다.\n과제의 목표를 명확하게 하고 잘 접근해주신 것 같아요.\n함께 했으면 하는 여러 고민들을 매우 잘 진행해주신 것 같습니다\nAI에 대한 활용도 이상적으로 잘 하신 것 같아 따로 이야기 할 게 없네요 ㅎㅎ \n\n> 페이지 모듈과 컴포넌트 모듈의 역할 분리를 했으나 만족스러운 구조가 나오지 못한것 같습니다. 어떻게 하면 더 나은 구조를 만들 수 있었을까요?\n\n여기서 이제 디자인 패턴이 필요해지는 시점이 아닐까 싶네요!\n실제로 바닐라 자바스크립트만으로 과거에 구현을 진행했었을 시기에는 여러 패턴들을 사용해서 함수를 추상화 하고 제어를 했거든요.\n이벤트에 대해서는 이벤트 버스를 구현해두고 제어를 하기도 했고, 모듈패턴 이나 프로토타입을 사용해 각각의 동작하게 하기도하구요. 요즘은 class 컴포넌트를 명확하게 사용할 수도 있죠.\n공통적으로 수행해야 하는 여러 작업들을 리액트 프레임워크에서 컴포넌트가 해당 작업들을 수행하는 것처럼 작업을 숨기는 것도 좋은 방법일 것 같아요!\n\n> 외부 상태관리 스토어로써 적절한 기능을 하도록 잘 구성하였는지 궁금합니다.\n\n넵 적절하게 구현해주신것 같아요! 쉽게 잘 정리해주신 것 같아요. \n이미 아시겠지만, 바닐라를 통한 다양한 구현 방법이 있는 만큼 여러 방법으로도 구현을 해보시는 것도 재밌을 것 같네요 ㅎㅎ\n\n> 비즈니스로직과 렌더링 로직이 강결합되어 의도한 만큼 깔끔한 코드를 작성하지는 못했는데 어떻게하면 더 좋은 코드를 작성할 수 있었을까요?\n\n말씀해주신대로 지금 컴포넌트는 꽤 많은 작업을 한곳에서 진행중인것 같아요. 일단은 컴포넌트의 단위 단위를 조금 더 작게 잡고 구현을 하는게 필요해 보이구요. 조금 유행이 지났을지 몰라도 MVC와 유사하게 뷰의 영역과 모델의 영역을 제어하도록 분리를 하는 것도 방법일 것 같구요. \n1번 질문과 유사한 답변이겠지만, 컴포넌트 패턴 그리고 사용하는 라이브러리의 패턴을 따라 구현해보고 각각의 동작을 구분하는게 제일 좋은 해결 방법이자 공부가 되지 않을까 싶네요 ㅎㅎ\n\n> 토스트(@/components/toast/index.ts)와 모달(@/components/modal/index.ts) 위치에 대한 고민\n\n이 부분에 있어서 사실 유저 사용성이 가장 중요한 고민이 되는 것 같지만,  공통된 위치를 만드는게 좋을 것 같아요. (크게 중요하진 않은 것 같아서) 공통으로 포털의 위치를 잡고 해당 토스트와 모달에 대한 상태들은 별도 provider 처럼 상태를 다르게 줘 관리하는게 이상적일 것 같아요! 하지만, 별도로 위치가 달라져야 하는 사용성이라면 위치를 주입받을 수 있는 형태의 공통 컴포넌트로 관리하는게 좋지 않을까 싶네요!\n\n고생하셨고 다음 주도 화이팅입니다~~",
    "enrolledId": "6847a18a614fe33053f85c23",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543f7",
    "result": "PASS",
    "isBestPractice": false,
    "name": "허정석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/19"
      }
    ],
    "feedback": "안녕하세요 정석님!\n\nhttps://velog.io/@jungseokheo/hanghaeplus1stweek\n회고도 너무 잘 봤어요 ㅎㅎ\nPR에도 정석님의 문제해결 과정이 잘 드러나서 재밌게 잘 읽었어요!\n\n> 과제가 상세하게 테스트 코드가 있어서 좋았으나, 해당 페이지가 랜더링 됐을 때의 스냅샷을 비교 하는거여서 숨은 그림 찾기 같은 느낌이 강했다. 그리고 테스트 코드를 처음 접해봐서 감을 잡는데 시간이 오래 걸렸다. 발제 시간에 테스트 설명을 좀 더 진행했으면 좋겠다.\n\n참고해서 잘 개선해보겠습니다!!! 좋은 의견 감사드려요!\n\n> 이벤트 핸들링에 대해서 고민을 하지 않았었는데, 이번 과제를 통해 핸들링에 대해 관심이 생겼습니다. 개발하면서 거의 처음으로 핸들링을 구현 했어서 보완할 부분을 듣고싶습니다. 또 코치님이라면 어떤 기준과 방식으로 이벤트 핸들링을 했을지 궁금합니다.\n\n지금 보니까 document 이벤트를 등록하고 이벤트 핸들러 내부에 내용이 다 들어있네요!\n\n여기서 \"정의하는 부분\"과 \"실행하는 부분\"으로 코드를 나누어서 관리해주면 좋답니다 ㅎㅎ\n\n가령,\n\naddEvent('change', '.selector', callback)\n\naddEvent라는 함수가 정의하는 과정이 추상화되어있고, 실행 코드를 callback 을 주입하는거죠.\n\n이건 솔루션 코드를 참고해주시면 될 것 같아요!\n\n고생하셨습니다 정석님~!\n\n---\n\n구현한 내용과는 별개로, 현재 테스트가 통과하고 있지 못해서... 아쉽지만 불통으로 남겨놓겠습니다 ㅠㅠ",
    "enrolledId": "68479c49614fe33053f4b25d",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543f9",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "이가은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/54"
      }
    ],
    "feedback": "안녕하세요 가은, 수고하셨습니다. 이번 과제는 프레임워크 없이 SPA를 구현하면서 바닐라 자바스크립트의 핵심 개념들을 깊이 이해하는 것이 목표였습니다. 특히 상태 관리, 라우팅, 이벤트 처리 등 프레임워크가 해결해주던 문제들을 직접 경험해보셨기를 바랍니다.\n\n분명 과제를 하는 동안 여러가지 경험들을 했었지만 결과가 저희가 제시했던 기준을 만족시키지 못했기에 불합격을 드립니다. 개발자에게는 좋은 코드 이전에 요구사항의 완성과 딜리버리가 제일 중요한 만큼 최선을 다해 우선 되는 코드를 먼저 만들고 좋은 코드로 만들자고 계속해서 다짐해주세요. 과제에 주어지는 시간이 많지 않은 만큼 좋은 코드보다 완성을 목표로 삼아주기를 바랍니다.\n\n그리고 모르면 물어보고 함께 하는 경험또한 저희가 꼭 배워가고 익혀하고 경험했으면 하는 부분입니다. 이제 1주차에 깨달음(!)을 얻었으니 완성을 위해서 뭐든 시도해보는 그런 문제해결사적인 개발자의 면모를 남은 주차동안 연습해가기를 바랍니다.\n\n---\n\nQ) 너무 테스트코드에 의존해서 UI를 만드는게 아닐까의 고민\n\n=> 테스트는 요구사항을 명확히 하는 가이드입니다. TDD라는 테스트 주도 개발이라는 방법도 있지만 일반적인 방식인 요구사항을 이해한채로 만들어가면서 놓치는 부분을 테스트를 통해 주도해가면 되죠. \n\n=> 아직 익숙지 않고 테스트의 빨간 경고등에게 계속 주의(?)를 뺴았길 수도 있겠지만 차자 적응해 나갈거라 기대합니다. 화이팅입니다\n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "68479688614fe33053f10a5f",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543fb",
    "result": "PASS",
    "isBestPractice": true,
    "name": "임두현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/31"
      }
    ],
    "feedback": "안녕하세요 두현님!\n1주차 과제 무척 잘 진행해주셨네요 ㅎㅎ 너무 고생하셨어요!\n\n> Claude와 Cursor를 사용했습니다. AI는 세션을 적절하게 관리하는 것이 중요합니다. 그래서 진행사항 및 프로젝트의 방향성을 이야기하는 문서들을 docs 폴더에 저장했습니다. 이를 통해 세션을 높은 빈도로 비우면서도 docs의 문서들을 읽음으로써 대화의 연속성을 이어갈 수 있었습니다.\n\n저도 문서가 제일 중요하다고 생각해요! 진행에 필요한 컨텍스트를 docs로 잘 정리해주신게 무척 인상적이네요 ㅎㅎ\n\n> main.js에서 렌더링을 하는 생애주기간 데이터 및 이벤트 핸들러 구독 셋업과 클린업 처리 흐름이 정리가 안되어 그 때 그 때 돌아가게끔 되어있어서 관련하여 리뷰받고자 합니다.\n\nmain 자체에 대한 클린업은.. 사실지금 불필요하다고 생각해요.\n제가 테스트를 잘못작성해서 이런 고민을 하게 되는 것 같네요 ㅠㅠ\n\n대신 컴포넌트에 대한 클린업, 페이지에 대한 클린업은 필요하다고 생각합니다!\n\n> spa에 적합한 구조인지 이야기를 나눠보고 싶습니다.\n\n지금 구조는 충분히 SPA에 적합한 구조라고 생각해요!\n다만 이벤트 관리하는게 아마 제일 마음에 들지 않는 부분이라고 생각될 것 같은데요, 이 또한 2주차 과제를 진행하면서 어느정도는 해소되리라 생각합니다 ㅎㅎ",
    "enrolledId": "684149af4e1c73fff27b2528",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543fd",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "양성진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/60"
      }
    ],
    "feedback": "안녕하세요 성진님~\n1주차 과제 잘 진행해주셨네요 ㅎㅎ \nAI 활용에 대한 복잡 미묘한 감정을 느끼신것 같군요 ㅋㅋ\n지금은 소화할 시간이 부족해써 그랬으리라 생각해요.\n1주일이라는 시간이 짧기도 했고..!?\n다만 내가 혼자서 할 수 없는 일을 AI와 팀의 도움을 받아서 함께 해결하는 경험도 무척 중요하다고 생각합니다! 우리가 할 수 있는 일의 범위를 넓혀주는거니까요! 대신 소화하는 과정도 꼭 챙겨주세요!\n\n---\n\n> store을 만들때 옵저버 패턴을 이용해서 만들었는데 store를 두가지로 나눠서 작업을했는데 보완할 내용이 있는지 구성은 잘한건지 잘모르겠습니다.\n\n나눠서 하는건 큰 문제되가 되지 않는다고 생각해요! 다만 공통으로 사용할 수 있는 로직이 있을 것 같은데, 지금은 이런게 추상화 되지 않았은 상태라서 아쉽네요!\n옵저버 같은걸 store가 공통으로 사용할 수 있게 하면 어떨까요?\n\n> Home.js에서 기본과제 1-1 테스트 때문에 원래 Store을 썻다가 loading하는 부분만 모듈 스코프를 이용했는데.. 왜 store을 사용하면 테스트가 통과가 안되는지 알수가 있을까요..\n\n이 부분은 AS-IS와 TO-BE의 코드를 보여주셔야 이해할 수 있을 것 같아요 ㅎㅎ; 텍스트만 보고는 뭘 어떻게 하려고 했다는 뜻인지 이해하기가 어렵네요 ㅠㅠ\n\n아니면 커밋 링크라도 주셨으면 좋았을 것 같아요.\n\n> infinitescroll.js) 무한스크롤을 구현할때, e2e테스트에서 추가상품대기 부분에서 20개씩 카드가 40개가 나오면 되는 부분에서 다음페이지로 추가로 api호출이 안됐습니다. 로컬환경에서는 잘되었는데, 테스트에서는 왜 안되는지 궁금합니다.\n\n성진님..!\n이건 테스트를 통과하는게 이상한 것 같아요.\n지금 배포된 페이지에서도, 로컬에서도, 로컬 테스트에서도 저는 다 실패하네요 ㅎㅎ ㅠㅠ",
    "enrolledId": "68417c4a4e1c73fff2a66073",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad614543ff",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/40"
      }
    ],
    "feedback": "고생하셨습니다 상수님ㅎㅎㅎ\n근본없는 괴물이라뇨 잘하셨습니다 ㅋㅋㅋ\n개인적으로 이번 과제를 통해 명확하게 사용하는 기술들이 해결하려고 했던 문제들은 무엇이고, 어떤 식으로 해결했는지 고민해볼수 있으셨던 것 같아서 훌륭한 경험이 되지 않았을까 싶네요 :+1\nAI 활용도 작성해주신 것처럼 만들고자 하는 목표와 참고할 수 있는 명확한 자료를 넣어서 구현을 잘 해주셨네요.\n\n질문 주신거 답변드려보면, 라이프 사이클과 렌더링에 대해서는 명시적인 함수를 컴포넌트에서 만들어서 사용하는 것이 필요해보여요. 라이프 사이클 함수가 있다면 결국 명확한 제어와 사용자의 행동을 주입받아 실행시킨다는 의미이기 때문에 명시적인 구현이 필요할 것 같구요! 상태 관리에 대한 리렌더링 관련해서는 이미 알고 계신것처럼 상태를 클로저로 물고 있으면서 setState를 할 때 명시적으로 렌더링을 발생시키거나, 좀 더 우아하게 처리하고 싶다면 쉽게 인터넷에서 확인할 수 있는 여러 반응형 상태 라이브러리를 구현해 사용해보는 거도 방법일 것 같아요! 사실 구현해보면 어렵지 않거든요.\n꼭 도전해볼법한 주제들이니, 상태를 모니터링 하는 곳들에서 변화가 발생할 때 어떤 동작을 할 지 등등 고민들을 해보시면 좋겠네요.\n\n고생하셨습니다!",
    "enrolledId": "683fa08b4e1c73fff25b6b7e",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454401",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "이진희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/41"
      }
    ],
    "feedback": "안녕하세요 이진희님, 수고하셨습니다. 이번 과제는 프레임워크 없이 SPA를 구현하면서 React와 같은 프레임워크가 해결하는 문제들을 직접 경험해보는 것이 목표였습니다. \n\n코드를 보니 컴포넌트 분리와 구조화에 신경을 많이 쓰신 점이 인상적입니다. 특히 `renderViewComponent`를 통해 React의 컴포넌트 시스템을 구현하려 시도하신 점이 좋았습니다. DOM 조작을 추상화하고 컴포넌트 단위로 관리하려는 접근은 올바른 방향이었습니다.\n\n다만 완성도 면에서 많이 아쉽네요. 짧지 않은 기간인지라 잘 만들어 질수도 있었겠지만 저희가 요구했던 CI 테스트가 모두 실패하고 있기에 '불합격'을 드릴 수 밖에 없습니다.\n\n개발에게 있어서 80%는 되었는데 20%는 한건 사실 안한 것과 다를게 없죠. 99%를 해도 1%의 버그때문에 서비스의 평점이 낮아지는게 개발자인 만큼 좋은 코드 이전에는 마감과 딜리버리가 최우선 역량입니다.\n\n설계에 너무 많은 시간을 투자하셨다고 하셨는데, 잘하고 싶은 마음에 많은 개발자들이 겪는 문제죠. 그렇기에 더더욱 앞으로는 먼저 동작하는 최소한의 구현을 만들고, 점진적으로 개선하는 접근으로 나아갈 수 있기를 바랍니다.\n\n언제나 마감과 딜리버리가 좋은 코드보다 중요하는거 기억해주세요!\n\n---\n\nQ) renderViewComponent의 구조와 업데이트 흐름에 대해\n\n=> 현재 구조는 명시적이어서 나쁘지 않습니다. 그러나 이 프레임워크를 쓰는 사람에게 명시적으로 호출하라고 하는 건 아니겠죠? 지금 구조만으로는 내부에서 자동으로 해줄 것인지 외부 사용자에게 명시적으로 쓰게 해주게 할지 확실치 않네요. \n\n=> 선언적이다라는 것은 내가 원하는 것만 적어주면 내부에서 알아서 한다이므로 내부에서는 이를 한번에 렌더링을 유도하는게 올바른 구조라고 생각합니다. 확신히 안 들때에는 현재 어떤 구조로 되어 있는지 한번 생각해보세요\n\n=> replaceChild는 지금으로썬 괜찮다 생각합니다. 사실 DOM을 전체 교체하는 것은 상당히 비효율적이기에 많은 프레임워크들이 변해야하는 코드만 변하도록 하는게 기술인데 1주차 과제에 그것까지 해주기를 바라는건 너무 큰 욕심이겠죠? (웃음)\n\n\n수고하셨습니다. 다음 과제에서는 먼저 테스트를 통과시키는 것을 목표로 하시고, 그 다음에 리팩토링을 진행하시길 추천드립니다. 화이팅입니다! :)",
    "enrolledId": "683f18534e1c73fff2105065",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454403",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양창훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/23"
      }
    ],
    "feedback": "안녕하세요 양창훈님, 수고하셨습니다. 이번 과제는 프레임워크 없이 순수 JavaScript로 SPA를 구현하면서 상태 관리, 라우팅, 렌더링 최적화 등의 핵심 개념을 체득하는 것이 목표였습니다. 특히 이벤트 바인딩과 재렌더링 타이밍에 대한 이해를 얻으셨다니 좋은 성과네요. \n\n사실 이러한 코딩은 프레임워크를 쓰기에 할 필요는 없지만 이러한 개발을 직접 경험하게 되면 알게 되는 이해의 선명도가 달라지는 만큼 어려웠던 경험을 해본 것이 큰 자산이 될거에요.\n\n말씀해주신대로 코드를 살펴보니 `productPage.js`의 `bindEvents` 함수에서 이벤트 리스너를 중복 등록하는 문제가 있네요. 매번 `removeEventListener` 없이 `addEventListener`만 호출하면 동일한 핸들러가 누적됩니다.\n\n이를 해결하기 위해서 React는 실제로 DOM이벤트는 한번만 위임을 하고 나머지는 컴포넌트의 여부에 따라 이벤트 핸들러를 위임하는 방식을 하고 있습니다. 다른 프레임워크들은 컴포넌트가 등록할때 이벤트를 연결하고 제거될때마다 자동으로 이벤트 핸들러를 떼어내는 방법을 쓰고 있죠.\n\n이 코드의 경우 라우트 단위로 이벤트를 연결하고 있기에 라우트가 바뀌고 bindEvents를 하기전에 모든 이벤트를 다 해제해주는 방식으로 내재화 시키는 방향으로 만들 수 있었겠네요.\n\n사실 지금 쓰고 있는 구조가 일종의 정답지인만큼 더 잘하기 위해서는 현대 프론트엔드 구조가 어떻게 되어있나 생각하시면서 구조를 만들어가면 더 이해가 잘되고 좋은 구조의 코드를 작성하실 수 있을거에요.\n\n다음은 질문 주신 내용에 대한 구체적인 답변입니다.\n\n---\n\nQ) bindEvent 중복 문제와 removeEventListener\n=> 피드백에 설명을 이미 했군요. DOM 이벤트는 하나만 쓰고 위임을 하거나 컴포넌트 등록시 이벤트를 등록하고 해제시 삭제하는 방식으로 만들면 됩니다. 대게 eventListner등록을 하고 해제하는 코드를 return해서 보관하고 있다가 일괄로 호출하는 방법을 사용합니다.\n\nQ) 컴포넌트 분리 기준\n=> 내가 현재 쓰고 있는 현대적 방식과 최대한 닯게 작성해보려고 하세요. 독특하고 유니크한 해법을 하지 않아도 됩니다. 어차피 현업에서는 오랫동안 검증된 방식으로 하게 될거잖아요? 그러니 내가 현재 쓰고 있는 프론트엔드 개념과 최대한 일치하도록 만들어 보세요.\n\nQ) 상세페이지 로딩 속도\n\n=> `render()` 함수가 여러 번 호출되거나 불필요한 DOM 재생성이 원인일 수 있습니다. 이벤트나 렌더의 중복으로 인해 불필요한 로직이 있을거라 생각합니다. 로그를 통해서 확인보시죠.\n\n=> 그리고 이러한 고민보다도 일단 시간내 요구사항을 다 만족시키는 코드를 작성하는 것을 더 우선시해서 2주차 코드는 꼭 테스트 코드가 다 통과되는 코드를 한번 만들어 봅시다! \n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "6835a5664e1c73fff2ddfa55",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454405",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이은지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/64"
      }
    ],
    "feedback": "은지님 수고 많으셨습니다! \n회고문서도 잘 작성해주셨네요 ㅎㅎ\n코드 내용들도 뭔가 고민하신 흔적이 보입니다. 과제가 기대하는 이상을 해주신 부분도 있고요 ㅎㅎㅎ\n컴포넌트와 스토어등 주요 개념을 추상화해서 프레임웍을 착안하신 부분도 돋보입니다 :)\n\n- Component를 언제 어디서 cleanup/destroy 해야할 지 모르겠습니다.\n지금처럼 라우터에서 처리하면 되지 않을까 싶습니다.  그렇게하려면 자식 컴포넌트를 관리하는 부분도 컴포넌트에서 추상화되어야할 것 같아요 :)\n예를들어 배열로 관리해서 페이지 컴포넌트가 변경될때 기존 컴포넌트의 제거 메서드를 실행하고 해당 컴포넌트는 자식노드가 있으면 자식컴포넌드틀도 해댕 메서드를 실행하는 것이죠.\n\n- Store에 사용된 옵저버 패턴과 그 사용 방식이 적절한 지 모르겠습니다. 컴포넌트에서 setup에서 subscribe하고 cleanup시 unsubscribe시키고 있는데, 그게 맞는지\n넵 일반적인 옵저버패턴으로 보입니다. 사실 이부분은 준일님이 이 과제에서 기대했던 내용은 아니었던 것 같은데 초과해서 과제를 달성하셨네요 :) \n물론 장치가 여러가지가 있고 구조적으로는 다르지만 근본적으로는 뷰가 이런 원리로 만들어졌습니다!\n\n- 라우터 상태값과 메서드들을 편리하게 사용하기 위한 useRouter.js를 만들어 사용했습니다. (hook은 아니지만 hook 폴더에 있음) 좀 더 편리하고 명쾌한 방법이 없을까 고민됩니다.\n네 해당 코드는 비슷한 메서드가 반복되는 것 같은데욥. 사실 우리 과제에서는 훅이란 구조를 끼워맞출필요는 없는 것 같아요.\n저라면 그냥 라우터를 직접 사용했을것 같아요. 라우터가 없는 예외는 언제 발생하는지 지금으로서는 저는 예측이 안되네요!",
    "enrolledId": "6833c8d54e1c73fff246f798",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454407",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정도은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/12"
      }
    ],
    "feedback": "안녕하세요 정도은님, 수고하셨습니다. 이번 과제는 프레임워크 없이 순수 JavaScript로 SPA를 구현하면서 React가 해결하는 문제들을 직접 경험해보는 의도를 가진 과제였어요. 회고에서 언급하신 것처럼 \"React가 왜 필요한지\" 명확히 체감하셨기를 바랍니다.\n\n특히 Toast 컴포넌트를 클로저로 구현하신 점이 인상적이네요. 전역 상태를 클로저로 캡슐화하여 깔끔한 API(`Toast.success()`)를 제공한 것은 훌륭한 선택입니다. CartStorage의 이벤트 시스템과 카운터 관리도 잘 구현하셨어요.\n\n다만 `productLoader.js`에서 전역 변수(`currentPage`, `isLoading`, `hasMore`)로 무한 스크롤 상태를 관리하는 부분은 개선이 필요해 보입니다. 여러 페이지에서 상품 목록을 사용한다면 상태가 꼬일 수 있으니, 클로저나 클래스로 인스턴스화하여 각 페이지가 독립적인 상태를 가지도록 하는 것이 좋겠네요.\n\n다음은 구체적인 리뷰입니다.\n\n---\n\nQ) 클래스 vs 클로저 선택 기준\n\n=> 자바스크립트는 함수형 패러다임과 객체 지향 패러다임을 둘 다 쓸 수 있기에 두 가지의 장점이 있는 멋진 언어죠.\n\n=> 단일 인스턴스면 클로저(Toast, Modal), 여러 인스턴스가 필요하면 클래스가 적합합니다. 클로저는 private 변수를 자연스럽게 만들 수 있고, 클래스는 상속과 확장이 용이합니다.\n\n=> 자바스크립트가 아무래도 class를 표현하기에 복잡한 문법 체계를 가지고 있는 만큼 상속과 확장이 필요한 다양한 객체 타입을 가져야 하는 경우 ex) Node -> Element -> HTMLElement -> HTMLDiveElement 과 같이 상속과 타입의 확장이 유리한 구조에서는 class가 훨씬 더 좋은 선택입니다.\n\n=> 그밖의 단순한 동작과 모듈등 간결함을 추구하는 코드라면 클로저 방식의 코드가 대개의 경우 더 좋습니다.\n\n=> 그렇지만 너무 이렇게만 알면 안되겠죠? 각 방식의 차이를 실제로 이해하고 적절한 본인만의 판단기준을 찾아가길 바랍니다 :)\n\n\nQ) 상태를 함수 내부에서 유지하는 방법\n\n=> 이미 알고 있는대로 클로저를 활용하여 상태를 만들고 상태와 그것을 조작하는 함수를 함께 반환하는 팩토리 패턴을 사용하면 됩니다:\n\n```js\nfunction createProductList() {\n  let state = { page: 1, loading: false };\n  return {\n    load: () => { /* state 사용 */ },\n    getState: () => ({ ...state })\n  };\n}\n```\n\n다만 이런방식은 값을 변화 했을때 이벤트를 전달하기가 어려우므로 각 함수마다 마지막에는 render() 혹은 noify()등을 호출해야 하는 단점이 있죠. \n\n그러다보니 값이 변할때마가 이벤트를 전달하는 signal과 같은 것들이 현재 표준 객체로 만들려는 시도가 있습니다. 관련해서 찾아보시면 좋겠어요.\n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "682d428a0a72040b80bf93a5",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145440b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이태영",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/46"
      }
    ],
    "feedback": "안녕하세요 태영님! 1주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다.\n\n> 이런 부분은 과제 시작 전 참고 문서나 차라리 사전 스터디를 이런 부분을 하는 것이 더 좋을 것 같습니다.\n\n과제 챕터에 보면 SPA 지식뭉치 문서가 있고, 여기에 있는 내용만 참고해도 충분히 구현할 수 있는 게 많이 있답니다..! 다만 오히려 확인해야 하는 자료가 너무 많아서 탐색하기 힘들 수 있다는 생각이 드네요 ㅠㅠ\n\n> 제 생각은 학교나 학원처럼 지도와 배움이 있는 방식으로 생각을 했지만 그런 시스템으로 프로그램을 진행하고자 하는 의미보다는 '코치'의 의미처럼 내 자신이 진행을 하면서 코치를 받는 것으로 접근 해야 더 많은 것을 얻을 수 있겠다. 생각 했습니다.\n\n저도 이에 동의합니다 ㅎㅎ 더 정확히는, 저는 정답이 있는 교육을 지양하는 편이라서요. 경험이 제일 중요하고, 경험을 해야 나의 진짜 지식이 된다고 생각합니다.\n\n어쨌든 교육 과정이라서 최소한의 답을 제공하긴 하지만... 내가 어떤 지식을 학습할 때는 나 스스로의 경험이 무엇보다 중요하다고 생각해요!\n\n> AI가 일을 더 잘 하게 만든 방법은 만들었다기 보다 내가 어떤 코드를 작성 할 지 함수나 기타 등을 이용 할 지에 대해 이해가 있어야 AI가 더 일을 잘하게 할 수 있다 느꼈습니다.\n\n무척 좋은 인사이트네요! 내가 하고자 하는 일을 명확하게 그리고 구체적으로 설명할 수 있을 때 AI의 활용도가 높아지는 것 같아요.\n반대로, 정말 어떻게 시작해야 할지 모를 때 막막할 때도 AI에게 어느정도 제시해달라고 하면 좋답니다 ㅋㅋ\n저는 창의성을 많이 위임하고 있어요.\n\n> render.js 파일에 모든 이벤트들을 다 모아 두었는데, 이런 구조가 맞는 건지 궁금합니다.\n\n이건 선택이라고 생각해요. 관리해야할 이벤트가 많이 없을 때는 지금고 같은 구조가 좋고, 이벤트의 수가 점점 늘어날 때는 컴포넌트쪽에 위치시키는게 좋다고 생각해요.\n\n> 옵저버 패턴을 사용해 상태 관리 로직을 구현해 보았습니다. 하지만 옳은 방법인지 여부를 묻는 것 이전에 애초에 store는 어떤식으로 구조화하고 로직을 구현하는지 아주 기초적인 부분에 대한 설명 부탁 드립니다.\n\n글쎄요.. 어디까지가 기초일까요?\nstore를 상태관리라고 생각해본다면, 상태를 구조화하는 방식이 너무 다양해서요 ㅎㅎ\n다만 \"값\"과 \"값을 변경하는 함수\" 등은 꼭 필요하다고 생각해요. 여기에 더 나아가서 \"상태를 변경했을 때 어떤식으로 밖에 알릴 것인가?\"에 대한 장치가 필요하죠.\n\n이 장치를 내부에 만들어둘 수도 있고, 혹은 외부에서 주입받을 수도 있답니다.\n가령,  `store.addEventListener('change', callback)` 이런 모습일 수도 있고, 옵저버일수도 있겠죠?\n\n> render.js 파일에 initRender 함수인데 초기 렌더링과 새로고침, 상세페이지 이동 등에 따라 처리되어야 하는 상황이 달라서 이런식으로 늘어지게 코드가 작성되었는데 이런 방법이 아닌 분리시키거나 하는 방법이 있을까요?\n\n현재 작성된 방식을 \"명령형\"으로 코드를 작성했다고 이야기한답니다.\n그리고 이를 개선한다면, \"선언형\"으로 코드를 작성할 수 있겠죠?\n\n`선언형 프로그래밍` 이라는 키워드로 검색해보면 좋답니다 ㅎㅎ\n\n```\n\n// 🔴 기존 명령형: 조건을 체크하고 직접 실행\nproductStore.subscribe(() => {\n  if (renderingDisabled) return;\n  if (isCurrentlyOnDetailPage()) return;\n  \n  const state = productStore.getState();\n  if (state.newlyLoadedProducts.length > 0 && state.isFirstLoad) {\n    appendNewProducts();\n  } else {\n    render();\n  }\n});\n\n// ===============================================\n\n// 🟢 선언형: 규칙을 정의하고 시스템이 실행\nconst renderingRules = {\n  // 렌더링 조건들\n  skipWhen: [\n    () => renderingDisabled,\n    () => isCurrentlyOnDetailPage()\n  ],\n  \n  // 렌더링 액션들  \n  actions: [\n    {\n      condition: (state) => state.newlyLoadedProducts.length > 0 && state.isFirstLoad,\n      action: () => appendNewProducts()\n    },\n    {\n      condition: () => true, // 기본값\n      action: () => render()\n    }\n  ]\n};\n\nproductStore.subscribe(() => executeRules(renderingRules, productStore.getState()));\n```\n\n> 이번 과제를 통해 코치님의 생각보다 더 기대치를 낮춰서 기초 중에 기초라고 생각하는 부분들에 대해 키워드나 참고 할 수 있는 문서 등을 알려 주실 수 있을까요? 아예 코드를 AI나 그 외 도움 없이 자신이 직접 구현 하지 못 한다면요\n\n그게 발제에 있는 자료들이라서요..!\n\n자바스크립트 기초 개념: https://www.notion.so/1-3-Javascript-2262dc3ef51480299f63d27a8d3a3136?pvs=24\nSPA를 만들기 위한 지식 뭉치: https://www.notion.so/teamsparta/1-4-SPA-2262dc3ef51480949a61f934fdae9dc5\n\n혹은 \"프레임워크 없는 프론트엔드 개발\" 이라는 책을 보셔도 좋습니다 ㅎㅎ\nhttps://www.yes24.com/product/goods/96639825",
    "enrolledId": "6825c7b00a72040b8086a6af",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145440d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이민재",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/11"
      }
    ],
    "feedback": "안녕하세요 민재님!\n과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다.\n다만 배포된 페이지에서는 무한 스크롤이 정상적으로 동작하지 않네요 ㅠㅠ 다음엔 배포 했을 때에도 잘 동작하는지 확인 부탁드립니다!!\n\n---\n\n> 상품 리스트, 상품 상세, 장바구니가 모두 store.js의 인스턴스를 공유하고 있는데(상품 상세와 장바구니는 store를 만들지 않았지만 만들 계획..) 이 방식이 기능 간 상태 충돌을 일으키지는 않을지... 또, 장바구니 같은 경우에 로컬 스토리지와 전역 store로 상태관리를 할 필요가 있을지 궁금합니다.\n\n이럴 때는 충돌 가능성이 있는 코드를 민재님께서 아예 언급을 해주시면 좋답니다!\n\n아마 store 인스턴스를 공유한다고 해서 문제가 발생하진 않을 것 같아요. 오히려 같이 공유하고 있어야 정확하게 동작할 가능성이 높답니다 ㅎㅎ 그래서 이걸 어떻게 나눠서 정교하게 관리하는지가 중요한데, 그게 쉽진 않아요.\n\n이를 위해 redux에서는 slice 라는 개념을 도입해서 store의 관심사를 분리하여 관리하면서도 하나의 store를 통해 사용할 수 있도록 만들어주고 있답니다.\n\n여기서 중요한건, \"하나의 인스턴스\"여야 문제되지 않을 확률이 오히려 높다는 점이랍니다..!\n\n> 현업에서도 종종 URL 쿼리 스트링만으로 UI 상태 관리를 하는 로직을 보기도 하는데 상태 관리를 어떻게 하는 것이 가장 적절한 것일지 조언해주실 수 있을까요?\n\nurl의 상태를 따로 관리한다기보단,\n\n제가 작성한 솔루션을 보시면 \n값을 가져올 땐 항상 url에서 가져오고\n값을 설정할 땐 항상 url에 먼저 set을 하는거죠 ㅎㅎ\n\n원본은 url이고 이를 추상화해서 사용하는 방식을 상상해주시면 좋답니다.\n",
    "enrolledId": "682b2fc10a72040b80322848",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145440f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신홍준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/compare/main...jun17183:front_6th_chapter1-1:main"
      }
    ],
    "feedback": "안녕하세요 홍준님!\n1주차 과제 잘 진행해주셨네요 ㅎㅎ\n\n제가 과제 제출 주소 변경해달라고 요청 드렸었는데 아마 확인이 잘 안되었나봐요 ㅠㅠ\n\n현빈 매니저님께서 https://github.com/hanghae-plus/front_6th_chapter1-1/pull/77 이 링크로 채점해달라고 요청해주셔서 그렇게 진행하였습니다!\n\n다음에는 유의해서 제출해주세요~\n\n---\n\n> 실무에서는 AI는 커녕 인터넷도 안 되는 환경에서도 종종 일했던 터라 최대한 AI를 활용해 보는 것이 목표였습니다. 하지만 고기도 먹어 본 사람이 더 잘 먹는다는 것처럼 막상 사용하려니 AI와 스스로의 작업 비중이나 역할을 분명하게 나누지 못했습니다.\n\nAI를 활용하여 진행한 과정이 인상깊네요 ㅎㅎ\n저는 컨텍스트를 빠르게 초기화하여 토큰을 절약하는 방식으로 사용하고 있어요.\n대화를 계속 유지하면, 이전 대화의 기록까지 참조해서 토큰 사용량이 많아지는 문제가 있어서요 ㅠㅠ\n\n다음에 기회되면 어떤식으로 사용하는지 보여드리고 싶네요~!\n\n>  목록 페이지에서 상품 목록을 불러오기 전 url에서 검색 조건을 읽어 이를 state와 맞추는 작업을 합니다. 그럼 state가 변경될 것이고 이 state를 구독하고 있는 컴포넌트, 페이지들은 리렌더링이 됩니다. 여기서 의문이 생기는 것이, 결국 모든 기능의 중심은 state인데 정보의 원천이 url인 것이 어색합니다. 보통 실무에선 state와 url의 동기화 문제를 어떻게 해결하나요?\n\n저는 결국 상태관리의 핵심이 원천데이터 관리라고 생각해요.\nurl뿐만 아니라 api를 통해 가져오는 데이터도 원천데이터가 서버에 있는거라서.. 꼭 url에만 해당되진 않으니까요 ㅎㅎ\n\n여튼 query나 param, url 같은 것들을 주소를 통해 가져오고, 가져올 때 값으로 가져온다기보단 함수를 통해 가져오는거죠.\n이 때 저는 getter 를 적극적으로 활용하고 있어요.\n\n자세한건 솔루션 코드를 확인해주세요!\n\n> 위와 같은 렌더링 방식에서 unmount 함수는 어떻게 관리해야 할지 모르겠습니다. innerHTML을 사용하고 있기에 window 이벤트 같은 것을 제외하면 굳이 unmount 함수를 구현할 필요가 없나 싶기도 하지만, advanced.spec 테스트 \"브라우저 뒤로가기/앞으로가기가 올바르게 작동한다\" 항목에서\n너무 빠르게 페이지 이동이 발생하다 보니 url은 목록 페이지인데 뒤늦게 상품 페이지가 렌더링이 된 것 같아 결국 테스트 코드를 손보게 되었습니다. unmount는 언제 사용하는지, 위와 같은 문제를 unmount 함수로 어떻게 해결할 수 있을지 궁금합니다.\n\n저는 unmount가 필요한 이유가 \"클린업\"이라고 생각해요. 컴포넌트가 사라질 때, 페이지를 전환할 때 현재 컴포넌트나 페이지에만 필요한 기능을 없애주는거죠 ㅎㅎ\n\n가령 지금 메인페이지에서는 무한스크롤 기능이 필요한데, 상세페이지에서는 필요없어요. 이런걸 unmount 시점에 없애야 한답니다.\n\n> 옵저버 패턴을 사용해 상태 관리 로직을 구현해 보려 했습니다. 제가 구현한 코드가 옵저버 패턴에 맞게 잘 구성되었는지 검토해 주시고, 보완할 부분을 제안해 주실 수 있을까요? (예시 질문에 있던 항목이지만 제 생각과 너무 일치하여 가져왔습니다!)\n\n굳이 개선해야 한다면, 지금은 key에 옵저버가 걸려있는데요,\n가령 a와 b가 구독하고 있는 함수가 똑같다면, a와 b가 동시에 변경될 때 한 번의 알림만 보내면 될 것 같아요.\n지금은 두 번의 알림을 보내는 방식이라서, 이를 어떻게 해결할 수 있을지 고민해보면 좋답니다!\n\n그리고 key의 값이 변경될 때 옵저버를 실행하고 있는데, 값이 만약 객체거나 배열일 때는 값이 실제로 변경되지 않아도 참조하고 있는 메모리가 달라질 때에도 notify가 발생할 수 있답니다 ㅎㅎ\n\n이에 대한 고민도 필요해요!",
    "enrolledId": "682983e90a72040b80d5107f",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454411",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박창준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/18"
      }
    ],
    "feedback": "창준님 첫주차 과제 훌륭하게 해주셨네요!\n작성해주신 내용에 있어서는 다 좋은 방향, 합당한 방향으로 고민을 진행해주신 것 같아요. \n\"브라우저 스토리지를 pub/sub 패턴으로 구독해 상태 변경 시 모달 UI를 자동으로 갱신하도록 개선할 수 있을 것 같습니다.\n다만, 테스트 코드를 변경하지 않고 이런 로직을 도입했을 때 테스트를 통과시킬 수 있을지는 의문입니다.\"\n요 부분에 대해서도 저희들이 전체 수강생들의 채점을 용이하게 하기 위해 어느정도 구현을 강제하게 되는 부분도 없지 않아 있는데요. 이 부분은 쪼금 양해해주시고 여유가 있으실 때 직접 해보고 공유해주시는 것도 좋을 것 같아요 ㅎㅎ\ncursor를 통해서 복잡한 로직을 구현할때는 주석을 통해 어느정도 구현을 해야 하는 부분과 수정하지 말아야 하는 부분을 정의해주시고, 테스트를 만들어서 명확하게 제어하고 변경을 감지하는게 좋다고 많이 이야기 하는데요! 빙글빙글 도는 문제 해결책이 나온다면 AI가 그 문제를 당장 그 컨텍스트 내에서 해결하지 못한다는 증상으로 본다고 하니 새로운 커뮤니케이션을 시작하는것도 방법일 것 같아요.\n\n> Q1. 페이지별 이벤트, 상태 관리, cleanup 추상화를 어떻게 해야할까요?\n현재는 Homepage.js나 ProductDetailPage.js에서 ** 각 페이지에서 이벤트 리스너, 상태 관리, cleanup을 직접 구현하고 있습니다. 그런데 페이지가 많아질수록 공통화할 부분, 추상화할 부분, 컴포넌트화할 부분이 많아지면서 어떤 기준으로 추상화하거나 모듈화하면 좋을지 고민하고 있습니다.\n\n좋은 고민입니다! 어떻게 보면 점점 규모가 커지면서 드는 자연스러운 고민일텐데요. 기준은 사실 이미 잘 만들어진 프레임워크들을 참고하는게 좋은 것 같아요. 각 리액트 컴포넌트, 뷰 컴포넌트에서는 어떤 문제를 해결하기 위해 어떻게 추상화를 했는지와 어떤 일들을 자동으로 해주는지 등을 리스트업 해보면 될 것 같아요. 거기에는 작성해주신것처럼 이벤트 관리나 상태관리, 라이프사이클, 렌더링 로직 등등이 되겠죠! 결국의 이런 추상화는 같은 수준의 이야기를 하고 있는 동작들을 응집시키는 부분이기 때문에, 리스트업 한 동작들이 어떻게 컴포넌트에 묶이는지 고민해보면 추후에 더 도움이 되지 않을까 싶어요.\n\n> Q2. SPA에서 전역 이벤트는 어떤식으로 관리하면 좋을까요?\nApp에서 globalClickHandler()함수가 앱의 전역 이벤트(?) 관리를 하고있는데 이렇게 되면..\n\n넵 맞아요! 정확한 분석입니다. 전역에서 이벤트를 관리하려고 한다면 명확한 제어를 위한 인터페이스가 필요해보이는데요. 말씀해주신것처럼 중복이벤트가 등록되지 않게 하는 것이나 특정 상황에서만 발생하게 하는 경우도 있을거구요.  어떤 기준으로 나눌 수 있는지 구분을 해보면 좋을 것 같아요. 타입화를 시키는 것도 있을것 같고, 페이지 별로 관리를 하는 것도 방법일 수 있구요. 맵이나 셋에 저장을 하면서요 ㅎㅎ \n양이 많지 않다면 이벤트 위임정도로 처리가 가능할 것 같고, 양이 어느정도 많아지면 가장 많이 쓰는 패턴으로 이벤트 버스같은 것을 만드는 것도 방법일 수 있는데 느슨하게 관리를 하면서 문제를 해결하는 것도 좋을 것 같네요.\n\n고생하셨고 다음주도 화이팅입니다!",
    "enrolledId": "6825b2810a72040b8071d8af",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454413",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "장루빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/57"
      }
    ],
    "feedback": "안녕하세요 장루빈님, 수고하셨습니다. 이번 과제는 프레임워크 없이 SPA를 구현하면서 내부 동작 원리를 이해하는 것이 목표였습니다. History API와 이벤트 처리의 어려움을 직접 경험하신 것은 좋은 학습경험이 되어주었을거라 기대합니다.\n\n개발자의 첫 번째 책임은 요구사항을 만족하는 작동하는 코드를 제시간에 전달하는 것입니다. 현재 PR을 보면 CI 테스트가 모두 실패하고 있고, 배포 링크도 없으며, 핵심 기능인 장바구니 모달과 토스트가 구현되지 않았습니다. 따라서 채점 기준에 미치지 못했기에 \"불합격\"을 드릴게요.\n\n라우터 구조가 깔끔하고 코드 분리가 잘 되어있는 것은 좋지만, 기본 기능이 작동하지 않는다면 의미가 없습니다. 실무에서는 \"완벽한 구조의 미완성 코드\"보다 \"조금 지저분하더라도 작동하는 코드\"가 우선입니다.\n\n구조와 패턴은 나중에 개선할 수 있지만, 작동하지 않는 코드는 가치가 없기에 피드백을 해드릴 수도 없어요.\n\n2주차에는 코드의 퀄리티보다도 시간내의 완성!을 제일 중요하게 생각하여 진행해주기를 기대합니다.\n\n---\n\nQ) 클래스를 사용하는 이유가 궁금합니다. 개발을 하다보면 결국 객체지향형 프로그래밍을 하게 된다는데 클래스를 사용하지 않더라도 객체 지향적으로 개발하면 되지 않나요?\n\n=> 클래스를 사용하지 않아도 객체지향적으로 개발을 할 수 있습니다. 객체란 key:value 형태의 의미있는 구조체에 상태과 상태를 변화하는 메소드를 통해서 하나의 큰 프로그램을 재사용 가능한 독립적인 모듈로 나누어 메시지의 정보 교환을 통해 프로그래밍을 한는 방법론이죠.\n\n=> 객체지향에서 중요한건 독립적인 모듈들이 메시지 교환을 통해 의미있는 요구사항을 수행한다는 점인데 이를 가능하게 하려면 서로간의 메시지 교환의 규칙이 정확해야 하고 이를 인터페이스라고 합니다. 이러한 타입과 규격 인터페이스등을 정의하는 방법으로 클래스가 필요하지요.\n\n=> js는 class가 없어도 Object를 생성할 수 있지만 타입과 상속, 데코레이션등의 표현력을 가지고 있는 것이 class라고 생각해주세요. class를 쓰는 이유는 객체지향적인 프로그래밍을 해야하는 경우에는 class가 훨씬 더 나은 표현법이니까 사용합니다.\n\n\nQ)  ai를 잘 쓰는 방법이 궁금합니다. 제가 줏대가 없는걸지도 모르겠는데 \"AI한테 알려주고 시키는 것도 실력이다.\", \"AI가 다 하면 나는 대체 가능한 사람이 되는 건데...그러면 어떤 개발자가 되야하는가\" 이런 생각이 공존하는 것 같습니다.\n제가 최근 경험을 예시로 들면 최근 프로젝트에서 shardcn이라는 component/ui를 사용하게 되면서 반복적으로 작업하는 코딩은 ai를 시켜서 작성하고 주요 로직을 구현하는 쪽으로 진행을 하려고 했는데... 그렇게 되면 다른 누군가에게 shardcn사용 경험이 있다고 말 할 수 있을까?라는 생각이 들더라고요. 이것에 대한 테오의 생각이 궁금해요\n\n=> AI가 다 할 수 있는가? 만약 AI가 다 할 수 있는 시기가 정말로 온다면 그때에는 정말로 현업에 있는 모든 개발자들이 사라지겠지요. 그렇지만 아직은 누군가는 여전히 그 AI에 다 할 수 있도록 지시를 하거나 AI가 일을 잘 할 수 있도록 만드는 역할을 해야 합니다.\n\n=> AI가 다 할 수 있는 일을 한다면 당연히 대체가 되겠지요. 물론 다행히 AI는 아직 같이 술자리도 못가고 같이 놀아줄 수는 없네요. 추억을 오랫동안 함께하지도 못합니다. 사람과의 관계라는 건 중요한 역할이지요.\n\n=> 뭐 이런 감성적인 부분이 아니더라도 AI를 활용해서 무언가의 가치를 만들어내는 사람의 가치는 부정할 수 없습니다. 앞으로는 그러한 가치를 만들 수 있는 사람이 대우를 받겠지요.\n\n=> AI에게 가치있는 무언가를 만들기 위해서는 단순히 시켜서는 되지않습니다. 가령 AI가 다 할 줄안다고 \"정말 재밌는 영화 대본을 써줘\" 라고 한들 정말 재밌는 대본이 나올 수 있을까요? AI가 만들어내는 생산성은 인간이 하는 일의 특정한 부분에 대단한 속도를 만들어내지만 속도가 곧 생산성은 아닙니다. 더 낫게 만들기 위해서는 검증하고 뭐가 더 나은 것인지 알아야 하고 목표를 만들고 해석하고 평가하고 재할당하는 원래 하던 일들을 해야만 달성할 수 있어요.\n\n=> 물론 영화를 만들지 않고도 영화평론가가 될 수는 있습니다. 그러나 대부분의 업무를 위한 지시는 경험이 있어야 더 잘 할 수 있더라구요. AI로 인해서 개발자의 업무는 변화하고 있는 중이라고 생각합니다. 다만 아직까지 본질적인 업무인 인간의 요구사항을 이해하고 컴퓨터에게 전달하여 그 가치를 실현하는 부분에 대해서는 크게 달라지지 않은 것 같아요. 내가 뭘 해야하는지 알고 AI를 통해서 생산성을 함꼐 올려보기를 바래요.\n\n\nQ) 얼마전 멘토링에서 FE는 생각보다 빨리 고점에 도달한다고 하셨는데... 이부분 동의 합니다. 제가 물론 고점을 찍을 수 있을지는 모르겠지만 FE는 조만간 AI로 대체가 될거라고 생각해요. 그러면 BE로 가야하는가? 라고하면 그건 너무 단순한 발상인 것 같습니다.\n개발자라는 직업으로 먹고 사는게 그렇게 전망이 좋아보이진 않습니다. 테오는 어떻게 생각하세요?\n\n=> 저는 이 일로 먹고 사는 사람이기에 전망을 비관적으로 보고 싶진 않습니다. 안타까운건 제가 그동안 배웠던 스킬들로만 먹고 살기는 힘들것 같네요. 마치 예전에는 IE버전마다 크롬과의 CSS가 다르게 나와서 그걸 잘하는게 능력이었는데 지금은 전혀 중요하지 않은 스킬이 되었죠. AI가 점점 더 내가 잘하지 않아도 되도록 해주는 역할을 담당하게 될 것이라는 점에서는 동의 합니다.\n\n=> 그렇다고 해도 FE가 AI로 전부 대체될수는 없습니다. 인간의 언어는 모호하고 막연하게 설계가 되어 있기 때문에 여기서 조금만 더 세련되게 만들어달라 라는 말을 100% 정확하게 해석할수가 원천적으로 할 수가 없습니다. 분명 누군가는 그 말을 더 구체적인 언어로 만들어야 해요. 우리가 0과1 로 혹은 기계어로 코딩을 하진 않지만 최소한 언어로는 작성해야하는 것처럼 한 단계 더 높은 레이어의 고급 언어를 가질 수는 있겠지만 지금의 자연어로는 절대 안됩니다.\n\n=> 개발자라는 직업의 가치는 저도 예측이 어렵네요. 그렇지만 분명 지금까지 현재 인간의 돈이 몰리고 있는 분야에 과학과 공학 그리고 IT의 쏠림 현상은 존재하기에 개발자라는 직업 자체가 유망하지 않을거라고 생각지는 않습니다. FE의 유망세는 잘 모르겠지만요.\n\n=> 모두가 1등이어야 하는 건 아니니 그래도 이 분야가 재밌고 즐겁다면 도전해보세요. 최우선은 자기가 제일 잘 할 수 있는지 자기 재능의 영역을 찾는 것이고 그걸 잘 모르겠다면 그래도 재밌는걸 해야 하지 않겠습니까? 잘 찾아가길 바랍니다.\n\nQ) 코드가 전반적으로 구조를 잘 짰다고 보기엔 어려운 것 같습니다. 하지만 제가 회사에서 사용하는 작성법과 크게 다르냐 하면 아닌 것 같습니다. 그런부분에서 봤을 때 구조를 잘 만들려면 어떤 부분을 고려해서 만들어야하는지 3가지만 알려줄 수 있을까요?\n\n=> 다음 번 과제는 구조보다 완성을 해오세요. 그러면 알려줄게요. (웃음) 너무 매정한것 같이 힌트를 드리자면 그리고 정답은 이미 쓰고 있는 React에게 답이 있어요. 10년에 걸쳐서 정답을 찾아온 과정이잖아요?\n\n\n수고하셨습니다. 화이팅입니다!",
    "enrolledId": "682578680a72040b803edb7c",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454415",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "이의찬",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/15"
      }
    ],
    "feedback": "넵 의찬님 이번에는 과제 하실 시간이 부족하셨던 것 같습니다 :)\n나중에 솔루션 코드가 나오면 코드를 살펴보시고 복기하시는 시간을 꼭 가지시면 좋을 것 같아요!\n",
    "enrolledId": "682576d80a72040b803dc418",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454417",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이지현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/27"
      }
    ],
    "feedback": "안녕하세요 지현님!\n1주차 과제 잘 진행해주셨네요 ㅎㅎ 너무 고생했어요!\n\n> 어떤 우선순위로 기본 구조를 잡는가에 대해서 궁금증이 일어, 준일 코치님 멘토링때 질문을 드렸었습니다. 야근으로 인해 알려주셨던 구조를 잡지 못해 아쉬운 점이 큽니다.\n\n제가 이야기 했던게 정답은 아니라고 생각해요! 저의 경험적인 측면이니까요. 개인적으로, 나만의 경험을 만들어가는게 중요하다고 생각합니다! 이미 진행해보셨으니까 제가 제안하는 순서보다 지현님께서 \"이렇게 하는게 더 좋을 것 같은데?\" 라고 생각하는 리팩토링 과정이나 순서가 있으면 그대로 시도해보시는걸 추천드려요!\n\n그래야 온전한 나의 것이 된답니다!\n\n> 리팩토링 순서에 대해서 문의드립니다. 이벤트 시스템 > 컴포넌트 라이프 사이클 시스템 > 상태관리 시스템 > 관련 라우팅 시스템 순서가 괜찮을까요?\n\n굳이 저의 기준으로 순서를 정해보자면..\n\n무엇이 제일 중요한가 따져봤을 때, 저는 상태관리 시스템이라고 생각합니다 ㅎㅎ\n\n상태관리 > 라이프 사이클 > 이벤트 시스템> 라우팅 시스템\n\n이런 순서랄까..\n왜냐면 상태에서 부터 렌더링이 전파되고,\n상태를 잘 만들어놓으면 이벤트에서 상태만 변경해도 UI에 반영될 수 있으니까요 ㅎㅎ\n\n",
    "enrolledId": "682566140a72040b80300e04",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454419",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "신희원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/16"
      }
    ],
    "feedback": "희원님 수고하셨습니다!\n\nQ. 지금 폴더 구조에 대한 체계적인 개선을 하지 못하고 개발을 진행했었는데, 여기서 개선된다면 어떤 구조로 정리 해보기를 추천하시나요?\n\n지금 과제는 폴더구조가 많이 중요하진 않을 것 같아요~ 지금으로도 충분해보입니다. 더 개선해야할 부분은 보이지 않는 것 같아요 다른 것을 제안드릴 순 있지만 더 나은 것은 아닐것같아요. 지금도 충분합니다 :)\n\nQ. 위와 관련한 질문인데, 어떤 개념을 공부하면 좋을지 피드백 부탁드립니다.\n\n요즘은 FSD라는 방법론이 많이 논의되고 있어요.\nFSD자체가 뭐 끝판왕은 아니지만 FSD가 어떤 고민이 있었고 그 고민과 문제를 어떻게해결했는지를 이해하는 것은 큰 도움이 될 것 같습니다~\n\nQ. main.js 함수에서 이벤트에 대한 핸들러 함수를 만들었는데, 렌더링이 된 후 이벤트 위임하는 코드를 넣어줬습니다. (cursor이용) 보통은 렌더링이 된 후, 이벤트를 위임시키는 함수를 적용하는게 맞는 것인지 궁금합니다. (아직까지 AI가 짜주는 코드가 좋은 코드인지 아닌지 구분하는게 어렵습니다.)\n\n이벤트 위임(event delegation)은 렌더링 후에 적용하는 것이 맞습니다. 이는 DOM 요소가 실제로 존재해야 이벤트를 바인딩할 수 있으니까요~ 이벤트 위임이라는 기법은 상위 컨테이너에 이벤트 리스너를 붙이고, 이벤트가 발생했을 때 특정 조건(예: cursor나 dataset 속성 등)을 기반으로 이벤트 핸들러를 호출합니다. 이런 방식은 여러 개의 자식 요소가 동적으로 생성될 때 성능과 관리 측면에서 효율적이에요~ 사실 나중에 배우시겠지만 근본적으로는 리액트도 이 방법을 활용하고 있습니다!\n\n\n저도 vscode를 사용하지 않아서요 ㅜㅜ 익스텐션관련해서는 준일님에게 물어보시면 좋을 것 같아요!",
    "enrolledId": "68254af40a72040b801869c8",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145441b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이유진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/71"
      }
    ],
    "feedback": "유진님 수고하셨습니다!\n\n회고에서 말씀하신대로 이번 기회로 SPA의 기본적인 동작원리와 DOM API 활용법에 대한 이해가 높아진 것으로도 충분한 것 같습니다.\n이런 몰입의 경험을 더 많이 경험하시면 좋을 것 같습니다 :)\n이대로 이과제를 넘기시지 마시고 솔루션 코드가 나오면 코드를 살펴보시며 다시 한번 복습해주시면 좋을 것 같습니다!",
    "enrolledId": "682546800a72040b80150daf",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145441f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박소연",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/17"
      }
    ],
    "feedback": "안녕하세요 박소연님! 수고하셨습니다. :) \n\n이번 과제는 프레임워크 없이 SPA의 핵심 기능들을 직접 구현하면서, 현대 프론트엔드 프레임워크들이 해결하고 있는 문제들을 깊이 이해하는 것이 목표였습니다. 우리가 그냥 쓰고 있는 도구들을 직접 만들어 보며 그 작동원리를 이해하면서 우리의 도구를 더 잘 쓸 수 있게 되기를 바랍니다.\n\n과제를 보면서 특히 Pub/Sub 패턴을 활용한 반응형 상태 관리 시스템 구현이 인상적이었습니다. React의 useState와 유사한 방식으로 구현하신 점, 그리고 이에 대한 한계점까지 명확히 인지하고 계신 점이 훌륭합니다. 또한 테스트 코드를 모두 통과시키며 요구사항을 충실히 구현하신 점도 잘하셨습니다.\n\n스스로 작성해둔 라우터의 복잡성 문제나 subscribe를 해제하는 부분이 없는 것에 대한 반성(?)도 좋았습니다. 만약 아는데 어떻게 해야할지 잘 모르겠다면, 그래도 한번 시도를 해보고 피드백을 받아 본다면 앞으로 과제할 때 조금 더 잘 피드백을 드릴 수 있겠네요\n\n회고에서 \"오랜만에 신입때처럼 몰두해서 개발했다\"는 말씀이 인상 깊었습니다. 이런 열정과 도전 정신이 있다면 앞으로도 계속 성장하실 수 있을 것입니다. 2주차도 화이팅입니다! :)\n\n다음은 질문 주신 내용에 대한 구체적인 답변입니다.\n\n---\n\nQ) router 함수를 어떻게 분리해야 할까요?\n\n=> 이미 스스로 주석을 하나씩 달아두었고 스스로 평가하기를 너무 많은 책임을 가지고 있다고 말하는 것처럼 책임과 하나의 책임에 대한 적절한 크기감각은 이미 있는 것 같네요. 그런 쎄함(?)을 느끼면 우선 크기를 나눠줄 생각을 먼저 합시다. 책임을 너무 잘 분리하지 않아도 좋으니 우선 주석을 달아준 그 구간을 분리해서 함수로 빼내는 일을 먼저합니다.\n\n=> 함수로 분리를 하는건 간단합니다. 우선 함수로 감싸고 밖으로 보낸다음 모든 인자만 연결하면 되죠. 심지어 이런건 VSCode에 기능으로도 제공하고 있습니다.\n\n1)\nfunction outerModule() {\n // 원래 코드\n}\nouterModule()\n\n2) 인자 맞춰주고 바깥으로..\nfunction outerModule(a,b,c) {\n // 원래 코드\n}\nouterModule(a,b,c)\n\n=> 그렇게 잘라두고 나면 조금 더 잘 보입니다. 책임에 맞게 분리했는데 괜한 분리를 했는지. 그리고 모듈을 분리하면 해당 로직을 내부에 두는게 맞는지 외부에 위임해야 하는게 맞는지 알 수 있습니다. 특히나 내가 새롭게 라우트를 만드는데 불필요하게 또 적어줘야만 하는게 있는지 정말 내가 적어주지 않으면 안되는 것들로만 구성이 되어 있는지 말이죠..\n\n설명이 엄청 길어질것 같아서 우선 다음번 과제에서는 이런 부분을 만나면 과감하게 함수를 분리해서 책임을 나눠보세요. 우선 시도를 해야 그 다음 피드백을 받을 수 있겠지요. 화이팅입니다 :)\n\n\nQ) 컴포넌트 의존성 주입 패턴 개선 방안\n\n=> 지금 주입받고 있는 공톨 모듈을 받아 줄 수 있는 Context 패턴을 고려해보세요. 의존성들을 하나의 context 객체로 묶어 전달하면 됩니다. 이런 경우 모두에게 의존하게 하는게 아니라 중간 담당자를 두면 변화를 한군데에서 관리를 할 수 있게 됩니다.\n\n```javascript\nconst context = { state, setState, actions: { openCartModal, addToCart, navigateTo } };\npage = ProductListPage(context);\n```\n\nQ) Pub/Sub 패턴 구현의 성능 최적화\n\n=> React의 경우 지금처럼 모든 상태를 1개씩 전달하나 불변성을 통해서 비교의 횟수를 줄이는 방법이고 사실 React는 성능을 희생하고 DX를 높이는 방법을 택했죠.\n\n=> React가 아닌 Vue를 비롯한 다른 모든 프레임워크들은 각 key, path별로 여러개의 pub/sub를 통해서 최소한의 업데이트만 할 수 있도록 만들고 있습니다. 하나의 setState가 아니라 여려개의 signal을 만들수 있겠죠. \n\n\nQ) Router 코드 역할 분리와 복잡성 개선\n\n=> 라우터를 단순히 라우팅만 담당하도록 하고, 페이지별 초기화 로직은 각 페이지 컴포넌트의 생명주기 메서드로 이동시키세요. 예를 들어:\n```javascript\nclass Page {\n  onMount() { /* 초기화 로직 */ }\n  onUnmount() { /* 정리 로직 */ }\n}\n```\n이렇게 하면 라우터는 단순히 페이지 전환과 생명주기 호출만 담당하게 됩니다.\n\n다 아는 패턴이죠? 만들다보면 그렇게 나오는 고민들이 이미 세련된 해법으로 우리가 잘 쓰고 있죠. 모를때에는 내가 아는 정답(!)을 참고해보세요.\n\n\n수고하셨습니다! 다음 주차도 화이팅입니다! :)",
    "enrolledId": "6824c3ac0a72040b80cbc2a3",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454423",
    "result": "PASS",
    "isBestPractice": false,
    "name": "유윤우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/10"
      }
    ],
    "feedback": "안녕하세요 유윤우님, 프레임워크 없이 SPA를 구현하시느라 정말 수고하셨습니다. 이번 과제는 React나 Vue 같은 프레임워크가 내부적으로 해결하고 있는 라우팅, 상태관리, 렌더링 최적화 등의 문제를 직접 경험해보는 것이 목표였습니다. 참고 자료 없이 순수하게 도전하신 점이 정말 인상적이네요.\n\n특히 잘하신 부분은 `createState`를 통한 전역 상태 관리 구현과 이벤트 위임 패턴의 활용입니다. `src/utils/store.js`에서 Map을 활용한 상태 저장소 구현은 간결하면서도 효과적입니다. 또한 페이지별 라이프사이클을 `onMount`/`onUnmount` 메서드로 구현하신 아이디어도 좋았습니다.\n\n조금 개선을 해야할 부분이 있다면 현대 프레임워크의 핵심 구조인 데이터와 렌더링의 책임을 완전히 분리하고 데이터가 변경이 되면 자동으로 렌더링을 해준다라는 것을 구현이 되었다면 좋았을 것 같네요. 현재는 데이터의 처리와 화면을 그리는 과정이 하나의 프레임워크로 만들어지지 않았기 때문에 코드 곳곳에서 수동으로 updateCurrent()가 여러 곳에서 호출되고 있네요.\n\n이러한 점은 개발자의 DX측면에서도 혹은 불필요한 업데이트를 여러번하게 만들 수 있는 패턴이니 setState와 render의 책임을 core로 주도록 만들어 보는 건 어떨까요?\n\n나아가 현재 렌더링, 이벤트연동, 로직처리 등의 레이어 분리 구조까지는 되어 있으나 이를 하나로 묶어주는 컴포넌트 단위로 만들 수 있는 구조가 없다보니 결과적으로 events.js가 너무 비대해졌죠.\n\n작성해야하는 코드 중 내가 꼭 이걸 써야 해? 하는 부분을 core로 넘겨주고 관련이 없는 코드가 한 군데 같이 있지 않도록 만들어주는 법을 다음번 과제를 통해 해결해보기를 바랍니다!\n\n---\n\nQ) 코어한 기능에 문제가있는데 조금만 건드려도 문제가 다발적으로 터지는 상황에서 리팩토링을 진행하시는 플로우가 궁금합니다.\n\n=> 우선 코드를 작게 만드는게 제일 중요합니다. 코드가 커질 수록 생각해야하는 경우의 수가 많죠. 그러니 문제는 없지만 코드를 작게 만드는게 제일 중요합니다. 나중에 발제로 만나게 될거라 설명하면서 너무 길어지므로 AI에게 \"지금 이 코드를 순수함수로 최대한 많이 단일 책임의 의미단위로 분리해줘\"라고 한번 해보시고 코드의 변화가 없이 코드를 잘게 쪼갠다는게 무슨 의미인지 아실꺼에요.\n\n=> 그 다음은 이러한 문제 없는 코드들의 순서를 통해서 코드를 만들어가면 내가 결과적으로는 큰 코드를 만들지만 작은 코드를 다루게 되면서 다발적 에러 발생을 줄일 수 있습니다.\n\n\nQ) 이벤트 위임 코드 개선 방법이 궁금합니다.\n\n=> 해당 코드는 단순히 위치의 문제입니다. 해당 코드들이 꼭 events.js에 모여있어야 할 필요는 없죠. 관련있는것들은 최대한 가까이 둔다는 원칙에 맞게 적절히 이벤트가 필요로 하는 곳에 분리를 해보세요. 그것만으로로 충분히 응집도를 높이 좋은 코드가 될거에요.\n\n\nQ) 리렌더링 플로우를 정상적으로 만들려면?\n\n=> 상태의 변경 -> 변화 감지 -> 자동 렌더링이 될 수 있도록 setState의 함수의 역할을 늘리는 방식으로 만들어야 합니다. 이 과정에서 변하지 않아도 될 부분은 유지하고 변화해야 하는 부분만 수정하는 게 프레임워크의 주요 알고리즘이고 그걸 다 구현한다는건 쉽지 않겠지만 이제 앞으로 배우게 될 부분이라 다음 과제를 기대해주세요!\n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "68249f4e0a72040b80b3568e",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454425",
    "result": "",
    "isBestPractice": false,
    "name": "임규원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "68247d1b0a72040b8094ff55",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454427",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최재환",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/42"
      }
    ],
    "feedback": "안녕하세요 재환님!\n1주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다.\n\n> Router 클래스의 동적 라우팅\n\n동적 라우팅 구현이 쉽지 않았을텐데 잘 해주셨군요 ㅋㅋ 다만 for/if가에 대한 중첩이 많이 있어서 별도의 함수로 조금 더 추상화하면 좋았을 것 같아요!\n\n```js\ngetParams() {\n  const path = this.getCurrentPath();\n  const params = {};\n\n  for (const routePath in this.routes) {\n    if (routePath.includes(':')) {\n      const routeParts = routePath.split('/');\n      const pathParts = path.split('/');\n      \n      if (routeParts.length !== pathParts.length) {\n        continue;\n      }\n\n      const { isMatch, current } = getParam(...);\n\n      if (isMatch) {\n        return { path: current.routePath, params: current.params };\n      }\n    }\n  }\n  return { path, params };\n}\n```\n이런느낌!?\n\n> 이벤트 핸들러가 단일 함수에 모든 이벤트 처리 로직이 집중되어 가독성과 유지보수성이 떨어집니다.\n\n이에 대한 부분은 이벤트 핸들러를 직접적으로 사용하는게 아니라, 함수를 통해 간접적으로 호출할 수 있도록 해주면 좋답니다 ㅎㅎ\n\n```jsx\naddEvent('click', '.add-to-cart-btn', callback)\n```\n\n이렇게 사용하는 모습을 상상해보시면 좋아요!\n\n> E2E 및 단위 테스트의 명세와 요구사항 간의 간극이 아쉬웠습니다. 요구사항을 토대로 개발한 후 테스트의 명세를 맞추는 것이 쉽지 않았습니다.\n\n이런 어려움이 있었군요 ㅠㅠ 2주차 ~ 3주차 과제에서는 같은 어려움을 겪지 않도록 신경쓰도록 하겠습니다..!\n\n> main.js 파일 분리 계획 피드백\n\n개인적으로 A방안은 응집도가 떨어지는 방식이라고 생각해요 ㅎㅎ\n비슷한 관심사를 다루는 것들끼리 묶어놔야 응집도가 좋아지고 유지보수 할 때 편하다고 생각합니다.\n\n다만 AppController나 ProductController 를 사용하는 방식도 A에 비해선 좋지만 응집도가 높다고 생각하진 않아요.\n\n이벤트 연결을 해주는 구간과 이벤트에 필요한 함수를 정의 해주는 구간을 분리하고\n\n이벤트에 필요한 함수와 컴포넌트 코드와의 거리를 가깝게 유지하면 어느정도 해소되지 않을까 싶네요!\n\n> 문자열 기반 컴포넌트 렌더링의 개선 방안\n\nA와 B 모두 각각의 장단점이 있다고 생각합니다 ㅎㅎ\n개인적으로 B 방식을 더 선호하는데요,\n저는 \"선언형 프로그래밍\"을 해야 코드의 가독성이 좋아지고 유지보수 할 때 더 효과적이라고 생각합니다.\n\n이에 더 가까운게 B 방식인데, 만약에 A 방식처럼 하면서도 선언형 프로그래밍을 유지할 수 있는게 있다면... 그 방식을 택할 것 같아요. 다만 아직까진 못찾았어요 ㅋㅋ\n",
    "enrolledId": "68245c9b0a72040b807c704a",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454429",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김민지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/35"
      }
    ],
    "feedback": "민지님 첫 과제 고생많이 하셨습니다.\n회고 남겨주신걸 보니 약간 힘들어보이시는데요 ㅎㅎㅎ\n너무 자신감을 잃지 않으셨으면 좋겠네요.\n과제 자체가 양이 많기도 했고 정신이 없는 상황이 많기도 했구요.\n결국 중요한건 굉장히 많은 비즈니스 로직을 구현하는 것 보다는 민지님이 남겨주신 회고처럼 어느 부분에서 어려움을 겪었는지 다시 정확히 정리해보고 내가 사용하는 프레임워크에서는 또는 기술에서는 이걸 어떻게 해결하는지 찾아보는 것 같아요. \n문제 겪으신 부분을 리액트나 뷰에서는 이런 과정을 명확하게 하기위해 어떻게 관리하는지, 라이프 사이클은 어떻게 제어할지 그런 고민들을 해보면 좋을 것 같아요. 말씀해주신 렌더링 과정에 대한 이해도 포함이 되겠죠. 그리고 그 내용을 다시 본인의 코드로 옮기는 연습을 하는거죠. 사실 저건 해당 문제를 해결하기 위한 각 프레임워크의 해결책이고 정답은 아니니 제것에 맞게 옮기는 연습을 하는게 중요한 것 같아요.\n여담으로 저도 늘 어렵지만, 테스트 코드에서 라우터 이동을 감지 못해서 그런줄 알고 많은 시간을 쏟으셨지만 알고 보니 바인딩 이슈였던 것 처럼  문제를 명확하게 정의하는 연습도 함께 하면 더 시간을 아낄 수 있지 않을까 싶어요. 추측은 그 과정에서 배우는 것은 많겠지만 실패했을 때 낭비되는 시간이 너무 많은 것 같아서요. 문제를 명확하게 하고 움직이는 걸로 ㅎㅎ\n\n고생하셨고 충분히 잘하셨으니까 다음주도 화이팅하시구요! 이번주에 부족하다고 느끼셨던 부분들도 그냥 넘기지 말고 잘 모아둔다음 시간 여유가 생길때 꼭 해결해보는 습관 만드시면 좋겠습니다~",
    "enrolledId": "68245a760a72040b807a5c2c",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145442b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "오하늘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/59"
      }
    ],
    "feedback": "하늘님 수고하셨습니다!\n\n라이프 사이클 함수는 실행 위치가 중요하기 때문에 말씀하신 대로 정해진 위치에서 반복적이지만 if문을 활용해서 체크하는 수밖에 없을 것 같아요.\n만약 정해진 위치가 없고 단순히 정해진 함수만 실행한다면\n[‘init’, ‘mount’, ‘unmount’].forEach(k => Page[key]?.()) 이런식으로 할 수 있겠죠?\n일단 저는 저렇게 생각하는데요 해당 부분은 vue의 코드를 살펴보시면 참고가 될 수 있을 것 같아요!\n어떻게든 if문을 제거해 동작하는 코드를 만들 수는 있겠지만 배보다 배꼽이 더 커보입니다. ㅎㅎ",
    "enrolledId": "682457100a72040b80776d24",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145442d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최용훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/24"
      }
    ],
    "feedback": "안녕하세요 최용훈님, 과제 수고하셨습니다. 이번 과제는 프레임워크 없이 순수 JavaScript로 복잡한 SPA를 구현하면서, 현대 프레임워크들이 해결하는 문제들을 직접 경험해보는 것이 목표였습니다. \n\n각 파일들이 너무 커지지 않도록 역할별로 책임을 나누고 폴더와 파일을 분리를 열심히 나눠준 부분은 참 잘했습니다. 하나의 파일이 너무 커지고 책임이 많아진다면 관리를 하기 어려울테니까요.\n\n현재 코드에서는 안 써도 될 코드들 가령 render()와 같은 부분들을 자동화 할 수 있도로 코드의 책임을 안쪽으로 위임할 부분과 꼭 적어야하만 하는 상태, 템플릿, 이벤트 등을 분리하는 작업과 현재 역할과 계층으로 분리해둔 것과는 별개로 Product, Main등 Route별로, 화면별로, 데이터 별로도 모아서 관리할 수 있도록 구조를 만들어보는 것까지도 목표로 남은 주차들 잘 진행해보시기 바랍니다.\n\n---\n\nQ) 간만에 바닐라로 코드를 작성하다 보니, 디렉토리 구성과 함수 분리에 시간 투자를 하지 못했습니다.\n\n전반적으로 시간에 쫓기면서 기능 구현을 하다보니, 스스로의 코드를 찾아서 수정하는 것 조차 버겁다는 느낌이 들었습니다.. 앞으로 초기 프로젝트 설계 관점에서 기본적으로 확립할 방향과 리팩토링 진행 시, 최소한의 방향성에 대하여 피드백 부탁드립니다...!\n\n=> 우리가 만들고자 하는 과정에 이미 정답지가 있답니다 바로 React죠! 스스로 생각을 해보다가 막히게 되면 한번 그냥 interface나 모양, 구조들을 그냥 한번 따라가보세요. 왜 이렇게 만들었을까? 하면서 그 배경을 따라가다 보면 얻을 수 있는게 많을 거에요. 그간 10년간의 FE들의 시행착오의 집약체이니까요.\n\n=> 하지만 또 VDOM, 이벤트 델리케이트, hook은 상당히 추상화 기능이 깊은게 있다보니 짧은 시간 SPA를 만들어 보기에 이걸 다 만들어내기는 부담스러울수도 있죠. 그럴때는 Vue등에서 사용되는 Signal을 참고해보는 것도 좋겠습니다. React가 아닌 프레임워크는 전부 Signal을 기반으로 하고 있으니까요.\n\n=> 나머지 Router나 기타 형태들은 npm에서 가장 많이 쓰이는 라이브러리에서 특히나 사용자에게 제공하는 interface를 유지하면서 이걸 어떻게 만들 수 있을까? 이렇게 한번 생각해보시면 좋겠습니다.\n\n\nQ) 이벤트 분리와 등록/해제 시점에 대해 피드백 부탁드립니다. 렌더 함수가 돌때마다 렌더 함수의 시작, 끝에 해제/등록을 진행헀지만, 핸들러 함수가 많아질 수록, 혼란스러움이 커지는 것 같습니다...\n\n=> 이렇게 열고 닫고 하는 식의 것들이 참 많죠. 이런한 경우에는 cleanup 함수로 반환하는 방식을 자주 사용하곤 합니다. useEffect를 한번 떠올려 보세요.\n\nfunction useEventListener(target, fn, options) {\n   target.addEventListener(fn, options)\n   return () => target.removeEventListenr(fn, options)\n}\n\n와 같이 만들어 둔다면 기존에 있던 내용이 뭐든지 상관없이 다음과 같이 사용할 수 있습니다.\n\nconst cleanup = useEventListener(window, \"click\", () => {})\n\ncleanup() // 을 호출하면 해제 가능.\n\n\n그렇다면 이게 \n\nconst cleanups = [\n  useEventListener(window, \"click\", ...) \n  useEventListener(window, \"click\", ...) \n  useEventListener(window, \"click\", ...) \n  useEventListener(window, \"click\", ...) \n]\n\ncleanups.forEach(fn => fn()) 이런 방식이거나 심지어 이것 또한 등록하고 해제하는 것을 cleanup 방식으로 만들 수 있겠죠.\n\n위와 같이 해야할 동작을 미리 기술하고 함수로 리턴하여 lazy하게 사용할 수 있도록 만드는 방법들은 js를 잘 쓰는 자주 쓰이는 기법중에 하나니 잘 응용할 수 있으면 좋겠네요. \n\n좋은 경험이 되었기를 바랍니다. 2주차도 화이팅입니다. 수고하셨습니다.",
    "enrolledId": "682334f50a72040b80ba7b91",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145442f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "주산들",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/14"
      }
    ],
    "feedback": "산들님 수고하셨습니다!\n\n* 지금 폴더 구조에 대한 체계적인 개선을 하지 못하고 개발을 진행했었는데, 여기서 개선된다면 어떤 구조로 정리 해보기를 추천하시나요?\n\n저는 간단한 웹사이트를  구성할때 초기 디렉토리는\ncomponents, pages, utils, store 이정도만 구성해두고 필요하면  분기해나가는 편입니다. \n저라묜 지금 구조에서 entity라는 그룹핑은 필요 없었을 것같아요~\n\n\n* cart modal 이나 toast 같은 부분은 전역적으로 관리를 하고 싶었는데 그러려면 여기서 어떻게 작업해 보는 게 좋을까요? 어떤 파일에 넣으면서 시작해야 하나요?\n\n정말 다양한 방법이 있을 수 있을 것 같은데요.\ntoast를 예들들면 toast provider라는 컴포넌트를 루트래밸에 먼저 렌더링해둘 것 같아요. 이럴려면 render.js에서 뭔가 처리가 필요하겠죵?\n그리고 toast provider는 store의 toast등의 적절한 상태를 구독해두고 거기에 상태가 들어오면 해당 상태로 토스트를 띄우도록 처리할 것 같습니다~\n\n* 장바구니 modal을 구현할 때 일부만 리렌더링을 시킬 수 없을 것 같아(비효율적이고 성능에 좋지 못할 것 같아서) 일단은 요소의 content를 변경하는 형태로 작업을 하여 UI를 갱신하였는데, 지금의 구조에서 화면의 일부만 랜더링이 될 수 있도록 하는 최적화 로직을 추가할 수 있을까요?\n\nCartModal을 말씀하시는 것이라면 지금 구조에서는 렌더링 최적화는 굉장히 제한적일 것 같아요~ 향후 버츄어돔울 구현하는 과제를 통해 해결해보시는게 좋을 것 같습니다!\n그것이 아니라면 렌더링을 html단위가 아니라 dom api를 활용해서 렌더링해서 기존의 엘리먼트들을 업데이트해야할 것 같습니다!",
    "enrolledId": "6821d2570a72040b80c25f8c",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454433",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "한아름",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/67"
      }
    ],
    "feedback": "한아름님 수고하셨습니다.\n\n* 이번 과제를 통해 전역 상태에 대해 많은 고민을 했는데, 그중 제일 고민한 부분은 장바구니 상태입니다. 장바구니의 초기 상태는 화면의 맨 처음부터 받아오고, 모든 페이지가 인자로 받아야 하는 값이라 생각되어 funciton main() 부분의 맨 상단에 작성했는데, 장바구니 상품 수가 바뀐 후 url이 바뀌면 장바구니의 상품 수가 다시 초기 상태로 돌아가는 오류가 발생했습니다. 장바구니처럼 모든 페이지에서 관리할 수 있는 상태는 어떤 방식으로 구현해야 하는지 알고 싶습니다!\n\n제가 질문을 제대로 이해하지 못하는 것 같은데요!\n과제를 보면 장바구니의 상태는 전역적으로 관리되면 좋은 것 같습니다.\n그래서 스토어를 별도로 두고 렌더링과 상관없이 장바구니 상태가 데이터로 유지될 수 있게 구현하고\n장바구니에 관심있는 UI들은 스토어의 상태를 참조하는 형태로 구현하면 될 것 같습니다!(장바구니 목록과 장바구니 아이콘 갯수등)\n\n* 전체적인 관리 구조를 어떻게 짜야 하는지 의문점이 많이 생기는 과제였다고 생각합니다. 이번 과제처럼 여러 기능이 있는 페이지를 순수 자바스크립트만으로 구현할 때 이상적인 폴더 구조, 파일 구조가 어떻게 되는지 대략적으로라도 알고 싶습니다!\n\n파일구조는 크게 중요하지 않을 것 같은데요!\n\n저는 간단한 웹사이트를  구성할때 초기 디렉토리는\ncomponents, pages, utils, store 이정도만 구성해두고 필요하면  분기해나가는 편입니다. \n\n이상적인 폴더구조는 사실 없는 것 같아요 ㅎㅎ 그때그때마다 달라서요.\n\n요즘은 FSD라는 방법론이 많이 논의되고 있어요.\nFSD자체가 뭐 끝판왕은 아니지만 FSD가 어떤 고민이 있었고 그 고민과 문제를 어떻게해결했는지를 이해하는 것은 큰 도움이 될 것 같습니다~",
    "enrolledId": "68205c830a72040b80c72cf1",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454435",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/39"
      }
    ],
    "feedback": "안녕하세요 수현님~\n1주차 과제 잘 진행해주셨네요!! 너무 고생 많으셨어요.\n\n> 무한 스크롤 부분에서 스크롤이 내려올 때 다시 그 스크롤의 위치를 기억하고 render을 진행하게 되는데 이 방법 말고 다른 방법이 있을까요?\n무한 스크롤은 구현이 되지만 다시 render을 하는 점에서 너무 무겁게 느껴지고 ui 상에서 매끄럽게 이어지지 않습니다. 이 부분에 대해 다시 코드를 짜보려 했는데 시간이 부족해서 못 해봤습니다 ㅜㅜ\n\n이건 API 와의 연계가 필요해요 ㅎㅎ\n스크롤 위치와 현재 위치에 도달했을 때의 query를 기억하고,\n새로고침을 했을 때 query와 limit을 기반으로 최초에 렌더링 할 때 필요한 데이터를 API로 불러와야 합니다. \n즉, 렌더 함수만 어떻게 한다고 될 문제는 아니고 router, api 등 다양한 장치와의 연계가 필요해요.\n\n> 다만, AI가 제시하는 코드를 무조건 사용하는 것이 아니라, \"이 코드가 왜 이렇게 동작하는지 이해하고 사용해야 한다\"는 점도 중요하다는 걸 느꼈습니다.\n\n중요한 지점이네요 ㅎㅎ 그래서 저는 앞으로 AI를 사용할 때 기본기가 더 중요하다고 생각해요. AI가 생성하는 코드는 더 많고 다양해질 것이고, 그 코드가 서로 어떻게 상호작용하는지 연계되는지 이해하지 못하면 지금 당장의 문제는 해결할 수 있어도, 리스크가 점점 커질 수 있으니까요!\n\n",
    "enrolledId": "681dd962e7dc2519a9b4585f",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454437",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김소희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/74"
      }
    ],
    "feedback": "소희님 이번에는 과제 하실 시간이 부족하셨던 것 같습니다 :)\n나중에 솔루션 코드가 나오면 코드를 살펴보시고 복기하시는 시간을 꼭 가지시면 좋을 것 같아요!",
    "enrolledId": "67cae59e3255d88e88383b13",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad61454439",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김지혜",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/72"
      }
    ],
    "feedback": "- 컴포넌트 간 의존성 분리: 현재 Home.js와 Cart.js에서 cartStore에 직접 의존하고 있어서 테스트하기 어렵고 재사용성이 떨어집니다. 컴포넌트들이 서로 너무 밀접하게 연결되어 있어서 나중에 수정하기 어려울 것 같습니다. 컴포넌트들을 더 독립적으로 만들 수 있는 방법이 있을까요? 예를 들어 Cart 컴포넌트를 다른 프로젝트에서도 사용할 수 있도록 만들려면 어떻게 해야 할지 궁금합니다.\n\nCart컴포넌트를 일반적인 장바구나 형태로 구현해서 어느 프로젝트에서도 사용할 수 있게 만든다고하면 기본적으로 외부와의 인풋은 모두 일반적인 객체로 데이터를 전달 받을 것 같아요. \n리액트 컴포넌트가 아니기 때문에 자바스크립트 객체형태로 인터페이스를 제공하게될 것 같고요.  ….  ..그런데 적다보니 궁금하신 부분은 이것이 아닌 것 같아요.\n저라면 이렇게 구현할 것 같아요. 제어의 역전이라고 하죠 SOLID 원칙중 DIP요 이것을 활용할 것 같아요.\nCart내부에서 cartStore를 직접 사용하는 것이 아니라 생성자에서 cartStore를 주입받는 것이죠.\n테스트할때는 cartStore를 임의로 모킹 객체로 주입해서 원하는 동작을 하도록 만드는 것이죠.\n디커플링에는 이런 류의 스킬이 자주 사용됩니다!\n(사실 모킹은 테스트할 때 피해야하지만 어쩔 수 없는 부분도 있는 것 같습니다.)\n\n\n- 이벤트 리스너 중복 제거: Cart.js의 bindEventListeners() 메서드에서 10개 이상의 이벤트 리스너를 개별적으로 추가하고 있는데, 이벤트 위임을 사용해서 더 효율적으로 관리하는 방법이 있을까요? 특히 data-product-id 속성을 활용한 이벤트 위임 패턴을 적용하면 코드가 더 간단해질 것 같은데, 막상 하려니 떠오르지 않았습니다. 어떤 방식으로 구현하는 것이 좋을지 조언해 주시면 좋겠습니다.\n\n말씀하셨던 대로 이벤트 위임을 사용하셔도 되는데요 결국 어디서 처리하느냐의 문제 인 것이지 코드의 복잡도는 줄어들지 않을 것 같아요.\n그런데 이벤트 위임은 따로 설명할만한 내용이 없을 것 같은데 이벤트 위임 자체가 궁금하신 것일까요?\n카트  root엘리먼트에 이벤트를 걸고 버블링을 활용해서 엘리먼트를 판별하고 data-product-id와 같은 추가 데이터를 활용해서 필요한 동작을 수행하도록 할 수 있을 것 같아요! \n하지만 그보다 더 좋은 것은 실제 리액트가 그렇듯 이벤트 위임으로 처리하지만 위임은 프레임웍 내부에서 처리하고 컴포넌트 코드래밸에서는 컴포넌트 내부에서 이벤트를 바인드하는 코드를 작성하는 것이 코드 리더빌리티가 더 좋은 것 같아요 :) \n\n- 상태 업데이트 로직 최적화: store.js에서 increaseQuantity, decreaseQuantity, toggleItemSelection 등의 메서드들이 비슷한 패턴으로 배열을 조작하고 있습니다. 이런 중복된 로직을 하나의 공통 함수(예: updateItem)로 합쳐서 코드를 더 간결하게 만들 수 있을까요? 그리고 배열을 매번 새로 만드는 것보다 불변성을 유지하면서 성능을 개선하는 방법이 있는지 궁금합니다.\n\n일반적인동작을 하는 공통함수를 만어도 되긴 하지만 저는 map 사용하는 것만 동일하고 실제로 콜백의 코드는 다르기때문에 중복이라고 보진 않습니다. 오히려 이상황에서는 말씀하신 공통합수는 map이라는 인터페이스로 배열이 이미 구현된 것이 아닌가 싶어요.\n\n배열을 매번 새로 만드는 것보다 불변성을 유지하면서 성능을 개선하는 방법이 있긴 있는데요. 이게 직접 구현은 굉장히 어렵습니다.\n그런 리스트를 퍼시스턴트 리스트라고 하는데요. 하스켈이나 리스프같은 언어가 제공하는 리스트들은 기본적으로 퍼시스턴트 리스트를 제공하고 있지만 자바스크립트는 쉽게 구현은 힘들어요 ㅎㅎ\nimmer.js라는 도구가 어느정도 유사하게 동작하도록 구현한 도구입니다. 리스트만 구현한 건 아니지만요 :)\n그리고 생각보다 배열을 새로생성하는 것은 비용이 크지 않습니다. 배열에 들어가는 데이터를 만드는 것이 비용이 크죠.\n\n- 함수명과 변수명 개선: AI의 피드백으로는 Cart.js의 templateContent(), itemCountText() 같은 함수명들이 직관성이 떨어지다고 예를 들어 templateContent()를 renderCartContent()로 바꾸는 것을 제안하는데 어떻게 생각하시는지 궁금합니다. 그리고 어떤 함수와 변수를 더 명확하게 이름 지을 수 있는 방법에 대해 조언받을 수 있을까요?\n\n이부분은 사실 너무 이야기할 것이 많아서 차라리 책을 추천하는 것이 좋을 것 같아요!\n클린코드라는 책의 두번째 챕터가 그런 내용을 다룹니다!\n그리고  함수명은 함수의 의도가 들어나는 이름이면 될 것 같습니다. 지혜님이 생각하기에는 어떤 이름이 지혜님이 작성항 코드의 의도를 드러낸다고 생각하시나요~",
    "enrolledId": "679ce583ada1879bb5adddf0",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145443b",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김연수",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/70"
      }
    ],
    "feedback": "안녕하세요 연수님 아쉽지만 채점을 할 수 있을 만큼의 기준이 되지 못하여서 불합격 드리도록 하곘습니다. 2주차에는 조금이라도 진행이 될 수 있기를 바래요. 수고하셨습니다.\n",
    "enrolledId": "6792d9a67ea42ce47df4e27e",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145443d",
    "result": "",
    "isBestPractice": false,
    "name": "정명훈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "6697caec1cfd0ff2d737c0f6",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6868a344a8a052ad6145443f",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "박의근",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6868a341a8a052ad6145428f",
          "name": "STEP02 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-05T13:00:01.708Z",
          "updatedAt": "2025-07-08T21:37:06.061Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-1/pull/61"
      }
    ],
    "feedback": "안녕하세요 박의근님, 수고하셨습니다. 이번 과제는 프레임워크 없이 순수 JavaScript로 복잡한 SPA를 구현하면서, 프레임워크가 해결해주는 문제들을 직접 경험해보는 것이 목표였습니다. 이를 통해 DOM 조작, 상태 관리, 라우팅 등의 핵심 개념을 깊이 있게 이해하셨기를 바랬습니다.\n\n아쉽지만 현재 공유해준 코드만으로는 피드백을 할 수 있는 완성도나 채점을 할 수 있는 수준이 아닌것 같아서 불합격을 드립니다. 혹시 PR을 잘못 올린거라면 알려주세요.\n\nQ) Vitest에서 전체/개별 테스트 시 결과가 다른 이유는 무엇인가요?\n\n=> 이는 테스트 간 상태 공유 문제일 가능성이 높습니다. 사실 개별테스트와 전역 테스트마다 독립된 상태를 만들어서 독립성을 만들어야 하는 데 상태에 의존하는 형태로 코딩을 하게 되면 초기 설정에서 테스트를 하는 동안 상태값이 변하게 되고 이에 의존해서 테스트 코드를 만들면 반드시 순서대로 테스트를 해야만 정상동작하는 경우가 생길 수 있습니다.\n\nQ) 웹앱은 정상 동작하나 테스트가 실패하는 경우 어떻게 접근해야 하나요?\n\n=> 테스트는 특정 DOM 구조와 타이밍을 기대합니다. FE는 특정 결과를 눈으로 보이도록 하게 하기 위해서 다양한 방법과 시간차가 존재하는데 테스트 코드는 오로지 데이터의 구조와 값의 유무로만 판단하기에 정상적인 결과라도 테스트의 정상유무를 테스트하는 방법에 따라 실패가 될 수 도 있습니다.\n\n=> 만약 본인의 결과가 문제가 없다면 테스트 코드를 그에 맞게 변경해야하는게 맞습니다. 그러나 테스트 코드가 진실의 원천이 되어야 한다면 테스트 코드에 맞게 코드를 수정을 하는 것이 맞지요. 지금 어느 코드를 기준으로 작성해야할지 또한 개발자가 결정을 해야하는 부분입니다.\n\n\nps.\nAI를 활용하지 않으면 문제 해결이 막막한 것이 과연 정상적인 상황일지.. 궁금합니다.\n\n=> 네 당연합니다. AI가 없던 시절에는 코딩을 할때 어떻게 해야하는지 하루종일 검색해가며 되는 방법을 찾았던 시절이 있었고 검색 엔지니 없던 시절에는 책과 레퍼런스를 보면서 하루종일 사람들이랑 논의하면서 왜 이럴까 고민을 하다가 답을 찾아내는게 개발자의 역할입니다.\n\n=> 설령 AI가 답을 알려주더라도 그 답이 맞는지 안 맞는지, 그 답이 우리의 경우에 맞는 답인 건지, 이걸 어떻게 적용해야하는지 고민하는 것 또한 개발자의 역할입니다.\n\n=> 막연한 상황에서 목표를 정하고 길을 찾고 답을 찾아내 문제를 해결하는 과정을 즐겨주세요! \n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "671993df7e7008df3ebb7f4e",
    "assignmentId": "6868a341a8a052ad6145429a",
    "assignmentName": "STEP02 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8ae9e",
    "result": "",
    "isBestPractice": false,
    "name": "정명훈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "6697caec1cfd0ff2d737c0f6",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aea0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박의근",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/57"
      }
    ],
    "feedback": "",
    "enrolledId": "671993df7e7008df3ebb7f4e",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aea2",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김연수",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/48"
      }
    ],
    "feedback": "",
    "enrolledId": "6792d9a67ea42ce47df4e27e",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aea4",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김지혜",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/61"
      }
    ],
    "feedback": "",
    "enrolledId": "679ce583ada1879bb5adddf0",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aea6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/22"
      }
    ],
    "feedback": "",
    "enrolledId": "681dd962e7dc2519a9b4585f",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aea8",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김소희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/42"
      }
    ],
    "feedback": "",
    "enrolledId": "67cae59e3255d88e88383b13",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeaa",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한아름",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/49"
      }
    ],
    "feedback": "",
    "enrolledId": "68205c830a72040b80c72cf1",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeac",
    "result": "PASS",
    "isBestPractice": true,
    "name": "주산들",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/38"
      }
    ],
    "feedback": "",
    "enrolledId": "6821d2570a72040b80c25f8c",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeae",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최용훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/29"
      }
    ],
    "feedback": "",
    "enrolledId": "682334f50a72040b80ba7b91",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeb0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "오하늘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/60"
      }
    ],
    "feedback": "",
    "enrolledId": "682457100a72040b80776d24",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeb2",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김민지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/16"
      }
    ],
    "feedback": "",
    "enrolledId": "68245a760a72040b807a5c2c",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeb4",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최재환",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/54"
      }
    ],
    "feedback": "",
    "enrolledId": "68245c9b0a72040b807c704a",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeb6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "임규원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/41"
      }
    ],
    "feedback": "",
    "enrolledId": "68247d1b0a72040b8094ff55",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeba",
    "result": "PASS",
    "isBestPractice": false,
    "name": "유윤우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/40"
      }
    ],
    "feedback": "",
    "enrolledId": "68249f4e0a72040b80b3568e",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aebc",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박소연",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/36"
      }
    ],
    "feedback": "",
    "enrolledId": "6824c3ac0a72040b80cbc2a3",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aebe",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이유진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/35"
      }
    ],
    "feedback": "",
    "enrolledId": "682546800a72040b80150daf",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aec0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신희원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/37"
      }
    ],
    "feedback": "",
    "enrolledId": "68254af40a72040b801869c8",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aec2",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이지현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/55"
      }
    ],
    "feedback": "",
    "enrolledId": "682566140a72040b80300e04",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aec4",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이의찬",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/27"
      }
    ],
    "feedback": "",
    "enrolledId": "682576d80a72040b803dc418",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aec6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "장루빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/59"
      }
    ],
    "feedback": "",
    "enrolledId": "682578680a72040b803edb7c",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aec8",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박창준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/20"
      }
    ],
    "feedback": "",
    "enrolledId": "6825b2810a72040b8071d8af",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeca",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이태영",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/11"
      }
    ],
    "feedback": "",
    "enrolledId": "6825c7b00a72040b8086a6af",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aecc",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신홍준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/2"
      }
    ],
    "feedback": "",
    "enrolledId": "682983e90a72040b80d5107f",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aece",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이민재",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/3"
      }
    ],
    "feedback": "",
    "enrolledId": "682b2fc10a72040b80322848",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aed0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정도은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/43"
      }
    ],
    "feedback": "",
    "enrolledId": "682d428a0a72040b80bf93a5",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aed4",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이은지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/19"
      }
    ],
    "feedback": "",
    "enrolledId": "6833c8d54e1c73fff246f798",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aed6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양창훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/5"
      }
    ],
    "feedback": "",
    "enrolledId": "6835a5664e1c73fff2ddfa55",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aed8",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이진희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/64"
      }
    ],
    "feedback": "",
    "enrolledId": "683f18534e1c73fff2105065",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeda",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/14"
      }
    ],
    "feedback": "",
    "enrolledId": "683fa08b4e1c73fff25b6b7e",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aedc",
    "result": "PASS",
    "isBestPractice": false,
    "name": "임두현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/30"
      }
    ],
    "feedback": "",
    "enrolledId": "684149af4e1c73fff27b2528",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aede",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양성진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/28"
      }
    ],
    "feedback": "",
    "enrolledId": "68417c4a4e1c73fff2a66073",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aee0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이가은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/25"
      }
    ],
    "feedback": "",
    "enrolledId": "68479688614fe33053f10a5f",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aee2",
    "result": "PASS",
    "isBestPractice": false,
    "name": "허정석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/31"
      }
    ],
    "feedback": "",
    "enrolledId": "68479c49614fe33053f4b25d",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aee4",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정유열",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6"
      }
    ],
    "feedback": "",
    "enrolledId": "6847a18a614fe33053f85c23",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aee6",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박준형",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/9"
      }
    ],
    "feedback": "",
    "enrolledId": "6847a79c614fe33053fc070a",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aee8",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수민",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/56"
      }
    ],
    "feedback": "",
    "enrolledId": "68497d2484ed0f3459b09aca",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeea",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여찬규",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/44"
      }
    ],
    "feedback": "",
    "enrolledId": "684a8d6184ed0f34595bafbf",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeec",
    "result": "PASS",
    "isBestPractice": false,
    "name": "조영민",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/53"
      }
    ],
    "feedback": "",
    "enrolledId": "684a92b384ed0f34596009d9",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aeee",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/50"
      }
    ],
    "feedback": "",
    "enrolledId": "684aad6b84ed0f3459763b8d",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aef4",
    "result": "PASS",
    "isBestPractice": true,
    "name": "이지훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/18"
      }
    ],
    "feedback": "",
    "enrolledId": "6852337e851b4a7da82175ff",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aef6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김효진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/23"
      }
    ],
    "feedback": "",
    "enrolledId": "6852955b851b4a7da86f237b",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aef0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "강병준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/46"
      }
    ],
    "feedback": "",
    "enrolledId": "684abe3784ed0f345985eaaf",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aef2",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정민기",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/jeongmingi123/front_6th_chapter1-2.git"
      }
    ],
    "feedback": "",
    "enrolledId": "684cd08584ed0f3459eb21b9",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aef8",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김휘린",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/4"
      }
    ],
    "feedback": "",
    "enrolledId": "6853a924851b4a7da8357a5c",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af00",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여진석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/17"
      }
    ],
    "feedback": "",
    "enrolledId": "685aa4a8c85f37c52555e223",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aefa",
    "result": "PASS",
    "isBestPractice": false,
    "name": "장희진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/24"
      }
    ],
    "feedback": "",
    "enrolledId": "6853f85d851b4a7da883412b",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aefc",
    "result": "PASS",
    "isBestPractice": false,
    "name": "현지수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/47"
      }
    ],
    "feedback": "",
    "enrolledId": "68542193851b4a7da8a3a270",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8aefe",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정건휘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/52"
      }
    ],
    "feedback": "",
    "enrolledId": "6859f165c85f37c525cd8f44",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af02",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정용준",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/10"
      }
    ],
    "feedback": "",
    "enrolledId": "685e1202c85f37c525604396",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af04",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한재원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/12"
      }
    ],
    "feedback": "",
    "enrolledId": "685e1e58c85f37c52567068f",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af06",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이정우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/58"
      }
    ],
    "feedback": "",
    "enrolledId": "685e5710c85f37c5258cd6b6",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af08",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김유현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/26"
      }
    ],
    "feedback": "",
    "enrolledId": "685f3badc85f37c5250804fa",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af0a",
    "result": "PASS",
    "isBestPractice": true,
    "name": "윤영서",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/7"
      }
    ],
    "feedback": "",
    "enrolledId": "68623210c85f37c525712305",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af0c",
    "result": "PASS",
    "isBestPractice": true,
    "name": "권지호",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/21"
      }
    ],
    "feedback": "",
    "enrolledId": "686387e2c85f37c52555fc22",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af0e",
    "result": "",
    "isBestPractice": false,
    "name": "차현빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adee",
          "name": "STEP03 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.101Z",
          "updatedAt": "2025-07-19T17:28:04.942Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "68678936c85f37c52506d1fc",
    "assignmentId": "6871ddc329b801fa62a8ae00",
    "assignmentName": "STEP03 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af4b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김소희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/42"
      }
    ],
    "feedback": "안녕하세요 소희~ 수고 많았어요~ 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 무엇보다 \"필요가 진정한 공부를 만든다\"는 경험을 했기를 바래요. 단순히 이론으로 아는 것과 실제로 구현하기 위해 필요한 지식을 찾아가며 학습하는 것은 완전히 다른 깊이의 이해를 가져다준다는 것을 느꼈기를 바래요. 이러한 코드들이 당장 실무에서는 쓰이지 않겠지만 개발을 더 선명하게 이해해주는 사고방식을 만드는데 도움을 준답니다.\n\n코드를 살펴보니 특히 이벤트 위임 시스템을 3-depth Map 구조(`Map<Element, Map<EventType, Set<Handler>>>`)로 체계적으로 구현하신 점이 인상적입니다. 중복 리스너 등록 방지를 위해 `attachedListeners`를 별도로 관리하고, 활성 이벤트 타입만 동적으로 등록하는 최적화도 잘 적용하셨어요. \n\n회고에서 언급하신 DOM의 property와 attribute 차이점을 파악하는 데 어려움을 겪으셨다는 부분도 공감됩니다. 실제로 `checked`, `disabled` 같은 boolean 속성들은 attribute와 property가 완벽히 동기화되지 않아 많은 개발자들이 혼란을 겪는 부분입니다. 이를 정확히 구분해서 처리하신 것은 깊이 있는 학습의 결과라고 생각합니다.\n\n코드 상에서 몇 가지 개선할 수 있는 부분을 짚어보자면\n\n1. WeakMap을 사용해보세요. DOM 요소들은 화면에서 사용되지 않으면 메모리에서 해제되도록 되어 있는데 Map의 key에 보관이 되면 메모리 누수가 발생하게 됩니다. 이를 방지하지 위한 도구가 WeakMap인데요 DOM과 같이 브라우저 API의 값을 key로 써야 하는 상황이라면 WeakMap을 사용하는게 좋습니다.\n\n2. updateAttributes 중복 제거: 회고에서도 언급하셨듯이 createElement와 updateElement에서 속성 처리 로직이 중복되어 있습니다. 공통 유틸리티 함수로 추출하면 유지보수가 더 쉬워지겠죠. 뭔가 해야겠다 생각하면 한번 시도해보는 것도 좋아요!\n\n3. 이벤트 버블링 최적화: 현재 while문으로 부모를 순회하며 핸들러를 찾는데, 최근에는 event.composedPath() 라는 API도 나와서 최신 Native API들도 한번 찾아보는 것도 좋습니다.\n\n---\n\nQ) 코드 작성 스타일에 대한 습관\n=> 전반적으로 깔끔하고 읽기 쉬운 코드를 작성하셨습니다. 특히 주석으로 자료구조를 명시한 점(`// el -> event type -> handlers`)이 좋았습니다. 다만 복잡한 조건문에서는 early return 패턴을 더 활용하면 가독성이 향상될 것 같습니다.\n\nQ) 다음 스텝은 무엇인가요?\n=> 반복적인 컨텐츠를 key를 통한 최적화 기법, 컴포넌트의 핵심인 useState와 useEffect 상태관리 등을 만들어 보면 좋겠네요. 여기까지는 알고 있어야 React의 핵심을 다 이해하는 것이니까요.\n\n=> 특히 상태 관리 시스템을 먼저 구현해보시면, 지금까지 만든 렌더링 시스템과 자연스럽게 연결될 것입니다.\n\n=> 그리고 useMemo나 Memo등의 최적화 방식과 Context를 이용한 전역상태관리 Suspense등의 비동기 처리등 실제 React가 새롭게 추가한 역사를 따라가면서 core부터 최신 기능까지 원리를 이해해보면 좋겠네요.\n\n수고하셨습니다. 다음 주차도 화이팅입니다! :)",
    "enrolledId": "67cae59e3255d88e88383b13",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af4d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김지혜",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/61"
      }
    ],
    "feedback": "안녕하세요 지혜, 고생많았습니다. 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 특히 이론을 배우는게 아니라 구현을 통해서 배우는 것의 중요함을 경험했기를 바래요.\n\n회고에서 \"평탄화\", \"재귀적 표준화\", \"DocumentFragment\" 같은 개념들을 처음에는 암호문처럼 느꼈다고 하셨는데, AI와 함께 구현하면서 이런 개념들이 왜 필요한지 체감하신 과정이 인상적이네요. `updateElement`에서 5가지 케이스를 모두 처리하는 로직을 구현하면서 DOM 조작의 복잡성을 이해하신 점이 좋았습니다.\n\n코드를 살펴보니 이벤트 위임 시스템을 Map을 활용해 구현하고, boolean 속성들을 property로 처리하는 등 DOM API의 세부사항을 잘 이해하고 작성하셨네요. 다만 몇 가지 개선점이 보입니다. 예를 들어 `updateChildren`에서 `Array.from($parent.childNodes)`로 NodeList를 배열로 변환한 것은 좋은 판단이었지만, 대량의 DOM 조작 시 성능을 위해 DocumentFragment를 더 적극적으로 활용하면 좋겠습니다.\n\nAI 의존도가 높았다고 고민하셨는데, 많은 친구들이 다들 고민하는 주제라고 생각해요. AI는 도구인데다가 내가 하는게 아니라 외주를 준다라고 생각하게 되면 AI가 어떻게 만들어 오던 관심이 없고 결과가 중요하니까요. 우리가 개발을 하는 거라면 결과중심어도 상관없겠지만 성장과 학습의 측면에서는 내가 직접해야 성장을 할 수 있으니까요. AI 의존적이라는게 나쁜 건 아니지만 본인게 아니라는 느낌이 더 크게 다가온다 생각합니다.\n\n스스로 검증을 해보는 시간을 가벼보세요. 제일 쉬운 검증은 내가 AI를 이용했건 아니건간에 내가 만든걸 얼마나 구체적으로 남에게 설명할 수 있느냐로 확인 할 수 있습니다. 특히 육성으로 말해보는게 필요합니다. 녹음기를 통해 내가 작업한 결과를 말로 설명해보면서 내가 충분히 이해를 했는지 그렇지 않았는데 AI가 해준걸 본인이 이해하고 한 것처럼 착각하는지 판단할 수 있을거에요.\n\nAI라는 멋진 도구를 잘 활용하고 학습하는 방법을 찾아내는 것도 현 시대를 살아가는 중요한 능력이라고 생각해요.\n\n팀원들과의 소통도 좋은 방법입니다. AI는 정답이라 생각하는 것을 주지만, 동료들은 \"왜 그게 정답인지\", \"다른 방법은 없는지\" 같은 더 깊은 통찰을 생각하게 만들어주니까요.\n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "679ce583ada1879bb5adddf0",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af4f",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "박의근",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/57"
      }
    ],
    "feedback": "Q. 시간이 촉박한 과제를 진행하실 때 관련 개념 학습과 구현 사이의 균형을 어떻게 잡으시는지도 듣고 싶습니다.\n\nA. 의근님 저는 의근님의 방법이 틀리다고는 생각하지 않아요.사실 지금과 같은 학습을 위한 과제의 경우 학습을 먼저 충분히 하는 것은 당연히 권장하는 방법인것 같습니다.\n하지만 회사 과제의 경우는 다를 수 있을 것 같아요. 회사는 정해진 일정이 있고 그안에서 학습과 과제를 완수해야하는 것이 필수 이니까요.\n이것은 어떻게 보면 일정관리라고 생각해요. 저도 당연히 주니어 초빈에는 학습비용이 많이 들었어요. 어떤때는 과제를 제때 해내지 못했던 적도 있고요.\n도전적인 과제를 정해진 시간에 못하는 경우는 많았습니다. 시니어때도 있었죠.\n다만 이것을 어떻게 풀어가느냐가 중요한 것 같습니다. 예를들어 프로젝트를 진행하다보면 학습비용이 커서 \"아 이건 일정내에 해내기 힘들겠는데?\" 싶은 상황이 오면 미리 공유하고 일정을 확보할 수 있는지 확인해볼 수 있을 것 같아요. 반면 마감일 막판에 일정조정 요청을 하는 것은 피해야하죠. \n\n과제 구현에 있어서는 일단 세가지 원칙을 지키면 어떨까 싶어요.\n첫번째 일단 구현해봅니다. 구현하면서 코드는 엉망 진창일 수 있지만 일단 구현하려는 대상을 학습하면서 돌아가게는 만듭니다.\n두번째는 코드 리팩토링단계에요. 그냥 굴러가는게 아니라 잘 굴러가게 만드는 것이죠. 코드도 깔끔하게 정리하면서요.\n세번째는 빠르게 만듭니다. 성능적인 면까지 고려해서 좀 더 빠르거나 UX가 좋게 만들 수 있는 지를 살펴 보는 것이죠.\n\n이렇게 단계별로 진행하면 구현된 코드를 계속 만들어가기 때문에 불안함이 줄어들 수 있습니다!",
    "enrolledId": "671993df7e7008df3ebb7f4e",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af51",
    "result": "",
    "isBestPractice": false,
    "name": "정명훈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "6697caec1cfd0ff2d737c0f6",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af54",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "여진석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/17"
      }
    ],
    "feedback": "진석님 이번주도 고생 많으셨습니다~\n아쉽게 E2E에 있어서 테스트가 실패하기도 했고, 회고를 읽어보니 여러 아쉬움이 느껴지는 부분이 있는 것 같은데요 ㅠㅠ\n\n첫 번째 질문을 주신 부분과 이어지는 내용인데요. 결국 저희가 해결해야 하는 문제의 형태는 동일하지만 그 문제를 해결할 수 있는 방법은 여러가지 인데 과제의 특성상 테스트를 통해 해당 모습을 어쩔수 없이 제한을 걸게 되는 것 같아요. 그럼에도 이미 아시겠지만, 꼭 그 문제를 그 방법으로 구현해야만 반드시 해결할 수 있는게 아니듯이 관통하는 가장 중요한 문제해결 핵심은 뭔지 고민을 하는게 제일 중요하지 않을까 싶습니다. (테스트를 통과하지 못했더라도 그 부분을 명확하게 챙길 수 있다면 충분히 의미있어다고 생각해요!)\n \n앞으로 과제를 진행하는데 있어서도 명확한 채점 기준 또는 테스트가 있는 경우가 많을텐데요. 이 테스트를 통과시켜야해 라는 관점으로 접근하는것도 좋지만, 좀 더 큰 그림을 바라보고 접근하면 좋을것 같아요. 대신! 바이브 코딩을 하다라도 너~무 큰 그림을 보기보다는 감당할 수 있는(한번에 검증할 수 있는) 범위의 큰그림에서요.\n\n너무 넓은 범위의 작업을 맡기다보면 퀄리티가 떨어지는 부분도 있고 저희가 검증하기도 어려워지니 계속해서 다시 고치다보면 시간이 더 들어가는 경우들도 많이 있어서요. 내가 구현하고자 하는 부분의 계획을 명확하게 하고 AI에게 그 계획을 통해 구현하게 하는 접근방식도 함께 사용해보시면 좋을것 같습니다!\n\n아! 그리고 테스트에 있어서도 CI에 깨지는 부분이 명확하게 드러나는 것 같은데요.\n\n* https://github.com/hanghae-plus/front_6th_chapter1-2/actions/runs/16354685466/job/46209983367?pr=17\n\n직접 실행을 해보고 내용을 디버깅해보면 좋을것 같은데, 제가 채점을 해야하는 인원이 너무 많다보니..일일히 확인하기 어렵다는 점 양해해주시면 감사하겠습니다. 추후에 더 고민해보시고 찾기 어려우시다면 개인적으로 연락주셔서 함께 고민해보는것도 방법일 것 같아요.\n\n그리고 '자바스크립트에서 class 자체를 abstract 메소드나 나 상속개념이 없다면 사용할 이유가 없다고 생각해도 될까요?'라고 질문을 주셨는데요.\n이 부분은 비슷한 기능을 각각 구현해서 사용할 수 있는 관점에서 적절하게 선택해서 사용하면 되는 관점이지만, 가독성 관점이나 추상화, 캡슐화등의 관점에서 오는 장점도 명확해서요! 사용 목적에 대해서는 명확하게 하고 장점과 단점을 공부해보는건 큰 도움이 될 것 같습니다.\n\n고생하셨고 다음주도 화이팅이에요 진석님!",
    "enrolledId": "685aa4a8c85f37c52555e223",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af56",
    "result": "PASS",
    "isBestPractice": false,
    "name": "장희진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/24"
      }
    ],
    "feedback": "안녕하세요 희진, 수고하셨습니다. 이번 과제는 React의 핵심 원리인 Virtual DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 체득하는 것이 목표였습니다. 특히 \"Virtual DOM이 무엇인가\"를 단순히 아는 것과 \"Virtual DOM을 구현하기 위해 무엇이 필요한가\"를 직접 경험하며 깊이 있는 학습을 하기 위한 방법을 익히는 것에 의의를 느꼈기를 바래요.\n\n코드를 살펴보니 특히 이벤트 위임 시스템을 WeakMap + Set 조합으로 구현하신 점이 인상적입니다. 메모리 관리를 위해 WeakMap을 선택하고, 중복 이벤트 리스너 문제를 allEvents Set으로 해결한 것은 깊이 있는 이해를 보여줍니다. 또한 boolean 속성(checked, disabled 등)을 property로 처리하면서도 필요한 경우 attribute도 함께 관리하는 세심한 구현도 잘했습니다!\n\n이렇게 직접 프레임워크의 핵심을 구현해보면 이론적 지식이 아닌 구조적 이해를 얻게 됩니다. 앞으로도 이런 방식으로 사용하는 도구의 원리를 파헤쳐보는 경험을 이어가시길 바랍니다. 너무 너무 잘했습니다!!\n\n---\n\nQ) 이벤트 위임 구조의 성능 및 개선점\n\n=> 현재 구현하신 WeakMap + Set + 이벤트 위임 조합은 메모리 관리와 성능 면에서 매우 좋은 패턴입니다. React도 유사한 방식을 사용하고 있죠. \n\nbubbling 경로의 성능 우려에 대해서는, 실제로 DOM 트리가 매우 깊거나(100+ depth) 이벤트가 매우 빈번한 경우(mousemove 등)가 아니라면 사실 큰 문제는 되지 않습니다. 이미 React도 그렇게 쓰고 있잖아요ㅎ\n\n그리고 현재는 모든 이벤트 타입을 root에 등록하는데, 실제 사용되는 이벤트만 동적으로 등록방법도 한번 고민해보면 좋겠네요.\n\n핵심 원리를 직접 구현하면서 원리를 이해하는 것이 더 선명해지는 경험을 했기를 바랍니다. \n\n수고하셨습니다. 다음 주차도 화이팅입니다! :)",
    "enrolledId": "6853f85d851b4a7da883412b",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af58",
    "result": "PASS",
    "isBestPractice": false,
    "name": "현지수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/47"
      }
    ],
    "feedback": "안녕하세요 지수님! 2주차 과제 잘 진행해주셨네요 ㅎㅎ\n현재 PR에 특별한 질문이 없는 상태, 궁금한게 있으면 언제든 문의채널에 남겨주세요!! 고생하셨습니다!\n\n---\n\n세상에 ㅋㅋㅋ 정리를 너무 잘 해주셨네요. 이대로 미리 제줄해주셨으면 BP 예약이었을텐데 ㅠㅠ 아쉬워요\n\n> 현재 과제 수준에서 키 기반 diff 알고리즘 구현이 필요한지, 아니면 인덱스 기반으로도 충분한지 궁금합니다.\n\n현재 과제의 목표는 리액트의 렌더링 시스템을 맛보는 것이었어요 ㅎㅎ\n그래서 지금 수준으로도 충분하다고 생각합니다.\n\n> 만약 키 기반 구현이 필요하다면, 어떤 우선순위로 접근하는 것이 좋을까요?\n\nchildren에 대해 updateElement를 수행할 때, children의 key를 토대로 위치를 탐색해서 리렌더링에 대한 결정을 해야하지 않을까 싶네요!\n\n다만 구현해봐야 알 것 같아요 ㅋㅋ 제 스스로가 구현하기 전에는 잘 모르는 게 많아서.. ㅠㅠ.. 확신은 없네요.\n\n> 성능 개선을 위해 updateAttributes 함수를 헬퍼 함수로 분리했습니다. 이런 함수 분리 방식이 적절한지 궁금해요!\n\n충분히 잘 해주셨다고 생각해요! 다만 실제로 얼마나 성능 개선이 되었는지는 측정을 해봐야 알 것 같네요!\n\n> 대규모 애플리케이션에서 eventMap이 메모리 누수의 원인이 될 가능성은 없을까요? WeakMap 사용을 고려해야 하는 상황이 있을까요?\n\nmap으로만 관리하는 경우, map에 등록된 key가 의도하지 않게 사라졌을 때 어떻게 해야 좋을지 고민해보시면 좋답니다 ㅎㅎ 이를 위해서 weakmap이 있는거라서요.\n\n정상적인 로직만 수행하면 문제될게 없겠으나... 우리가 설계한 것과 다르게 돔을 조작하는 경우, 가령 setState 같은 함수가 아니라 직접적으로 돔을 없애는 경우에는 돔에 대한 이벤트 트리거가 제거되지 않을수도 있답니다!\n\n> Boolean 속성 처리의 브라우저 호환성\n\n제일 좋은건 다룰 수 있는 모든 property에 대해 정의해서 사용하는거라고 생각해요. 창준님께서 남겨주신 리뷰가 제 생각과 맞닿아있네요!\n\n모든 브라우저에서 안전한지는 돌려봐야 알 것 같아요 ㅋㅋ 처음부터 모든 이슈를 찾아내면 좋겠지만, 현실적으로 불가능에 가까워서 문제가 있을 때 빠르게 찾아낼 수 있는 장치를 만드는게 좋다고 생각해요.\n\n\"이게 모든 브라우저에 호환이 될까?\"가 아니라 \"호환이 안 되면 어떻게 찾아내야 좋을까?\" 로 접근하는게 좋다고 생각합니다.\n\n",
    "enrolledId": "68542193851b4a7da8a3a270",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af5a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정건휘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/52"
      }
    ],
    "feedback": "Q. 이 과제에 이어 조금 더 공부해보면 좋을 것이 있을까요?\n\nA. 우선 건휘님 대단하십니다. 이런 질문은 받아본적이 없는데요 ㅎㅎ\n그러면 한가지 화두를 던져보겠습니다.\n\n\"리액트 Fiber 가 무엇이고 이 이개념을 내 과제에 최소한으로 적용하려면 어떻게 해야할까?\"\n\n입니다. 좋은 학습이 될 것 같습니다 :) ",
    "enrolledId": "6859f165c85f37c525cd8f44",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af5c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정용준",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/10"
      }
    ],
    "feedback": "안녕하세요 용준, 수고하셨습니다. 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 깊이 이해하는 것이 목표였습니다. 특히 단순히 이론으로 아는 것과 직접 구현하며 체득하는 것의 차이를 경험하셨기를 바랍니다.\n\n코드를 살펴보니 특히 SyncDOMBatcher라는 자체 배치 시스템을 구현하신 점이 인상적입니다. 뭔가 DOM 조작을 일괄 처리하여 성능을 최적화보겠다라고 하는 시도가 React와 추구하는 방향과도 잘 맞는것 같습니다. 그리고 Converter를 만들어서 체이닝 시스템을 구현해본 것도 아주 참신한 시도라 생각합니다. 잘 하셨네요.\n\n회고에서 스스로 지적하신 것처럼, 이러한 점으로 인해서 코드의 복잡도가 높아진 부분들도 있죠. 아무래도 해당 로직들은 추상화 내부에 속하는 코드라 최대한 간결하게 만들어야 하는 데 추상화 외부에 사용자에게 제공하는 식의 코드방식으로 구현하게 되니 복잡하지 않아도 될 영역이 복잡해지는 상황이 되었네요. \n\n그렇지만 이런 시도와 시행착오를 하면서 점점 영점이 잡히게 되고 좋은 코드를 만들 수 있습니다. 멋진 시도와 함께 얻게 된 소중한 인사이트로 좋은 개발 계속 하게 되기를 바랍니다.\n\n---\n\nQ) 메서드 체이닝을 언제 활용하면 좋을까요?\n\n=> 우선 메서드 체이닝은 편의와 자유도를 제공하기 위해서 제공합니다. 이번 코드는 내부 코드의 방향성이 확정되어 있는 상태에서 변주와 확장이 필요한 방식을 결합하니 잘 맞지 않았죠.\n\n우선 체이닝을 하는 경우에는 우선 불변 객체를 중심으로 명확한 선형 플로우가 있을 때 그리고 이러한 조합을 다양하게 응용이 필요한 경우에 유용합니다. 예를 들어 Array의 map().filter().reduce()처럼 데이터 변환 파이프라인이나, jQuery의 DOM 조작처럼 동일한 대상에 연속 작업을 할 때입니다. \n\n저는 개인적으로 JS에서 Date를 다루는게 너무 힘들어서 DateTime 객체를 만들어 불변으로 만들고 체이닝으로 만들어본 경험이 있네요.\n\nQ) 재귀 로직을 추상화해서 흐름을 개선할 수 있을까요?\n\n=> 재귀는 본질적으로 흐름 추적이 어렵죠. 추상화를 할때에는 우선 재귀를 stack을 사용하면 재귀를 반복문으로 바꿔낼 수 있습니다. 그러면 훨씬 더 간결해질 수 있죠. 그리고 그 반복구조를 Iterator 패턴까지 적용을 한다면 더 추상화를 할수도 있을거에요. 물론 필요한 수준까지만 추상화가 필요하고 추상화가 필요한 이유가 추상화 바깥에서 더 자유로운 활용을 하기 위함이라는 걸 생각해주시면 좋겠습니다.\n\n수고하셨어요! 화이팅입니다 :)",
    "enrolledId": "685e1202c85f37c525604396",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af5e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한재원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/12"
      }
    ],
    "feedback": "안녕하세요 재원님! 2주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!!\n\n> 이번에는 최대한 먼저 브레인스토밍, 플랜을 짠뒤에 AI는 내가 생각한게 맞는 방향인지 확인하는 식으로 활용했습니다.\n저의 생각의 흐름, 플랜, AI에게 물어본 내용은 plan.txt에 정리해두었습니다.\n\n오 ㅋㅋㅋ 생각의 과정이 잘 정리되어서 무척 좋네요!! 이 자체가 일종의 회고 처럼 느껴지기도 해요 ㅎㅎ\n\n> renderElement.js에서 DFS 순회 방식으로 updateElement를 구현했고,\n1. 텍스트 vs 텍스트 → 문자열 비교 후 교체\n2. 타입 다르면 → 전체 교체\n3. 같은 타입이면 → props 비교 → children 재귀 diff로 구현을 했는데,\n전체적으로 괜찮은 흐름인지, 특히 replaceChild 타이밍과 childNodes[index]로 접근하는 구조가 문제가 될 가능성은 없는지 궁금합니다!\n\n잘 작성해주셨다고 생각합니다!\n코드를 조금 살펴보니, data attribute를 다루는 부분을 추가해주셨는데요, 이 부분 제거해도 정상동작하지 않을까 싶어요 ㅎㅎ\n\n그런데 이게 왜 필요할까 고민해보면.. 아마 boolean type 처리하는 부분과 겹쳐서 그런게 아닌가!? 싶은 생각도 있네요 ㅋㅋ\n\n여튼 결론은 잘 진행해주셨어요!! 고생하셨스빈다 재원님!",
    "enrolledId": "685e1e58c85f37c52567068f",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af60",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이정우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/58"
      }
    ],
    "feedback": "정우님 고생 많으셨어요 ㅎㅎ\n필요한 부분들에 대해서 명확하게 잘 구현해주셨네요.\n따로 회고가 작성되지 않아서 아쉽다고 느껴졌었는데, 내부 docs를 보니 각 구현에 대해서 잘 정리해주셨네요 :+1\n\n말씀해주신것처럼 추후에 기회가 되신다면 다음 단계로 적어주셨던 부분 직접 구현해보시고 공유해주시면 더 좋을것 같네요\n\n따로 피드백을 요청주셨던 부분은 없어서 여기서 마무리 하겠습니다.\n다음주도 화이팅입니다!",
    "enrolledId": "685e5710c85f37c5258cd6b6",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af62",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김유현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/26"
      }
    ],
    "feedback": "유현님 고생하셨어요~\n작은 단위로 문제를 분할하고 점점 완성해나가는 접근 멋있는데요!\n현업에서도 문제가 너무 복잡하게 느껴진다면 많이 사용하는 방식이니 좋은 기회라고 생각하시고 계속해서 연습해보시면 좋겠어요 ㅎㅎ\n과제 내용을 보면 명확하게 필요한 부분에 대해서 잘 구현하신 것 같아요.\n각 함수에 대한 주석도 깔끔하게 작성해주셨구요 ㅎㅎ \n\n질문 주셨던 부분 답변을 드려보면요.\n\n> 함수 내 조건문이 길어지고 있는데 가독성을 위해 분리하거나 early return 방식이 더 나은 구간이 있을까요? \n\n이 부분은 사실 얼리 리턴이 적용되어 코드가 좀 더 깔끔해지기보다는 추상화 수준, 그리고 지금은 절차적으로 되어있는 여러 코드들에 대해서 함수형 코딩으로 해당 동작들에 대해 공통 로직들을 분리하고 가독성을 높이는 방식으로 진행해보면 어떨까 싶긴 했어요! 말씀해주신 함수들이 이에 해당했는데요. 관련해서 함수형 코딩의 핵심 원칙같은것들을 미리 공부해보셔도 좋을 것 같고, 함수를 내 기준에 맞춰 추상화 해보고 AI에게 피드백을 받아가면서 적절한 추상화란 무엇인지 개념을 정립해 봐도 좋을 것 같아요. (이 부분은 추후 발제에서도 다루는 내용이니 기대해보셔도 좋을 것 같네요 ㅎㅎ)\n\n> 현재 updateElement에서 타입이 다른 VNode는 교체하고 텍스트 노드는 바로 비교하는 방식이 React의 Reconciliation과 유사하다고 생각했는데 이 접근 방식에 논리적 허점이나 성능 문제가 있을까요?\n\n말씀해주신대로 지금의 과제 복잡도에서는 충분히 잘 구현해주셨다고 생각이드는데요. 지금의 구조에서는 트리를 대체하는 방식이 조금 비효율 적일 수 있어서 추후에 더 복잡도를 높인다고 한다면, 실제 리액트처럼 키를 기반으로 비교를 진행하고 트리를 기반으로 순회하면서 업데이트 하는 구조를 만드는게 좋지 않을까 싶긴합니다! 관련해서 이미 구현체들이나 설명이 되어있는 글들이 많으니 꼭 함께 학습해보시면 좋을 것 같아요.\n\n고생 많이 하셨고 다음주도 화이팅입니다!",
    "enrolledId": "685f3badc85f37c5250804fa",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af64",
    "result": "PASS",
    "isBestPractice": true,
    "name": "윤영서",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/7"
      }
    ],
    "feedback": "영서님 한 주 고생하셨습니다. \n정리한 내용을 공유해주신 부분도 그렇고, 함께 성장하려고 하시는 부분에 있어서 매우 인상깊었습니다. 남겨주신 회고도 아주 고봉밥인데요. 다른 분들도 함께 보면서 이야기 나눌 수 있으면 좋았겠네요.\n과제에 있어서는 필요한 부분을 명확하게 잘 구현해주신 것 같습니다. \n질문 주셨던 부분 답변 드려보고 마무리 해볼게요.\n\n> 이벤트 위임 시스템을 구현하면서 WeakMap + Map + Set의 3단계 중첩 구조를 선택했는데, 이 설계가 적절한지 궁금합니다. \n\n저는 명확한 것 같습니다. 실제 fiber구조에서도 비슷한 목적에 맞춰 구현이 되어 있는 걸로 알고 있고 굳이굳이 나누면 더 최적화를 할 수 있을 것 같지만 지금의 수준에서는 충분한 것 같아요. 사실 이걸 구현하는데 있어서 영서님이 명확한 목적을 갖고 있고, 그걸 구현하는데 선택하는 자료구조이기 때문에 해당 자료구조를 사용하는 메서드가 약간 복잡해지고 하는 부분은 그 자료구조에서 오는 장점이 더 도움이 되기 때문에 크게 고민할 필요는 없다고 생각해요.\n\n> 모듈 레벨의 전역 변수\n\n넵 말씀해주신것처럼 지금 과제의 수준에서는 크게 문제가 없을 것 같은데요.\n정답을 이미 알고 있는것처럼 팩토리 함수같은 것을 사용해서 함수 내에 컨텍스트를 묶어 사용하는게 오염 측면이나 캡슐화 측면에서 유리한 것 같아요.\n회사에서도 이런 비슷한 코드를 작성하는 경험이 많이 있는데, 저같은 경우에는 처음부터 분리를 하는 편인데요.\n하지만, 이미 알고 있는 것처럼 그리고 우리가 자주 말하는 여러 원칙처럼 필요한 만큼만 최대한 단순하게 작성하는게 좋지 않을까 싶습니다.\n(근데 우리는 지금 공부를 하는 과정이니까 여유가 된다면 분리해보는 연습을 하는게 좋아보여요)\n\n> 지금 현재 React는 key를 기반으로 하지 않고 인덱스를 기반으로 하고 있는데, 만약 key로 구현하고 싶다면 어떻게 구현해야할지에 대해 고민이 되었습니다. 그런데 구현에 어려움이 있어 제가 로직상에 놓친 부분이 있을지 여쭤보고싶습니다.\n\n이 부분도 뭔가 이미 답을 알고 있는 것 같은 것 같은 느낌인데요 ㅎㅎ\n구현을 실제로 해봐야 알겠지만, 전반적인 흐름은 리액트 구현과 유사하다고 생각이 듭니다.  다만, 키가 없는 여러 노드들에 대한 처리나 key가 중복되서 입력될 때의 처리, 그리고 결국 모든게 시점이 중요한 것 같아서 DOM을 조작하는 여러 순서들을 최적화 하는게 핵심이지 않을까 싶긴하네요.\n좀 찾아보니 리액트에서는 이펙트나 트리 순회에 맞춰서 많이 복잡하게 되어 있는 것 같은데,  단순화 해서 삭제 / 이동 / 생성 및 삽입 / 업데이트 요런 흐름으로 진행하는 것 같아서요. 이런 부분도 이미 찾아보셨겠지만 참고해보면서 구현하면 좋을 것 같아요.\n\n+ 지금 충분히 잘해주고 계셔서 이대로도 사실 상관 없을 것 같긴한데요. 그냥 첨언을 해보면,  지금의 과제는 변경된 지점이 있어서 새로운 부분도 있었을 것 같은데요! 추후에 과제를 진행하는데 있어서 여러번 경험한 과제가 있다면 이전에 아쉬웠던 부분이나 기술적으로 시도해보고 싶었던 부분을 더 확장해서 해보는것도 좋을 것 같아요. 고생하셨고 지금처럼 다음 주 과제도 화이팅입니다~",
    "enrolledId": "68623210c85f37c525712305",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af66",
    "result": "PASS",
    "isBestPractice": true,
    "name": "권지호",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/21"
      }
    ],
    "feedback": "지호님 고생하셨어요!\n꼼꼼하게 정리해주신 회고를 보니까 저도 많은 것을 배울 수 있었던 것 같네요. 말씀해주신것처럼 AI를 통해 단순히 코드만 짜기보다는 학습을 위한 도구로 활용할 때 항해에서는 가치가 극도로 올라가는 것 같아요 ㅎㅎ \n\n전체적인 로직도 크게 잘못 구현된 부분도 없고, 필요한 부분에 대해서도 명확하게 깔끔하게 잘 구현이 된 것 같습니다 :+1\n\n질문 주셨던 부분 답변드려볼게요.\n\n> 앞서 언급했던 리팩토링의 과정과 방향이 적절했다고 생각되는지, 개선할 방향이 있는지 코치님의 의견이 궁금합니다.\n\n넵! 적절하게 잘 분리된 명확한 함수처럼 보이네요 ㅎㅎ 피드백 드릴게 크게 없습니다.\n\n> 현재 updateChildren 함수는 아래와 같이 배열의 인덱스(index)를 기반으로 새로운 vNode와 기존 vNode를 비교합니다.\n\n네 이부분도 명확하게 목적을 이해하고 계신 것으로 보이는데요. \n결국 키 기반의 diff비교가 이뤄져야 말씀하진 문제가 해결될 것 같아요.\n실제로 구현을 살펴봐야겠지만, 각 노드에 있어 키를 기반으로 저장하는 구조체가 있고 순회 시 키를 기준으로 위치를 이동시키거나 사용되지 않으면 제거, 새로운 값이면 추가하는 형태로 구현이 되어야 할 것 같아요.\n입력하지 않은 값들에 대한 폴백처리도 필요할 것 같구요! 이미 아시는 내용일 것 같지만, 실제 구현이 엄청 복잡하진 않을 것 같아서 다른 구현체들을 참고해보고 구현하신다음 공유해주셔도 좋을 것 같네요 ㅎㅎ\n\n> 저는 어떤 개념에 대해 분석하고 이해하는 것까지는 어느정도 스스로 접근할 수 있다고 생각하는데, 그 내용을 응용하거나 확장하는 사고가 부족한 것 같습니다. 그러한 사고의 확장을 하기 위해서는 평소에 어떤 것들을 하면 도움이 될까요?\n\n제 개인적인 생각으로는, 응용하거나 확장하는 것도 결국 연습인 것 같아요. 딱 처음부터 잘하는 역량이 아니라요. 결국 중요한건 지금 작성해주신것처럼 기본에 대해 명확하게 공부를 해두되, 이것이 단순히 어떻게 구현이 어떻게 되어있구나 하고 마무리 하는게 아니라 좀 더 개발적 관점에서 언제 쓸수 있지라고 상황을 상상해보고 머리속에서 적용해보는 연습을 하는게 필요한 것 같아요. 추후에 쓸 수 있는 무기를 창고에 넣어두는 것처럼요.\n만약 이게 잘 안된다면, 좀 더 깊게 이 기술에 대한 필요성을 이해 하는게 필요할 것 같고 듣기 싫은 말일 수 있지만, 중요하다고 느껴진다면 어느정도는 암기에 대한 필요성도 있지 않을까 싶네요!\n\n\n고생하셨고 다음 주도 화이팅입니다~~",
    "enrolledId": "686387e2c85f37c52555fc22",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af68",
    "result": "",
    "isBestPractice": false,
    "name": "차현빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "68678936c85f37c52506d1fc",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af6a",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김연수",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/48"
      }
    ],
    "feedback": "안녕하세요 연수님~ 현재 테스트 코드는 통과하는데, e2e 테스트는 실패하고 있군요 ㅠㅠ\n\n대체로 잘 만들어주셨는데 이 부분 딱 하나가 문제가 되고 있어요.\n\nupdateAttribute를 실행할 때\n```tsx\n else if (key.startsWith(\"data-\")) {\n        // data 속성 처리\n        const dataKey = key.substring(5);\n        $el.dataset[dataKey] = value;\n      }\n```\n\n사실 dataKey도 어차피 attribute라서 저 조건만 제거하면 정상적으로 동작한답니다..\n\n자세한 내용은\nhttps://discord.com/channels/1288769861589270590/1395603615820943400/1395604400919285842\n여기에 올려놨으니 참고해주세요!",
    "enrolledId": "6792d9a67ea42ce47df4e27e",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af6c",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "최용훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/29"
      }
    ],
    "feedback": "Q. eventManager를 어떤식으로 접근하는게 효율적인 방식인지에 대한 의문이 있습니다. WeakMap의 경우 Map과 다르게 유용한 프로토타입 메서드가 없는데, 차라리 Map으로 순회 메서드 등을 사용하는게 오히려 효과적일지 생각했습니다.\n\nA. 불필요한 이벤트를 제대로 제거할 수만 있다면 말씀하셨던대로 Map이나 그어떤 자료구조도 문제 없을 것 같습니다.\n이런 고민은 참 좋은 것 같습니다 :) 효율적인 자료구조에 대한 고민은 어떤 모듈이던 우선적으로 고려해야할 것중 하나인 것 같습니다.\n수고하셨습니다 용훈님!",
    "enrolledId": "682334f50a72040b80ba7b91",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af6e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/22"
      }
    ],
    "feedback": "안녕하세요 수현~, 수고하셨습니다! 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. '필요가 공부를 만든다'는 경험을 하셨기를 바랍니다. 단순히 \"가상 DOM이란 무엇인가\"를 읽고 아는 것과, \"가상 DOM을 구현하기 위해 무엇이 필요한가\"를 고민하며 공부하는 것은 다른 깊이를 요구한다는 것을 깨닫으면서 실무에 필요하지 않더라도 앞으로 깊이단계에 있는 것들을 스스로 만들어보면서 공부를 해보시기를 바래요.\n\n회고에서 1주차의 시행착오를 바탕으로 2주차에는 체계적으로 접근하셨다는 점 아주 좋습니다. 가상 DOM의 전체 흐름(createVNode → normalizeVNode → createElement → updateElement)을 명확히 이해하고 구현하신 점, 그리고 이벤트 위임의 장점을 잘 파악하고 WeakMap으로 메모리 관리까지 고려하신 점 좋습니다 ^^ 지금과 같이 기록하면서 어떻게 성장했는지 스스로 느끼는 것이 실제 성취에도 큰 도움을 줍니다.\n\nupdateAttributes 함수의 else if가 많이 반복되는데 else if 대신 return이 가능하면 early return 패턴으로 작성하면 보다 가독성 높고 관리하기 좋은 코드가 된답니다.\n\n이렇게 직접 프레임워크의 핵심을 구현해보니, 기존에 막연히 알고 있던 Virtual DOM의 개념이 훨씬 선명해졌을 거라 생각합니다. 이제 React를 사용할 때도 내부에서 어떤 일이 일어나는지 더 잘 이해하실 수 있을 거예요.\n\n---\n\nQ) 모든 DOM 이벤트를 자동으로 처리하게 할 수는 없을까요?\n\n=> 좋은 질문입니다! 기술적으로는 가능하겠지만 염려한대로 모든 이벤트를 처음부터 다 등록해두는 것은 성능상 좋지 않겠죠. DOM에서 사용하는 이벤트의 종류는 매무 많으니까요. 사용하지 않을 메모리를 미리 사용하는 건 낭비입니다.\n\n보통 이럴때는 대부분 필요할 때 필요한만큼 생성하는 동적 방식으로 구현을 하곤합니다. 지현도 생각했던 것처럼 addEvent가 호출될 때 해당 이벤트 타입을 Set에 저장하고, 처음 등록되는 이벤트 타입이라면 그때 root에 리스너를 추가하는 방식이죠. 이 방식도 꼭 한번 구현해보길 바래요.\n\n수고하셨습니다. 3주차도 화이팅입니다! :)",
    "enrolledId": "681dd962e7dc2519a9b4585f",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af70",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "임규원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/41"
      }
    ],
    "feedback": "고생하셨어요 규원님!\n관련해서 회고를 읽어봤는데요.\n\nconstants에서 사용중인 상수같은것들은 여유가 되신다면 명확하게 타입을 가져와 쓰거나 선언해서 쓰신다면 문제를 찾고 방지하는데 더 좋지 않을까 싶네요 ㅎㅎ\n\n추가로 AI에 의존을 바로 쉽게 하기보다는 나만의 흐름을 만들고 명확하게 코드 작성에 들어가면 좋을 것 같아요! (사실 나만의 흐름을 만드는 것도 AI의 도움을 받아 명확하게 머리에서 정리할 수 있겠죠? 다이어그램을 만든다거나 작업의 절차를 주석 또는 체크리스트로 만든다거나 하면서요)\n\n아쉽게 심화과제를 마무리 하지 못하셨는데 꼭 마무리 잘하시고 담주도 잘 해내시길 바랍니다. 화이팅입니다!",
    "enrolledId": "68247d1b0a72040b8094ff55",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af72",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한아름",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/49"
      }
    ],
    "feedback": "안녕하세요 아름! 수고하셨습니다. :) 이번 과제는 가상돔의 원리를 이론이 아닌 직접 직접 구현해보며 렌더링 최적화와 이벤트 처리의 핵심을 깊이 있게 탐구하는 것이 이번 과제의 의도였어요. 이 과제를 통해 프레임워크의 동작 방식을 몸으로 체득하는 경험을 그리고 깊이를 공부하는 방법을 알게 되는 계기가 되었기를 바랍니다.\n\n회고에서 적어준 이벤트 버블링 문제등에서 event.target만 확인하는 단순한 방식으로 구현하셨다가, 페이지 라우트 테스트 실패를 통해 문제를 발견하고 while문으로 부모 요소를 순회하며 핸들러를 찾는 로직으로 개선하는 등 이러한 접근 과정을 통해서 순회나 실제 이벤트의 동작원리등이 더 선명해졌으리라 생각합니다. 잘했어요.\n\nupdateElement에서 boolean 속성 처리 시 setAttribute(attr, \"\")가 아닌 target[attr] = value 방식으로 직접 업데이트해야 한다는 것을 발견하신 것도 DOM API의 세밀한 차이를 잘 파악하신 결과라 생각합니다.\n\n코드 리뷰등을 통해서 알게된 느슨한 비교등으로 더 적은 횟수의 비교를 쓰게 하는 것들도 저수준 라이브러리에서 중요한 내용이죠. createVNode의 children 필터링도 filter(x => x || x === 0)로 단순화할 수도 있겠습니다.\n\n\"필요가 공부를 만든다\"는 말처럼, 직접 구현해야 하는 상황에서 학습한 내용이 가장 오래 남는 법입니다. 이제 가상 DOM을 직접 만들어본 경험이 있으니, 앞으로 리액트나 뷰를 사용할 때도 내부에서 무슨 일이 일어나는지 더 잘 이해하실 수 있을 거예요. 다음 주차도 화이팅입니다! :)\n\n질문하신 내용에 대해서는 아름이 생각했던 그 방식들 다 맞는 방식입니다. 잘했습니다.",
    "enrolledId": "68205c830a72040b80c72cf1",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af74",
    "result": "PASS",
    "isBestPractice": false,
    "name": "유윤우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/40"
      }
    ],
    "feedback": "안녕하세요 윤우님!\n2주차 과제 잘 진행해주셨네요 ㅎㅎ 너무 고생하셨습니다.\n바벨 플러그인 문서도 직접 확인해보셨군요!!\n\n> 현재 updateElement, createElement 모두 재귀를 이용해 구현했습니다! 선택해볼법한 더 좋은 알고리즘이 있을까요?\n\n저도 재귀 말고는 떠오르는 방법이.. 딱히 없네요 ㅋㅋ;\n다만 생각해볼 수 있는건, 변경에 대한 커맨드? 라고 해야하나, 그런걸 수집하는 방법이 있을 것 같아요.\n\ninsert, update, delete가 있고\n이 명령어가 정확히 어떤 구간의 dom을 변화시키는지 정보를 수집할 수 있따면 재귀 방식이 아니라 특정 노드의 일부분만 수정하는 방식으로 코드를 작성할 수도 있을 것 같네요!\n\n그럴라면 component의 정보와 component를 변경하는 코드를 연결시켜야 하는데 그게 사실 굉장히 어렵답니다... ㅎㅎ\n\n> 조건문이 많아져서 가독성이 많이 떨어지게 되었는데 if, else if 를 줄이거나 혹은 다른 선택지가 있을까요? \n\n새로운 함수로 만들어서 분리하는 방법이 있어요!\n\n> eventManager 쪽에서 \"이벤트 위임\" 은 작성했지만 while 루프를 돌며 부모 엘리먼트를 재할당하며 이벤트가 있는 요소까지 찾아가는 이벤트 버블링 형태로 처리를 했습니다. 정상적으로 동작은 하지만 이게 맞는건지 잘 모르겠습니다.. 매번 이벤트마다 while 루프가 실행된다고 생각하면 성능이 좋지 않은 것 같다는 생각이 듭니다!\n\n다른 방법을 생각해보자면... 이벤트를 등록할 때, 이벤트 타겟의 부모들을 미리 만들어서 관리할 수 있지 않을까 싶어요 ㅎㅎ\n\nconst createParentList = e => {\n  let parent = e.parentNode;\n  const parentList = new Set()\n  while(!parent){\n    parentList.add(parent);\n    parent = parent.parentNode;\n  }\n  return parentList\n}\n\nconst parentMap = new WeakMap();\nconst addEvent = (el, type, callback) => {\n  if (parentMap.has(el)) {\n    parentMap.set(el, createParentList(el))\n  }\n\n  /// 다른 로직 실행\n}\n\n이렇게 렌더링 시점에 미리 만드는 방법도 있고\n아니면 최초에 한 번 이벤트가 트리거될 때 부모 목록을 만들어서 재활용하는 방법도 있을 것 같아요 ㅎㅎ\n\n> updateElement에서 children을 처리할 때 조건별로 돌아가는 for문이 3개 있습니다. 아무래도 3개의 for문이 거부감이 좀 드는데 적절한 코드가 맞을까요?\n\n일단 문제를 해결하기 위해선 어쩔 수 없겠죠..? 논리적으로 생각해보면, 이걸 for 하나로 만든다고 해도 그 내부에서 분기를 3번 해야 할 수 있어요. 결국 실행해야 하는 코드의 총량은 비슷하죠 ㅎㅎ\n\n진짜로 변경된 attribute에 대한 정보를 렌더링시점에 전달하는 방법이 있다면 좋을텐데... 그런 시스템을 만드는게 더 복잡하고 어렵답니다 ㅎㅎ 맨 위의 답변과 겹쳐요\n\n> 이벤트가 제거됐는지 확인하는 방법이 궁금합니다! 테스트는 통과했는데 현재 코드레벨에서 확인해볼 방법이 있을까요? (메모리가 누수되는지 체크)\n\n글쎄요.. 코드레벨에서 확인할 수 있는 방법이 있을지..\n코드레벨에서 확인한다는건 결국 값을 조회한다는건데, 값을 조회하려고 시도한다는건 다시 메모리상에 무언가가 있는지 확인하는 과정이라서요.\n\n덤프 떠서 확인해야 하지 않을까 싶어요..!",
    "enrolledId": "68249f4e0a72040b80b3568e",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af76",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박소연",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/36"
      }
    ],
    "feedback": "안녕하세요 소연님!\n과제 무척 잘 진행해주셨네요 ㅎㅎ\n1주차보다 개인적으로 어려웠다는 말씀이 인상깊습니다 ㅋㅋ\n\n질문해주신 내용을 토대로 커밋에서 변경된 내역을 확인해봤는데요,\n\n이전 코드가 이렇게 되어있어요.\n\n```tsx\nexport function renderElement(vNode, container) {\n  const normalizedVNode = normalizeVNode(vNode);\n\n  // 최초 렌더링인지 확인 (이전 vNode가 없으면 최초)\n  if (!container._prevVNode) {\n    // 최초 렌더링: createElement로 DOM 생성\n    console.log(\"최초 렌더링\");\n    const $el = createElement(normalizedVNode);\n    container.innerHTML = \"\"; // 기존 내용 제거\n    container.appendChild($el);\n\n    // 이전 vNode 저장\n    container._prevVNode = vNode; \n    // 렌더링 완료 후 이벤트 등록\n    setupEventListeners(container);\n  } else {\n    // 업데이트: updateElement로 기존 DOM 업데이트\n    console.log(\"업데이트 렌더링\");\n    const prevNormalizedVNode = normalizeVNode(container._prevVNode);\n    // container.replaceChild(createElement(normalizedVNode), container.firstChild);\n    updateElement(container, normalizedVNode, prevNormalizedVNode);\n\n    // 새로운 vNode로 업데이트\n    container._prevVNode = vNode;\n  }\n}\n```\n\n여기서 제가 주목한 부분은,\n\n// 이전 vNode 저장\ncontainer._prevVNode = vNode; \n\n여기인데요, 여기에 vNode가 아니라 normalizedVNode 를 저장해야 하는게 아닐까요!?\n그래서 결과가 계속 달라지는게 아닌가.. 싶은 그런 생각이 들어요 ㅎㅎ\n\n변경된 코드에서도 보면 normalizedVNode를 계속 저장하고 있답니다..!",
    "enrolledId": "6824c3ac0a72040b80cbc2a3",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af78",
    "result": "PASS",
    "isBestPractice": true,
    "name": "주산들",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/38"
      }
    ],
    "feedback": "안녕하세요 산들! 수고많았습니다. 이번 과제는 Virtual DOM의 작동 원리를 머리가 아닌 손으로 직접 구현하며 체득하는 것이 목표였습니다. 회고에서 \"개념과 흐름은 알겠는데 코드로 녹여내는 것이 까다로웠다\"고 했던 부분이 이번 과제의 진짜 의도였죠. 사람은 적당히 이런거겠네 하면서 모호한것도 안다고 착각하고 넘어가는데 컴퓨터는 아니죠. 그렇기에 깊이를 탐구하기 위해서는 지금처럼 직접 구현하고 직접 완성을 해봐야 하는거죠. 아주 잘했습니다.\n\n디버깅하며 고생하셨다고 하셨는데, 특히 `updateElement`에서 oldChildren.length > newChildren.length일 때 추가 for문이 필요한지 고민하신 과정도 참 좋아보입니다. 특히 이번 회고들이 정말로 경험에서 고민해본게 느껴져서 너무 좋았어요. 이런 세세한 고민들이 Virtual DOM의 원리를 체득하는 과정입니다.\n\n몇 가지 추가로 개선을 시도해보면 좋겠다 하는 부분들은,\n\n1) 텍스트 노드 비교시 createElement로 변환 후 nodeType을 체크하는 현재 방식보다 그냥 `typeof newNode === 'string'`으로 직접 체크하는 것이 효율적인거 맞습니다.\n\n2) 지금 이벤트 관리를 배열로 관리하고 있는데 key를 string이 아닌 것으로 매칭을 할때에는 Map을 사용하면 findIndex의 O(n) 탐색을 O(1)로 개선할 수 있습니다. 그리고 이때 key가 DOM이 되는 경우에는 WeakMap을 써야합니다. 그래야 key가 더 이상 쓰이지 않을때 자동으로 key를 같이 해제를 해주니까요.\n\n3) setupEventListeners의 경우 당연히 모든 이벤트를 하드코딩을 하는 것보다는 나은 방법이 있겠죠. 이런 경우에는 필요할 때 필요한 만큼 동적으로 만들어 보는 방향으로 고민을 해보면 좋겠죠. addEvent에서 사용된 이벤트만 Set에 모아 동적으로 등록하는 방식을 통해서 확장성있게 만들어 낼 수 있습니다.\n\n수고하셨습니다. 다음 주차도 화이팅입니다! :)\n\n\nBP 선정이유: 사실 정답이 이미 있는 문제인데 과제의 취지에 맞게 필요한 것들을 몸으로 부딫혀가면서 이해도를 선명하게 만들어가는 경험을 잘 한것 같아서 그 경험을 높게 삽니다.",
    "enrolledId": "6821d2570a72040b80c25f8c",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af7a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "오하늘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/60"
      }
    ],
    "feedback": "안녕하세요 하늘~, 챕터 1-2 과제 정말 수고 많았습니다.\n\n이번 과제를 통해 Virtual DOM의 작동 원리를 직접 구현하면서 React와 같은 프레임워크가 내부적으로 어떻게 효율적인 렌더링을 수행하는지 체득하는 경험을 하셨고, 특히 Map vs WeakMap 같은 자료구조등을 선택하고 고민하는 과정들이 잘 느껴졌어요.\n\n이번 과제는 \"알고 있는 것\"과 \"만들기 위해 필요한 것을 학습하는 것\"의 차이를 몸소 체험하는 것이 핵심이었는데, 회고에서 작성하신 것처럼 처음 접한 WeakMap을 공부하고 eventManager 구현에 적용하려 고민하신 과정이 바로 그런 목적형 학습의 좋은 예시라고 생각합니다. 면접에서도 늘 왜 이 기술을 선택했나요? 혹은 왜 이렇게 만들었나요? 라는 질문의 맥락도 여기에서 기인하는 거죠. 만들기 위해서 하는 공부에서 정말로 많은 것들을 배울 수 있으니까요.\n\n특히 이벤트 위임 시스템을 Map/Set을 활용해 계층적으로 설계하신 점이 인상적이었습니다. eventType을 키로, 그 안에 다시 element와 handler를 매핑하는 구조는 깔끔하고 직관적입니다. \n\nMath.max를 사용해 자식 요소 비교 시 추가/삭제를 모두 감지하도록 구현하신 것도 훌륭한 접근이었습니다. 이런 세심한 고민들이 Virtual DOM의 원리를 제대로 이해하는 과정입니다.\n\n구체적인 코드상의 부분들은 리뷰에서 거의 다 짚어줬네요. style 조건문에서 continue 누락이나 cleanChildren 2번 호출등이요. 좋은 팀이네요! AI도 좋은 친구이지만 실제로 이렇게 코드 리뷰를 함께 하면서 같이 성장할 수 있을 거라 생각합니다. 멋지네요.\n\n수고 많았습니다. 다음 주차도 화이팅입니다!",
    "enrolledId": "682457100a72040b80776d24",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af7c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신희원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/37"
      }
    ],
    "feedback": "안녕하세요 희원~, 1-2 과제 수고했습니다. 이번 과제는 React와 같은 프레임워크가 내부적으로 어떻게 동작하는지 직접 구현해보면서 Virtual DOM의 핵심 개념을 체득하는 것이 목표였습니다. 특히 Virtual DOM을 통한 효율적인 렌더링과 이벤트 위임을 직접 구현해보면서 프레임워크의 원리와 꼭 필요한 브라우저 API들의 개념들이 무엇인지 알게되었기를 바래요\n\n코드를 살펴보니 특히 WeakMap을 활용한 메모리 관리와 이벤트 위임 구현을 잘 이해하고 작성해주셨네요. 정규화 과정에서 함수형 컴포넌트를 재귀적으로 처리하는 부분도 올바르게 구현하셨습니다. 잘하셨습니다.\n\ncreateElement 함수에서 updateAttributes가 내부 함수로 정의되어 있는데, 이는 함수가 호출될 때마다 새로 생성되므로 별도의 유틸리티 함수로 분리하면 좋겠네요. 또한 updateElement에서 타입 체크 시 문자열/숫자 비교 로직이 약간 불명확한데, 두 노드가 모두 primitive type일 때만 처리하도록 수정하면 더 안정적일 것 같습니다.\n\n이렇게 직접 내가 사용하고 있는 저수준 라이브러리들을 구현해보게 되면 단순한 이론의 형태가 아니라 구조와 흐름을 이해한채로 개념을 이해하게 됩니다. 아마 기존에 내가 알고 있던 VDOM과 지금의 VDOM의 개념이 많이 달라졌을거라 생각해요. 앞으로 zustnad나 tanstack query와 같은 상태관리 라이브러리도 핵심만 직접 구현을 해본다면 큰 도움이 될거에요.\n\n---\n\nQ) 평탄화를 해줄 때 \"\" 으로 return 해주는 이유와 falsy한 값을 왜 필터링 해주는 지 궁금합니다.\n\n=> 나름의 전략적 결정입니다. 화면상 해당 값들이 실제로 노출이 되어야 하는 경우는 거의 없기 때문이죠. 은행 어플등에서 null, 혹은 undefined라는 글자가 보이면 다들 개발적 버그라는게 너무 티가나는 상황일테니까요. 게다가 React에 하는 조건부 렌더링({isVisible && <Component />})에서 그대로 출력하게 했다면 false가 뜰텐데 매번 {isVisible ? <Component/> : \"\"} 라고 적는 것도 불편했을테지요. 그래서 꼭 표기가 되어야 하는 0을 제외하고는 falsy값을 출력하지 않기로 한 전략적 결정을 반영한 코드입니다.\n\nQ) handleEvent 함수에서 elementEvents를 디버그 찍어보면 나오는 [Function: spy]는 무엇인가요?\n\n=> 이는 Vitest의 테스트 환경에서 생성된 mock 함수입니다. spy는 함수 호출을 추적하고 검증하기 위한 테스트 도구로, 실제 환경에서는 일반 함수가 저장됩니다. getMockName, mockClear 등은 테스트에서 함수 호출 횟수나 인자를 확인하는 메서드들입니다.\n\nQ) createElement.js에서 createDocumentFragment 사용 이유 알아보기\n\n=> DOM이 변경하는 코드에는 화면을 다시 그리도록 하는 코드가 포함되어 있습니다. 그래서 DOM Element들을 하나씩 변경하고 하나씩 appendChild를 하게 되면 그때마다 내부에서 렌더링을 하는 코드가 호출이 되는데 이는 비효율적이죠. 그렇지만 appendChild는 하나의 node만 가능하기에 여러개의 노드를 한번에 등록할 수 가 없습니다. 이때 사용하는것이 가상의 컨테이너인 DocumentFragment입니다. 이 노드는 여러가지 node를 한번에 보관하고 하나의 Node취급을 하지만 어딘가에 등록이 될때에는 동시에 전달을 해줄 수가 있죠. 그래서 한번에 많은 Node를 다뤄야 할때 성능을 위해서 사용합니다.\n\n도움이 되었기를 바랍니다.\n\n수고하셨습니다. 2주차도 화이팅입니다! :)",
    "enrolledId": "68254af40a72040b801869c8",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af7e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김민지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/16"
      }
    ],
    "feedback": "안녕하세요 민지님! 2주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n> EventManager와 updateElement의 핵심 로직을 AI가 대부분 생성해 주었는데, AI를 어쩔 수 없이 쓰게 될 수 밖에 없는데 AI를 쓰면서 성장할 수 있는 방법이 있을까요?\n\nAI가 작성한 코드를 내가 처음부터 다시 작성해보는거죠!\n혹은 AI에게는 질문만 하고, 코드는 내가 직접 쳐보는 방법이 있어요.\n일단 코드를 직접 작성한다는 행위가 무척 중요한데요, 코드를 작성하고 천천히 읽으면서 머릿속에 차곡차곡 쌓아가다보면 의문이 생기거나 모르는 구간이 있어요.  이에 대해 다시 파고들어가는거죠!\n\n> EventManager와 updateElement( 이 함수들이 아니더라도 재귀함수같은 익숙하지 않은 걸로 함수를 짜야할 때)를 처음 구현할 때 어디서부터 시작해야 할지 감이 잘 잡히지 않고 막막해 AI로 코드를 구현했습니다. 이런 상황에서 우선적으로 무엇을 살펴보고 어떻게 감을 잡아서 나아가야할지 알고 싶습니다.\n\n처음부터 모든 기능을 다 구현하려고 하면 막막한게 당연해요!\n그래서 작은 기능부터 하나씩 만들어가면 좋답니다 ㅎㅎ\n가령, EventManager의 경우 일단 이벤트를 등록해보는 과정이 중요해요.\n그러다가 어떻게 하면 등록하는 과정을 효과적으로 할 수 있을까? 에 대한 고민을 하면서 코드를 개선하는거죠.\n\n작은 문제를 여러개 해결하면 결국 큰 문제를 해결하는 상황에 도달할 수 있다고 생각합니다.\n\n한 번에 모든걸 잘 해야지 라고 생각하기보단, 작은 단위로 문제를 쪼개서 하나씩 해결하는 방식을 고민해보세요!\n\n우리가 회사에 입사할 때에도\n\n입사한다 = 하나의 큰 목표\n\n입사를 하기위해선?\n-> 이력서를 작성한다.\n-> 이력서를 작성하기 위해선? 일단 키보드에 손을 얹어서 ~~~\n\n이렇게. 무언가를 하기 위해선 선행되어야 하는 작은 과정이 있으니까요.\n그런 작은 문제들은 무엇이 있을지 고민해보는거죠!\n\nAI에게 명령할 때에도 작은 단위의 문제를 쪼개서 질의하면 더 잘 수행한답니다 ㅎㅎ",
    "enrolledId": "68245a760a72040b807a5c2c",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af80",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최재환",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/54"
      }
    ],
    "feedback": "재환님 고생하셨습니다~\n회고를 보니 한 주 잘보내셨던것 같네요.\n작성해주신것처럼 AI를 통해 도움을 받으셨지만, 실제 구조에 대한 다이어그램도 그려보시고 더 명확하게 구조를 그려보시면 추후에 더 도움이 많이 되실 것 같네요!\n\n> updateElement의 diff 알고리즘 구조\n\n실제 지금의 구조도 재조정과 유사한 로직일텐데요! \n이제부터는 최적화의 영역일 것 같은데, 리액트 내부에서 key를 기반으로 비교를 진행하는 부분을 구현해본다거나, 참조를 기반으로 diff비교를 스킵하는 부분이 리액트 내부에 구현이 되어 있어 비교를 최적화 한다고 알고 있는데 이 부분도 공부해보시면 좋을것 같아요!\n\n그리고 아마 업데이트에 있어서도 실제 구현 방법이 배치 형태로 되어 있을텐데 그런 부분도 한번 공부해보시면 도움이 될 것 같습니다.\n\n> createElement의 재귀 구조와 함수 분리\n\n이 부분도 지금의 과제에 맞춰서는 명확하게 잘 정리해주신것 같아요!\n여러가지 패턴을 적용해서 여러 타입의 노드를 구분한다거나 등의 처리는 해볼 수 있겠지만, 지금 단계에서는 크게 불필요 해보이네요 ㅎㅎ\n\n고생하셨고 다음주도 화이팅입니다!",
    "enrolledId": "68245c9b0a72040b807c704a",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af82",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이지현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/55"
      }
    ],
    "feedback": "안녕하세요 이지현님, 수고하셨습니다. 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 특히 \"필요가 공부를 만든다\"는 것을 체험하며, 단순히 이론을 아는 것과 실제 구현을 위해 필요한 것을 찾아가며 학습하는 것의 차이를 경험하셨기를 바랍니다.\n\n회고에서 작성해준 \"vNode 객체에 실제 DOM 요소를 저장했던 실수\"는 정말 좋은 경험이네요. 구현파트에서는 일단 돌아가는 코드가 중요하지만 깊이가 필요한 코드에서는 성능이가 원칙, 설계등이 중요한데 앞으로의 소중한 인사이트가 되어 줄거라 기대합니다. 가상 DOM의 핵심이 실제 DOM과의 분리인데, 이를 직접 겪으며 이해하게 된 것 같아요. 또한 WeakMap을 활용한 메모리 관리와 이벤트 위임 구현을 잘 이해하고 작성해주셨네요. 잘했습니다 :)\n\n이렇게 프레임워크를 직접 구현해보면 단순한 이론이 아닌 구조와 흐름을 이해한 채로 개념을 체득하게 됩니다. 앞으로도 이런 방식으로 사용하는 도구의 원리를 파헤쳐보는 경험을 계속해보시기 바랍니다.\n\n---\n\nQ) 이벤트를 저장하는 저장소 계층\n=> 잘했습니다. element > eventType > handler 계층 구조로 선택하신 것은 매우 적절합니다. element가 제거되면 모든 이벤트가 사라지므로 element가 최상회 요소가 맞죠. 그리고 eventType에서 handler의 유무에 따라서 위임이 결정되므로 2번째에 위치하는게 자연스럽습니다. React 등 대부분의 프레임워크도 이 방식을 채택하고 있답니다.\n\nQ) 런타임 에러 처리\n=> 우리가 잘 알고 있는 React의 ErrorBoundary라는 기능이 바로 에러를 처리해주는 기능입니다. 렌더링 에러를 try ~ catch로 감지해서 상위에서 catch하여 fallback UI 표시하는 기능이죠.\n\n=> 지금 그리고 VDOM을 생성하는 로직에 try-catch를 만들고 에러감지시 상위에서 지정된 UI를 표기하도록 만들면 됩니다.\n\n차근 차근 React를 다 만들지는 않더라도 React가 역사적으로 추가한 개념들을 하나씩 만들어가면 왜 이런게 필요했는지 어떻게 구현되어 있을지 선명하게 이해되는 경험을 하시게 될거에요!. \n\n수고많았습니다. 3주차도 화이팅입니다 :)",
    "enrolledId": "682566140a72040b80300e04",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af84",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "장루빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/59"
      }
    ],
    "feedback": "루빈님 고생하셨어요~\n커밋로그를 보니 그간 꽤나 힘든 시간을 보낸걸 함께 느낄수 있었는데요..\n아쉽게 전체적으로 추가 구현이 필요한 부분들이 아직은 많이 남아있는 것 같아요. 다른 분들 잘 구현하신 분들 코드도 살펴보시고 질문해보면서 구현 꼭 끝까지 마무리해보셨으면 좋겠네요.\n\n고생하셨고 다음 주에는 꼭 통과하는걸 목표로 하시죠! 화이팅입니다~",
    "enrolledId": "682578680a72040b803edb7c",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af86",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "이의찬",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/27"
      }
    ],
    "feedback": "안녕하세요 의찬, 수고하셨습니다. 이번 과제는 React 같은 프레임워크가 내부적으로 어떻게 동작하는지 직접 구현해보며 이해하는 과제였습니다. 특히 \"Virtual DOM이 무엇인가?\"를 단순히 알거나 말로 표현하는게 아니라 실제로 구현을 통해서 그 원리가 선명해지길 바랬습니다.\n\n과제를 보면서 JSX → createVNode → normalizeVNode → createElement → renderElement의 전체 흐름까지 이해하는 과정에서 이론과는 다른 원리를 이해하게 되었기를 바래요.\n\n코드 레벨까지 깊게 학습하지 못했다고 아쉬워하셨는데, 꼭 이번이 아니더라도 항해가 끝나는 동안 혹은 그 이후에라도 어떻게 깊이를 학습해야 하는가를 알게되는 주차가 되었기를 바랍니다.\n\n수고하셨습니다. 다음주차도 화이팅입니다~",
    "enrolledId": "682576d80a72040b803dc418",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af88",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이민재",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/3"
      }
    ],
    "feedback": "안녕하세요 민재, 수고하셨습니다 :) 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 특히 단순히 \"가상 DOM이란 무엇인가\"를 이론으로 공부하고 아는 것과 \"가상 DOM을 구현하기 위해 무엇이 필요한가\"를 고민하며 학습하는 것은 완전히 다른 깊이의 경험이라는 것을 체험하는 시간이 되었기를 바랍니다.\n\nJSX → createVNode → normalizeVNode → createElement → updateElement의 전체 흐름을 체계적으로 구현하셨네요. 특히 DocumentFragment를 활용한 배열 처리와 이벤트 버블링/캡처링을 구분하여 처리한 점이 인상적입니다. 회고에서 \"기능 완성 → 테스트 코드 수정\"의 반복 과정을 겪으셨다고 하셨는데, 시행착오를 겪는 동안 오히려 각 API의 세밀한 동작들이 머리속에 잘 새겨졌을 거에요!\n\n이벤트 핸들러 저장에 Map을 사용하고 있는데 이 부분은 WeakMap으로 변경하면 더 좋겠습니다. DOM 요소를 key로 사용하는 경우에는 DOM에 제거될 때 자동으로 이벤트 핸들러도 가비지 컬렉션되어 메모리 누수를 방지할 수 있거든요. 또한 updateAttributes에서 boolean 속성들을 하드코딩한 배열로 관리하는 것보다는 속성의 타입을 동적으로 체크하는 방식을 고려해보시면 확장성이 더 좋아질 것 같습니다.\n\n이렇게 프레임워크의 내부 동작을 직접 구현해보면 단순한 이론이 아닌 실제 구조와 흐름을 체득하게 됩니다. 이제 React를 사용할 때 \"왜 key가 필요한지\", \"왜 이벤트 위임을 사용하는지\" 같은 설계 결정들이 더 명확하게 이해되실 거예요. 앞으로도 이런 저수준 구현 경험을 통해 더 깊이 있는 개발자로 성장하시길 바랍니다. 수고많았습니다.\n\n---\n\nQ) updateElement에서 index 기반 비교의 비효율성 개선 방법\n\n=> 정확한 지적입니다! 현재 방식은 순서만 바뀌어도 모든 노드를 재생성하는 문제가 있죠. React에서 반복된 요소를 그릴때 반드시 key를 요구하는 것도  이 때문입니다. key 기반 매칭을 구현하려면 oldChildren을 Map으로 변환하여 key로 빠르게 찾을 수 있게 하고, 같은 key를 가진 노드끼리만 비교하도록 하고 있죠. 이번 과제에는 제외했지만 중요한 React의 핵심 로직이니 한번 시도해보세요!\n\nQ) 이벤트 위임 구조의 안정성 개선 방안\n\n=> 현재 구조도 잘 구현되어 있어요. 몇가지 개선 방안들을 공유하자면 우선 MutationObserver를 활용하면 동적으로 추가된 요소도 자동으로 감지할 수 있습니다. 그리고 이벤트 타입을 하드코딩하지 말고 실제 사용된 이벤트만 동적하는 방법도 생각해보세요.\n\n수고하셨습니다. 다음 주차도 화이팅입니다! :)",
    "enrolledId": "682b2fc10a72040b80322848",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af8a",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박창준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/20"
      }
    ],
    "feedback": "안녕하세요 창준님! 2주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n> “innerHTML로 DOM을 전부 다시 그리는 방식이 정말 SPA라고 할 수 있을까?” 라는 의문이 생겼었는데 제가 너무 성급하게 고민을 했엇네요 ㅎㅎ.. 2주차에 Virtual DOM을 직접 구현하는 과제가 나오면서 코치님들이 과제를 어떻게 단계적으로 설계했고 수강생들에게 어떤 학습 포인트를 던지려 했는지 이해할 수 있었습니다.\n\n맞아요 ㅎㅎ 일부로 \"불편함\"을 경험해보고, 이걸 해결하는 방식으로 과제를 설계했답니다! 알아주셔서 감사드려요!!\n\n> Q1. 이번 과제를 수행하면서 좀더 React에 대한 Deep Dive를 해보고 싶어졌습니다. 추가적으로 학습하면 좋은 내용이 있으면 추천해주실 수 있을까요?\n\nreact 자체에 대해 파고들어 가는 방법도 있고, preact 같은 경량화된 버전의 react 구현체의 코드를 살펴보면서 내가 작성한 코드와 무엇이 다른지 비교해보는 방법도 있답니다 ㅎㅎ\n\n개인적으로 훅을 처음부터 아예 구현하는 방식으로 시도해보면 좋다고 생각하는데.... 이게 생각보다 난이도가 높아서... 중간과정이 필요한데 그게 preact 살펴보기일 것 같아요!\n\n> Q2. 현재 구현된 diffing은 index기반 비교 알고리즘입니다. 이를 key 기반으로 확장하려면 어떤식으로 리팩토링을 진행하면 좋을까요?\n\nprops에 key를 받아온 다음에, index 이전에 key에 대해 먼저 검사해서 위치를 변경해주거나 그대로 두거나 하는 방법이 있을 것 같네요 ㅎㅎ\n\n> Q3. updateAttributes 함수에서 놓치고 잇는 edge case가 있을까요?\n\n제가 솔루션 만들 때 미처 신경쓰지 못한 부분인데요, data attribute 에 boolean을 넣으면 사라지는 현상이 있었어요 ㅎㅎ\n\n그래서 사실 제일 좋은 방법은 어플리케이션을 만들어가면서 엣지케이스를 채워가는거라고 생각합니다.. 허허\n\n그리고 또 defaultValue 같은것도 리액트에서 지원하는데 현재에는 이런 개념이 없어요.\n\nselect / option 을 react로 변환해보시면 알 수 있답니다!",
    "enrolledId": "6825b2810a72040b8071d8af",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af8c",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "이진희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/64"
      }
    ],
    "feedback": "안녕하세요 진희님!\n2주차 과제 진행하느라 고생하셨습니다!!\n다만 심화과제가 아직 진행중이군요.. ㅋㅋ\n시간 되실 때 꼭 한 번 시도해보시면 좋겠어요!\n화이팅입니다!",
    "enrolledId": "683f18534e1c73fff2105065",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af8e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이태영",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/11"
      }
    ],
    "feedback": "안녕하세요 태님, 수고하셨습니다. 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 특히 이번 과제를 통해 '필요가 공부를 만든다'는 경험을 하셨기를 바랍니다. 단순히 \"가상 DOM이란 무엇인가\"를 읽고 아는 것과, \"가상 DOM을 구현하기 위해 무엇이 필요한가\"를 고민하며 공부하는 것은 완전히 다른 깊이의 학습이니까요.\n\n회고에서 언급하신 대로 용어만 검색하고 구현하려니 막막했다고 하셨는데, AI를 활용해서 코드 한 줄 한 줄의 의미를 파악하며 주석을 달고 학습하신 방법도 참신하고 효과적인 접근이었다 생각합니다. docs/ 폴더에 각 모듈별 가이드를 별도로 정리하고, learning-notes/에 학습 과정을 기록한 점이 인상적이네요.\n\n\"...2주차 과제를 진행하면서 이러한 내용들을 왜? 하는 지에 대한 궁금증이 생겼습니다. 어떠한 부분을 얻어가면 실무적으로 혹은 앞으로의 개발자 인생에서 도움이 되는지? 에 대한 생각이 궁금합니다.\" 에 대한 대답을 드리자면,\n\n인간은 조금 막연하거나 모호해도 대충 그렇다하고 넘어갈 수 있는 능력이 있습니다. 돌 한 무더기라고 했을 때 사실 몇 개부터 무더기인지는 정해져있지도 않는 실제하지 않는 개념이지만 뭔가 떠오르는 그 개념은 있죠. 이러한 능력은 추상화나 우리가 소통을 하기에 요긴하게 쓰이는 능력입니다.\n\n반면 컴퓨터는 다릅니다. 정확히 떨어지는 값과 로직 그리고 숫자를 입력하지 않으면 기대했던 정확한 동작을 하지 않습니다. 개발이 어려운 이유는 인간이 잘 사용하지 않는 사고 방식을 통해서 컴퓨터에게 정확한 동작을 수행하도록 요구하는 것이죠. 그래서 퉁치지 말고 막연하게 말고 \"정확하게\" 지시할 수 있는 능력이 필요합니다.\n\n우리가 추상화가 되어 있는 것을 이해할 때에는 특히 프레임워크같은 것들은 \"정확한\" 내부의 동작이 아니라 이렇게 되어 있겠지 정도만 알아도 쓰는데 아무런 문제가 없습니다. 그래서 알고 있다고 착각하죠. 그러면 딱 그정도의 시각으로 나중에 최적화를 하거나 복잡한 버그가 났을 경우에도 대처를 하게 됩니다.\n\n그래서 내가 어디까지 정확하게 구현을 해낼 수 있는지 그리고 그렇게 정확한 동작을 찾으러 가는 과정에서 기존의 막연한 생각들이 굉장히 선명해지게 됩니다. 내가 알고 있다 느끼는 범위는 전과 같을지라도 머리속에 새겨져 있는 해상도에서 차이가 나는 것이죠.\n\n무엇보다 React를 만드는 능력이 아니라 이러한 구조들을 만들어내는 여러가지 패턴들이 다른 문제를 해결하는 응용력을 길러주게 됩니다. 마치 수학에서 공식을 외우고 있어서 문제를 푸는 것과 공식을 증명할 줄 알고 도출해내는 원리를 알고 있는 것과의 차이 같은거죠.\n\n그래서 직접 해보는 것을 권합니다. 정답이 있는 코드의 경우 AI가 금세 정답을 주면 그걸 보고 공부하는건 역시 그냥 막연하게 이해하고 넘어가게 됩니다. 뇌는 필요하다 느끼지 않으면 그 이상의 에너지를 투자하지 않아요. 꼼꼼하게 주석을 달고 공부를 했다고 생각했지만 만약 머리속에 남아있는게 선명하지 않다라고 하면 조금 더 필요를 만들어 보는 식의 학습을 해보기를 바랍니다.\n\n너무 너무 수고많았습니다. 10주간의 과제안에서 태영 나름의 해답을 찾기를 바래요. 수고하셨습니다 :)",
    "enrolledId": "6825c7b00a72040b8086a6af",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af90",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양성진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/28"
      }
    ],
    "feedback": "성진님 한 주 고생하셨습니다.\n회고에 남겨주셨던것처럼 리액트 내부 구조에 대해서도 고민할 수 있는 기회였고, 사용하는 여러 자료구조나 구현 방식에 대해서도 많은 것을 고민할 수 있는 시간이였던 것 같네요!\n적어주신 것 처럼 시간이 촉박하다보니 전반적인 흐름이나 사용하는데 중점을 뒀다면 여유 시간에 좀 더 명확하게 하는 과정을 겪으면 더 좋을 것 같네요!\n\n이어서 질문 남겨주신 부분 답변 남겨보면요!\n\n> flat(Inifinity) 관련\n\n넵 저도 아마 구현을 했다면 성진님처럼 필요한 기능에 대해서만 우선 구현을 했을 것 같아요! 그리고 가능한 브라우저 네이티브 구현을 사용하려고 해야 속도 측면이나 가독성, 안정성 측면에서도 훨씬 얻는 점이 단기적, 장기적으로 많다고 생각합니다.\n\n> if문 관련\n\n걱정하시는 것처럼 지금은 절차적으로 따라가는게 쉬울 지는 몰라도 조금 더 복잡해진다면 해당 역할들을 코드를 읽으면서 명확하게 이해하는게 어려워질 것 같아 보이기는 하네요 ㅎㅎ\n나름 코드를 작성하는데 있어서 3뎁스 또는 2뎁스 이상의 분기를 만들지 않겠다 라는 규칙을 만들고 더 깊은 뎁스가 발생하는 경우 함수를 분리해야 하는 시점, 더러운 코드를 작성하는 시점이라고 판단해보는 것도 좋을 것 같습니다. \n\nif를 사용하든 switch를 사용하든은 사실 큰 문제가 아닌것 같아요. 분기를 타는 조건을 혹시 컴포넌트 별로 분리할 수 있는지, 명확한 타입화를 통해 추상화를 할 수 있는지 구분해보고 해당 동작들을 별도 함수로 분리해서 가독성을 높여보는게 좋지 않을까 싶네요!\n\n고생하셨고 다음 주 과제도 화이팅입니다!!",
    "enrolledId": "68417c4a4e1c73fff2a66073",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af92",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신홍준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/2"
      }
    ],
    "feedback": "홍준님 고생하셨습니다. \n회고를 읽어보니 아주 많은 것을 스스로 학습하신 것 같아서 좋네요!\n명확하게 각 함수들에 대해 정리해보고, 목적을 작성해보신것도 너무 좋았습니다. 큰 것은 아니기도 하고 갠취이긴 하지만 이런 주석을 남기는게 AI에게 명확한 구현 지침이 될 수 있어서 좋다고 생각하는데요! 다만 전통적인 관점에서 이런 주석들이 코드 자체로 명확하게 드러날 수 있다고 생각해 구현이 마무리되면 명확한 부분들만 남겨보는건 어떨까 싶기도하네요!\n\n리뷰 받고 싶어하셨던 내용으로 넘어가보면요!\n\n> eventManager.js의 addEvent, removeEvent를 지금처럼 createElement나 updateElement에서 사용하는 것이 아니라 직접 사용할 일이 있을까요? \n\n지금 딱 떠오르는 시나리오는 없는 것 같은데요.\n이미 시스템을 만들었다는 점에서 캡슐화 관점에서 결국에는 이 엘리먼트 내에서 추상화를 해서 제어를 하는 편이 이상적이고, 관리가 명확해지면서 편하다고 생각이 드는 것 같아요!\n\n>  기술적인 내용이 아니라 적절치 못한 질문일 수도 있을 것 같습니다. 1, 2주차를 거치며 AI 사용이 점점 익숙해지고 있습니다. 특히 이번 주차는 질문의 단위도 작게 나누어 코드 이해도를 높였고, 개념 정리도 틈틈히 진행했습니다. 하지만 결국 구현능력은 조금 떨어지는 느낌이 듭니다. 내가 이미 알고 있는 것이지만 귀찮은 작업이기에 맡기는 그림이 맞는지, AI의 도움을 적극적으로 받아 큰 맥락, 주요 개념 위주로 익히며 진행해도 되는지 궁금합니다. (+ \"AI 없이 코딩하기 수련\"이 필요할까요?)\n\n음...! 저도 이 부분에 대해 고민이 굉장히 많은데요. \n이전에 저희가 공부를 하는데 있어서는 각 API를 빠르고 적절하게 사용하는 것이 매우 중요했었기 때문에 코드를 작성하는 연습을 하는게 굉장히 중요했었던 것 같아요. \n지금의 시점에서는 그때만큼 그런 역량이 중요해지지 않은 것은 사실이지만 그럼에도 AI를 활용해 모든 코드를 완벽하게 작성할 수 없고, 복잡하고 비즈니스에 가까운 복잡한 함수들을 작성하게 되면 결국 제가 다시 작성하게 되더라구요. 그런 부분에서 과거만큼은 아니지만 여전히 중요하지 않을까라고 생각하는 것 같습니다.\n미래에는 어떻게 될지 모르죠! 저희가 코드를 작성하지 않게 될 수 있겠지만, 지금의 시점에서 저희는 관점을 갖고 연습하고 준비해야 하기 때문에 이 부분도 같이 공부해보면 어떨까 싶네요!\n\n고생하셨고 다음주도 화이팅입니다~~",
    "enrolledId": "682983e90a72040b80d5107f",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af94",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박준형",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/9"
      }
    ],
    "feedback": "준형님 한 주 알차게 보내신 것 같네요 ㅎㅎ\n(링크가 동작을 안하는 것도 있는것 같지만) 과제나 회고가 매우 훌륭하고 완성도있게 작성되어 있네요 :+1\n전체적으로 작성한 글들을 보니 따로 피드백을 드릴만한게 크게 없는 것 같네요.\n\n> 1. Suspense 컨텍스트 스택의 메모리 안전성\n\n넵. 구현도 적절하게 잘 해주신것 같은데요! 저도 조금 더 찾아봐야겠지만, 실제 키 기반으로 해당 캐시를 관리하다 보면 문제가 발생할 여지가 있어서 프로미스 객체 자체를 키로 활용해보는것도 좋지 않을까 라는 소소한 의견도 생각해봅니다. 호출부는 제가 못찾았을 수도 있는데, 각 테스트의 setup단계에서 작성해주셨던 것 같은데요. (제가 잘못이해한거면 추후에 메신저로 알려주세요!) 명시적으로 해당 부분을 언마운트 시점에 호출하는 부분이 있다면 적절할 것 같아요!\n\n> 2. 중첩 Suspense에서의 Promise 버블링 정확성\n\n이 부분도 크게 현재 시점에서는 문제가 없을 것 같지만, suspense가 중첩되거나 재귀적으로 호출이 되다보면 충분히 문제가 발생할 여지는 있을 것 같아요. 콜 스택이 변한다거나..\n리액트에서는 이런 문제를 해결하기 위해서 fiber를 만들고 트리를 순회하는 형태로 개선했던 것 같은데 구현을 참조해보면 좋을것 같아요!\n\n> 3. Promise 캐시 키 생성 전략의 한계\n\n요거는 위에서 슬쩍 제안 드려봤습니다 ㅎㅎ 좋은 방법있음 저도 공부할겸 아고라에 공유해주세요!\n\n> 4. 비동기 컴포넌트 에러 처리의 사용자 경험\n\n요것도 실제 리액트 구현을 참고하면 좋을 것 같은데요. 저희들이 비동기, 동기적 여러 에러를 제어할 때 ErrorBoundary로 감싸서 각 객체 타입별로 에러를 제어하는 레이어를 명확하게 둬 합성해 관심사를 분리하는 형태로 구현하는게 일반적일 것 같은데요! 이런 구조를 그대로 따와서 각 에러에 따른 명확한 바운더리를 나누고 구역별 에러 메세지를 명확하게 나눠보면 어떨까요?\n\n이 부분에 대해서 공부할만한 글이 있는데, 직접적이게 ErrorBoundary에 대해 막 다루는 글들은 아니지만 읽어보면 도움이 되실것 같아요.\n\nhttps://tech.kakaoent.com/front-end/2022/221110-error-boundary/\nhttps://www.youtube.com/watch?v=012IPbMX_y4\n\n다음 주도 화이팅입니다!",
    "enrolledId": "6847a79c614fe33053fc070a",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af96",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정도은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/43"
      }
    ],
    "feedback": "안녕하세요 도은님! 2주차 과제 잘 진행해주셨네요!! 너무 고생하셨습니다 ㅎㅎ\n무엇보다 학습 과정과 전체적인 흐름에 대해 정리를 꼼꼼하게 해주셔서 좋았어요! 저도 다시 복습하는 느낌!?\n\n---\n\n> 처음에는 flat(Infinity)를 사용했지만, 배열의 깊이가 2차원으로 고정되어 있는 것 같아 재귀 함수로 다시 구현했습니다. 이처럼 배열의 뎁스를 명확히 알고 있을 경우, flat() 대신 직접 구현하는 방식이 성능면에서 더 좋을까요... 차이가 미미하다면 가독성을 우선하는 게 더 나을 것 같은데 일반적으로 어느 정도를 \"미미하다\"고 보는지도 궁금합니다.\n\n2차원으로 고정되어있진 않답니다 ㅎㅎ 배열안에 배열이 있을수도 있어서요.\n구현해주신 내용이 flat 내부에 그대로 표현되어 있지 않을까요!?\n그래서 가독성과 성능 모두 flat(Infinity) 를 사용하는게 더 좋다고 생각해요.\n무엇보다 native api를 사용해야 브라우저가 업데이트 될 때 자연스럽게 내부 로직도 개선이 되고 성능도 자연스럽게 좋아질 수 있답니다!\n\n다만, 이와는 별개로 직접 구현하는 과정도 중요하다고 생각해요. 저희는 \"학습\"을 하고 있기 때문이죠!\n\n> normalizeVNode: 앞단에서도 filter(Boolean) 처리를 해주는 부분이 많았고 이 시점에서 추가로 필터링하지 않아도 된다고 생각했는데 이 코드를 추가하자 테스트가 통과했습니다. 왜 이 필터링이 필요한 건지, 어떤 값이 false 처리되어 걸러지는지 정확히 이해하지 못하겠습니다… 혹시 어떤 케이스 때문에 이런 처리가 꼭 필요한 걸까요?\n\n흠... 그러게요 ㅋㅋ 제가 작성한 솔루션에서도 똑같은데요,\ne2e:ui로 확인해보면 없어져야할 콘텐츠가 아직 남아있는 등의 문제가 있어요.\n궁금해서 조금 디버깅을 해보니까\n\n대략 이런 상황인데요,\n\nfilter를 하지 않을 때는 비어있는 text node를 하나 만들게 됩니다.\n> children: [\"\", vnode, \"\", vnode, \"\", vnode, ...] \n\nfilter를 하면 빈 노드를 제거합니다.\n> children: [vnode, vnode, vnode, ...] \n\n빈 노드가 만들어지고, 빈 노드로 인한 diff 연산 과정에서 꼬임이 발생하는 것 같아요...! 제가 시간 되면 조금 더 찾아보겠습니다.",
    "enrolledId": "682d428a0a72040b80bf93a5",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af98",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수민",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/56"
      }
    ],
    "feedback": "안녕하세요 수민공주(?) ㅋ 수고했습니다. 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 특히 \"가상 DOM이란 무엇인가\"를 읽고 아는 것과, \"가상 DOM을 구현하기 위해 무엇이 필요한가\"를 고민하며 공부하는 것은 완전히 다른 깊이의 학습방법이 될 수 있다는 것을 느끼는 시간이 되어주었기를 바랍니다.\n\n회고에서 createVNode의 children 평탄화나 normalizeVNode의 역할 등 구현 과정에서 생긴 의문들을 하나하나 해결해가며 학습하신 과정이 인상적입니다. 특히 WeakMap을 활용한 이벤트 관리와 선언적 스타일의 코드 작성은 메모리 효율성과 가독성을 모두 고려한 좋은 선택이었습니다. 잘하셨습니다.\n\n이렇게 직접 저수준 라이브러리를 구현해보면 단순한 이론이 아닌 실제 동작 원리를 체득하게 됩니다. 앞으로도 필요에 의한 목적 지향적 학습을 계속 이어가시길 바랍니다.\n\n숙제로 아쉬워했던 \"...Reconciliation 구현하는 게 어려울 거다, 제약 조건(예를 들면 react의 key) 같은 것을 두는 게 편할 거다...\" 를 못해본거 꼭 하기입니다!! ㅋ\n\n그리고 여기에서 최소 useState, useEffect 정도까지만, 조금 더 욕심내면 memo와 context, suspense 정도들만 맛보기로 구현을 해보면 그전에 면접에서 말로 외우던 내용이 아니라 정말로 자신의 언어와 경험을 표현할 수 있을거에요.\n\n수고하셨습니다. 다음 주차 과제도 화이팅입니다!\n\n---\n**Q) eventManager에서 각 eventType에 대해 handler를 여러 개 걸 수 있어야 할까요?**\n=> 프레임워크 수준에서는 여러 핸들러를 지원하는 것이 확장성 측면에서 좋습니다. 라이브러리 내부적으로 성능 측정, 로깅, 이벤트 합성 등 사용자가 모르는 여러 핸들러를 붙일 수 있어야 하거든요. React도 내부적으로는 여러 처리를 하면서 사용자에게는 하나의 핸들러만 노출합니다. 당장 필요 없더라도 확장 가능한 구조로 만드는 것이 좋은 선택입니다.\n\n**Q) eventTypes를 Set으로 관리 vs constant 배열**\n=> 동적으로 이벤트 타입이 추가될 가능성이 있다면 Set이 유리하고, 고정된 이벤트만 다룬다면 constant가 나을 수 있습니다. 유지보수와 확장성을 고려해 Set을 사용하는 것이 좋겠죠? 나중에 새로운 이벤트 타입이 추가되어도 코드 수정 없이 자동으로 처리되니까요.\n\n어떻게 보면 현재 React가 어떻게 하고 있나가 사실상 정답지에 가까워서 이러한 의문에 대한 대답의 힌트는 다른데서는 어떻게 하고 있나? 이런거 찾아보시면 좋아요.\n\n수고하셨습니다. 다음 주차도 화이팅입니다! :)",
    "enrolledId": "68497d2484ed0f3459b09aca",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af9c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이은지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/19"
      }
    ],
    "feedback": "안녕하세요 은지, 수고하셨습니다. 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 특히 이번 과제를 통해 '필요가 공부를 만든다'는 경험을 하셨기를 바랍니다. 단순히 \"가상 DOM이란 무엇인가\"를 읽고 아는 것과, \"가상 DOM을 구현하기 위해 무엇이 필요한가\"를 고민하며 공부하는 것은 완전히 다른 깊이의 학습이니까요.\n\n그런 점에서 회고에서 JSX pragma의 역할을 몰라 한참 헤맸다고 하신 부분이 참 인상적이었어요. createVNode이 어디서 호출되는지 찾아가며 / @jsx createVNode */ 주석의 의미를 학습하신 과정에서 내가 기존의 학습방식과 필요하니까 찾아가면서 하는 목적형 체험 학습의 경험을 꼭 기억해주기를 바랍니다. 그밖에 이벤트 위임이니 WeakMap등에 대한 검토들도 너무 좋았습니다. \n\n회고에서 \"몸으로 부딪히고 문제가 발생하면 그때 처음으로 돌아가는 습관\"을 발견하셨다고 하셨는데, 사실 이것도 나쁘지만은 않습니다. 그 몸으로 부딫히는 시행착오로 인해서 그 길이 아니었구나라는 경험이 있기에 다음번에서는 그길로 가지 않게 되니까요. 헤메는 만큼 다 습득을 하는 것이니까요. \n\n그렇지만 깨달음을 얻었던 것처럼 하나씩 해야할 Task들을 적절히 단계별로 만들어두고 가는것은 개발자의 구조적 사고 능력중 중요한 능력이므로 같이 연습해보면 좋겠네요.\n\n수고많았습니다. 다음 주차도 화이팅입니다!",
    "enrolledId": "6833c8d54e1c73fff246f798",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8af9e",
    "result": "PASS",
    "isBestPractice": false,
    "name": "조영민",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/53"
      }
    ],
    "feedback": "안녕하세요 영민, 수고했습니다! 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 특히 이론으로만 알던 Virtual DOM을 실제로 구현하면서 '필요가 공부를 만든다'는 경험을 하셨기를 바랍니다.\n\nVirtual DOM의 전체 흐름(createVNode → normalizeVNode → createElement → renderElement)을 잘 이해하고 구현하셨네요. 잘했습니다.\n\n회고에서 실력 부족을 느끼신다고 하셨는데, 쉬운 과제 아닙니다. 저희 쉬운 과제 준다고 한적 없었잖아요. ㅎㅎ 오히려 이렇게 어려운 개념을 직접 구현해내신 것만으로도 충분한 성장을 하고 있는거에요. 실력 부족을 느낀게 아니라 나 이제 여기까지 왔구나라고 생각해보세요. 처음이라 어렵지 두번하면 금방입니다. \n\n이제 Virtual DOM의 원리를 체득하셨으니, React를 사용할 때도 내부에서 어떤 일이 일어나는지 더 잘 이해하실 수 있을 거예요. 다음 주차도 화이팅입니다! :)",
    "enrolledId": "684a92b384ed0f34596009d9",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afa0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/50"
      }
    ],
    "feedback": "고생하셨습니다 상수님.\n과제는 잘 작성해주셨던 것 같아요! 명확하게 목적에 맞춰서 필요한 부분은 잘 구현해주신 것 같습니다.\n\n다만 공부를 하셨던 많은 내용들이 있으셨던 것 같은데, 그 부분들을 글로 옮겨보고 공유해보고 하는 경험이 추후에 공부 한 기억을 오래 갖고가시는데 큰 도움이 될 것 같아요. 지금은 셀프 회고에 가볍게 적어주셨지만 다음 주차부터는 다른 분들 과제를 리뷰해보기도 하고 참고해서 작성해보신다면 더 도움이 많이 될 것 같습니다.\n\n다음 주도 화이팅입니다~",
    "enrolledId": "684aad6b84ed0f3459763b8d",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afa2",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "양창훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/5"
      }
    ],
    "feedback": "Q.  handler안에 매개로 e를 또 주는 이유는 버블링방지하라고 주는 e인가요\n\nA. 버블링 방지 뿐아니라 이벤트 객체를 이벤트핸들러에서 활용하라고 전달하는 e입니다. \n이벤트 핸들러는 이벤트 객체를 활용할 수 있어야하니까요~\n\nQ. 요런 테스트 크드를 보고 \"아 컴포넌트는 function이니까 얘를 다시 vNode.type({ ...vNode.props, children: vNode.children }) 이렇게 해서 재귀를 돌려야 겠다\"와 같은 생각을 하려면 어떤 경험이 필요할까요\n\nA. 테스트 코드를 보고는 저도 모를 것 같아요 :) \n다만 테스트를 해결하는 코드를 작성하면서 코드의 흐름상 이것은 재귀호출로 만들어야겠다라고 생각이 들 것 같아요.\n저는 멘토링때 말씀드렸듯 알고리즘은 빠삭하게 알달 외울필요는 없다고 생각하는데요. 재귀호출을 이용해 문제를 해결하는 능력은 필요하다고 생각해요.\n분할 정복을 구현하는 재료로서의 재귀호출을 충분히 이해하려는 목적으로 알고리즘을 조금 학습해보시면 어떨가 싶습니다.\n평소 업무에서의 재귀호출은 그렇게 많이 사용되지 않으니까요!",
    "enrolledId": "6835a5664e1c73fff2ddfa55",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afa4",
    "result": "PASS",
    "isBestPractice": true,
    "name": "이지훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/18"
      }
    ],
    "feedback": "지훈님 회고가 엄청 알차네요!\n한 주를 어떻게 보내셨는지 가늠할 수 있는 좋은 자료 인 것 같습니다. 고생하셨어요 ㅎㅎ \n과제에 대해서는 명확하게 필요한 부분 잘 작성해주셨고 문서에 남겨주신 것들 살펴보면 알 수 있듯이 할 수 있는 여러 고민들에 대해 답변도 구체적으로 남겨져 있고 함께 성장하려고 하시는 모습도 너무 좋네요. (특히 정석님에 대한 그..)\n\n코드 품질 부분에서 이야기를 주시기도 했고 질문 주신 함수 성능 최적화 시점에 대한 최적화 부분을 먼저 답변드려보면요.\n\n먼저 중요할 수 있는 로직 부분이니 이미 알고 있는 여러 지식들도 활용하는 것 좋았습니다. 다만, 개인적인 관점으로 약간 얘기를 다르게 해보면 최적화 관점에서 필요한 부분은 맞지만, 이슈가 발생한 지점이 있었는지 궁금하긴해요! \n실제 브라우저에서 제공하는 API를 사용하지 않고 직접 구현해서 사용한다면 해당 부분에 대해 명확한 이슈가 발생하고 나서 수정을 하는 것도 늦지 않거든요 ㅎㅎ 말씀해주신 것처럼 브라우저에서 해당 이슈를 인지하고 속도를 빠르게 하는 최적화를 하고 있다면 관리적 이슈가 늘어나는 부분이니까요. 절대 지금의 코드가 잘못되었다는 것은 아니지만, 우리가 최적화를 하는 시점에 대해서는 고민을 해보는것도 추후에 좋지 않을까! 싶긴 합니다. \n\n우리가 원칙으로 알고 있는 것처럼 섣부른 최적화는 실제 앱에 성능이 되지 않고 가독성이 안좋아지는 결과를 낳으니까요.  그대로 사용한다면 가독성 측면에서도 유리해지는 지점도 있으니까 그런 부분을 함께 챙겨주시면 좋을 것 같습니다. (아무튼 접근은 좋았습니다!)\n\n> 위임 환경 구현\n\n이 부분도 사실은 최적화 시점에 관련된 이야기 인 것 같은데요.\n이미 정답을 추측해보실 수 있는것처럼, 지훈님이 작성해주신 이 프레임워크가 만약 '쇼핑몰이 아닌 여러 곳에서 사용할 수 있는 가능성이 있다' 라는 관점의 개발일지 '쇼핑몰에 적합한 프레임워크다'라는 관점으로 접근할 지가 필요할 것 같아요. 만약 전자라면 범용적인 시나리오에 모두 적합한 최적화 방식을 선택해야 하고, 쇼핑몰에서만 사용해야 한다면 지금은 등록은 적고, 발생은 빈번하기 때문에 발생 했을 때 어떻게 유리하게 처리할 수 있는지 시간복잡도를 계산하고 사용한다면 좋지 않을까 싶네요!\n리액트에서는 fiber tree를 사용해 이벤트 등록 시점에 최적화를 수행하는 것으로 알고 있는데, 이런 관점에서도 한 번 고민해보면 좋을 것 같네요.\n\n> focus 이벤트와 같이 버블링을 지원하지 않는 이벤트의 경우 개별 요소에 이벤트리스너를 설정하는 것과, focusin 처럼 버블링을 지원하는 이벤트로 변경해 위임을 하는 것 어떤 것을 더 선호하시나요?\n\n저희가 별도로 이벤트 시스템을 구축해 관리를 하는 장점이 여기에도 속할 수 있을 것 같은데요. 제가 알고 있기로는 리액트도 내부적으로 해당 이벤트를 위임 가능하도록 매핑해 처리를 하는 것으로 알고 있어요. 동일한 동작을 만들고 이벤트에 대한 구현 일관성을 유지하고 사용자가 사용하기 편하도록 처리할 수 있어서 그런 것 같은데요. 저희의 과제 목표가 리액트와 유사한 구조를 만드는것이니 변경해 위임을 하는 형태로 구현해본다면 더 공부가 될 것 같습니다 ㅎㅎ\n\n고생하셨고 다음 주도 화이팅입니다!!",
    "enrolledId": "6852337e851b4a7da82175ff",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afa6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "임두현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/30"
      }
    ],
    "feedback": "두현님 한 주 고생 많으셨어요~\n작성해주신 회고 잘 읽었고 덕분에 저도 고민의 흔적들을 따라가볼수 있어서 좋았네요! 직접적으로 지침을 넣어서 명확한 학습방향을 만드시고 공부하셨던 것도 좋았던 것 같습니다. \n\nPR에 남겨주셨던 궁금하셨던 내용 이야기를 이어서 해보면요.\n\n> 단순히 가독성 복잡도뿐이 아니라, 테스트 가능성, 유지보수성, 팀 개발 관점에서 함수 분리의 기준과 시점을 어떻게 판단하시는지, 그리고 과도한 분리로 인한 코드 파편화를 방지하는 방법에 대해 의견을 듣고 싶습니다.\n\n여러 원칙들과 선배들이 이야기 한 규칙들이 있겠지만, 사실 정답은 없는 것 같아요. 우리들은 깔끔한 코드를 명확한 규칙 내에 정리되게 작성하고 싶어하지만 현실에서는 그런 코드를 작성하는게 사실상 불가능하거든요. \n그럼에도 개인적으로 이런 분리, 추상화 고민이 들때는 재사용이 실제로 발생하는 시점이 임박하거나 실제로 상상속에서 벌어지고만 있다면 구현하지 않는 편인것 같아요. 그리고 실제로 사용하게 되더라도 중복으로 구현되도록(복사를 아마 하겠죠?) 사용한 다음 주석으로 명확하게 개선이 필요하다고 남기고 추후에 별도 작업으로 분리해서 테스트와 함께 검증하면서 해결하는 편입니다. 내가 아무리 확실한 미래일지라도 상상하는 그 미래 상황에 맞춰 구현을 하고 코드를 나누다보면 늘 문제가 생기고 확장성이 사라졌던 것 같아요. 필요한 만큼 현재 시점에 맞게 딱 그정도만 구현을 한다음 필요해지면 더 구현해나가면 되지 않을 까 싶습니다 ㅎㅎ 모든 규칙에 있어서요. \n\n고생하셨고 다음 주 과제도 화이팅입니다!",
    "enrolledId": "684149af4e1c73fff27b2528",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afa8",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정민기",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/jeongmingi123/front_6th_chapter1-2.git"
      }
    ],
    "feedback": "안녕하세요 민기님~\n2주차 과제 잘 진행해주셨네요!! 고생하셨습니다.\n다만, 과제 PR을 제출해주셔야 되는데 repo 링크를 제출해주셨네요 ㅋㅋ 다음에는 PR 링크로 제출 부탁드려요!\n\n> 클린코드 관점에서 질문드립니다. createElement 를 구현하면서 뎁스가 길어진다고 생각하여, 함수로 쪼걨는데, 너무많이 쪼갰나 생각이 들었습니다. 이런식으로 하는게 괜찮은 방법일까요? 아니면 추가적으로 보완해야한다면 어떤식으로해야할지 질문드립니다..\n\n오 ㅋㅋㅋ 저는 이런 방식을 더 선호하는 편입니다.\n이걸 저는 \"코드의 추상화 수준을 맞춘다\" 라고 표현하곤 해요. 코드를 읽을 때 가독성이 훨씬 좋아지고, 함수의 이름을 통해 어떤 동작을 하는지 예측이 쉬워지는 효과가 있어요!\n\n조금 더 나아가자면, 이렇게 표현할 수 있도록 함수를 하나 더 만들면 좋지않을까 싶네요!\n\n```tsx\nexport function createElement = pipe(\n  [isNullOrBoolean, createEmptyTextNode],\n  [isPrimitive, createTextNode],\n  [Array.isArray, createFragmentFromArray],\n  createElementFromVNode, // 혹은 [()=> true, createElementFromVNode]\n)\n```\n\n저는 이런걸 \"선언형 프로그래밍으로 만들었다\"고 표현해요. if, for 같은 코드 대신 함수로 최대한 랩핑하여 코드가 어떤 형태를 갖춰야 하는지 선언하는거죠 ㅎㅎ\n\n---\n\n고생하셨습니다~!",
    "enrolledId": "684cd08584ed0f3459eb21b9",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afaa",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여찬규",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/44"
      }
    ],
    "feedback": "고생하셨습니다 찬규님!\n5팀만의 규칙으로 이슈에 정리해주셨던 것 같은데 너무 잘 정리해주셨네요. :+1\n어떤 과정으로 과제를 진행해주셨는지 명확하게 이해할 수 있었습니다.\n말그대로 왜 이 구조를 사용하는지, 어떻게 동작하는지 이해할 수 있는 좋은 기회였다고 생각하고 실제 리액트 구조에서는(리스트업 해주신 것 처럼) 이거보다 더 복잡한 여러 과정들이 있으니 이참에 공부 해보고 공유해주시는 것도 좋을 것 같아요 ㅎㅎ\n\n이어서 질문 남겨주신 부분 답변 드려보면,\n\n> update element의 클린코드 관점\n\n음..지금 함수의 문제점이라면 한 함수에서 너무 많은 종류의 속성을 처리하는거지 않나 싶긴 한데요. 속성 타입별로 함수를 만드는 것도 좋겠지만, 공통적으로 처리할 수 있는 함수를 뽑아내는 방식으로 리팩터링을 하는게 좋지 않을까 싶습니다! 분기에 대한 것들도 함수로 명확하게 의도를 드러내고 동작에 대한것도 함수로 분리해서 명확하게 의도를 드러내구요. 예를 들어서 hasDifferentType해서 oldNode의 타입과 newNode의 타입을 비교하는 함수를 분리하면서 작게작게 함수들을 대체하면서 분리하는거죠. \n이런 형태로 분리하다보면 함수 이름 자체로 의도가 드러나기 때문에 좀 더 가독성이 좋아지는 부분이 생기는 것 같습니다. \n추가로 분기에 대한 중첩도 깊어질 수 있으니 일반적으로 말하는 early return, guard clause 패턴을 사용해서 걷어내는 것도 가독성에 좋을 것 같아요.\n\n고생하셨고 다음 주 과제도 화이팅입니다!",
    "enrolledId": "684a8d6184ed0f34595bafbf",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afac",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김효진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/23"
      }
    ],
    "feedback": "고생하셨습니다 효진님!\n깔끔하게 필요한 부분들에 필요한 코드를 잘 작성해주셨네요. :+1\n\n제가 실제 어땠는지는 잘 모르지만! 작성해주셨던것처럼 AI의 도움을 받는것이 늦은 행동이라고 느껴지셨을지는 몰라도, 그 고민의 시간들이 결국 AI에게 명확한것들을 물어보고 답을 얻는데 크게 도움이 되었다고 생각해요. 공부한 시간들을 너무 아깝게 생각하지는 마시고, 대신 다음 과제때는 명확해지면 빠르게 도움을 받아보는 형태로 가보시면 좋겠네요.\n\n질문 주신거 답변 드려볼게요!\n\n> Map , WeakMap, Set, WeakSet를 사용할 때 조금은 무분별하게 혹은 적절하지 않게 사용하지 않았나 생각이 듭니다. 특히 eventManager 코드에서 세개나 사용하고 있는데 어떻게 사용했어야 좀 더 효율적으로 구현할 수 있었을까요?\n\n잘 사용해주셨다고 생각합니다. 사실 갯수는 크게 중요한 기준이 되지 않는것 같아요! 비슷한 고민으로 한 폴더 내에 파일이 너무 많아진다고 느껴지거나, 함수의 길이가 길고 짧고 느껴지는 것들이 개개인마다 다른것들이 있을것 같은데요. 길이나 갯수를 고려하면서 어떤 것들을 쓰지 않으려고 하기 보다는 명확한 목적에 맞는 자료구조를 선택하고 활용하는게 중요하죠. 이벤트의 중복 관리나 타입들을 제어하기 위해 적절한 타입들을 선택했다고 생각합니다. \n\n> element._hasEventDelegation 이런 방식으로 DOM 요소에 직접 속성을 추가하는 방식에 대해서는 어떻게 생각하시는지 궁금합니다.\n\n권장하지 않습니다! 이미 찾아보셨겠지만, 돔  요소에 직접 속성을 추가하는것은 오염의 가능성이 있어 권장하지 않아요. 명확성도 떨어지고 _를 붙인다고 해서 해당 속성이 감춰지는 것도 아니구요. data 속성을 활용하는 경우도 있는데, 별도의 자료구조에 담아서 처리하는게 저는 더 명확해보여요 ㅎㅎ\n\n\n고생하셨고 다음주 과제도 화이팅입니다!!",
    "enrolledId": "6852955b851b4a7da86f237b",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afae",
    "result": "PASS",
    "isBestPractice": false,
    "name": "허정석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/31"
      }
    ],
    "feedback": "정석님 기대하고 있었습니다.\n역시 기대한 만큼 필요한 부분들에 대해서 명확하게 코드로 잘 옮겨주신 것 같네요. 멋지십니다. 작성해주신 회고도 매우 인상깊었는데요. 볼드체로 작성해주신것처럼 과제를 하는데 있어서 뿐만 아니라 개발 업무 전반에 있어서 명확한 목적과 해결 과정을 러프하게나마 미리 정리하고 진행하는게 매우 생산성, 정확성에 있어서 중요하다고 생각해요. \n항해에서 공부를 계속 해나가심에 따라 여러 도구를 획득하게 되실텐데요. 결국 가장 중요한건 이 도구를 잘 습득했다가 전부가 아니라 정석님이 회사에 가셔서 이 도구들을 잘 활용하는거지 않을까 싶습니다.\n요런것들도 사실 연습이 필요한 부분이니까 매 과제과제마다 잘 챙겨주시면 좋을것 같아요.\n\n질문 주신거 이어서 답변 드려보면요.\n\n> AI의 답변을 단순히 수용하지 않고, 나만의 것으로 만들려면 어떤 질문을 던져야 할까?\n\n가장 먼저 해야할건 이 문제에 대해서 내 머리속에서 어느정도 구현을 해야 하는지 직접 계획을 세우고 검토해보는것 같아요. AI로 문제를 풀때도 동일하게요. 이 과정이 어느정도 내 기준에 납득이 되고 난 뒤에 작업이 진행이 되어야 코드의 일관성이나 문제를 푸는 방식이 일치가 되고 추후에 고치는 작업도 줄게 되는 것 같아요.  작업의 퀄리티와도 연결되는 부분이겠지만, 각 해당되는 작업들의 명확한 계획을 이야기를 들어보고 그 작업을 선별한 다음에 진행을 하는 것도 방법일 것 같구요! 다른 분들이 하시는 것처럼 코드의 구현을 어느정도 개입해서 주석 형태로 작성을 한 다음 코드 작성을 맡겨보는 것도 방법일 것 같구요.\n\n개인적으로는 맥락은 프로젝트 전체를 이 부분에 있어서 너무 작업범위를 제안 받기보다는 작은 범위범위에 대해 작업을 진행하는 것이 좋은 것 같아요. 명확한 검증 후에 실제 코드로 반영하는 사이클을 만드는게 좋다고 생각하는 편인 것 같습니다. \n\n두번째 질문으로 FE 구현을 막혔을 때 라고 해주셨는데요. FE 구현은 명확한 화면이 있다보니 멀티 모달 즉, 이미지같은것들을 최대한 활용해보는게 저는 좋더라구요. 글로 문제 상황을 전달하다보면 내 언어적인 문제도 명확하게 있다보니.. 여러번 반복해서 설명을 하는 것보다는 이미지로 딱 전달을 하는게 퀄리티 있는 답변을 얻는데 도움이 많이 되었던 것 같아요 ㅎㅎ 사용을 해보시면 좋을것 같습니다.\n\n고생하셨고 다음주도 화이팅입니다 정석님 지켜볼게요",
    "enrolledId": "68479c49614fe33053f4b25d",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afb0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김휘린",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/4"
      }
    ],
    "feedback": "안녕하세요 휘린, 수고했어요~ 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서 기존에 innerHTML을 사용해서 전체를 렌더링을 하는 비효율적인 방식과 하나씩 DOM을 수동으로 업데이트를 해가는 방식을 더 선언적이고 직관적인 세련된 방법으로 다루기 위해 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 단순히 DOM을 조작하는 것을 넘어서 최적화된 업데이트 로직을 경험했기를 바랍니다.\n\n특히 DOM의 attribute와 property 차이점을 정확히 파악하고 처리한 부분이 인상적입니다. checked, disabled 같은 boolean 속성을 property로 처리하고, children이 읽기 전용임을 발견하여 적절히 예외 처리한 것은 깊이 있는 이해를 보여줍니다. 또한 이벤트 위임 시스템을 WeakMap으로 구현한 것도 메모리 관리 측면에서 좋은 선택이었습니다.\n\n이러한 프레임워크를 구현을 하다보면 필연적으로 알아야 하는 Low-level의 지식들이 있는데 알고만 있는게 아니라 목표를 가지고 만들어야 할때 우리는 그 내용을 훨씬 더 잘 이해할 수 있다는걸 경험해보는 소중한 시간이 되었기를 바래요. \n\n이런건 실무에서 다루지는 않지만 내가 다루는 도구의 원리를 이해하고 다루는것과 그렇지 않은 것에는 큰 차이가 있으니, 꼭 완벽하지 않더라도 이미 시중에서 내가 잘 쓰고 있는 유용한 도구들을 직접 나만의 프레임워크, 나만의 도구로 직접 구현해보는 경험을 통해 저수준의 영역들도 이해해보기 바래요.\n\n이제 가상 DOM의 기본 원리를 이해하셨으니, 다음 단계에서는 상태 관리와 컴포넌트 시스템도 한번 도전해보는 건 어떨까요? ㅎ 남은 주차도 화이팅입니다. 수고하셨습니다!\n\n---\n\nQ) createElement에서 숫자를 문자열로 변환하는 이유\n=> 좋은 질문 입니다. 저수준의 코딩을 하다보면 하나의 함수가 여러가지 경우의 수를 다 다룰 수 있도록 만들면 에러를 발견하기가 매우 어렵게 됩니다. 특히나 string과 number의 내부 메소드가 다른데 num.slice(1,-1) 이런식으로 호출했다나 에러가 나는 경우는 상당히 빈번하죠.\n\n그래서 애초에 함수의 제약조건을 높여서 저수준의 함수를 먼저 설계해두고 중간에 정규화과정을 거쳐서 미연에 그렇게 되지 않도록 만드는 일정의 방어적 프로그래밍의 일종입니다.\n\n일부 중복검사를 하는 것처럼 보일 수 있고 실제로 이런 코드로 인해 성능이 희생될수 있지만 유지보수를 위해 간결한 코드를 만드는 우선전략이라고 생각해주세요.\n\n도움이 되었기를 바랍니다 :)",
    "enrolledId": "6853a924851b4a7da8357a5c",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afb2",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이유진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/35"
      }
    ],
    "feedback": "안녕하세요 유진~, 수고하셨습니다! 이번 과제는 React의 핵심 원리인 가상 DOM과 diff 알고리즘을 직접 구현해보면서, 프레임워크가 어떻게 효율적인 렌더링을 수행하는지 이해하는 것이 목표였습니다. 그전에 내가 만들어야 하니까 구현해가면서 필요한걸 공부하는 것과 그냥 공부를 하는것과의 차이를 확실히 느꼈기를 바랍니다. 단순히 \"가상 DOM이란 무엇인가\"를 읽고 아는 것과, \"가상 DOM을 구현하기 위해 무엇이 필요한가\"를 고민하며 공부하는 것은 완전히 다른 깊이의 학습이니까요. 잘 했습니다.\n\n회고에서 각 함수의 필요성과 역할을 납득하는 과정이 어려웠다고 했는데요. 그래서 Vue 공식문서와 GitHub 레포를 찾아보며 Virtual DOM의 근본적인 문제를 이해하려 노력하신 점, 그리고 실무에서 Vue의 Virtual DOM이 왜 렌더링을 하지 않는지를 생각할 수 있도록 시야가 깊어진 부분이 아주 좋네요. Vue와 React의 렌더링 전략은 다르기에 Virtual DOM이 아닌 Vue의 Rendering방식도 한번 이해해보면 재밌을거에요.\n\n나아가 코드를 조금 더 개선해본다면 하드코딩된 이벤트 리스트 대신, 실제 사용된 이벤트만 동적으로 등록하는 방식도 한번 시도해보시길 바래요.\n\n---\n\nQ1. boolean 속성 처리 방식이 올바른지?\n=> 네, 올바른 접근입니다. HTML의 boolean 속성은 attribute와 property의 동작이 다른데, 이를 정확히 구분하여 처리하신 것이 좋습니다. 특히 `checked`와 `selected`는 property로만 제어해야 하는 것을 잘 파악하셨습니다.\n\nQ2. updateAttributes의 처리 순서가 적절한지?\n=> 네 지금 순서는 큰 문제 없어보입니다. 각 속성 처리가 독립적이기만 하면 되요. 순서보다는 각 처리 로직이 서로 영향을 주지 않도록 설계하는 것이 중요합니다.\n\n이렇게 직접 저수준 라이브러리를 구현해보면서 얻은 깊은 이해는 앞으로 프레임워크를 사용할 때 큰 자산이 될 거에요! 다음 주차도 화이팅입니다! :)",
    "enrolledId": "682546800a72040b80150daf",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afb4",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정유열",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/6"
      }
    ],
    "feedback": "안녕하세요 유열님! 2주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다.\n\n> 테스트의 존재와 미리 명확하게 모듈을 나누어주신 구조로 인해 AI 사용 시 과제를 꽤 쉽게 완료하는 경우가 많을 수도 있겠다는 생각이 들었습니다.\n\n반대로 생각하면, \"이런 구조가 있으면 AI가 문제를 해결하기 쉽겠는데?\" 라고 판단하고 앞으로 AI를 더 잘 활용하는 방법에 대한 인사이트가 되리라 생각해요. 이제는 AI를 활용해야 하는 시대라서... ㅋㅋ\n\n\n> 각각의 모듈 구현에 집중하면 되는 과제이다보니 의도적으로 프로젝트 전체를 파악하려는 노력을 하지 않는다면 학습하길 의도하신 전체 흐름을 이해하지 못하고 넘어가는 수강생도 존재할 것 같습니다.\n\n이 부분도 고민이 되는 지점 중에 하나인데요, 원래 이전 기수에는 새로운 기능을 추가하는 요구사항이 있었으나... 지난주 과제에 대한 피로도가 쌓여있으리라 생각하여 일부로 제외했답니다 ㅎㅎ\n\n다음에는 꼭 넣어봐야겠어요!\n\n>1. 이벤트 매니저에서 이벤트를 저장하고 사용하기 위해 채택한 자료구조의 활용이 적절한가\n\nWeakMap, Map, Set 등 다양하게 사용해주셨네요! \n다만 Map의 key가 string이여서, 굳이 Map을 사용할필요가 있을까? 라는 생각이 들어요. 단순 객체로 표현할 수도 있고..!?\n\n> 2. 불필요한 재귀나 리소스를 낭비할만한 플로우가 보였는가\n\n쓱 살펴봤을 땐 크게 문제되는 부분은 없어보이네요!\n\n> 3. 최대한 과제에 충실한 기능만 구현, 오버엔지니어링 되는 요소들을 분별해가며 제한적으로 구현했는데 실제로도 그러한가\n\n실무와 학습은 다를 수 있다고 생각해요.\n실무에서는 효과적인 방식을 채택해야 하고,\n학습에서는 효과적인 방식이 중요한게 아니라 많은 지식과 판단 근거를 습득하는게 중요해서요. 그래서 오버엔지니어링도 시도해보시면 좋답니다 ㅎㅎ\n\n> 변수명, 타입명, 주석 대신 가독성 좋은 코드 작성(학습용 주석 제외)을 지향하면서 과제를 수행하고 있습니다. 아쉬운 부분이 있다면 알려주시면 감사하겠습니다.\n\n질문해주신 것들이 다 포괄적인거라... 유열님이 작성한 코드나 생각의 흐름을 코드에 직접 코멘트를 남겨주시거나 하면 더 좋았을 것 같아요 ㅠㅠ\n\n특히, 가독성 좋은 코드를 지향한다고 하셨는데 \"이렇게 작성하면 가독성이 좋아! 이유는 ~~~ 라서 그래!\" 라는 형태의 의견이 있으면 좋을 것 같아요.\n지금은 \"무슨 의도로 이렇게 한걸까?\" 라고 제가 추측하면서 봐야 한답니다.. 시간이 몇배는 소모되는거죠 ㅎㅎ;\n\n",
    "enrolledId": "6847a18a614fe33053f85c23",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afb6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/14"
      }
    ],
    "feedback": "안녕하세요 상수님~\n2주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다.\n다음에는 셀프체크에도 진행사항 표기 부탁드려요!\n\n> 만족스러운 부분은 그냥 브라우저 이벤트를 사용한 것이 아닌 React의 이벤트 작동 방식을 이해하기 위해 SyntheticEvent를 구현해 봤던 것이 만족스러웠다. 이런 과정에서 element._vNode 라던지 이런식으로 임시 메모리를 사용해서 관리하는걸 처음 깨달았던것 같다. React 에서는 사용할 일이 없겠지만 이런 방식으로도 할 수 있구나 라는 걸 꺠달았다.\n\n좋은 시도를 해주셨군요!! 멋있어요!!\n\n> WeakMap 활용 방법이 궁금합니다. 저는 현재 일부분들을 el._vNode 이런식으로 임시로 연결하여 사용하고 있거나 Map으로 연결해서 사용하고 있지만 다른 분들의 코드를 보니 WeakMap을 많이 활용한 예시들이 있는데 정말 필요한건지 판단이 잘 안 섭니다.\n\n일단 \"이런게 있어\" 라는것만 인지해도 좋아요 ㅎㅎ 필요한 상황은 너무 가지 각색이라... 이런 API가 있다는걸 인지하고 있다면 문제가 발생했을 때 갑자기 생각나서 사용하는 경우들이 종종 있답니다.\n\n이런 경험적인 측면이 강해서.... 저도 실무에서 쓰는 경우는 이번 과제랑 유사한데, native 이벤트를 별도의 메모리에 저장해서 관리하고 해제할 때 사용하고 있답니다! react와 연관되지 않은 코드다보니.. 직접 메모리 관리를 해줘야 해서요 ㅋㅋ\n\n보통 라이브러리 같은거 만들 때 쓰일 수 있을 것 같네요!",
    "enrolledId": "683fa08b4e1c73fff25b6b7e",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afb8",
    "result": "PASS",
    "isBestPractice": false,
    "name": "강병준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/46"
      }
    ],
    "feedback": "Q. 처음부터 AI의 도움을 받아 코드를 작성하고, 이후 스스로 이해할 수 있도록 수정해나가는 방식으로 진행 중입니다. 이 방법이 바람직한 학습 방식일까요, 아니면 먼저 스스로 코드를 모두 작성한 뒤, 이후에 AI의 도움을 받아 개선하는 것이 더 좋을까요?\n\nA. 저는 인공지능을 사수가아닌 부사수의 개념으로 사용해달라고 가이드 하는  편입니다. 그말은 어떻게 만드는지 이미 알고 있지만 귀찮아서 코드 생성을 AI에게 맡기고 원하는 결과물이 나올때까지 요청하는 것이죠. 지금과 같은 과제는 저라면 AI 도움없이 만들 것 같습니다~\n\n\nQ. 현재 과제에서 createElement.js의 updateAttributes와 updateElement.js의 updateAttributes가 유사한 작업을 수행합니다. 이럴 때, 공통 로직을 하나의 모듈로 분리해서 사용하는 것과 각각 파일 내에 따로 정의하는 것에는 어떤 차이가 있을까요? 멘토님은 이처럼 중복된 메서드가 있을 때, 보통 어떤 기준으로 모듈화를 결정하시나요?\n\nA. 넵 말씀하신대로 updateAttributes의 일부로직이 재사용된다면, 이것은 코드를 분리해달라는 신호일 수 있어요 그래서 해당 로직의 동작을 설명하는 함수로 분리해서 그 함수를 updateElement와 createElement에서 사용해야할 것 같습니다 :) 저는 맥락보다 중복된 코드 생겼을때를 코드가 보내는 신호라고 판단하고 분리해 재사용합니다!",
    "enrolledId": "684abe3784ed0f345985eaaf",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "6871ddc329b801fa62a8afba",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이가은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "6871ddc329b801fa62a8adf5",
          "name": "STEP04 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-12T13:00:03.113Z",
          "updatedAt": "2025-07-19T17:28:13.525Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-2/pull/25"
      }
    ],
    "feedback": "가은님 고생하셨어요!\n회고 남겨주신거 읽어보니, 새로운 개념 뿐만 아니라 잘못 알고 계셨던 개념까지 꽤나 명확하게 될 수 있는 좋은 시간이였네요.\nPreact 구현을 참고하는 것도 매우 좋은 접근이였네요 :+1 :+1\n\n질문 주셨던 부분으로 넘어가 보면요!\n결국 첫번째 질문은 말 그대로 각 객체, Map, WeakMap의 자료 구조의 차이와 이어질 것 같은데요.\n각 자료구조는 프로토타입을 다루는 거나 순회하는 부분, 특히 GC부분에서 동작이 차이가 많이 날 것 같아요. (키에 들어갈 수 있는 부분도요!)\n과제에 있어서 결국 구현을 어떻게 하냐에 따라서 '동작상'으로는 큰 차이는 없을 수 있는데요. 위 차이에 있어서 내가 관리하기 쉬운 방식은 무엇인지 명확하게 비교하고 선택할 수 있다면 큰 차이는 없을 것 같아요~\n\n두번째 질문은 예외처리 관련한 질문이였는데요.\n지금 제가 살펴봤을때는 더~챙겨야 되는 예외처리는 크게 없어보여요! \n충분히 잘 구현해주셨던것 같아요 ㅎㅎ\n걱정이 되신다면 각 작업들이 실패하는 케이스에 있어서 폴백동작들만 잘 정의해주심되지 않을까 싶긴한데 굳이 싶긴하네요!\n\n아무튼 잘 구현해주셨고 다음주 과제도 화이팅 하시길 바랍니다!",
    "enrolledId": "68479688614fe33053f10a5f",
    "assignmentId": "6871ddc329b801fa62a8ae0e",
    "assignmentName": "STEP04 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27217",
    "result": "",
    "isBestPractice": false,
    "name": "정명훈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "6697caec1cfd0ff2d737c0f6",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27219",
    "result": "",
    "isBestPractice": false,
    "name": "박의근",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "671993df7e7008df3ebb7f4e",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2721b",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김연수",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/58"
      }
    ],
    "feedback": "",
    "enrolledId": "6792d9a67ea42ce47df4e27e",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2721d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김지혜",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/48"
      }
    ],
    "feedback": "",
    "enrolledId": "679ce583ada1879bb5adddf0",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2721f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한아름",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/55"
      }
    ],
    "feedback": "",
    "enrolledId": "68205c830a72040b80c72cf1",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27221",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김소희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/41"
      }
    ],
    "feedback": "",
    "enrolledId": "67cae59e3255d88e88383b13",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27223",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/35"
      }
    ],
    "feedback": "",
    "enrolledId": "681dd962e7dc2519a9b4585f",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27225",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최용훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/11"
      }
    ],
    "feedback": "",
    "enrolledId": "682334f50a72040b80ba7b91",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27227",
    "result": "PASS",
    "isBestPractice": false,
    "name": "주산들",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/33"
      }
    ],
    "feedback": "",
    "enrolledId": "6821d2570a72040b80c25f8c",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27229",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김민지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/18"
      }
    ],
    "feedback": "",
    "enrolledId": "68245a760a72040b807a5c2c",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2722b",
    "result": "PASS",
    "isBestPractice": true,
    "name": "오하늘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/24"
      }
    ],
    "feedback": "",
    "enrolledId": "682457100a72040b80776d24",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2722d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최재환",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/56"
      }
    ],
    "feedback": "",
    "enrolledId": "68245c9b0a72040b807c704a",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2722f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "임규원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/39"
      }
    ],
    "feedback": "",
    "enrolledId": "68247d1b0a72040b8094ff55",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27231",
    "result": "PASS",
    "isBestPractice": false,
    "name": "유윤우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/10"
      }
    ],
    "feedback": "",
    "enrolledId": "68249f4e0a72040b80b3568e",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27233",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이유진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/32"
      }
    ],
    "feedback": "",
    "enrolledId": "682546800a72040b80150daf",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27235",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박소연",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/6"
      }
    ],
    "feedback": "",
    "enrolledId": "6824c3ac0a72040b80cbc2a3",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27237",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신희원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/28"
      }
    ],
    "feedback": "",
    "enrolledId": "68254af40a72040b801869c8",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27239",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이지현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/17"
      }
    ],
    "feedback": "",
    "enrolledId": "682566140a72040b80300e04",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2723b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "장루빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/54"
      }
    ],
    "feedback": "",
    "enrolledId": "682578680a72040b803edb7c",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2723d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이의찬",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/36"
      }
    ],
    "feedback": "",
    "enrolledId": "682576d80a72040b803dc418",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2723f",
    "result": "PASS",
    "isBestPractice": true,
    "name": "신홍준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/2"
      }
    ],
    "feedback": "",
    "enrolledId": "682983e90a72040b80d5107f",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27241",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박창준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/20"
      }
    ],
    "feedback": "",
    "enrolledId": "6825b2810a72040b8071d8af",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27243",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이태영",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/16"
      }
    ],
    "feedback": "",
    "enrolledId": "6825c7b00a72040b8086a6af",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27245",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이민재",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/25"
      }
    ],
    "feedback": "",
    "enrolledId": "682b2fc10a72040b80322848",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27247",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정도은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/9"
      }
    ],
    "feedback": "",
    "enrolledId": "682d428a0a72040b80bf93a5",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27249",
    "result": "PASS",
    "isBestPractice": true,
    "name": "이은지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/49"
      }
    ],
    "feedback": "",
    "enrolledId": "6833c8d54e1c73fff246f798",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2724d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이진희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/7"
      }
    ],
    "feedback": "",
    "enrolledId": "683f18534e1c73fff2105065",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2724f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/34"
      }
    ],
    "feedback": "",
    "enrolledId": "683fa08b4e1c73fff25b6b7e",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27251",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양창훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/57"
      }
    ],
    "feedback": "",
    "enrolledId": "6835a5664e1c73fff2ddfa55",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27253",
    "result": "PASS",
    "isBestPractice": false,
    "name": "임두현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/45"
      }
    ],
    "feedback": "",
    "enrolledId": "684149af4e1c73fff27b2528",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27255",
    "result": "PASS",
    "isBestPractice": true,
    "name": "허정석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/19"
      }
    ],
    "feedback": "",
    "enrolledId": "68479c49614fe33053f4b25d",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27257",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양성진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/46"
      }
    ],
    "feedback": "",
    "enrolledId": "68417c4a4e1c73fff2a66073",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27259",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이가은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/31"
      }
    ],
    "feedback": "",
    "enrolledId": "68479688614fe33053f10a5f",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2725b",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박준형",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/26"
      }
    ],
    "feedback": "",
    "enrolledId": "6847a79c614fe33053fc070a",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2725d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정유열",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/15"
      }
    ],
    "feedback": "",
    "enrolledId": "6847a18a614fe33053f85c23",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2725f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수민",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/50"
      }
    ],
    "feedback": "",
    "enrolledId": "68497d2484ed0f3459b09aca",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27261",
    "result": "PASS",
    "isBestPractice": false,
    "name": "조영민",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/43"
      }
    ],
    "feedback": "",
    "enrolledId": "684a92b384ed0f34596009d9",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27263",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여찬규",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/37"
      }
    ],
    "feedback": "",
    "enrolledId": "684a8d6184ed0f34595bafbf",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27265",
    "result": "PASS",
    "isBestPractice": true,
    "name": "이지훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/14"
      }
    ],
    "feedback": "",
    "enrolledId": "6852337e851b4a7da82175ff",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27267",
    "result": "PASS",
    "isBestPractice": true,
    "name": "장희진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/27"
      }
    ],
    "feedback": "",
    "enrolledId": "6853f85d851b4a7da883412b",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27269",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/59"
      }
    ],
    "feedback": "",
    "enrolledId": "684aad6b84ed0f3459763b8d",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2726b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "강병준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/12"
      }
    ],
    "feedback": "",
    "enrolledId": "684abe3784ed0f345985eaaf",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2726d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정민기",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/8"
      }
    ],
    "feedback": "",
    "enrolledId": "684cd08584ed0f3459eb21b9",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2726f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정건휘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/44"
      }
    ],
    "feedback": "",
    "enrolledId": "6859f165c85f37c525cd8f44",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27271",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김효진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/30"
      }
    ],
    "feedback": "",
    "enrolledId": "6852955b851b4a7da86f237b",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27273",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정용준",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/40"
      }
    ],
    "feedback": "",
    "enrolledId": "685e1202c85f37c525604396",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27275",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김휘린",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/38"
      }
    ],
    "feedback": "",
    "enrolledId": "6853a924851b4a7da8357a5c",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27277",
    "result": "",
    "isBestPractice": false,
    "name": "한재원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "685e1e58c85f37c52567068f",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27279",
    "result": "PASS",
    "isBestPractice": false,
    "name": "현지수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/42"
      }
    ],
    "feedback": "",
    "enrolledId": "68542193851b4a7da8a3a270",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2727b",
    "result": "PASS",
    "isBestPractice": true,
    "name": "여진석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/29"
      }
    ],
    "feedback": "",
    "enrolledId": "685aa4a8c85f37c52555e223",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2727d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이정우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/52"
      }
    ],
    "feedback": "",
    "enrolledId": "685e5710c85f37c5258cd6b6",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b2727f",
    "result": "",
    "isBestPractice": false,
    "name": "차현빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "68678936c85f37c52506d1fc",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27281",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김유현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/22"
      }
    ],
    "feedback": "",
    "enrolledId": "685f3badc85f37c5250804fa",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27283",
    "result": "PASS",
    "isBestPractice": true,
    "name": "권지호",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/3"
      }
    ],
    "feedback": "",
    "enrolledId": "686387e2c85f37c52555fc22",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b27285",
    "result": "PASS",
    "isBestPractice": true,
    "name": "윤영서",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b27163",
          "name": "STEP05 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.772Z",
          "updatedAt": "2025-07-19T13:55:16.318Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/13"
      }
    ],
    "feedback": "",
    "enrolledId": "68623210c85f37c525712305",
    "assignmentId": "687b184281fa7a3b62b27177",
    "assignmentName": "STEP05 JS & React 딥다이브 기본과제"
  },
  {
    "_id": "687b184381fa7a3b62b272c2",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이정우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/52"
      }
    ],
    "feedback": "안녕하세요 정우님~\n3주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n다만 과제 PR에는 내용이 많이 없어서 아쉽네요 ㅠㅠ\n많이 바쁘셔서 그런거겠죠!?\n저도 백엔드 과제 불합격이라 어떤 심정인지 알 것 같아요.\n그래도 다음에는 잘 작성해주세요~! 화이팅입니다!",
    "enrolledId": "685e5710c85f37c5258cd6b6",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272c4",
    "result": "PASS",
    "isBestPractice": false,
    "name": "현지수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/42"
      }
    ],
    "feedback": "안녕하세요 지수, 수고하셨습니다! 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 이론을 넘어 몸으로 깊이 이해하는 것이 목표였습니다.\n\n코드 스타일이 정말로 최소한의 코드 구현만 하면서 간결하게 작성하려고 하는 스타일이 눈에 띄는데 참 잘했습니다! 가능하다면 가독성이 확보되는 수준에서 코드의 양은 줄일 수 있는게 좋죠. 계속 그러한 코드 스타일을 유지해주길 바래요!\n\n렌더링, 메모제이션, 컨텍스트와 상태관리등은 React의 핵심 개념이며 해당 개념들을 실제로 구현을 해보니 왜 메모제이션을 필요할 때에만 하라고 하고 만능이 아닌 것인지, 코드를 해부하고 원리를 이해하는 것을 통해서 개발 과정과 선택 과정이 더 선명해지는 계기가 되었기를 바랍니다.\n\n---\n\nQ) deepEquals 순환 참조 처리의 필요성과 구현 방법\n\n=> React 생태계에서 순환 참조는 실제로 그리 흔하지 않습니다. React가 아무래도 객체를 데이터로만 다루는 함수형 프로그래밍을 지향하다보니 props나 state는 대부분 직렬화 가능한 데이터인 경우가 많죠. \n\n성능 측면에서는 WeakSet 연산 자체는 빠르지만 메모리 오버헤드가 있습니다. 일반적인 애플리케이션에서는 현재 구현으로 충분하고, 순환 참조가 예상되는 특수한 경우에만 추가하는 것이 실용적이에요.\n\n언제나 성능과 메모리, 간결함과 복잡함의 트레이드 오프는 언제나 개발에서의 딜레마라 생각합니다. 대개는 최대한 간결한 구조를 유지하고자 하다가 문제가 제보(?)되다보면 점점 복잡해지거나 개선하는 식으로 만들어지곤 합니다.\n\n\nQ) useAutoCallback의 개발자 경험과 실무 활용도\n\n=> 해당 방식은 함수를 자식 컴포넌트의 props으로 넘길때에는 useCallback등으로 참조로 만들지 않으면 언제나 새로운 함수가 전달이 되므로 memo가 되지 않는 문제를 해결하는데 도움을 줍니다. 함수는 useMemo와 달리 비싼 로직이 아니니까요. 의존성 배열을 명시하지 않고 언제나 최신 함수를 전달하지만 참조는 유지하므로써 자식 컴포넌트로 props도 메모제이션이 가능하도록 하는 편의성 유틸리티 함수죠.\n\n=> 편의냐? 아니면 명확성이냐? 도 개발자간의 취향이 갈리는 부분입니다. 물론 여기서 useAutoCallback의 경우 공식적인 hook이 아니라 학습을 위한 그리고 커뮤니티에서 만들어진 방식이고, useCallback은 명시적이고 공식적인 방식이다보니 아무래도 useCallback을 사용하겠죠? 대부분은 많이 사용하는 것을 사용하는 것을 선호하니까요.\n\n이러한 개발자적인 고민들 철학에 대한 나의 취향 그리고 근거나 확신등을 고민을 통해서 만들어가는 것도 좋은 경험이 될거에요. 화이팅입니다!",
    "enrolledId": "68542193851b4a7da8a3a270",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272c6",
    "result": "PASS",
    "isBestPractice": true,
    "name": "여진석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/29"
      }
    ],
    "feedback": "안녕하세요 진석님! 굉장히 깊이있는 고찰을 해주셨네요 ㅎㅎ 재밌게 잘 읽었어요! 고생하셨습니다.\n\n---\n\n> \"효율적으로 앱을 관리하고 있다면 context hook도 좋은 상태관리 수단\"이라는 관점에 대해서 어떻게 생각하시나요?\n\n개인적으로 관리해야 하는 상태가 많아질수록 context를 통해 상태를 관리하는게 굉장히 어렵다고 생각해요. 무엇보다... 성능 최적화를 하는게 너무 어렵답니다 ㅋㅋ (해본사람의 이야기..)\n\n> 저번 Q&A 시간에는 전부다 memo를 사용한다고 하셨는데, tool쪽이라 렌더링에 민감한 부분이 영향이 크실까요? 그냥 단순한 웹, 앱 등에서도 전부다 memo하는게 효율적일까요?\n\n렌더링에 민감해서 했다기보단... 언제 쓰는게 좋을지에 대한 판단을 매번 하는게 귀찮고 한 번 memo를 시작하면 그 여파가 계속 커져서 (메모로 인한 메모로인한 메모로인한 메모로인한, .... 메모) 이럴꺼면 그냥 다써~~ 라고 팀 내에서 합의를 했답니다 ㅎㅎ\n커뮤니케이션 비용 때문인거죠\n\n> 코치님이 선호하시는 상태관리는 어떤 것인가요?\n\n저는 간단한 상태관리는 아마 zustand 사용할 것 같고 (사실 실무에서 제대로 사용해본적이 없어요), 복잡한 상태를 다룰 때에는 redux를 사용할 것 같습니다.\nredux의 경우 action을 thunk로 쪼개서 조합할 수 있다보니 다루는 상태가 복잡할 때 편의성을 많이 제공해줘요 ㅎㅎ\nzustand도 그런게 잇는지 모르겠네..\n\n> 저는 서버상태관리 라이브러리들이 생겨나면서 flux 패턴으로 관리하는 패턴자체의 필요성이 많이 줄었다고 생각하여습니다. 그러다보니 jotai를 선호하게 되었는데, 이런 관점에서 코치님이 바라보시는 생각이 궁금합니다.\n\n앞선 내용과 이어지는 부분인데요, flux가 중요한건 아니라고 생각해요. 대부분의 경우에는 아마 jotai만 사용해도 충분할 것 같네요 ㅎㅎ\n제가 zustand나 redux를 선호하는 이유는 react에 종속적이지 않은 방식으로 만들 수 있기 때문인데요, jotai는 react와 강결합(?) 되는 부분이 없지않아 있어서... 그게 조금 거슬렸어요. 이건 선호도 차이도 있고 팀의 인식 차이도 있기 때문에 중요한 부분은 아니라고 생각합니다!\n\n> 제가 분석한 zustand(useSyncExternalStore) vs jotai(useEffect) 방식의 트레이드오프가 정확한지 확인하고 싶습니다.\n\n흠.. 일단 동시성에 대한 부분이 사용성에 얼마나 큰 영향을 주는가를 따져봤을 때... 아마 미미하지 않나? 라고 생각해요. 아마 저는 \"사용성\"보단 \"편의성\"을 더 중요하게 생각할 것 같아요. 개발자가 사용하기에 얼마나 더 편리한가! 라고 해야하나 ㅋㅋ\n\n가령, 어플리케이션을 만들 때 사실 네이티브로 만드는게 제일 성능도 좋고 매끄러워요. 그런데 웹뷰를 많이 사용하는 이유는 생산성과 편의성 때문이 크다고 생각합니다.\n\n빠르게 서비스를 만들어가야 하는 부분도 고려 대상이라는거죠.\n그래서 저는 \"우리 팀이 익숙한 것\"도 고려해야 한다고 생각해요. 팀원 대부분이 zustand가 익숙하다면 저는 zustand가 좋은 대안이라고 생각하고, jotai가 익숙하다면 jotai가 좋은 대안이겠죠!?\n\n혹은 개발자의 편의성을 확보해주는 여러가지 도구가 있는지 살펴보는 과정도 필요할 것 같아요.",
    "enrolledId": "685aa4a8c85f37c52555e223",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272c8",
    "result": "",
    "isBestPractice": false,
    "name": "차현빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "68678936c85f37c52506d1fc",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272ca",
    "result": "PASS",
    "isBestPractice": true,
    "name": "권지호",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/3"
      }
    ],
    "feedback": "안녕하세요 지호, 수고하셨습니다! 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 이론을 넘어 몸으로 깊이 이해하는 것이 목표였습니다.\n\n취업 준비와 과제를 병행하는거 쉽지 않을텐데 적절한 몰입을 위한 스위칭을 고민하다니 대단해요. 선택과 집중은 중요하지만 그렇다고 하나에만 몰빵(?)하는건 올바른 집중이 아니니까요. 몰입에는 정해진 시간이 있으니 적절히 스위칭을 하는건 도움이 되죠. \n\n또한 \"AI 없이 직접 고민하고 실험해보는\" 접근 방식을 택하신 점이 정말 인상적입니다. 회고에서 적어둔 useAutoCallback과 useEffect등을 직접 고민해본 부분은 다른 항해친구들에게도 많은 인사이트가 될거에요!\n\ncompareObjectProperties를 따로 만들어서 equals 함수들의 중복을 제거하는 부분이나 memo 구조를 ref로 깔끔하게 구현한 부분도 좋았습니다.\n\n\"모든 값에 useMemo를 쓸까?\"라는 질문은 React를 하면서 내내 고민을 하게 될 부분인테 이번 기회에 충분히 고민을 해보게 된 것 같아 기쁘네요. 수고 많았습니다!\n\n---\n\nQ) useMemo를 사용하다보니 관련된 다른 함수들의 참조도 함께 메모이제이션하게 되어 결국 모든 함수들을 메모이제이션하게 되었는데, 이게 맞나? 라는 생각이 들었습니다.\nuseState의 초기화 함수를 사용하는 방식이 그런 면에서는 조금 더 직관적이고 간단한(?) 방법이 될수도 있을 것 같습니다. 이 부분에 대해서 코치님의 의견은 어떠신가요?!\n=> useMemo를 하나 쓰게 되면 다 써야 되는게 맞죠. 발제시간에도 말씀드렸지만 그래서 다쓰자파와 격리하고 컴포넌트 수준에서 메모하자로 나눠지곤 합니다. 아니면 상태관리 도구에서는 자체 memo기능을 제공하기고 하구요. 지금 과제의 경우에는 지금 지호가 한 걱처럼 useMemo을 다쓰는 방식을 해야겠네요.\n\nQ) 저는 리액트에서 적절한 추상화의 경계를 나누는 것(?)이 어렵게 느껴지는데, \"추상화 레벨\"이라는 것을 잘 나누는 기준이 있을까요?\n=> 추상화는 어렵지만 사람이 말할때에는 자연스럽게 추상화를 하고 있습니다. 기능이나 기획을 논할때 \"토스트 팝업을 띄워봐\", \"이럴때 토스트을 3초간 보여주세요.\" 라는 식으로 말하지.  \"토스트 팝업의 값을 true로 바꿔주세요.\" 라고 말하진 않죠. <토스트 팝업 기능> 이라고 말할 수 있기에 추상화가 단위가 되고 <일정 편집>, <일정 삭제> 단위의 추상화와 <일정 관리>의 추상화처럼 이미 반복적으로 표현을 하는 이름단위에서 추상화를 확인할 수 있습니다.\n\n위 코드의 useToastActions 훅의 추상화 레벨은 적절하게 나누어져 있다고 볼 수 있을까요?\n\n=> 그렇죠. 이렇게 생각해주세요. 기획에서 사용하는 용어대로 노출이 되어 있는가?  메시지를, 보이고 하고, 사라지게 하는 것은 반복적으로 표현하면서 그밖에는 별도로 표현하는게 없으니 추상화레벨은 적절합니다.\n\n=> 가령 조금 더 오랫동안 보여주세요. 라던가. 강조해서 빨간색으로 보여주세요라는 요구사항이 왔다면 이부분도 추상화의 영역에 포함을 시켜야겠죠?\n\nQ) 실제로 비즈니스로직과 함께 코드를 구현하다 보면 단일책임을 갖도록 하는것이 어렵다고 생각하는데, 책임을 나누는 눈을 기르고 싶다면 리팩토링이나 코드를 작성할 때 어떤 것을 중심적으로 생각하는게 좋을지 궁금합니다!\n\n=> 결국 정리하면 요구사항, 즉 기획의 언어 중심이라고 생각해주세요. 그게 어렵다면 내가 다른 사람에게 내가 구현한 것들을 비개발자들에게 어떻게 말하고 설명하고 있는지 한번 생각해보세요. 추상화는 인간의 기본적인 습성에서 비록된 개념이기에 (인간은 원래 복잡하고 구체적인 걸 싫어합니다.) 비개발자들이 말하는 곳에서 힌트를 찾을 수 있답니다.\n\n수고하셨습니다. 클린코드 챕터도 화이팅입니다!\n",
    "enrolledId": "686387e2c85f37c52555fc22",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272cc",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김유현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/22"
      }
    ],
    "feedback": "고생하셨습니다 유현님! 이번 주 과제도 잘 해주셨네요 ㅎㅎ\n특히 블로그에 작성해주신 내용도 깔끔하게 필요한 내용 정리해주셔서 저도 잘 정리 할 수 있었습니다 :+1\n실제 구현되어 있는 코드들을 참고하고 내 구현으로 만들어보려고 하셨던 부분도 너무 좋은 것 같아요.\n\n질문 주신 부분도 이어서 살펴보면요. 말씀해주신것을 보니 이미 정답을 알고 계신것 같은데요. 지금의 구현처럼(또는, 리덕스와 비슷한 구조처럼 액션과 상태를 명확하게 분리된 상황이라면) 미들웨어 시스템 개념을 차용해서 횡단 관심사를 처리할 수 있도록 구현하는 방식이나, 액션과 상태를 한 곳에서 관리하는 형태로 구현하는 방식 이렇게 있을 것 같아요. 근데 후자는 관심사 분리 측면에서 적절하지 않은 것 같고요! 비동기 로직을 다루는데 있어서 참고할만한 부분은 리덕스의 createAsyncThunk나 RTK Query내용을 살펴보는 것 같은데 이 부분에 대해서도 구현을 살펴보면 도움이 되지 않을까..! 싶습니다. (제가 질문을 잘 이해한거겠죠?)\n\n다음주도 지금처럼 꾸준히 학습 이어나가시길 바랍니다! 화이팅입니다~~",
    "enrolledId": "685f3badc85f37c5250804fa",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272ce",
    "result": "PASS",
    "isBestPractice": true,
    "name": "윤영서",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/13"
      }
    ],
    "feedback": "더 했으면 좋겠다고 하니 정말 더 하셨네요.\n영서님 고생하셨습니다.\n따로 과제나 회고에 대해서는 피드백을 드릴건 정말 잘 작성해주셔서 없을것 같고 다른 분들도 이걸 함께 나눠봤으면 좋겠네요.\n작성된 하나하나의 주제들이 생각해보면 크고 알차기 때문에 발표나 글로..해서 하면 참 도움이 될 것 같고 좋겠네여\n\n테스트 관련해서 답변해보면 노드 환경에서 할 수 있는 최대한의 시나리오 테스트 였던 것 같아요. 이 시스템 자체를 구현하는 관점에서 명확하게 하면 좋은 테스트이고 유의미했다고 생각해요. 다만 알겠지만, 해당 동작은 브라우저 구현에 달려있는 부분이 어느정도 있고 그게 잘 되었다는 가정하에 내용을 검증하는 것이기 때문에 지금 이벤트를 구현하는데 있어 복잡도가 높다보니 운영하는데 있어 그정도 효용이 있나~ 정도만 고민해보면 되지 않을까! (실제 모듈입장에서는 검증하는 범위가 같을 수도 있을 것 같아서요)\n\nuseEffect 구현 관련해서는 제가 알기로도 effect queue를 리액트에서 별도로 관리하기 때문에 큐를 별도로 쓰거나 하긴 해야할 것 같은데요. 아니면 setTimeout이나 Promise로 비슷...하게는 할 수 있을 것 같은데 직접 구현을 해봐야겠네요.\n사실 알다시피 테스트는 이 과제를 위한 테스트이니 저도 추측이지만 waitFor를 사용해서 기다리는 게 어느정도 필요하지 않을까 싶어요. 저도 궁금한데 요거 한번 해보고 알려주실수 있나요? ㅎㅎㅎㅎ\n  \n고생하셨고 회고에서 남긴것처럼 코테전형이나 면접 일정이 남아있다고 하셨는데 준비 잘 하시고 우선순위 잘 나눠서 시간분배 잘 하고 과제 하셨으면 좋겠습니다. ",
    "enrolledId": "68623210c85f37c525712305",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272d0",
    "result": "",
    "isBestPractice": false,
    "name": "정명훈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "6697caec1cfd0ff2d737c0f6",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272d2",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김연수",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/58"
      }
    ],
    "feedback": "안녕하세요 연수님!\n이번에는 아예 진행이 되질 않았군요 ㅠㅠ\n챕터 2부터는 이제 완전히 다른 내용이 진행되기 때문에 다시 시작하는 마음으로 진행해주셔도 좋을 것 같아요! 화이팅입니다!",
    "enrolledId": "6792d9a67ea42ce47df4e27e",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272d4",
    "result": "",
    "isBestPractice": false,
    "name": "박의근",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "671993df7e7008df3ebb7f4e",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272d6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김지혜",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/48"
      }
    ],
    "feedback": "안녕하세요 지혜님! 3주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다.\n\n> \"참조는 고정하되 최신 값은 참조\"라는 까다로운 요구사항을 useRef + useCallback 조합으로 해결한 부분이 가장 만족스럽습니다. 처음에는 타입 때문에 고생했지만, 제네릭과 unknown[], as T 타입 단언을 사용해서 TypeScript의 복잡한 타입 시스템을 해결할 수 있었습니다.\n\nref와 callback 등을 같이 사용하는 과정이 지혜님께 큰 챌린지였군요..! 그럼에도 불구하고 잘 학습하고 계셔서 다행이네요 ㅎㅎ\n\n> E2E 테스트 통과 과정에서 하나씩 메모이제이션을 추가하다 보니 이렇게 됐는데, useMemo를 이렇게 많이 써도 되는 건지 잘 모르겠습니다. 특히 { message: state.message, type: state.type } 같은 경우도 useMemo로 감싸야 하는 건지, 그리고 이런 식으로 계속 메모이제이션을 추가하는 게 올바른 방법인지 판단이 서지 않습니다. 더 나은 구조가 있다면 개선하고 싶습니다.\n\n지금은 state를 메모이제이션 하지 않아도 무방해보여요. 잘 보면 state.message와 state.type 중 하나만 변화하는 경우가 없답니다. 둘의 변화가 똑같이 발생하는거죠.\n\n메모이제이션을 하지 않아도 어차피 똑같은 메모리를 가르키게 된달까..? 그렇습니다.\n그래서 다만 state를 2개 이상 사용하여 조합하는 값이 있을 때에는 useMemo를 사용하면 좋답니다!\n\n> ToastProvider에서 useMemo 과도한 사용 : 해당 페이지에서 useMemo를 5번 사용하고 있는데 과도하게 사용되고 있다고 생각하지만 다른 방법을 모르겠습니다. 어찌저찌 요구사항과 테스트 통과를 위해 구현해내긴 했으나 더 좋은 방법이 있을지 궁금합니다.\n\n솔루션 코드도 살펴보시면 5번 정도 사용하고 있답니다 ㅎㅎ 저는 지금이 최선의 모습이라고 생각해요!\n다만 state를 아예 contextValue로 사용하고 있기 때문에 메모이제이션을 해주지 않아도 무방해보이네요..!\n\n> useAutoCallback 패턴이 올바른지 : useRef와 useCallback을 조합해서 만든 건데, 이런 패턴이 실제로 쓰이는 방법인지 궁금합니다. 다른 더 좋은 방법이 있을까요?\n\n실제로 쓰일 수 있답니다 ㅎㅎ\n이를 대체할 수 잇는 더 좋은 방법? 에 대해 질문을 주신거라면... 아직은 잘 모르겠어요.\n\n어떤 상황에 사용할 수 있는지는 제가 이야기 드리기보단 지혜님께서 추후에 필요할 때 \"이런게 있구나!?\" 라고 떠올리고 사용할 수 있는 순간이 있으리라 생각해요.\n",
    "enrolledId": "679ce583ada1879bb5adddf0",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272d8",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한아름",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/55"
      }
    ],
    "feedback": "안녕하세요 아름! 수고하셨습니다! 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크의 내부 동작 원리를 깊이 이해하고, 상태 관리와 최적화 메커니즘을 체득하는 것이 목표였습니다.\n\n\"비밀을 파헤친 느낌\" ㅋ 재밌네요. 맞아요! 개발에서 깊이를 파내려가는 공부라는 이런 방식이죠. React 훅의 내부 구조를 직접 탐구하며 얻은 통찰이 정말 값진 경험이 되었기를 바랍니다. 특히 직접 구현한 훅들이 서로 연결되어 복잡하면서도 깔끔한 구조를 만들어내는 과정을 즐기신 점이 멋져요\n\n코드 리뷰에서 언급된 타입 가드류 유틸리티 함수를 별개로 만들어 두는 방식은 좋은 방식이죠. 타입 가드를 별도 함수로 분리하면 가독성과 재사용성이 향상됩니다. 참고해두시면 좋을 것에요.\n\nconst isObject = (target: unknown): target is Record<string, unknown> => {\n  return target !== null && typeof target === \"object\" && !Array.isArray(target);\n};\n\n---\n\nQ) useCallback vs useAutoCallback 사용 시나리오\n\nuseCallback이 React가 기본적으로 제공하는 훅이며 useAutoCallback은 사용자(커뮤니티)가 만들어 낸 custom hook입니다. 공식적인거라기 보다는 편의를 제공하기 위해서 만들어 낸 거죠.\n\n엄밀하게는 useCallback에 의존성 배열을 두는게 맞습니다. 그러나 이런 방식은 휴먼에러가 발생하기 쉽죠. 그래서 메모가 되면 안될때 메모가 되어버리면 오동작을 하는데 이걸 찾아내기가 상당히 어렵습니다.\n\nuseCallback을 안쓰면 항상 함수가 새롭게 만들어지므로 이런 문제가 해결이 되죠. 그렇지만 이 함수를 자식 컴포넌트의 props로 전달하면 자식 컴포넌트의 memo가 전혀 동작하지 않습니다. 왜냐하면 늘 새로운 함수를 만들어 낼테니까요. \n\nuseAutoCallback은 의존성 배열을 통한 엄밀한 비교는 하지 말고 항상 최신의 값을 만들지만 자식 컴포넌트에서 React.memo를 쓰고 있을때 메모가 가능하도록 만들어주기 위해 만든 편의성 유틸리티 함수입니다.\n\n정리하자면 해당 함수가 자식 컴포넌트의 props로 전달되고 있는 경우, 엄밀한 의존성 관리의 복잡함을 사용하지 않는 대신 자식 컴포넌트의 memo는 가능하도록 하기 위한 편의성 hook이라고 생각해주세요.\n\nQ) shallowEquals와 deepEquals 구현 관련\n\n=> 제출하신 구현 방식도 좋지만, 재귀적 접근을 통해 더 견고하게 만들 수 있습니다:\n```javascript\nconst baseEquals = (a: unknown, b: unknown, equalsFn: typeof Object.is) => {\n  if (Object.is(a, b)) return true;\n  \n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && \n           a.every((val, idx) => equalsFn(val, b[idx]));\n  }\n  \n  if (isObject(a) && isObject(b)) {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    return aKeys.length === bKeys.length && \n           aKeys.every(key => equalsFn(a[key], b[key]));\n  }\n  \n  return false;\n};\n\nexport const shallowEquals = (a: unknown, b: unknown) => \n  baseEquals(a, b, Object.is);\n\nexport const deepEquals = (a: unknown, b: unknown) => \n  baseEquals(a, b, deepEquals); // 재귀적으로 자기 자신 호출\n```\n\n---\n\n수고하셨습니다. React의 내부 동작을 직접 구현해보며 얻은 이번 경험이 앞으로의 개발 여정에서 든든한 기초가 되기를 바랍니다. 클린코드 챕터에서도 이런 깊이 있는 탐구 정신을 계속 이어가시길 응원합니다! 화이팅입니다! :)",
    "enrolledId": "68205c830a72040b80c72cf1",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272da",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김소희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/41"
      }
    ],
    "feedback": "안녕하세요 소희님! 3주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!!\n\n> 자랑은 아니고 .. 저 얘 때문에 너무 힘들었어요. 제가 너무너무 어렵고 복잡하게 생각해서 혼자 둘레길 한바퀴 돌고 돌아온 것 같ㅅ브니다..\n\nㅋㅋㅋㅋㅋ 제가 의도한 학습과정(?)을 제대로 경험해주셨네요. 뿌듯(?) 합니다 ㅎㅎ\n\n> 실 과제 작업 기간인 약 4일 간, 회사 업무에서 커스텀 훅을 6개 정도 생성해내었습니다. 관심사 분리가 안 된다거나 한 컴포넌트 내 스크립트가 너무 무겁다거나 다시 보니 한 눈에 안 들어오는 코드라거나 .. 다 냅다 빼고 있어요! 리팩토링 할 때도 기능 구현 관점에서만 생각하지 않고 렌더링 트리거에 대해서도 점검하는 습관이 생겼습니다 아이 조아\n\n오옹! 너무 잘 해주고 있네요!! 저희 팀은 custom hook이 거의... 1000개 정도 되는 것 같아요 ㅋㅋ\n저는 컴포넌트는 오직 \"값\"에 관심이 있고, 값을 만들어내는 과정은 훅으로 분리해야 한다고 생각해요! 이러면 테스트 하기도 수월해지고!?\n\n---\n\n과제 자체보다 소희님께서 실무적으로 계속 응용하고 있다는 점이 인상깊네요 ㅎㅎ 고생하셨습니다!!\n앞으로도 화이팅입니다!!",
    "enrolledId": "67cae59e3255d88e88383b13",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272dc",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/35"
      }
    ],
    "feedback": "수현님 고생하셨습니다!\n필요한 내용은 전부 잘 작성해주셨고, 부족하다고 생각이 드시는 부분은 꼭 말씀해주신것처럼 본인의 것으로 만들어보시면 좋겠네요 ㅎㅎ\n회고도 잘 작성해주셨고, 따라가면서 읽어보니 실제 어떤 고민들을 하셨는지 직접적으로 잘 이해할 수 있었습니다.\n\n이어서 남겨주신 질문 답변 답변해보면요!\n\n> show, hide 함수 useRef관련\n\n우선 팀원들이 알려주신 방식으로 변경하는게 좀 더 추적이 잘 되고 관리가 잘 되는 방식입니다 ㅎㅎ 절대! 안변하고 명시적으로 관리할 수 있다면 지금 useRef내에서 사용하는것도 방법이겠지만, 함께 사용되는 dispatch자체에 대한 참조가 변경되는 경우 문제가 충분히 발생할 여지가 있어보여요.\nuseRef에는 일반적으로 함수를 저장하는것은 권장되지 않는 패턴인 것 같아요!\n\n> 훅 사용 \n\n훅은 말\b이해하셨던것처럼 리액트 라이프사이클을 타는 컴포넌트가 아닌 다른 것을 반환하는 함수 자체로 바라봐보면 좋을 것 같아요. 이를 통해서 리액트 컴포넌트 내부에서만 할 수 있었던 여러 부수효과를 다룬다거나 리액트 라이프 사이클 안에서 동작하는 여러 기능들을 활용할 수 있게 되잖아요. 이를 통해서 반복되는 여러 상태들을 분리해서 하나로 모아 하나의 관심사를 분리해 재사용성을 높일수도 있고 코드의 가독성을 높일수도 있겠죠. 추가로 비즈니스 로직들이 여러곳에서 사용되고 있을 때 이런 부분들을 한 곳에서 추상화 해 가독성을 높이고 응집성을 높일수 있겠죠. \n그리고 성능 관점에서도 리렌더링이나 성능적으로 병목이 발생하는 지점들을 한 곳에 모아놓고 특별 관리를 할 수 있고 이런 부분들은 결국 테스트의 용이성으로 이어져서 관리하기 편한 프로젝트를 만들어 주게 되는 것 같아요.\n\n추가로 훅을 통해 DOM이나 BOM을 래핑해 유틸성 기능들을 제공하는 여러 저장소도 있는데 함께 찾아 살펴보는 것도 좋을 것 같구요!\n\n고생하셨고 다음 주도 화이팅이에요~~",
    "enrolledId": "681dd962e7dc2519a9b4585f",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272de",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최용훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/11"
      }
    ],
    "feedback": "용훈님 수고 많으셨습니다!\nMR 회고 내용이 없네욥~\n역랑을 궁극적으로 발전시키는데에는 동작하는 코드도 중요하지만 코드에대한 생각 정리와 과정에 대한 복기인 것 같습니다!\n다음에는 MR회고 내용도 같이 준비해주시면 좋을 것 같습니다~",
    "enrolledId": "682334f50a72040b80ba7b91",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272e0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "주산들",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/33"
      }
    ],
    "feedback": "안녕하세요 산들! 수고 많으셨습니다. 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 이론을 넘어 몸으로 깊이 이해하는 것이 목표였습니다.\n\n몇몇 함수들은 AI를 사용하지 않고 직접 고민하며 구현해본 과정 칭찬합니다. 스스로 도전해서 내가 이정도까지 할 수 있다는 확신을 가지는 경험을 쌓아가는건 개발자로써 정말 중요한 경험이죠. 이렇게 세부 구현을 하게 되면서 React라는 도구가 흑마법이 아니라 React도 그저 JavaScript로 구현된 논리적인 시스템이라는 것을 체감하면서 원리가 이해가 되었을거라 생각해요.\n\nContext를 이용한 개념도 이번 기회에 잘 이해하게 된것 같아서 좋네요. 상태관리 라이브러리들도 이렇게 상태와 액션을 분리해서 다루고 있죠. 이런 개념적 분리가 아키텍처를 더 선명하게 바라볼 수 있게 해줄거에요.\n\n---\n\nQ) 타입 단언(as T) 사용에 대해\n\n=> 가급적 사용하지 않도록 하는 것이 제일 좋지만 타입스크립트에서 이러한 문법을 만들었다는 건 다 필요한 부분은 있다라는 것이죠. 사람마다 취향은 다른데 저는 최대한 타입 추론을 통해서 가능하도록 만들고자 하는 편입니다. \n\n그렇지만 사용자에게 제공하는 라이브러리를 만들 때에는 내부의 복잡한 구조로 인해서 타입이 굉장히 복잡해지는 경우가 있는데 이럴때 타입 단업을 통해서 사용자에게 전달해지는 라이브러리는 깔끔하게 정리할수가 있죠.\n\nProxy라던가 사실 꼭 T 타입이 아닐수도 있는 타입들을 단언을 통해서 해당 타입을 강제할수도 있구요.\n\n가급적 타입추론을 통해서 해결하고자 하되 내가 의도가 있어서 as T라고 써야 할때 쓰는 건 좋다고 생각합니다. 반면 가장 추상화 바깥의 영역에서 단지 type 에러를 수정하기 위해서 사용하는건 지양해야 곘죠.\n\n\nQ) ToastProvider 개선 방향\n\n=> 현재 구현도 충분히 깔끔합니다! Context 분리와 `useMemo` 활용이 잘 되어있어요. 더 개선한다면 로직을 Custom Hook으로 추출해볼 수 있겠네요. 예를 들어 `useToastLogic` 같은 훅을 만들어 debounce 로직과 상태 관리를 캡슐화하면 Provider 컴포넌트가 더 간결해질 거예요. 하지만 현재 수준에서도 충분히 실무에서 사용할 만한 품질입니다.\n\n---\n\n이번 과제를 통해 \"기초가 중요하다\"는 말의 진정한 의미를 체감하셨다니 정말 기쁩니다. useState로 useRef를 구현할 수 있다는 발견, useMemo가 의존성을 직접 비교한다는 깨달음 - 이런 \"아하!\" 모먼트들이 쌓여서 깊이 있는 개발자로 성장하게 됩니다.\n\nReact 레포지토리를 뜯어보고 싶다는 열망도 멋집니다! 그런 호기심이 계속된다면 머지않아 오픈소스에 기여하는 개발자가 되실 수도 있을 거예요.\n\n수고하셨습니다. 클린코드 챕터에서도 이런 깊이 있는 탐구를 계속 이어가시길 바랍니다. 화이팅입니다! :)",
    "enrolledId": "6821d2570a72040b80c25f8c",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272e2",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김민지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/18"
      }
    ],
    "feedback": "안녕하세요 민지! 이번 1-3 과제 정말 수고하셨습니다. AI 의존도를 줄이고 \"AI를 튜터처럼 쓰기\"라는 방식으로 과제를 진행했군요! 아주 잘했습니다. 코드를 만들어가는 시행착오를 겪어가며 이해하기를 원했는데 이렇게 직접 구현해보신 과정에서 분명 많은 것을 체득하셨을 거예요.\n\n이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 깊이 이해하는 것이 목표였습니다. useState와 useRef가 훅의 근간을 이룬다는 깨달음, 그리고 Context를 상태와 액션으로 분리하여 불필요한 리렌더링을 방지하는 패턴을 경험해보신 점이 특히 좋았습니다. 이런 구조적 사고는 실무에서도 정말 중요한 인사이트예요.\n\nshallowEquals에서 Object.keys를 sort는 비용이 비쌉니다. 직접 키를 순회하며 비교하는 것이 성능상 더 유리해요. deepEquals에서 JSON.stringify를 사용하신 아이디어도 좋지만 이것도 비싼 동작입니다. 운서가 알려준 재귀적 비교가 성능면에서 더 낫습니다. 이러한 시행착오 또한 경험으로 알고나야 정말 내것이 되므로 너무 좋은 시도였다라고 생각해요!\n\n---\n\nQ) 이번에 useCallback와 useAutoCallback에 대해서 구현하면서 생각이 든건데 useCallback은 의존성 배열에서 따라서 새로 참조한다고 이번에 알게 되었는데, 그냥 드는 생각은 의존성 배열 대신에 매개변수로 받아서 useAutoCallback으로 하먄 될 꺼 같은데 왜 useCallback가 생겨났는지에 대한 이해가 잘 되지 않더라구요. 이렇게 함으로써 장점이 있나요? 성능 최적화의 부분으로써는 최악? 이라는 생각이 드는데.. 의존성 배열에 값이 바뀌면 다시 계속 새로 참조해야 하잖아요.\n\n=> 우선 useCallback은 공식적으로 React에서 제공하는 것이고 useAutoCallback은 우리가 한번 만들어본 Custom Hook입니다. \n\nReact는 컴포넌트가 리렌더를 하면 컴포넌트 내부의 모든 useState와 계산 그리고 handler를 새로 만들게 되어 있는데, React에서 최적화라는 건 새로 만들지 않아도 되는 경우에는 기존에 있는 것을 활용하는 방식이죠.\n\n그래서 useCallback와 useMemo등에 의존성 배열을 명시해서 이 값들이 변하지 않으면 새로 만들지 않아도 되니 기존의 값을 재사용해서 최적화 해! 라는 식으로 최적화가 이뤄지게 됩니다.\n\n=> 함수를 새로 생성하는 건 useMemo와 달리 복잡한 계산이 필요없으므로 딱히 비싼 동작이 아닙니다. 사실 useCallback가 더 큰 의미가 생기는 건 이 함수를 자식컴포넌트로 넘길때이죠. 대개 컴포넌트는 props가 변하면 리렌더링이 발생하는데 매번 새로 생성을 하면 최적화가 되지 않겠죠. 그래서 useCallback을 사용하면 기존 값을 그대로 쓸수가 있고, 이를 통해 컴포넌트 최적화가 이뤄집니다.\n\n=> useCallback의 자체적인 최적화 비용은 비싸지 않고 의존성 배열을 입력하는건 귀찮은데다가 실수할 여지도 많으니 항상 새롭게 생성은 하되 기존의 참조값는 전달하도록 해서 자식 컴포넌트에 props로 전달해도 최적화를 할 수 있도록 만든데 useAutoCallback입니다. 이건 공식적인 방식이라기 보다는 개발자들이 생각해보면 일종의 편의함수에요. useCallback보다 덜 엄격한 최적화를 하는대신 편리를 택하는 거죠.\n\n나중에 스스로 다른 사람에게 이걸 강의한다 생각하고 설명하듯이 말해보는 연습을 해보세요. 그러면 왜 그런지 이해하는데 더 도움이 될거에요.\n\n\nQ) deepEquals에서 flat과 JSON.stringify 사용에 대해\n\n충분히 생각해볼 수 있는 접근이었다 생각합니다. 하지만 해당 방식에는 아쉽지만 몇 가지 치명적인 문제들이 있어요. \n\n우선 비용이 비쌉니다. 가령 {a:1,b:2} {a:3,b:1} 이라는 값을 비교할때 a가 다른게 확인이 되면 b는 안해봐도 되는데 둘다 JSON.stringufy를 안해도 될 비교를 하기 위해 모든 내용을 다 문자로 만들어야 합니다. 큰 객체라면 더욱 더 비효율이 되겠죠.\n\n그리고 JSON.stringify는 객체의 키 순서에 영향을 받을 수 있습니다. {a:1,b:2} {b:2,a:1} 은 사실 같은 객체인데 다르다라고 할 수 있거든요.\n\n그리고 const R = {a: b, self: R} 과 내부에서 재귀적인 참조를 가지고 있다면  JSON.stringify를 하지 못해요. \n\n그리고 flat를 하는 경우 [1, [2]] 와 [1,2] 를 구분하지 못하죠.\n\n간단한 경우에는 문제가 되지 않지만 이러한 core library에서는 엄밀함과 성능을 요구하는 만큼 더 정확하고 빠른 방법으로 찾아가게 되죠.\n\n좋은 경험이 되었기를 바랍니다. 다음 주차도 화이팅입니다!",
    "enrolledId": "68245a760a72040b807a5c2c",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272e4",
    "result": "PASS",
    "isBestPractice": true,
    "name": "오하늘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/24"
      }
    ],
    "feedback": "안녕하세요 하늘님! 3주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n> 실은 그간 보냈던 2주 동안에 listener에 대한 깊이 있는 이해가 부족해서 store를 구현하는 데에도 이게 왜 되지? 싶었는데, 이번 주차 과제를 통해 에라이~ 모르겠다! 하고 listener에 대해 좀 찾아봤다.\n\n블로그 포스트까지 작성해주시고! 너무 고생하셨어요~ 저도 하늘님의 글을 보면서 부족한 지식을 채워나갈 수 있었답니다!\n\n> 결론: 1, 2주차를 경험했어서, 3주차 과제가 수월할 수 있었습니다.\n\n의도했던 부분은 아니지만, 효과가 있었다니 다행이네요!! 감사합니다 ㅎㅎ\n\n> useMemo, useCallback, React.memo의 구체적인? 실무적인? 예시를 모르겠습니다. 단순한 CRUD를 주로 만져서 그런지 메모이제이션을 쓸 일이 많이 없었는데요, 코치님께서는 작업을 하시다가 메모이제이션을 써야겠다! 라는 감이 올 때가 있으신가요?\n\n무조건 이런 상황에는 써야돼! 라기 보단, 제일 좋은건 \"필요한 순간\"에 적용하는거라고 생각해요.\n그렇다면 필요한 순간이 언제일까? 에 대한 판단을 해야될텐데, 이건 비즈니스와 관련이 있답니다.\n내가 만드는 서비스의 사용성에 문제가 있을 때를 인지한 시점이라고 생각해요.\n그 이전까지는 개선을 한다고 해도 개발자 개인의 욕심이지 않을까!? 싶어요 ㅎㅎ\n\n조금 더 수치적으로 이야기해보자면, 인터렉션에 의한 1회 렌더링이 200ms 이상 소모될때!? 라고 해야하나.. 그렇습니다.\n\n이에 대한 부분은 9~10주차 과제에서 체험해볼 수 있으니 조금만 더 기다려주세요!\n혹은 \"렌더링이 많이 발생하는 상황\"을 AI에게 만들어달라고 하고, 해당 코드에 대해 직접 리팩토링을 해보는거죠!",
    "enrolledId": "682457100a72040b80776d24",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272e6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박소연",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/6"
      }
    ],
    "feedback": "안녕하세요 소연님! 과제 너무 잘 진행해주셨네요!!! 고생하셨습니다 ㅎㅎ\n특히 문제해결과정을 잘 서술해주셔서 소은님의 사고를 따라가기가 수월했어요! 감사합니다!\n\n> basic.test.tsx의 '직접 만든 memo' 테스트코드에서 호출 횟수는 체크하나, null 관련 체크는 없어서 통과되었나봐요 하핫\n\n좋은 피드백 감사합니다 ㅎㅎ 다음에는 null에 대해 체크하는 부분도 추가해놔야겠네요!!\n\n> ToastProvider 를 구현할 때, useCallback과 useAutoCallback 중에 어떤걸 쓰는게 좋을까 라는 고민이 있었습니다. useCallback만으로 충분히 최적화가 가능할것 같은데, 이때 useAutoCallback을 쓰면 좋다 라는 케이스가 어떤경우가 있을지 궁금합니다.\n\n함수가 의존해야 하는 값이 없을 때는 useCallback이 좋고, 의존해야 하는 값이 있을 때는 useAutoCallback 을 사용하는게 좋다고 생각해요!\n특히 useEffect 에서 사용해야 하는 함수이면 더더욱..!",
    "enrolledId": "6824c3ac0a72040b80cbc2a3",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272e8",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박창준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/20"
      }
    ],
    "feedback": "안녕하세요 창준! 수고했어요~ 이번 과제는 React의 내장 훅들을 직접 구현하면서 프레임워크의 내부 동작 원리를 깊이 이해하는 것이 목표였습니다. 창준님의 PR을 보면서 정말 깊은 탐구와 열정이 느껴지는 학습을 했다는게 느껴졌네요!\n\n단순히 과제를 완료하는 것을 넘 성능 측정과 최적화까지 직접 경험해본 부분 칭찬합니다 특히 무한 스크롤에서 메모이제이션 적용 전후의 렌더링 시간을 React Profiler로 측정하여 96.2ms에서 27.4ms로 약 3.5배 개선한 실험은 정말 훌륭했습니다. 개발은 이렇게 항상 직접 해보면서 내가 체험적으로 느껴보는게 참 중요한 학습이라고 생각하는데 정말 잘했습니다!\n\nuseSyncExternalStore의 등장 배경에 대한 이해도 인상적이었습니다. React의 동시성 렌더링이 상태 찢어짐 문제를 만들고, 이를 해결하기 위해 새로운 훅이 등장했다는 진화 과정을 파악하신 것은 좋은 인사이트입니다. 컴퓨터 공학은 언제나 필요에 의해 진화를 해왔기에 그 배경과 서사를 이해한다는게 개발 공부에 큰 도움이 되죠!\n\n이렇게 서사와 배경을 정확히 알게 되면 메모이제이션에 대한 본인의 철학도 취향이 아닌 확신을 통해 만들어지게 되는 것 같아요. 창준의 경우 무분별한 적용보다는 성능 이슈가 실제로 발생했을 때 신중하게 적용하는 접근을 하는 것에 대한 확신과 근거가 생겼기를 바랍니다.\n\n이번 과제를 통해 React가 제공하는 편리한 API들 뒤에 숨어있는 복잡한 문제들을 직접 체험하셨을 거예요. 특히 \"메모이제이션은 만능이 아니다\"라는 깨달음과 함께 구조적 개선의 중요성을 인식하신 점이 훌륭합니다.\n\n---\n\nQ1. 업무를 진행하실 때 메모이제이션을 다 해놓은 편인가요? 아니면 성능 이슈가 발생했을 때 적용하시나요?\n\n=> 개인적인 취향 내지는 철학에 관련된 질문이라고 이해하고 개인적인 답변을 하자면 저는 useMemo식의 메모제이션을 가급적 잘 쓰지 않으려고 합니다. 리렌더링의 이유가 달라지는 컴포넌트를 쪼개고 컴포넌트에 props를 통한 memo를 거는 방법을 선호합니다.\n\nQ2. 만약 성능이슈가 발생해서 메모이제이션을 적용하신 경험이 있다면 한번 소개해주시면 감사합니다!\n\n=> 저는 어플리케이션류는 React를 주로 쓰지 않았고 제가 해봤던 React의 경우는 주로 대시보드 형 페이지라 성능이슈가 발생해본 경험이 없네요.\n\n\nQ3. 컨텍스트와 상태관리에 대한 코치님의 생각도 궁금합니다.\n\n=> Context는 값이 변경이 되면 전체를 리렌더링을 발생시키기에 상태관리로는 부적합합니다. 자주 변하지 않을 값 그렇지만 변하면 다시 전체를 그려내야하는 값을 보관하거나 값을 격리하는데 유리하죠. 테마라던가 언어, 혹은 각종설정값이나 전역객체들이요.\n\n=> 상태관리는 말 그대로 뷰와 상태를 분리하고자는 개념에서 나온것이기에 Context로 상태관리를 구현할 수 있는 있지만 별개의 개념으로 다루는 것이 맞다고 생각을 합니다. 그리고 상태관리의 store를 격리하기 위해서는 context의 도움이 필요하겠죠.\n\n수고하셨습니다. 깊이를 탐구하는 지난 몇 주간의 Deep dive 경험이 즐거운 시간과 함께 탐구하는 방법에 대한 시야를 넓혀주는 계기가 되었기를 바래요. 앞으로 하게 될 클린코드 챕터에서도 이런 탐구 정신을 마음껏 발휘해보시기 바랍니다. 화이팅입니다!",
    "enrolledId": "6825b2810a72040b8071d8af",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272ea",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최재환",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/56"
      }
    ],
    "feedback": "수고하셧어요 재환! 이번 과제는 React의 핵심 원리를 직접 구현해보면서 프레임워크가 내부적으로 어떻게 상태를 관리하고 최적화하는지 깊이 이해하는 것이 목표였습니다. 해당 취지가 잘 느껴지는 지난 3주간이었길 바래요!\n\nuseAutoCallback 구현 과정에서의 고민들이 회고에 잘 드러난 것 같아서 좋았습니다. useLayoutEffect로 시작해서 렌더링 타이밍 문제를 발견하고, 두 개의 useRef를 활용한 해결책으로 발전시킨 과정을 세세하게 잘 풀어낸 부분 좋습니다.\n\nReact의 동시성 모드에서의 안정성 우려를 표현하셨는데, 실제로는 매우 안전한 구현입니다. React가 컴포넌트를 재시작하더라도 useRef는 동일한 객체를 유지하므로 예상치 못한 부작용은 발생하지 않을 거예요.\n\nuseRef에서는 라이브러리 사용성을 위한 복잡도 증가를 고민하셨다고 하셨는데, 분명 고민을 해볼 부분이죠. useRef의 오버로딩이 복잡해보이지만 코드로 보았을때의 복잡도나 일관성 그리고 학습곡선이 낮다면 해볼만한 선택입니다. \n\n만약 그렇지 않았다면 useRef, useRefFn, useRefWithNull 등 여러가지 함수를 만들었어야 하는데 복잡도와 간결성과 직관성등을 모두 고려해 최적을 찾아가보는게 개발자의 관점이죠. 수고하셨습니다.\n\n앞으로 클린코드 챕터에서는 이런 구조적 사고를 더욱 발전시켜 나가봅시다!! 아자 아자! 2주차도 지금과 같은 해보고 익힉다의 정신으로 화이팅입니다! ",
    "enrolledId": "68245c9b0a72040b807c704a",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272ec",
    "result": "PASS",
    "isBestPractice": false,
    "name": "임규원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/39"
      }
    ],
    "feedback": "안녕하세요 규원! 수고하셨습니다. 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 이론을 넘어 몸으로 깊이 이해하는 것이 목표였습니다.\n\nAI 의존도를 줄이고 스스로 고민하며 구현하려는 태도 칭찬합니다. 사실 한번 편리를 경험하면 스스로 안하겠다 생각하기가 쉽지 않았을텐데 수고했어요. \"설계 친구 AI\"라고 표현하신 것처럼, AI를 설계 가이드로만 활용하고 직접 구현해보신 과정이 정말 값진 학습 경험이었을 것입니다. \n\n답답하겠지만 그 만큼 스스로 생각하는 힘이 길러졌을거라고 생각해요. 노션의 정리 과정도 좋았습니다.\n\n이번 과제를 통해 React가 제공하는 편리한 API들이 내부적으로 어떤 문제를 해결하고 있는지 몸소 체험하셨을 거예요. 특히 렌더링 최적화와 상태 관리에 대한 깊이 있는 이해를 얻으셨기를 바랍니다.\n\n---\n\nQ) 실제로 이렇게 많은 useMemo 사용이 일반적일까요?\n\n=> 좋은 질문이에요! 실무에서는 이렇게 많은 useMemo를 한 컴포넌트에 사용하는 경우는 드뭅니다. useMemo를 쓴다는 건 리렌더링이 되는 그룹이 2개이상으로 나눠진다는 건데 그렇다는 건 컴포넌트가 단일책임하지 않을 확률이 높기 때문입니다. 대부분의 경우는 컴포넌트를 단일책임하게 만들면 useMemo를 써야할 이유가 많이 없습니다.\n\n수고하셨습니다. 재밌었다! 라는 말로 시작한 것 처럼 계속해서 클린코드 과제도 재밌기를 바래요. 화이팅입니다! :)",
    "enrolledId": "68247d1b0a72040b8094ff55",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272ee",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신희원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/28"
      }
    ],
    "feedback": "안녕하세요 희원!, 수고하셨습니다. 이번 과제는 React의 핵심 훅들과 최적화 기법을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 렌더링을 최적화하는지 내부 원리를 체득하는 것이 목표였습니다. 특히 이론적으로 쓰는 법을 이해하는 공부와 구현을 하기 위해 필요한 것을 공부하는 것의 차이를 경험하는 시간이 되었기를 바래요.\n\n회고에서 AI를 단순 코드 생성이 아닌 개념 학습 도구로 활용하신 접근법의 변화가 정말 인상적입니다. \"~~짜줘\"에서 \"필요한 개념이 무엇인지 알려줘\"로 질문 방식을 바꾸는 것이 좋네요. AI를 다앙한 방법을 필요에 맞게 바꿔보는 것도 현대 시대에서 중요한 능력이라 생각해새요. 무엇보다 동료들에게도 도움을 요청하며 협업으로 문제를 해결하려고 한 부분은 너무 너무 칭찬하고 싶네요. 결국 사람이죠! \n\n코드를 살펴보니 useAutoCallback에서 args 파라미터가 필요한 이유를 e2e 테스트를 통해 직접 발견하신 점이 특히 좋았습니다. 장바구니 데이터가 전달되지 않는 문제를 디버깅하며 깨달으신 것처럼, 실제 동작을 확인하며 이해한 지식이 가장 오래 남죠. ToastProvider의 Context 분리도 잘 구현하셨고, 상태와 액션을 분리하여 불필요한 리렌더링을 방지해보는 것도 잘했습니다.\n\n지난 3주간의 과제들을 통해서 \"필요가 공부를 만든다\"는 것을 느껴보며 어떻게 깊이를 학습해야하는지 이해하는 시간이 되었기를 바랍니다. 수고하셨습니다.\n\n---\n\nQ1) useCallback vs useAutoCallback 사용 시점\n=> useCallback은 의존성이 명확하고 변경 시점을 제어해야 할 때 사용합니다. useAutoCallback은 이벤트 핸들러처럼 항상 최신 상태를 참조해야 하지만 함수 참조는 유지해야 할 때 유용합니다. \n\n\nQ2) 메모이제이션 적절한 사용법\n=> 원작자는 메모제이션은 대부분의 경우에는 필요가 없으니 필요할때만 하라고 말하고 있죠. 그래서 최적화가 필요하다 느껴지기 전까지는 안하는 게 일반적인 방법입니다. 그리고 마우스 드래그, keydown, timer 등 리렌더링이 빈번하게 발생하는 과정에 느리다는 것이 느껴지는 곳에 선택적으로 memo를 메모제이션을 하죠.\n\n=> 그러나 이렇게 메모제이션을 하라고 하면 판단의 근거가 너무 주관적이게 되므로 컨벤션등은 모든 더 극단적인 형태를 띄게 됩니다. 하나는 그냥 메모제이션이 필요한 곳에 모든 메모를 붙이자는 것입니다. \n\n=> 다른 하나는 컴포넌트를 완전히 격리해서 메모제이션을 최소화 하고 컴포넌트에서의 메모제이션을 하자는 방식이죠. 이 두가지 방식에 대해서는 한번 공부해보시면 좋겠네요.\n\n수고하셨습니다. 깊이를 탐구하는 방법을 터득하신 만큼 앞으로의 클린코드 챕터도 기대됩니다. 화이팅입니다! :)\n\n",
    "enrolledId": "68254af40a72040b801869c8",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272f0",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정도은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/9"
      }
    ],
    "feedback": "안녕하세요 도은님! 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n> 개인적으로는 리액트 같은 도구를 쓰는 이유가 개발 편의성에 있다고 생각해서 뭔가 문제가 생기기 전까지는 리액트에게 최적화 기능을 전담하고 기능구현 하는 방식을 선택했던거 같습니다..ㅎㅎ 지금도 사실 어떤 상황에서 메모이제이션을 적용해야 하는지 판단하는 게 쉽지는 않네요. 나중에 병목이 생기면 하나하나 뜯어보면서 깨닳아보겠습니다.\n\n저도 이런 전략이 좋다고 생각합니다 ㅋㅋ 사실 많이 써보질 않으면 필요성을 느끼는 것 자체가 어렵다고 생각해요.\n\n> 컨텍스트는 해당 페이지 또는 UI 범위 내에서만 사용하는 간단한 값을 공유할 때 사용합니다. (예: 테마, 언어 설정, 모달 상태 등)\n\n제 생각과 똑같네요!!\n\n> 상태관리 라이브러리는 구조적으로 직접 연결되지 않은 컴포넌트들 간에 데이터를 전달해야 하거나 앱 전역에서 일관된 상태가 필요한 경우에만 사용합니다.\n\n제가 항상 상태관리를 언제써야할까? 라고 설명할 때 용어 정리가 안되서 어려웠는데 이걸 한 문장으로 잘 정리해주셨어요!! 속이 뻥 뚫리는 기분입니다 ㅎㅎ\n\n> 상태관리로 처리하면 데이터를 주고받기는 편하지만 프로젝트가 커질수록 상태 흐름을 파악하거나 유지보수하기 어려워진다고 생각되어\n\n이건 저와 다른 생각인데요, 저는 오히려 프로젝트가 커질수록 상태관리 라이브러리를 통해 제어하는게 중요하다고 생각했어요 ㅎㅎ\n상태 변이를 상태관리에서 제공하는 함수를 통해 추적만 하면 되니까요!\n그런데 상태관리가 없다면... 전체적인 구조를 이해해야 이 상태가 어디에 어떻게 전파되는지 알 수 있기 때문에 훨씬 이해하는데 시간이 오래 걸린다고 생각해요.\n\n> ToastProvider에서 useMemo vs useCallback 선택 기준\n\n어차피 useCallback도 useMemo로 만드는거라서요 ㅎㅎ\n이 상황에서 useCallback을 사용한다고 가정해보면\n`useCallback(debounce(hide, DEFAULT_DELAY), [hide])` 처럼 정의할 수 있을 것 같아요!\n\nshowWithHide의 경우, useAutoCallback도 좋고 useCallback도 좋습니다. 다만 useAutoCallback은 값을 캐싱한다기보단, 참조를 캐싱하는거라서, debounce 처럼 실제 \"함수의 과거 상태\"를 유지해야 하는 경우에는 적합하지 않을 수 있답니다 ㅎㅎ\n\n언제나 최신 값을 참조해야 한다면 useAutoCallback을 쓰는게 좋을 것 같아요!\n\n> 타입 안정성 vs 개발 생산성 중 어느 것을 우선해야 하는지\n\n지금 당장 일정이 급해서 미치겠따! 라는 상태가 아니라면 저는 어떻게든 타입 안정성을 더 채우려고 하는 편입니다 ㅎㅎ 그래야 장기적으로 봤을 때 생산성이 더 높아지니까요!\n\n> 팀에서 타입 우회를 허용할 명확한 기준이 있으신지\n\nPR 올린 다음에 말씀해주신 type ignore lint 가 있으면 팀원들이 먼저 물어보기도해요. 혹은 대신 해결해주기도 하거나!?\n\n다만 메모이제이션에 대한 판단 사례처럼, 결국 타입을 제대로 학습하려면 타입과 관련된 문제들을 많이 겪어봐야 한다고 생각합니다. 타입 오류가 있으면 이를 기회삼아 공부하는거죠 ㅎㅎ",
    "enrolledId": "682d428a0a72040b80bf93a5",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272f2",
    "result": "PASS",
    "isBestPractice": false,
    "name": "장루빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/54"
      }
    ],
    "feedback": "안녕하세요 루빈님! 3주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!!\n\n> 이런 과제를 수행한다면 코치님은 AI를 어떻게 활용할 것인지 궁금합니다.\n\n저는 딱 영서님이 진행하신게 생각나는데요,\n내가 고민이 되는 부분에 대해 더 딥다이브를 할 때 사용할 것 같아요 ㅎㅎ\n\n과제는 \"학습을 위한 수단\"을 수단이라고 생각하고, 학습에 대한 설계는 결국 스스로 하는거죠.\n가령, 제가 1년차 때\n\"간단한 할 일 목록\"이라는 주제로 코드를 작성했어요. 필수기능을 일단 다 구현해놓고\n여기서 난이도를 최도로 높여서 내가 할 수 있는 최대 수준의 오버엔지니어링을 하는거죠\n\n그리고 오버엔지니어링을 하면서 습득하는 지식을 정리해서 글로 작성한다거나!?\n이런 방식으로 진행할 것 같아요.\n\n이번 과제의 경우 hook을 만드는게 주제인데요,\n지금은 useState를 통해 만들어가고 있는데\n\n아예 \"모든 시스템을 내가 처음부터 만들어간다면 어떻게 될까?\" 라는 가정을 해보는거죠.\n혹은 여태까지 만들어놓은 훅을 이용하여 app 폴더에 적용해본다거나?\n새로운 기능을 만들어본다거나?\n\n이런 시도를 할 것 같습니다 ㅎㅎ\n\n정해진 틀을 계속 깨부수는 연습을 해보시면 좋겠어요!\n\n> 이번 과제는 완료하는 것을 목표로 했습니다. 과정을 완벽하게 이해하지 않고 넘어간 부분도 있으나 pr을 작성하면서 재학습하는 식으로 진행했는데요 정리한 내용중에 모호하거나 본질적인 내용과 거리가 있다면 그것이 궁금합니다!\n\n잘 진행해주셧다고 생각합니다! PR을 작성하면서 복습하는 과정도 잘 해주셨어요! 이렇게 해야 기억에 남는 것 같아요 ㅎㅎ 고생하셨습니다!",
    "enrolledId": "682578680a72040b803edb7c",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272f4",
    "result": "PASS",
    "isBestPractice": false,
    "name": "유윤우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/10"
      }
    ],
    "feedback": "안녕하세요 윤우님!\n정리를 너무 잘 해주셨네요 ㅎㅎ\n고생하셨습니다!!\n\n> hideAfter에 useMemo를 사용하지 않을 방법은 없었을까요? useAutoCallback을 사용하면 내부 디바운싱에서 타이머가 초기화되지 않는 문제가 있었습니다. 함수를 메모이제이션 하는거니까 useCallback쪽이 더 어울린다고 생각이 들어서요!\n\n이 때는 useCallback이 아니라 useMemo를 사용해야 한다고 생각해요!\ndebounce로 만든 함수 자체를 메모해야 하기 때문이죠! 그래서 솔루션도 살펴보시면 debounce를 useMemo로 만들어서 사용하고 있답니다 ㅎㅎ\n\n```tsx\nconst hideAfter = useMemo(() => debounce(hide, DEFAULT_DELAY), [hide]);\n```\n\n요로코롬...\n\n근데 생각해보면 useCallback으로 써도 괜찮을 것 같네요!\n\n```tsx\n  const hideAfter = useCallback(debounce(hide, DEFAULT_DELAY), [hide]);\n```\n\n> 이런 Provider 구현 시 useReducer가 더 좋을까요? 저는 useState로 상태값을 두고 handle함수를 Provider 내부에 둔 상태가 한눈에 보여 파악하기 쉽다고 생각했습니다! 코치님은 useReducer를 선호하시나요?? 이유도 궁금합니다!\n\n복잡한 상태를 다룰수록 reducer가 좋다고 생각합니다 ㅎㅎ\n물론 state로 구현해도 충분하지만요!\nreducer로 만들면 순수함수가 되고, 순수함수는 테스트하기가 용이해지는 장점도 있답니다!\n\n다만 이건 팀 컨벤션이 제일 중요하다고 생각해요. 제가 reducer를 쓴 이유는 학습에 대한 이유도 있답니다! 아마 useReducer 자체가 익숙하지 않은 사람들도 많을 것 같아서, 이렇게도 사용할 수 있다는걸 보여주고 싶었어요.\n\n> 얕은 비교 함수를 구현하고나서 Zustand 코드를 살펴보았는데 Map과 Set, Symbol.iterator, 일반 객체를 분리해서 순회하는 부분을 보았습니다. 저는 따로 분리하여 처리하지 않았는데 처리하지 않았을 때 문제가 될 부분이 있을까요?\n\nMap, Set 등을 처리할 때 문제되겠죠!? 사실 실무에서는 대부분 만들어진 것들을 사용하기 때문에, 내부가 어떻게 동작하는구나 정도만 알고 있어도 충분하다고 생각해요 ㅎㅎ\n\ndeppEqual도 fast-deep-equal 같은 라이브러리를 사용한답니다 ㅋㅋ",
    "enrolledId": "68249f4e0a72040b80b3568e",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272f6",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이진희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/7"
      }
    ],
    "feedback": "안녕하세요 진희님! 3주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨씁니다!\n\n---\n\n> 코치님은 이런 경우, 어디까지를 \"분리할 만한 단위\"로 보시는지 의견이 궁금합니다.\n\n저는 함수의 추상화 수준이 제일 중요하다고 생각합니다.\n가령 equals 함수를 토대로 생각해보자면\n\n```tsx\nif (원시타입) {\n  ...\n}\n\nif (배열) {\n  ...\n}\n\nif (객체) {\n  ...\n}\n\nreturn false\n```\n\n차라리 이렇게 전체적으로 함수를 사용하는 모습이 아니라고 가정했을 때, 조금 도 융통성(?)이 있죠 ㅎㅎ 그런데 한 부분만 함수로 분리되어있다고 가정해보면\n\n```tsx\nif (원시타입) {\n  ...\n}\n\nif (이건배열임) { return 배열일때처리함() }\n\nif (객체) {\n  ...\n}\n\nreturn false\n```\n\n이러면 \"저 구간은 왜 함수로 분리된거지?\" 라는 의문이 생길 수 있어요.그래서 차라리 이렇게 전체적으로 함수로 분리해서 \"추상화 수준\"을 유지해야 한다고 생각합니다.\n\n```tsx\nreturn pick(\n  [원시타입일때(), 원시타입처리()],\n  [배열일때(), 배열처리()],\n  [객채일때(), 객체처리()],\n  [전부다아니면False()]\n)\n```\n\n대충 이런 모습이랄까..\n\n아니면 타입가드만 함수로 분리하거나 혹은 각 타입에 대한 내부 구현을 함수로 분리하는 등 여러가지 방법이 있겠네요 ㅎㅎ\n\n> 명확함을 위해 긴 네이밍을 쓰는 게 좋을까요? 저는 변수나 함수 이름을 지을 때, isEnabledByUserAction, fetchPostsByCategoryId처럼다소 길어지더라도 형용사나 전치사(by 등)를 붙여서 더 명확하게 표현하는 걸 선호하는 편입니다. 그런데 코드 리뷰를 하다 보면, 길다는 이유로 이름을 더 간결하게 바꾸자는 피드백을 받는 경우도 있어서 고민됩니다. 코치님은 협업 코드에서 가독성과 간결성 사이의 네이밍 밸런스를 어떻게 잡으시나요? 그리고 긴 이름이더라도 명확하면 괜찮다고 보는지, 혹은 더 좋은 네이밍 전략이 있는지 궁금합니다.\n\n저는 함수가 쓰이는 맥락이 중요하다고 생각해요.\n가령, 어디서든 독립적으로 쓰이는 함수의 경우 말씀해주신 것 처럼 구체적인게 좋지만,\n네임스페이스나 훅을 통해 정의되는 함수는 이렇게 쓰일 수도 있겠죠!?\n\n```tsx\n// 객체로 쓰일 때\nuserAction.isEnabled();\npostsService.fetchByCategoryId();\n\n// 혹은 훅으로 쓰일 때\nconst userAction = useUserAction();\nconst posts = usePosts();\n\nuserAction.isEnabled();\nposts.fetchByCategoryId();\n```\n\n그런데 네임스페이스와 중복된다면 조금 읽는게 불편한다고 생각해요.\n\n```tsx\nuserAction.isEnabledByUserAction();\nposts.fetchPostsByCategoryId();\n```\n\n그래서 이 함수가 어떤 맥락에서 쓰이는지를 토대로 구체성을 정의해야 한다고 생각한답니다!\n\n",
    "enrolledId": "683f18534e1c73fff2105065",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272f8",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이의찬",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/36"
      }
    ],
    "feedback": "안녕하세요 의찬, 수고하셨습니다! 이번 과제는 React의 내장 훅들을 직접 구현해보며 프레임워크가 어떻게 상태를 관리하고 최적화하는지 내부 원리를 깊이 이해하는 것이 목표였습니다. React가 제공하는 편리한 API들이 내부적으로 어떤 문제를 해결하고 있는지 체험하셨기를 바랍니다.\n\nAI 활용에 대한 성찰적인 접근이 인상적이네요. 쓰면 안된다 써야 된다 이분법 적인 부분도 아니고 적게 써야 내것이 된다도 아니고 직접 다양하게 체험하면서 나에게 맞는 사용법을 익혀가는 것이 중요한 방식이죠. 적절한 나만의 노하우들을 많이 만들고 또 많이 공유해보면 좋겠습니다.\n\n메모이제이션과 ToastProvider에 대해 추가 학습하고 싶다고 하셨는데, 이는 실무에서도 매우 중요한 개념들입니다. 메모이제이션은 \"만능이 아니다\"라는 점을 인지하는 것이 중요하고, Context 분리를 통한 렌더링 최적화는 실제 프로젝트에서 자주 마주치는 과제입니다!\n\n수고하셨습니다. 이번 Deep Dive 경험이 앞으로의 개발 여정에 든든한 기초가 되었기를 바랍니다. 클린코드 챕터도 잘 부탁드려요! 화이팅입니다 :)",
    "enrolledId": "682576d80a72040b803dc418",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272fa",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정유열",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/15"
      }
    ],
    "feedback": "안녕하세요 유열, 수고하셨습니다! 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 깊이 이해하는 것이 목표였어요. 정유열님의 코드와 회고를 보니 이런 학습 목표를 충분히 달성했다 느껴지네요.\n\n특히 useShallowState를 구현하면서 setState가 동일한 값에 대해서는 리렌더링을 하지 않는다는 사실을 발견하고, 그럼에도 불구하고 참조값의 경우에는 얕은 비교가 여전히 중요하다는 걸 알게 되었다는 점이 좋네요. 사실 이러한 정보들은 이론만 공부할때에는 그냥 지나치기 쉬운데 이렇게 직접 구현을 하면서 공부하다보면 경험을 통해 지식이 완성이 된다 생각합니다!\n\n코드를 살펴보니 일관성 있는 코딩 스타일과 early return을 활용한 명확한 분기 처리, 그리고 타입 안정성을 고려한 구현 좋았습니다. \n\ncreateObserver에서 useSyncExternalStore에 적합한 subscribe 함수로\nstore, storage, router의 유기적 연결을 파악하는 과정에서 어려움을 겪으셨다고 하셨는데, 이런 고민 과정 자체가 정말 소중한 학습 경험이에요. 답습을 하더라도 왜 그럴까 고민을 해보는 것 자체가 더 신경써서 뭘 알아야 하는지를 생각하게 만들어주었을거에요!\n\n과제의 수행은 결과가 아니라 그 과정에서 오는 학습과 이러한 과정 자체 알려주고 싶은 것이기에 결과보다는 이 과정이 중요한거죠!\n\n이번 과제를 통해 메모이제이션이 만능이 아니라는 깨달음과 함께 구조적 개선의 중요성을 인식하신 것도 훌륭한 성과입니다. 실제로 성능 최적화는 단순히 메모이제이션만으로 해결되는 것이 아니라, 적절한 아키텍처와 상태 설계가 더 중요한 경우가 많지요 수고하셨습니다!!\n\n---\n\nQ) 어떤 방식으로 상태 관리를 하는 것을 선호하시는지(방법론, 상태관리 라이브러리 종류 등)\n\n저는 tanstackQuery와 jotai를 사용하고 선호했습니다. 대부분의 경우 데이터를 다루는 것은 서버로직에 있으므로 API를 다루는 tanstackQuery로 충분하고 나머지 언어, 설정, 회원정보 등등은 jotai를 통해서 개발했어요. jotai를 좋아했던건 React 컴포넌트에서 개발을 하고 난 이후에 그 코드를 그대로 jotai로 옮겨놓기만 하면 되니까 그런 직관성과 편리성 측면에서 좋아했습니다.\n\n\nQ) 여러 팀이나 프로젝트 환경에서 상태관리 라이브러리를 사용해 보셨을텐데 어떤 불편함을 겪었고 어떻게 해결하셨는지\n저의 경우 전역 상태관리의 특성 상 특히나 팀 협업 시 관리되지 못하는 스토어가 증식하여 관리가 어려워서 합리적인 해결책을 생각해보고 있습니다.\n \n=> 팀 차원에서 상태관리의 경우 어떤 상태관리를 사용하는 것보다 어떤 인터페이스를 쓸 것인가? 하는 것을 함께 결정하는 것이 중요합니다. 사실 상태관리를 구현의 문제라기 보다는 사용의 문제이니까요.\n\n=> 그래서 언어는 어떻게 할래? useLocale? useLanguage? 값은 함수는? 이런 인터페이스들을 사전에 합의하고 새로운 전역상태가 필요할때마다 그 인터페이스만 합의해두고 나면 믿고 쓰면 되고 문제가 생겨도 인터페이스는 변하지 않으므로 인터페이스를 변경하지 않고 개발한다는 원칙을 지킨다면 무분별해지는건 어느정도 방지 할 수 있습니다.\n\n=> 그리고 당연히 모두가 사용하는 layer인 만큼 누군가의 충분한 책임감을 가지고 담당해야하 하는 담당자 지정은 반드시 필요하다고 생각해요 :)\n\n\nQ) 상태관리에 대한 베스트프랙티스나 잘 할 수 있는 방법론을 다루는 책이나 글이 있다면 소개해주시면 감사할 것 같습니다.\n\n=> 책이나 글은 잘 떠오르지 않네요. 뭔가 상태관리만 다뤄낸 책을 따로 본 기억이 없어서 제가 찾아지면 공유할게요. 클린코드의 챕터의 2-2, 2-3이 그 상태관리를 다루고 있는만큼 해당 챕터에서 본격적으로 익혀보자구요!\n\n수고하셨습니다. 정유열님의 깊이 있는 탐구 정신과 체계적인 학습 접근법이 앞으로도 큰 성장의 원동력이 될 것이라 확신합니다. 클린코드 챕터도 화이팅입니다!",
    "enrolledId": "6847a18a614fe33053f85c23",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272fc",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양성진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/46"
      }
    ],
    "feedback": "성진님 고생하셨습니다!\n작성해주신 파이버 재조정에 대해서도 좀 더 구체적으로 살펴보면 큰 도움이 될 것 같은데요! 이 부분에 대해서 저번에 공유드렸던 것처럼 잘 설명되어있는 \n* https://react.gg/visualized \n* https://jser.dev/series/react-source-code-walkthrough\n요런 사이트들도 한번 살펴보면 이해에 큰 도움이 될 것 같아요. \n\n추가로 이 과제를 진행하는데 있어 핵심적인 부분 중 하나는 상태 관리 였던 것 같은데, 좀 더 공부해보셔야겠다고 남겨주셨으니 꼭! 살펴보시고 팀원분들과 함께 이야기 나눠보시면 좋을것 같네요. \n\n추가로 질문 주셨던 것처럼 과거에는 모든 코드에 메모이제이션을 하는 파와 절대 하지않는다 파(?)로 나뉘어져서 막 논쟁이 있었던 것 같은데, 최근에는 그런 사람들이 많이 사라진 것 같아요. 일반적으로 저희가 따르는 최적화 논리대로 섣부른 최적화는 하지 않되, 성능적으로 이슈가 발생하는 지점이 생긴다면 그 지점에 대해서 파악한 뒤 그 부분만 국지적으로 처리하는게 적절한 사용 방법인 것 같아요. 내부적으로 이미 처리가 어느정도 되어있고 최근 들어서는 모든걸 해결해주는 관점에서 개발을 하는 것은 아니지만 컴파일러의 발전도 지속되고 있잖아요. 필요한 부분이 발견되면 그 때 적용하는 형태로 하면 좋을 것 같습니다.\n\n고생하셨고 다음 주도 이번 주처럼 화이팅입니다!",
    "enrolledId": "68417c4a4e1c73fff2a66073",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b272fe",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이유진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/32"
      }
    ],
    "feedback": "안녕하세요 유진님! 3주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨스비낟!!\n\n> 3주간 프레임워크 없이 SPA 만들기를 진행하면서 SPA 프레임워크의 동작 원리를 어느정도 알고있다고 생각했는데 알고있기는 커녕 저는 여태껏 궁금해 한 적 조차 없었다는 사실을 깨달았고, 자바스크립트 실력이 많이 부족하다는 것도 느꼈습니다.\n\n\"여태껏 궁금해한 적 조차 없었다는 사실\"이 인상적이네요 ㅋㅋ 언젠간 왜 이렇게 동작하는거지!? 라는 근원적인 궁금함을 느낄수 있으리라 생각해요!\n\n> useMemo에서 의존성 배열에 대한 depsRef와 factory 실행 결과를 저장하는 resultRef를 하나의 객체로 두는게 더 좋은 구조일지에 대한 고민을 했습니다. 하나의 객체로 두는 것이 더 나은 구조인지, 코치님께서는 어떤 방식을 선호하시는지 궁금합니다.\n\n저는 하나의 객체를 통해 관리하는게 더 좋지 않을까 싶어요! 사실 몇 개의 ref로 관리하든 큰 차이가 없긴 한데, 중요한건 사용성이라고 생각합니다. 하나의 ref로 관리해야 객체를 다루기가 더 쉽지 않나!? 라는 생각이랍니다.\n\n> 타입스크립트가 최대한 알아서 추론하게 두고, 타입 단언은 지양해라! 라는 내용을 늘 생각하면서 개발하고자 하는데요, 과제 구현 과정에서 타입 이슈 해결을 위해서 타입 단언을 사용한 부분이 꽤 있습니다. 이 중에서 특히 useMemo의 return 에서 한 타입 단언이 안전한지 궁금합니다.\n\n지금은 최선의 작업을 해주신 것 같아요. 물론 타입이 자연스럽게 추론되면 좋지만... 그렇지 못한 상황도 분명 있으니까요!",
    "enrolledId": "682546800a72040b80150daf",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27300",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/34"
      }
    ],
    "feedback": "안녕하세요 상수님! 수고하셨습니다. 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크의 동작 원리를 깊이 이해하는 것이 목표였습니다. AI 없이 최대한 고민해보시고 뇌를 괴롭혀가며 문제를 해결하신 과정 정말로 칭찬드립니다. 1챕터는 결과를 만드는 게 아니라 체험을 통해 학습을 하는 과정인 만큼 힘들었겠지만 좋은 경험이 되었을거라 생각합니다. 또한 \"모든 문제해결 과정을 문서화하려고 노력했다\"는 점에서 진정한 개발자의 자세가 느껴집니다.\n\n코드를 살펴보니 솔루션과 비교했을 때 핵심 개념들을 잘 이해하고 구현해주셨어요. 특히 equals 함수들을 별도 파일로 분리하고 typeUtils까지 만들어서 깔끔하게 정리하신 점이 좋았습니다. baseEquals 패턴을 사용해서 코드 중복을 줄이신 것도 훌륭한 접근입니다!\n\nQ) useShallowState의 타입 문제\nuseShallowState의 타입 문제는 실제로 타입스크립트의 복잡한 부분이에요. Parameters<typeof useState<T>>[0]를 사용할 때 T가 undefined일 가능성을 열어두기 때문에 발생하는 문제죠. 이미 useState의 type에서 가져오는 방식으로 추론이 복잡해졌기에 상수이 해결하고자 했던 타입을 단언하도록 재 설정하는 방식이 나은 방법입니다. 확정적으로 내가 원하는 타입이 가능할 수 있는게 있는데 그걸 의도적으로 추론을 하도록 하면 더 복잡하게 꼬이는 문제가 발생합니다.\n\nuseAutoCallback의 타입 단언도 어쩔 수 없는 부분입니다. 타입스크립트가 고차 함수의 복잡한 타입 추론을 완벽하게 처리하지 못하는 한계가 있어서, 안전한 범위 내에서의 타입 단언은 실무에서도 허용되는 패턴이에요.\n\n정리하자면, 가급적 타입추론을 활용할수 있도록 하는건 좋은 방법입니다. 그러나 내가 API를 제공하는 layer를 만들고 안전하게 타입을 처리할 수 있는 경우라면 이걸 쓰는 쪽에서 타입 추론을 더 잘할 수 있도록 단언등을 통해서 간결화 해주는것이 좋습니다.\n\nuseAutoCallback의 경우에도 마찬가리로 (더 나은 방식이 있을지는 고민을 해봐야겠지만) 함수를 제공하는 쪽의 타입들은 코드상 안전하다면 오히려 타입 단언을 해주는 편이 좋습니다.\n\nQ)\nuseShallowState 나 useAutoCallback은 아시다시피 공식적인 방식이 아니라 편의를 이용한 방법이죠. 사용여부는 전적으로 개발자의 취향이라고 생각합니다. 고민이 든다면 굳이 쓰지 않아도 괜찮다고 생각을 합니다. 내가 배운거나 필요한 모든 것들을 다 써야 하는건 아니니까요. 이러한 개발에 대한 철학적 사유를 해보는 것들 너무 좋습니다. 저도 둘다 실무에서 쓴 적은 없습니다. \n\nuseAutoCallback의 경우 그냥 핸들러를 바로 자식컴포넌트의 props로 넘기게 되면 React.memo가 될 수 없는데 이 방식을 쓰면 의존성 배열 없이 props도 참조를 유지할 수 있는 해법이겠네요.\n\n개인적으로는 컴포넌트의 props에 함수를 전달하는 것을 최대한 지양하는 방식으로 만들고 있어서 useCallback을 잘 안쓰고 있어요. props를 많이 사용해서 독립성있고 투명하게 만드는 것도 props drill을 최소화 하는것도 취향의 영역이니 본인만의 취향을 가져보세요. 단 말씀해주신대로 깊이를 통해서 취향에 대한 확신과 근거도 가져보면 좋겠습니다  \n\nQ) \n고차 컴포넌트에 대한 고민도 공감합니다. 처음엔 복잡해 보이지만 패턴에 익숙해지면 코드의 재사용성과 유연성 측면에서 큰 도움이 되요. 추상화의 가장 큰 문제는 구현부가 사라진다는 거죠. 그렇기에 널리 알려진 이름, 내부 동작이 예측가능하도록 만들어두는 것이 중요하죠. 추상화는 언제나 그런 트레이드 오프를 가져옵니다. 네이밍과 문서화가 그래서 중요한거겠죠. 처음에는 안 읽혀도 알고 나면 쉬워지니까요. \n\n클린코드 시간에 지금과 같은 고민들을 충분히 해보시길 바래요! 수고하셨습니다. 다음 주차도 화이팅입니다!",
    "enrolledId": "683fa08b4e1c73fff25b6b7e",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27302",
    "result": "PASS",
    "isBestPractice": false,
    "name": "임두현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/45"
      }
    ],
    "feedback": "안녕하세요 두현, 수고하셨습니다! 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크의 내부 동작 원리를 깊이 이해하는 것이 목표였습니다. \n\n\"...개인적으로 효과가 좋다고 생각하는 학습방식이 있습니다.\n원리를 다 파악하고 실제로 활용하는 것보다는, 일단 원리도 모르는 상태에서 다들 하는대로 적용하고 보는 것입니다.\n그렇게 익숙해질 즈음에 다시 이론적인 개념을 파악하면 그 때 이해가 쏙쏙 됩니다. ...\"\n\n저희 과제의 취지에 너무 부합하는 말이라 좋았습니다. 언제든 새로운 개념을 학습하게 되면 최소한의 방식으로 직접 구현해보는 것이 그 개념을 이해하는데 가장 크게 도움이 되는 것 같아요. 상태관리나 서버상태관리등도 꼭 이러한 방식으로 접근해보기를 바랍니다.\n\nContext와 상태관리에 대한 철학적 고민도 인상깊었습니다. props drilling을 통한 명시적 데이터 흐름을 선호하시는 이유가 매우 합리적이에요. 특히 \"데이터 흐름이 명확하게 보이는 것\"의 가치를 아시는 것은 복잡한 애플리케이션을 다룰 때 큰 도움이 될 거예요.\n\n클린코드 시간에는 이러한 여러가지 철학적 베이스로 어떤 코드가 더 좋은 코드가 될지 함께 고민해보는 시간을 가져봅시다! 수고하셨습니다. 다음 클린코드 챕터에서도 이런 탐구 정신을 발휘해서 더욱 성장하시길 바랍니다! 화이팅입니다! :)",
    "enrolledId": "684149af4e1c73fff27b2528",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27304",
    "result": "PASS",
    "isBestPractice": true,
    "name": "이은지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/49"
      }
    ],
    "feedback": "안녕하세요 은지, 수고했습니다! 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 깊이 이해하는 것이 목표였습니다. \n\n단순히 과제를 완성하는 것에 그치지 않고, React의 실제 동작 원리부터 Object.is의 세부 사항, useSyncExternalStore의 탄생 배경까지 깊이 있게 탐구하신 모습이 인상적이네요. 아주 잘했습니다!\n\n특히 Hook의 상태 관리가 연결 리스트 구조로 되어있다는 점을 발견하고, 왜 훅을 조건문 안에서 쓰면 안 되는지 원리적으로 이해하신 부분이 참 좋네요. 이론으로만 접근하면 단순히 하면 안되는 Rule정도로 치부할 수 있지만 실제로 만들어 보니 그럴 수 밖에 없구나 하는 식으로 귀결이 되는 지식이 쌓이는 것이 깊이를 이해하는 것이지요.\n\n그밖에도 isArray, isObject 등 유틸리티를 별도 파일로 분리해서 예측가능한 코드를 잘 분리해둔 부분도 좋았습니다.\n\n이번 과제를 통해 React가 제공하는 편리한 API들이 내부적으로 어떤 문제를 해결하고 있는지 몸소 체험하셨을 거예요. 특히 \"메모이제이션은 만능이 아니다\"라는 깨달음과 함께 구조적 개선의 중요성을 인식하신 점이 훌륭합니다.\n\n---\n\nQ) useRef를 useState 없이 구현할 방법이 없을까요?\n\n=> 함수는 특성상 재실행될 때마다 내부 변수들이 초기화되기 때문에, 상태를 유지하려면 함수 외부의 값을 사용해야 하지요.\n\n그렇게 하기 위해서는 전역변수, 혹은 레퍼런스 객체, 혹은 클로저 등을 사용하는 방식이 있습니다. 이중에서 전역변수는 답이 아니니 React도 내부적으로 FiberNode의 memoizedState에 저장하는 방식을 사용하죠. \n\n그리고 두번째는 값을 보관해서 가져오는 방식입니다. 기존의 데이터에서 값을 가져오기 위해서는 정확한 위치를 알아야 하죠. 그러면 선택할 수 있는 방법은 같은 객체를 사용해서 값을 가져와서 prop에 접근하거나 index혹은 key이름을 통해서 가져오는 방식등이 있습니다.\n\nuseState는 index를 통해 접근하는 방식, useRef는 객체에 접근하고 current를 사용하는 방식을 사용했죠.\n\n위와 같은 응용법을 이용해서 useRef와 useState의 체계를 별도로 구성하는 방법이 없지는 않겠지만 같은 리렌더링 체계를 공유하고 있으므로 상태를 관리하는 공통적인 방법을 가지고 만드는 방식이 가장 효율적인 체계입니다.\n\n\nQ) useMemo를 useRef 사용없이 구현할 방법이 없을까요?\n\n=> 안될 이유는 없지만 이미 상태관리의 추상화 계층을 만들어 두었는데 활용하지 않는 건 매우 비효율적인 방식입니다. 이미 Array라는 배열을 다루는 방식이 있는데 굳이 List라는 새로운 계층을 사용하는 거죠. \n\n렌더링 간 값을 유지해야 하는데, useState를 사용하면 setState로 인한 불필요한 리렌더링이 발생하고, 전역 변수를 사용하면 컴포넌트 인스턴스 간 상태가 공유되는 문제가 생깁니다. useRef가 바로 이런 문제를 해결하기 위한 훅이므로, 메모제이션의 값을 보관하기에는 적절한 도구이죠. 대안을 찾기보다는 적절한 도구를 사용하는 것이 맞다고 생각해요.\n\n수고하셨습니다. 깊이 있는 탐구와 실험 정신이 정말 인상적이었어요. 다음 클린코드 챕터에서도 이런 열정으로 좋은 인사이트를 얻으시길 바랍니다. 화이팅입니다! :)",
    "enrolledId": "6833c8d54e1c73fff246f798",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27306",
    "result": "PASS",
    "isBestPractice": true,
    "name": "이지훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/14"
      }
    ],
    "feedback": "지훈님 고생하셨습니다!\n농담처럼 재미때문이라고 말씀해주시기는 하는데 저번 주에 말씀드린 것처럼 함께 팀원분들 특히 정석님과 함께 성장해나가는 모습이 너무 보기 좋네요 ㅎㅎ\n필요하신 부분 딱딱 코드도 깔끔하게 코드도 작성해주셨고, 학습한 내용도 문서로 잘 남겨주셨네요 :+1 이 방식은 학습하는데 정말 도움이 많이 될 것 같아요.\n지금까지 정리한 내용을 기반으로 하나의 rules를 만들어서 앞으로 AI로 생성하는 코드의 규칙을 만들어 올바르게 생성하게 할 수도 있을 것 같구요 ㅎㅎ\n\n작성해주셨던 질문 답변 드려보면요!\n\n> 자주 사용하는 커스텀훅이 있는지 궁금합니다. useAutoCallback 처럼 기존 훅을 더 쉽게 사용할 수 있도록 만든 훅들이 있을까요?\n\n당시에는 이런 저장소들을 많이 참고하고 사용하고 했었는데요.\n* https://github.com/streamich/react-use\n* https://github.com/rehooks/awesome-react-hooks\n\n이런 유틸성 훅들을 가져다가 구현적 이점을 많이 누렸던 것 같아요 ㅎㅎ 이미 알고 계실거 같지만 아직 모르시다면 요거 참고해보면 좋지 않을까!\n\n> 메모이제이션을 사용하다 보면 결국 모든 값을 메모이제이션 해야 하는 상황들이 발생하는 것 같은데, 모든 컴포넌트와 값들에 메모이제이션을 적용하는건 어떻게 생각하시나요? 물론 불필요한 비교 과정은 비효율 적이지만, 코드를 지속적으로 유지보수하면서 메모이제이션을 알맞게 사용하기 어렵다 느껴져서 질문 드립니다.\n\n음..! 우선 저는 모든 값을 메모이제이션 해야하는 상황이 그렇게 막 오지는 않을 것 같은데요. 과거에는 모든 코드에 메모이제이션을 하는 파와 절대 하지않는다 파(?)로 나뉘어져서 막 논쟁이 있었던 것 같은데, 최근에는 그런 사람들이 많이 사라진 것 같아요. 일반적으로 저희가 따르는 최적화 논리대로 섣부른 최적화는 하지 않되, 성능적으로 이슈가 발생하는 지점이 생긴다면 그 지점에 대해서 파악한 뒤 그 부분만 국지적으로 처리하는게 적절한 사용 방법인 것 같아요. 내부적으로 이미 처리가 어느정도 되어있고 최근 들어서는 모든걸 해결해주는 관점에서 개발을 하는 것은 아니지만 컴파일러의 발전도 지속되고 있잖아요. 필요한 부분이 발견되면 그 때 적용하는 형태로 하면 좋을 것 같습니다.\n\n이번주도 고생하셨고 다음주도 이번주처럼 화이팅 하시고 뿌숴주세요!",
    "enrolledId": "6852337e851b4a7da82175ff",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27308",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이지현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/17"
      }
    ],
    "feedback": "지현님 고생하셨어요!\n필요한 부분에 대해서 명확하게 잘 구현해주셨네요.\n과제를 진행하시면서 실제로 preact나 react구현도 살펴보시고 직접 옮겨오시면서 많은 부분을 학습하실 수 있었던 것 같아서 좋네요 :+1\n\n궁금해하셨던 부분 먼저 답변 드려보면요.\n\n> contextAPI를 활용한 코드를 작성하다보면 어떻게 파일 및 코드 분리를 해놓을지 고민이 되기도합니다.\n\n일반적으로 제가 쓰는 경우에는 해당 로직이 복잡해지는 경우 Context, Provider와 사용하는 훅을 분리해서 파일로 관리하기도 하는데요. 다만, 요즘의 상태가 그리고 전역 상태를 사용하는 케이스가 UI관련된 단순한 케이스들이 많기 때문에 하나의 파일로 관리하는 경우도 종종 있는거같아요!\n\n규모가 어느정도로 커지냐를 기준으로 잡고, 그리고 컨텍스트를 프로젝트에서 얼마나 사용하는지를 기준으로 해서 판단하고 나누면 좋을 것 같아요 ㅎㅎ\n\n> Object.is와 shallowEquals를 보면서 궁금했던 부분이 있습니다.\n\n넵 나름 합리적인 접근 방법인 것 같아요 ㅎㅎ \n밑에 희진님이 남겨주신 강조의 표시 처럼 \"\"확실\"하다면 저장되는 데이터를 기준으로 비교 로직을 다르게 가져갈 수 있을 것 같아요.\n다만, 그렇지 않다면 일관적이게 비교를 하고 옵션 형태로 제공해서 사용하는 측에서 성능 최적화를 할 수 있게 하는 것도 방법일 수 있을 것 같아요.\n\n고생하셨고 다음 주 과제도 화이팅입니다!!",
    "enrolledId": "682566140a72040b80300e04",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b2730a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "조영민",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/43"
      }
    ],
    "feedback": "고생하셨어요 영민님! \n아숩게 회고가 작성되어 있지 않아서 한 주 고생하신걸 온전히 제가 이해하기는 어려웠는데요. 그래도 필요한 부분에 대해 코드 명료하게 잘 작성해주셨습니다.\n\n질문 주신 부분 이어서 살펴보면요.\n이미 적용해주고 계신 기준이 저는 개인적으로 맞다고 생각해요.\n과거에는 모든 코드에 메모이제이션을 하는 파와 절대 하지않는다 파(?)로 나뉘어져서 막 논쟁이 있었던 것 같은데, 최근에는 그런 사람들이 많이 사라진 것 같아요. 일반적으로 저희가 따르는 최적화 논리대로 섣부른 최적화는 하지 않되, 성능적으로 이슈가 발생하는 지점이 생긴다면 그 지점에 대해서 파악한 뒤 그 부분만 국지적으로 처리하는게 적절한 사용 방법인 것 같아요. 내부적으로 이미 처리가 어느정도 되어있고 최근 들어서는 모든걸 해결해주는 관점에서 개발을 하는 것은 아니지만 컴파일러의 발전도 지속되고 있잖아요. 필요한 부분이 발견되면 그 때 적용하는 형태로 하면 좋을 것 같습니다.\n\n고생하셨고 다음 주 과제도 화이팅입니다!",
    "enrolledId": "684a92b384ed0f34596009d9",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b2730c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이태영",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/16"
      }
    ],
    "feedback": "태영님 이번 한 주 알차게 보내신게 회고에서 드러나네요 ㅎㅎ\n과제는 당연히 잘 작성해주셨고 정리한 내용도 각각 문서로 만들어서 정리해주셨네요. (요거는 직접 작성해주셨으려나요?)\n명확하게 잘 정리해주셨고 나중에 이 과제를 다시 봤을때에도 귀중한 자료가 되지 않을까 싶습니다 :+1\n\n질문 주셨던 내용 답변드려보면요! \n\n> Docs 문서나 글을 통해 제가 직접 Auto-Memoization, Compiler... 그래서 추후에 이게 반영이 된다면 기존과 어떤 차이점이 있는데? 를 파악해야 하는데 현재는 React Compiler로 useMemeo, useCallback 안 써도 되겠다. 싶은 생각 정도까지 했습니다.\n\n이 부분에 대해서는 꾸준히 저도 트래킹하고 있는데요.\n결론적인 답변을 원하셨으니 말해보면.. 지금의 수준에서는 모든걸 대체하기에는 어려워보여요. 다만, 초창기에 비해서는 최적화수준이 많이 올라왔고 처음에 제가 이걸 접했을 때는 못쓸거라고 생각했지만 지금은 대체가 될 수도 있겠다라는 생각이였거든요. 비슷한 라이브러리에서는 이미 해당 기능을 제공하고 있고 리액트 측에서도 이 기능을 완성시키겠다고 공언을 이미 했고..라이브러리 시장에서 리액트가 안좋다! 라는 근거로 가장 많이 쓰이는 부분이기 때문에 어떻게든 되게 만들지 않을까 라는 생각이긴해요.\n\n다만, 지금처럼 가야한다면 명확한 메모이제이션 사용법에 대해 이해하고 각각 사용해야 하며 컴파일러는 부수적인 도움을 주는 역할이다라고 봐야하지 않을까 싶습니다. RC인 만큼 계속 트래킹을 해야할거같아요!\n\n> 추가적으로 React docs나 그 외 다른 어떤 개발적인 내용을 공부 할 때 어떤 식으로 확인하고 공부하는 것이 좋을까요?\n\n이 부분에 대해서는 \n1. 궁금한 것을 기준으로 명확한 공부의 범위 또는 주제를 단일로 지정하세요.\n2. 그리고 그걸 도달하기 위해 가는 과정을 본격적으로 공부하기전에 추측하고 적어보세요.\n3. 공부를 하는 과정에서 정말 도움이 되는 부분이라면 정리해둔 목차에 추가를 하고, 아니다 싶으면 목차를 제거해보세요. 다만, 이 목차를 추가하는 시점에 처음 지정한 범위를 벗어난다 싶으면 키워드만 적어두고 넘어가세요. 이 키워드는 다음 공부에서 주제가 될 수 있겟죠?\n4. 그리고 이 목차를 채우면서 주제에 대한 결론을 낼 수 있으면 마무리하세요\n\n말씀해주신것처럼 새로운 기술에 대해 너무 자주 나오고, 공부할 것도 너무 많죠. 다만 그냥 꼬리 물기로 공부하다보면 내가 궁금해 했던 것들을 이해하지 못하게 되고 확장적인 생각을 갖는데에도 좋지 않은것 같아요.\n저는 저런식으로 공부를 많이 해서 도움을 받았는데 한번 해보고 다음에 함께 이야기 나눠보면 좋겠네요!\n\n고생하셨고 다음주도 화이팅입니다!",
    "enrolledId": "6825c7b00a72040b8086a6af",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b2730e",
    "result": "PASS",
    "isBestPractice": true,
    "name": "장희진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/27"
      }
    ],
    "feedback": "희진님 고생하셨어요!\n회고를 보니 명확하게 과제를 통해 어떤 부분을 학습하셨는지 설득력있게 다가와서 저도 많이 보고 배웠네요.\n개발자 도구를 통한 분석이나 원인을 파악하고 해결해나가는 모습도 좋았네요 :+1 말씀해주신 것처럼 해당 부분에 있어서 한번 꼭 찾아보셨으면 좋겠네요.\n과제는 당연히 잘 작성해주셨습니다 ㅎㅎ\n\n그럼 작성해주신 질문 이어서 답변 남겨볼게요.\n\n> Context 대신 createStore를 사용해 전역 상태를 분리했는데, 기존 Context 기반 상태 관리에서 발생하던 불필요한 리렌더링 문제를 효과적으로 줄일 수 있었습니다. 다만, createStore의 구독 범위를 어떻게 최적화해야 하는지, 상태 접근 시 필요한 최소한의 구독만 유지하는 좋은 패턴이 무엇인지 아직 명확하지 않습니다. 이와 관련해 권장하는 설계 방식에 대해 조언 받고 싶습니다.\n\n음 제가 질문을 제대로 이해했는지 조금 헷갈리지만, 이런 식으로 스토어를 구성하다 보면..일반적으로 고민하는 것처럼 셀렉터 함수를 분리하고 별도로 필요한 데이터만 구독하는 형태로 운영되면 성능적인 측면에서도 좋을거에요. 또는 구독되는 아이템들을 기반으로 메모이제이션을 걸어 셀렉터를 생성할 수 도 있을 것 같구요. 이 과정에서 이런 최적화가 이전에 작성해주셨던 것처럼 실제 렌더링 성능에 어떤 영향을 미치고 개선을 했을 때 얼마나 나아지는지는 함께 체크해보면 좋을것 같아요!\n\n> 저는 지금까지 React 프로젝트에서 Context보다는 주로 Zustand 같은 전역 상태 관리 라이브러리를 활용해 왔습니다. 실무에서도 큰 문제 없이 상태 관리가 잘 되었고, 성능 이슈도 거의 경험하지 못해 Context에 대해서는 상대적으로 크게 신경 쓰지 않았던 것 같습니다.\n이번에 Context에 대해서도 배우고 이해했지만, 앞으로도 단순한 전역 상태에서도 Zustand 같은 상태 관리 라이브러리를 사용해도 크게 문제가 없을 것 같다는 생각이 듭니다.\n코치님께서는 실무에서 꼭 Context를 사용해야 했던 특별한 상황이나 이유가 있으셨는지 궁금합니다.\n\n실무적인 관점에서 최근 상태를 관리하는 방식은 서버 상태와 UI를 위한 전역 상태 관리로 나뉘는 것 같아요. 그럼 여기서 말씀해주시는 zustand같은 것들은 후자를 관리 하기 위한 상태일텐데요. 말씀해주신것처럼 context를 사용하다보면 직접 각 구역을 나눠 렌더링 최적화를 진행해줘야 하기 때문에 오히려 번거로운 지점이 많이 생기는 것 같아요. 과거에는 이런 전역 상태 관리 라이브러리의 크기가 크고 보일러 플레이트 코드가 많아졌었는데, 이런 지점은 zustand나 jotai로 들어서면서 매우 경량화가 되고 사용도 용이해져서 더 이상 저는 중요하지는 않다고 생각이 들더라구요. \n\n개인적으로는 너무 프롭 드릴링이 발생하는 것이 아니라면 각 컴포넌트에서 관리를 하고 필요해지는 시점이 오면 그때 부담없이(?) 선택을 하면 되지 않을까 라는 생각입니다. 반드시 context를 사용해야만 하는 경우는 없었던 것 같아요.\n\n이번 주 과제 너무 잘해주셨고 다음주도 이번주처럼 화이팅입니다~",
    "enrolledId": "6853f85d851b4a7da883412b",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27310",
    "result": "PASS",
    "isBestPractice": true,
    "name": "신홍준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/2"
      }
    ],
    "feedback": "안녕하세요 홍준, 수고하셨습니다! 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 이론을 넘어 몸으로 깊이 이해하는 것이 목표였습니다.\n\n홍준님의 회고를 보니 React가 낯선 상황에서도 개념 학습부터 차근차근 시작하셔서 정말 체계적으로 접근하신 것 같아요. 특히 피그잼으로 정리하신 학습노트! 아주 멋져요. 특히나 React Fiber의 전반적인 구조와 흐름까지 파악하시고, useRef의 DOM 조작 원리를 깊이 탐구하신 부분에서 뭐랄까 개발자스러운 탐구정신(?) 그런것들이 느껴졌어요! 이렇게 한번 구조와 그림을 정리해두고나면 원리들이 선명하게 느껴질거에요!\n\nequals 함수 구현에서 getType, isShallowArrayEqual, isShallowObjectEqual 등으로 기능을 세분화해서 만들어본 접근도 좋았습니다. 코드를 작게 나누면 절대 틀릴 수 없는 코드들이 많이 만들어지죠.\n\n이전 항공 예약 사이트 프로젝트에 대해서 설명해주는 부분도 인상적이었습니다. 실습과제와 실무를 엮어서 고민한다는 건 쉽지 않은데 잘했습니다.\n\n---\n\nQ) typeof로 인한 타입 구분 문제와 `as` 키워드 사용에 대한 의견\n\n=> 지금 접근 방식은 이미 조건문으로 타입이 걸러졌기 때문에 as를 쓴다고 해도 사실 문제가 없고 as를 적절히 잘 사용한 예시라 생각합니다. 조금 더 나은 방식은 이렇게 조건에 따라 타입을 필터링을 할때 TypeScript에서는 타입 가드(Type Guard)를 사용하면 좋습니다. 그렇면 as 키워드 없이도 안전하게 타입을 좁힐 수 있습니다.\n\n```typescript\nconst isArray = (value: unknown): value is unknown[] => Array.isArray(value);\nconst isObject = (value: unknown): value is Record<string, unknown> => \n  value !== null && typeof value === 'object' && !Array.isArray(value);\n\nexport const shallowEquals = (a: unknown, b: unknown) => {\n  if (isArray(a) && isArray(b)) {\n    // 여기서 a, b는 자동으로 unknown[]로 추론됩니다\n    return isShallowArrayEqual(a, b);\n  }\n  \n  if (isObject(a) && isObject(b)) {\n    // 여기서 a, b는 자동으로 Record<string, unknown>로 추론됩니다\n    return isShallowObjectEqual(a, b);\n  }\n  \n  return a === b;\n};\n```\n\n이렇게 하면 타입 안전성을 보장하면서도 런타임 타입 체크와 컴파일 타임 타입 추론을 모두 만족시킬 수 있습니다. \n\n수고하셨습니다. 이제 시작하는 클린코드 챕터에서도 이런 탐구 정신으로 더욱 성장하시길 응원합니다! 화이팅입니다! :)",
    "enrolledId": "682983e90a72040b80d5107f",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27312",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김휘린",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/38"
      }
    ],
    "feedback": "안녕하세요 휘린! 수고했습니다. 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 이론이 넘어 몸으로 깊이 이해하는 것이 목표였습니다. \n\n이번 과제는 분명 정답이 있는 과제였지만 그 과정에서 체득하는 것이 목적인만큼, AI를 써보지 않고 고민 고민을 하면서 \"그냥 안되는 걸까?\"하는 의문으로 직접 실험해보신 과정이 정말 인상적이네요. 개발자라면 일단 해보고 탐구하는 정신이 필요하요. ㅎ\n\n그리고 또한 Context를 상태와 액션으로 분리하여 불필요한 리렌더링을 방지해봐야 하는 걸 느껴본 것도 좋은 인사이트라 생각합니다. 실무적인 측면에서는 Context보다는 상태관리 도구를 직접 쓰는 편인데 그러한 상태관리들이 이렇게 상태과 액션을 분리해서 다루고 있고 개념적으로도 상태과 액션을 분리해서 생각하면 조금 더 아키텍쳐를 선명히 바라 볼 수 있죠. \n\n더 좋은 코드가 없을지 생각해봐야겠다 생각하는 태도 좋네요. 이번 클린코드 챕터에서 그 인사이트들을 마음껏 실현해보기를 바래요.\n\n이번 과제를 통해 React가 제공하는 편리한 API들이 내부적으로 어떤 문제를 해결하고 있는지 몸소 체험하셨을 거예요. 특히 \"메모이제이션은 만능이 아니다\"라는 깨달음과 함께 구조적 개선의 중요성을 인식하신 점이 훌륭합니다.\n\n---\n\nQ) useRouter의 구독 해지와 메모리 누수 확인 방법\n\n네, 구독 해지를 하지 않으면 메모리 누수가 발생합니다. 한줄의 코드로 그걸 알기는 어렵고 for문을 많이 돌려본다음  Chrome DevTools 활용해서 컴포넌트를 여러 번 마운트/언마운트한 후 다시 Snapshot을 촬영하여 메모리가 어떻게 바뀌는지 확인해보세요. \n\n그게 아니라면 단순하게 subscribe에 로그를 찍어본다음 컴포넌트를 unmount를 해도 로그가 남아 있다면 누수 동작이 발생하는 걸 확인할 수 있을거에요.\n\n수고하셨습니다. 깊이를 탐구하는 지난 3주간의 Deep dive체험이 즐거운 시간과 깊이를 탐구하는 방법에 대한 시야와 계기가 되었기를 바래요. 앞으로 하게 될 클린코드 챕터도 화이팅입니다!",
    "enrolledId": "6853a924851b4a7da8357a5c",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27314",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이민재",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/25"
      }
    ],
    "feedback": "민재님 고생하셨습니다 ㅎㅎ\n다른분들 PR에도 좋은 의견 많이 남겨주시고 리뷰 보니 명확한 기준을 가지고 잘 구현해주셨습니다 shallowEquals 접근도 좋은 접근이였습니다. 성능 최적화를 고려하고 작성해주신 것 같더라구요. \n일정 자체가 빠듯하고 순식간에 흘러가지만 말씀해주신것처럼 회고를 작성하고 이런 배경, 고민한 흔적들을 함께 나눌 수 있는 시간이 있으면 확실히 좋을 것 같아요. 저희가 따로 뭔가 이런 시간을 추후에 마련할 수 있을지 이야기를 나눠봐야 하지만 어렵다면 팀 내에서라도 꼭 이런 부분 주도적으로 해보셔도 좋을 것 같습니다 ㅎㅎ\n\n질문해주셨던 내용 답변 드려보면요!\n\n이 부분은 아마 여러 고민을 하셨기 때문에 저와 비슷할 것 같은데, 과거에는 모든 코드에 메모이제이션을 하는 파와 절대 하지않는다 파(?)로 나뉘어져서 막 논쟁이 있었던 것 같은데, 최근에는 그런 사람들이 많이 사라진 것 같아요. 일반적으로 저희가 따르는 최적화 논리대로 섣부른 최적화는 하지 않되, 성능적으로 이슈가 발생하는 지점이 생긴다면 그 지점에 대해서 파악한 뒤 그 부분만 국지적으로 처리하는게 적절한 사용 방법인 것 같아요. 내부적으로 이미 처리가 어느정도 되어있고 최근 들어서는 모든걸 해결해주는 관점에서 개발을 하는 것은 아니지만 컴파일러의 발전도 지속되고 있잖아요. 필요한 부분이 발견되면 그 때 적용하는 형태로 하면 좋을 것 같습니다.\n\n고생하셨고 다음 주도 지금처럼 팀원들과 함께 잘 진행해주시면 좋을것 같습니다. 고생하셨어요!",
    "enrolledId": "682b2fc10a72040b80322848",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27316",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김효진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/30"
      }
    ],
    "feedback": "안녕하세요 효진님!! 다시 만나서 너무 반가워요 ㅋㅋㅋ\n\n> 과제를 진행하면서 다른 분들이 정리해준 글, pr들을 많이 참고했는데 많은 도움을 받을 수 있어서 좋았습니다. 다만 제가 스스로 코드를 뜯어보거나 분석해보는 등의 경험이 덜 한 채로 다른 분들이 정리해둔 글을 읽다보니 ‘나도 저렇게 직접 탐구를 해보고싶다..!’라는 자극을 받게 되더라고요. 다음 과제에서는 한 번 도전해보겠습니다.\n\n지금 과제에서도 충분히 잘 해주고 있어요! 처음부터 많은걸 하기보다 조금씩 조금씩 효진님의 바운더리를 넓혀가는 방식으로 시도해보시면 좋답니다 ㅎㅎ\n\n> 한 때 회사에서 팀원들과 나눴던 얘기 중 메모이제이션에 관한 내용이 있었는데요, ‘useMemo와 useCallback을 많이 사용하는 것이 오히려 성능에 좋지 않다고 하더라.’라는 이야기였습니다. 실제로 저희는 쓸 수 있는 거의 모든 곳에 useMemo와 useCallback을 사용하고 있습니다. 이 때 당시에는 스쳐지나가는 주제라 제대로 된 결론이 나지는 않았었네요.\n그런데 이번 주에 다른 팀의 멘토링 주제에서도 비슷한 내용이 언급되었고, 코치님의 답변은 ‘적절한 순간에 메모이제이션을 쓰기로 하면서부터 오히려 개발하는데 병목이 생길 수 있고 생산성이 떨어질 수 있으니 이럴거면 다 적용하는게 좋은 것 같다’ 였습니다. 오? 그럼 오히려 제대로 쓰고 있었을지도?^^ㅎㅎ\n명쾌한 답변 인 듯 하면서도 그렇다면 메모이제이션을 적절하게 써보기 위해 노력해본 적은 있는가? 모든 코드에 메모이제이션을 쓰고 있는 지금 상황이 선택적 메모이제이션에 대해 불편함을 느끼고 난 후의 결론인가? 라고 생각했을 땐 ‘아니!’ 라는 생각까지 도달했습니다. 프로젝트를 진행하면서 필요한 곳에서만 메모이제이션을 하는 방식을 적용해 본 경험이 있었다면 현재의 상황에 대해 가지고 있던 의문점을 좀 더 빨리 해소할 수 있었을 것 같습니다.\n\n아마 9주차 ~ 10주차 과제에서 메모이제이션에 대해 조금 더 다룰 것 같은데요, 이 때 효진님께서 잘 학습할 수 있도록 설계해보겠습니다 ㅋㅋㅋ\n\n3주차 과제 진행하느라 고생하셨어요! 특별한 질문은 없는 것 같아서, 일단 마무리하겠습니다 ㅎㅎ",
    "enrolledId": "6852955b851b4a7da86f237b",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27318",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이가은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/31"
      }
    ],
    "feedback": "안녕하세요 가은님! 3주차 과제 잘 진행해주셨네요 ㅎㅎ 너무 고생하셨습니다!\n\n> useAutoCallback은 나중에 적극적으로 도입해보고 싶어요. ESLint exhaustive-deps 규칙 위반으로 의존성 배열에 eslint-disable 주석 처리하던 부분을 사용하지 않고 의존성 배열을 신경쓰지 않아도 되서 실무에서 사용해도 너무 좋을 것 같다는 생각이 들었습니다.\n\n맞아요.. 저도 최근에 발견(?) 해서 유용하게 쓰일 수 있을 것 같다고 생각했고 부랴부랴 과제로 만든거였답니다 ㅋㅋ 알아봐주시니 감사할따름..\n\n> 테스트 코드에 대한 학습이 필요하다고 느꼈습니다. 테스트 주도 개발에 대해 익숙하지 않다보니 아직도 테스트 코드 기반으로 내부 로직을 이해하는데 시간이 오래걸립니다. (물론 발제 자료가 훌륭해서 많은 도움이 됩니다!) 하지만 주차별 과제를 진행하면서 계속 나아질 수 있는 부분이라고 생각하고 열심히 진행해보려고합니다 ☀️\n\n원하지 않아도 7주차에 디테일하게 학습할 수 있답니다 ㅎㅎ ~~짜증도 내면서~~\n\n> 현재 기능상에 문제는 없지만 useSyncExternalStore에 전달하고 있는 세번째 인자를 다음과 같이 사용해도 되는건지 궁금합니다. useStore에 serverSnapshot을 받는 경우를 생각하고 다음과 같은 코드로 사용해도 괜찮을까요?\n\n이게 금요일 코드리뷰 세션에서 했던 이야기군요! 결론은 \"서버에서 어떤식으로 동작할지에 대한 고찰이 필요함\" 이라고 생각해요. 이걸 라이브러리 코드 내부에 바로 지정하기보단 인자로 받아와서 처리해주는게 안전할 것 같네요!\n\n```tsx\nexport const useStore = <T, S = T>(\n  store: Store<T>, \n  selector: (state: T) => S = defaultSelector<T, S>,\n  serverSnapshot?: S // 서버사이드 스냅샷 옵셔널로 명시\n) => {\n  const shallowSelector = useShallowSelector(selector);\n  const { getState, subscribe } = store;\n  const value = useSyncExternalStore(\n    subscribe,\n    () => shallowSelector(getState()),\n    serverSnapshot ? () => serverSnapshot : undefined\n  );\n  return value;\n};\n```\n\n요로코롬..\n\n> ToastProvider에서 show와 hide 엑션을 최적화 하기 위해 코치님께서 언급해주신 최적화 방법중에 하나인 useState를 사용했습니다. useMemo를 사용하여 최적화 하신 분들도 많이 보였는데 기능상의 문제는 없으나 useState를 사용할 떄와 useMemo를 사용할때의 차이점이 궁금합니다. 분명 차이가 있을 것 같은데 어떤 점을 고려하고 선택해야할지 고민이에요.\n\n이 상황에서는 useMemo 를 사용하는게 목적에 더 적합하다고 생각해요! state는 \"상태 변이의 가능성\"을 염두하고 정의하는건고, useMemo는 \"값을 저장\"하는 목적으로 사용되는거라서요.\n그래서 지금 케이스에서는 useState보다는 useMemo가 좋다고 생각합니다!\n\n---\n\n고생하셨어요 가은님!!",
    "enrolledId": "68479688614fe33053f10a5f",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b2731c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양창훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/57"
      }
    ],
    "feedback": "Q. 고차함수란 무엇인가?\n\nA. 고차함수 어렵게 생각하지 마세요. 정말 아무것도 아닙니다. 너무 아무것도 아니에요 ㅎㅎㅎ\n\n고차함수른 함수를 인자로 전달받아서 새로운 함수를 리턴하는 함수에요. ㅎㅎ 별거 아니죵?\n\nfunction 고차함수란놈(인자로전달되는함수) {\n  return 새로리턴되는함수() {\n      return 인자로전달되는함수() + 1;\n  }\n}\n\n이런 함수가 고차함수입니다. 그래서 고차함수는 보통 클로저를 만들죵\n\nmemo라는 고차함수는 Component라는 함수를 인자로 받아서 memoComponent라는 새로운 함수를 리턴하죵?\n그래서 memo가 고차함수입니다 :)\n\nㅎㅎ 이해가 되셨으면 좋겠어요 정말 아무것도 아닙니다. 고차함수는~\n혹시 이해안되시면 디스코드로 다시 알려주세욥\n",
    "enrolledId": "6835a5664e1c73fff2ddfa55",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b2731e",
    "result": "PASS",
    "isBestPractice": true,
    "name": "허정석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/19"
      }
    ],
    "feedback": "정석님 배포 링크에 감동을 받았네요. 그나저나 gemini cli 결과를 보는 부분에서는 저 파랑색은 참 색이 화려하네요.\n\n전에 말했던것 처럼 이전 항해를 하셨던 분들 중 정말 많은 분들 중에 리액트를 사용해보지 않았던 분들이 계셨지만 이렇게 문서까지 남기시면서 하셨던 분들은 정말 없었어요. 너무너무 잘해주고 계십니다 :+1\n이런 부분들이 이제 추후에 리액트를 활용해 과정을 해나가시는데 있어서 적절하게 요소요소마다 API를 고르고 사용하는데 큰 도움이 될 것 같네요.\n\n질문 주신거 바로 살펴보면요.\n\n> 개선이 필요한 코드에서도 useAutoCallback 를 언급했습니다. latestFnRef와 dispatcherRef라는 두 개의 ref를 사용하여 구현했습니다. 주석으로 표기를 해놨으나 패턴을 쉽게 이해하기는 어려울 것으로 보입니다. 구조를 명확하지만 쉽게 파악할 수 있는 방법에 대해 리뷰 부탁드리겠습니다. 감사합니다.\n\n우선 지금 구현을 보면 중간 과정에 어떤 의도가 있었는지 제가 파악은 못했지만 지금의 구조를 수정한다면 dispatcherRef가 불필요한 것 같아요! 바로 latestFn을 호출 하는 방식으로 하면 충분할 것 같아요. 혹시 궁금하셨던 부분이나 의도하셨던 부분이 제가 답변 드린 부분과 달랐다면 꼭 다시 질문주세요! (지훈님 코드리뷰 하시면서 본 것 같네요 ㅋㅋㅋ 동일한 의견입니다)\n\n지치신거 아니죠? 정석님 지켜보겠습니다.. 다음 주도 화이팅입니다!",
    "enrolledId": "68479c49614fe33053f4b25d",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27320",
    "result": "PASS",
    "isBestPractice": true,
    "name": "박준형",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/26"
      }
    ],
    "feedback": "안녕하세요 준형님!\n역시 믿고보는 준형님의 과제입니다 ㅎㅎ\n\n> 이러한 학습 과정에서 Robert Cecil Martin의 \"패러다임은 개발자의 권한을 박탈한다\"는 말이 깊이 와닿았습니다. 좋은 코드란 개발자의 자유를 의도적으로 제한함으로써 예측 가능하고 함께 작성하기 좋은 구조를 강제하는 코드라는 철학을 갖게 되었습니다.\n\n자유를 박탈한다는 표현이 무척 와닿네요 ㅋㅋ 사실 프레임워크 기반의 코드가 그런 편이죠.\n\n> 개인적인 소견으로는 답이 없는 과제들이 가장 어렵고 힘들었지만 제일 인상적이었습니다. 정해진 정답을 찾아가는 과정이 아니라, 나의 생각들을 직접 정리해가면서 구체화시켜가는 과정이었기 때문입니다. 이러한 과정을 통해 단순히 기술적 구현 능력뿐만 아니라, 개발자로서의 사고 체계와 철학을 정립할 수 있는 귀중한 기회가 되었습니다.\n\n오호.. 그렇군요! 의도한 부분은 아니었어요 ㅎㅎ 사실 저는 답이 있는걸 별로 좋아하진 않는 편이긴 해요. 다만... 과정의 특성상 어느정도의 솔루션이 필요하다보니 밸런스를 맞추는 과정에서 이러한 모습이 되었네요.\n\n준형님이 좋은 인사이트를 주셔서, 다음 기수는 조금 더 어렵게(?) 만들어갈 수 있을 것 같아요 ㅋㅋ 감사합니다!\n\n> 결국 내 생각은 메모이제이션 자체가 나쁜 도구는 아니지만, 사용하기 전에 \"왜 이 컴포넌트에서 불필요한 리렌더링이 발생하는가?\"라는 질문을 먼저 던져봐야 한다는 것이다. Dan Abramov가 말한 것처럼 올바른 컴포넌트 구조는 단순히 성능 개선뿐만 아니라 데이터 플로우를 명확하게 만들고, props drilling을 줄이며, 전체적인 코드 품질을 향상시킨다. 이런 측면에서 구조적 개선이 우선되어야 한다고 본다.\n\n저도 동의합니다! 이런 훈련이 계속 되어야 잘 사용할 수 있는 것 같아요.\n\n---\n\n이 외에는 특별한 질문이 없는 것 같아서 피드백은 여기서 마무리하겠습니다 ㅎㅎ\n너무 고생 많으셨어요 준형님!!",
    "enrolledId": "6847a79c614fe33053fc070a",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27322",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김수민",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/50"
      }
    ],
    "feedback": "안녕하세요 수민님! 3주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!!\n\n> 1. 값은 useMemo, 함수는 useCallback 아니었나?\n\n저는 둘 다 사용할 수 있다고 생각해요 ㅋㅋ\n\nuseMemo로 만드는 경우를 보자면\n```tsx\nuseMemo(() => debounce(hide, DEFAULT_DELAY), []);\n```\n\n요로코롬 만들 수 있겠죠!?\n\n그리고 다시 useCallback을 구현할 때 useMemo를 이렇게 사용하고 있어요.\n\n```tsx\nfunction useCallback(fn, deps) {\n\treturn useMemo(() => fn, deps)\n}\n```\n\n그래서 useMemo로 만든걸 useCallback으로 변환하다고 치면... 이런 모습이겠죠!?\n```tsx\nuseCallback(debounce(hide, DEFAULT_DELAY), []);\n```\n\n---\n\n> { current: initialValue } 이 객체가 렌더링마다 새로 생성되어서 그랬던 거였습니다!\n\n이게 무척 좋은 인사이트라고 생각합니다 ㅎㅎ state에 초기값에 큰 배열이나 연산비용이 필요한 그런 값이 들어간다면..\n예를들자면 이런 모습인거죠.\n\n```tsx\nconst randomValues = () => Array.from({ length: 10000000 }).map(v => Math.random())\n\nconst Component = () => {\n\tconst [values, setValue] = useState(randomValues())\n}\n```\n\n이렇게 작성할 경우, randomValues가 렌더링을 할 때 마다 실행이 되고, 불필요한 컴퓨팅 연산을 사용하게 된답니다!\n그래서 이럴 때 요로코롬 표현할 수 있어요.\n\n```tsx\nconst randomValues = () => Array.from({ length: 10000000 }).map(v => Math.random())\n\nconst Component = () => {\n\tconst [values, setValue] = useState(() => randomValues())\n}\n```\n\n이러면 최초에 한 번 렌더링 할 때만 randomValues를 실행하는거죠.\n\n>  코드 리뷰는 아니지만..! 저의 이력서에 HOC를 만들어서 문제를 해결했다 라는 내용이 있는데, 면접에 갈 때마다 HOC 왜 썼냐고 물어보고, 어떤 회사는 좀 지나간(?) 방식이고 다른 방법도 있었을텐데 왜 그걸 선택했냐고 물어보더라구요 솔직히 사수가 HOC로 해결해보는 게 어떻겠냐고 해서 그냥 쓴 거라서.. 할 말이 없었습니다ㅠㅠ 이후 학습을 통해 HOC의 장점에 대해 말을 할 수는 있는 상태에 이르렀으나, hook에 비해 어떤 부분이 좋다 이런 건 아직 잘 모르겠어요ㅎㅎ 코치님이 생각하는 HOC의 장점은 무엇인가요!\n\n제가 생각하는 장점은, 훅보다 높은 추상화 수준을 유지할 수 있다는 점!?\n생각보다 여기저기 많이 쓰이고 있어요.\n\nhttps://static.toss.im/slash24/QR/slash24-09.pdf\n\n이건 토스 슬래시 24 발표 자료 중에 하나인데요, 한 번 살펴보시면 좋겠어요!\n쉽게 말해서 로깅을 HoC를 자동화 하는 방법? 이라고 봐주시면 좋을 것 같습니다 ㅎㅎ\n\nHoC가 지나간 방식이라기보단, 어떤 문제는 더 잘 해결해줄 수 있는 방법이라고 생각합니다.",
    "enrolledId": "68497d2484ed0f3459b09aca",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27324",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여찬규",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/37"
      }
    ],
    "feedback": "찬규님 고생하셨어요!\n글에는 하나밖에 적지 않아 아쉽다고 적어주셨지만, 사실 과제보다 더 무언가를 하는 것 자체가 놀라운거니까요. 너무 잘하셨습니다.\n회고도 잘 작성해주셨고 과제도 잘 해주셨어요.\n자랑해주신 함수도 변화된 모습을 보니 함수도 훨씬 가독성이 좋아졌네요 ㅎㅎ :+1\n\n질문 주신 부분 빠르게 답변 들어가보면요!\n\n> 1. shallowEquals\n\n큰 차이는 분~명 없을것 같긴 하지만, 그럼에도 자주 호출되는 함수이기 때문에 실제로 체크를 한번 해보면 좋을 것 같아요. 작성해주신것처럼 가독성은 좋아지지만 결국 함수가 익명으로 호출이 될때마다 선언이 매번 되기 때문에요. 테스트를 해보는게 그렇게 어렵지 않을 것 같아서 한번 데이터의 양을 임의로 깊게하거나 크게 해서 비교해보면 좋을것 같아요! (몇 ms차이는 비교가 어려우니 명시적으로 차이가 나도록 크게요.) 이런 부분도 한번 정리해서 공유해줘도 좋을것 같네요 ㅎㅎ\n\n> 2. useShallowSelector\n\n넵! 아마 언마운트 될때 GC가 될 것 같아요. 다만, 이것과 별개로 비슷하게 메모이제이션이나 클로저 같이 메모리상으로 이점을 누리기 위해 최적화 방식을 쓰는 경우나 DOM 이벤트 할당처럼 명시적으로 해제를 하는게 가독성 측면이나 혹시나 예측이 안되는 부분에 있어서 혹시 있을 일을 미연에 방지하는 좋은 습관일 수 있어요. 물론 브라우저가 똑똑해지고 잘 해주겠지만,이런 부분도 함께 챙겨보시면 더 좋은 습관이 되지 않을까 싶습니다!\n\n> 3. ToastProvider\n\n성능 관점에서 나누는 것도 좋겠지만, 같은 이야기를 하는 같은 관심사의 내용이 분리될만큼 성능적으로 최적화가 필요할까! 라는 지점에 대해서도 함께 고민해보면 좋을것 같아요. 상황에 따라 판단하겠지만, 지금의 상황이라면 메모이제이션을 사용해도 될 만큼 복잡한 상황은 아니지 않을까.. 함께 두는게 더 가독성이나 관심사 분리 측면에서도 좋지 않을까 라는 매우 개인적인 의견이 있습니다 ㅎㅎ 언제 나누고 안나누고는 늘 상황에 따라 다를 것 같고 사람마다도 다를 것 같아요. 대신 일관된 규칙을 갖고 분리하는게 제일 중요한 것 같아요. 찬규님 입장에서 한번 다시 고민해보는것도 좋을 것 같습니다! 정답은 없어요.\n\n이번 주도 고생 많이 하셨고 다음주도 화이팅입니다!",
    "enrolledId": "684a8d6184ed0f34595bafbf",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27326",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/59"
      }
    ],
    "feedback": "안녕하세요 상수님, 수고하셨습니다! 이번 과제는 React의 내장 훅들을 직접 구현해보면서 프레임워크가 어떻게 상태를 관리하고 최적화하는지 깊이 이해하는 것이 목표였습니다. 해당 구현을 통해서 말로는 설명하기는 어렵더라도 구체적인 원리등을 깨닫게 되는 시간이었기를 바래요.\n\n회고에서 재귀함수에 대한 새로운 인식을 얻으신 점이 재밌었습니다. \"알고리즘용 함수라는 인식이 깨져버린 거 같다\"고 했는데 그렇죠. 재귀는 상당히 자주 쓰이는 패턴입니다. 자기 스스로를 부르는 함수라는 개념이 어려운데 이번 기회에 잘 이해하게 된 것 같아서 좋네요.\n\n\"아직은 잘 모르겠다 좀 더 공부를 해야 할 거 같다\"고 하셨지만, 분명 알게 된 것은 많을 거라고 생각해요. 개발자는 내가 알고 있는 것을 언어의 형태로 또 잘 표현하는 것이 중요한 능력인 만큼 회고에서 잘 모르겠다면 최대한 어떻게 뭘 모르겠는지를 구체적으로 적어보길 바래요!\n\n수고하셨습니다. 기술적 깊이를 탐구하는 자세와 동료들의 피드백을 적극적으로 수용하는 태도가 정말 인상적입니다. 앞으로 진행될 클린코드 챕터에서도 이런 탐구 정신을 계속 발휘해 주시기 바랍니다. 화이팅입니다! :)",
    "enrolledId": "684aad6b84ed0f3459763b8d",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27328",
    "result": "PASS",
    "isBestPractice": false,
    "name": "강병준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/12"
      }
    ],
    "feedback": "Q. shallowEquals와 deepEquals의 요구사항에서 주어진 (1) 두 값이 정확히 동일한지, (2) 객체가 아닌 경우 처리, … 등의 케이스에 대해서는 굳이 다루지 않더라도 a, b 매개변수가 객체가 아니라면 결국 return 문에서 값과 타입을 함께 비교하지 않아도 된다고 생각하여 추가하지 않았는데 적절한 판단일까요?\n\nA. 내용을 보면 커버가 가능할 수 있지만 몇몇 케이스를 놓치는 부분도 있는 것 같아요 물론 다른 코드에 의해서 해결될 수 있지만 두값이 NaN인 경우 false가 나올 수도 있을 것 같아요.\n일부 코드가 간결할 수 있지만 정확히 모든 상황을 커버하는지는 좀 살펴봐야할 것 같아욥\n\nQ. AI를 잘 활용하는 방법은 AI에게 모든 것을 맡기는 것이 아닌, 내가 생각하지 못한 것을 함께 고민하고 지식을 확장하는 도구로서 생각하고 이번 과제를 진행하였습니다. 다만, 이번 과제에서 AI를 조금은 소극적으로 사용한 것이라는 생각이 드는 것 같습니다. 제가 제대로 과제를 수행한 게 맞을까요?\n\nA. 저는 병준님의 사용법이 맞다고 생각합니다. 움 코치분들 마다 생각은 다를 수 있겠지만 저는 이번 항해의 목표가 바이브 코딩 보다는 FE 딥다이브라고 생각합니다. 궁금한 것을 물어보되 되도록이면 수강생이 충분히 이해하면서 직접 코딩하는 게 많을수록 배워가는 것이 많을거라 생각합니다.\nFE 딥다이브를 이번항해로 배우고 바이브 코딩과 인공지능의 활용은 별도로 학습해야하지 않을까 싶어요..",
    "enrolledId": "684abe3784ed0f345985eaaf",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b2732a",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정건휘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/44"
      }
    ],
    "feedback": "건휘님 이번에도 무난히 합격하셨네요 :) \n과제  MR에 회고 내용이 없던데(금요일 오후7시 기준)\n제가 뭔가 잘못본건 아닌지 모르겠네욥.\n내용을 보면 각 모듈을 스펙을 md로 만들어뒀던데 호오.. 이건 뭔죵 ㅎㅎ\n수고많으셨습니다!",
    "enrolledId": "6859f165c85f37c525cd8f44",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b2732c",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정민기",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/8"
      }
    ],
    "feedback": "안녕하세요 민기님! 3주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n---\n\n\n리액트 렌더링 과정을 무척 재밌게 서술해주셨어요 ㅋㅋ 다른 사람들도 이해하기 쉽도록 만들어주셨네요!!  재밌게 작성해주셔서 감사합니다 ㅎㅎ\n\n> 2번의 무조건 메모이제이션 전략은 과연 괜찮을까에 대한 고민이 있었다. 개발 과정에서 메모이제이션(Memoization)을 적용할지 말지를 고민하는 것 자체가 때로는 더 큰 비용과 병목 현상을 초래한다. 적절한 순간에 메모이제이션을 해야지라고 판단하고 적용 포인트를 찾는 데 드는 시간과 인지적 부하가, 실제로 얻게 될 성능 이득보다 커질 수 있다는 의미가 됨. 내나름의 결론은 그냥 다 적용하자라고 생각이든다.\n\n물론 저의 의견을 따라가는 것도 좋지만, 추후에 민기님께서 스스로 납득할 수 있는 경험을 해보는게 중요하다고 생각해요! 그러기 위해선 많이 해보는 방법 밖에는.... 없을 것 같네요 ㅋㅋㅋ 여튼 화이팅입니다!\n\n> ToastProvider 구현중 질문드립니다. 저는 useCallback을 사용하였는데요. 다른분들은 useAutoCallback을 사용하신분들이 몇분 있으시더라구요. showWithHide는 stableShow만 의존성으로 갖고 있고, stableShow는 useCallback(show, [])로, 사실상 불변. hideAfterRef는 ref이므로, ref 객체 자체는 변하지 않아보입니다. 즉, 현재의 의존성 배열([stableShow])은 사실상 빈 배열과 동일한 효과를 내는거같아보입니다. 현재처럼 의존성이 명확하고, 특별히 바뀔 일이 없는 경우에 useAutoCallback을 쓰는게 오히려 더 좋은 판단이였을까요? 아님 더 좋은 방안이 있었을까요..?\n\n잘 살펴보시면 구현된 내용이 useAutoCallback과 굉장히 유사한데요, 지금 코드 그대로 useAutoCallback으로 바꾸면 사실 동작은 똑같습니다.\n\n```tsx\nconst hideAfter = useAutoCallback(debounce(hide, DEFAULT_DELAY));\n```\n\n다만 useAutoCallback의 문제는, 함수를 고정시키는게 아니라 변화시킨다는 점입니다. 그래서 이럴 때 오히려 useAutoCallback이 아니라 useMemo나 useCallback을 사용해야 정상적으로 동작할 것 같아요!\n\n```tsx\n// useMemo로 사용할 경우\nconst hideAfter = useMemo(() => debounce(hide, DEFAULT_DELAY), []);\n\n// useCallback으로 사용할 경우\nconst hideAfter = useCallback(debounce(hide, DEFAULT_DELAY), []);\n```\n\n이렇게 작성해야 함수가 변하지 않고 고정이 되니까요!\n\nuseAutoCallback을 사용하면 렌더링이 될 때 마다 최신 함수로 변경하기 때문에 문제가 될 수 있답니다 ㅎㅎ",
    "enrolledId": "684cd08584ed0f3459eb21b9",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b2732e",
    "result": "",
    "isBestPractice": false,
    "name": "한재원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "685e1e58c85f37c52567068f",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "687b184381fa7a3b62b27330",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정용준",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "687b184281fa7a3b62b2716e",
          "name": "STEP06 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-19T13:00:02.815Z",
          "updatedAt": "2025-07-19T13:55:25.332Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter1-3/pull/40"
      }
    ],
    "feedback": "용준님 고생하셨어요!\n회고를 아숩게도 전부 작성해주시지는 않았는데 한 주 마무리를 하면서 정리를 하는것도 코드를 작성하는 것 만큼 중요하다고 생각해요!\n다음 과제 진행하기 전에 한 주 기억이 생생할 때 이런 부분 잘 정리해주시고 넘어가면 훨씬 더 좋지 않을까 싶습니다.\n과제는 잘해주셨어요~~\n\n질문 주신 부분에 대해서 이어서 답변드려보면요!\n아마 대부분의 개발자들도 비슷하겠지만, 우선은 권장하는대로 모든 의존성을 넣어 관리를 하고 무한 루프나 불필요한 렌더링이나 성능 이슈가 있을 때 제거를 하는 방향으로 진행하는게 필요한 것 같아요.\n그리고 그 부분에 대해서 주석으로 명확하게 방향을 남기는것도 추후 문제가 발생했을 때 디버깅을 명확하게 할 수 있는 방법인 것 같구요!\n구현을 해보시면 알겠지만, 생각보다 의존성 배열에 값을 제외하는 경우가 있어 명확한 규칙을 만들어두고 그 방향으로 진행하는게 무조건 필요할거에요.\n\n고생하셨고 다음주도 파이팅입니다!!",
    "enrolledId": "685e1202c85f37c525604396",
    "assignmentId": "687b184281fa7a3b62b27189",
    "assignmentName": "STEP06 JS & React 딥다이브 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47c03",
    "result": "",
    "isBestPractice": false,
    "name": "정명훈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "6697caec1cfd0ff2d737c0f6",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c05",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "박의근",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/63"
      }
    ],
    "feedback": "",
    "enrolledId": "671993df7e7008df3ebb7f4e",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c07",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김연수",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/58"
      }
    ],
    "feedback": "",
    "enrolledId": "6792d9a67ea42ce47df4e27e",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c09",
    "result": "",
    "isBestPractice": false,
    "name": "김지혜",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "http://github.com/hanghae-plus/front_6th_chapter2-1/pull/22"
      }
    ],
    "feedback": "",
    "enrolledId": "679ce583ada1879bb5adddf0",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c0b",
    "result": "",
    "isBestPractice": false,
    "name": "김소희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/43"
      }
    ],
    "feedback": "",
    "enrolledId": "67cae59e3255d88e88383b13",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c0d",
    "result": "",
    "isBestPractice": false,
    "name": "김수현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/19"
      }
    ],
    "feedback": "",
    "enrolledId": "681dd962e7dc2519a9b4585f",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c0f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한아름",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/60"
      }
    ],
    "feedback": "",
    "enrolledId": "68205c830a72040b80c72cf1",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c11",
    "result": "PASS",
    "isBestPractice": false,
    "name": "주산들",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/10"
      }
    ],
    "feedback": "",
    "enrolledId": "6821d2570a72040b80c25f8c",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c13",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최용훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/3"
      }
    ],
    "feedback": "",
    "enrolledId": "682334f50a72040b80ba7b91",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c15",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김민지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/29"
      }
    ],
    "feedback": "",
    "enrolledId": "68245a760a72040b807a5c2c",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c17",
    "result": "",
    "isBestPractice": false,
    "name": "오하늘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/16"
      }
    ],
    "feedback": "",
    "enrolledId": "682457100a72040b80776d24",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c19",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최재환",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/52"
      }
    ],
    "feedback": "",
    "enrolledId": "68245c9b0a72040b807c704a",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c1b",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "임규원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/26"
      }
    ],
    "feedback": "",
    "enrolledId": "68247d1b0a72040b8094ff55",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c1f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박소연",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/30"
      }
    ],
    "feedback": "",
    "enrolledId": "6824c3ac0a72040b80cbc2a3",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c1d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "유윤우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/15"
      }
    ],
    "feedback": "",
    "enrolledId": "68249f4e0a72040b80b3568e",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c21",
    "result": "",
    "isBestPractice": false,
    "name": "이유진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/53"
      }
    ],
    "feedback": "",
    "enrolledId": "682546800a72040b80150daf",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c23",
    "result": "PASS",
    "isBestPractice": false,
    "name": "장루빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/59"
      }
    ],
    "feedback": "",
    "enrolledId": "682578680a72040b803edb7c",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c25",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이의찬",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/37"
      }
    ],
    "feedback": "",
    "enrolledId": "682576d80a72040b803dc418",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c27",
    "result": "",
    "isBestPractice": false,
    "name": "이지현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/48"
      }
    ],
    "feedback": "",
    "enrolledId": "682566140a72040b80300e04",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c29",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신희원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/38"
      }
    ],
    "feedback": "",
    "enrolledId": "68254af40a72040b801869c8",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c2b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신홍준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/57"
      }
    ],
    "feedback": "",
    "enrolledId": "682983e90a72040b80d5107f",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c2d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정도은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/35"
      }
    ],
    "feedback": "",
    "enrolledId": "682d428a0a72040b80bf93a5",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c33",
    "result": "",
    "isBestPractice": false,
    "name": "이태영",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/24"
      }
    ],
    "feedback": "",
    "enrolledId": "6825c7b00a72040b8086a6af",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c2f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이은지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/55"
      }
    ],
    "feedback": "",
    "enrolledId": "6833c8d54e1c73fff246f798",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c31",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양창훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/39"
      }
    ],
    "feedback": "",
    "enrolledId": "6835a5664e1c73fff2ddfa55",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c35",
    "result": "",
    "isBestPractice": false,
    "name": "이민재",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/32"
      }
    ],
    "feedback": "",
    "enrolledId": "682b2fc10a72040b80322848",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c37",
    "result": "PASS",
    "isBestPractice": false,
    "name": "허정석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/41"
      }
    ],
    "feedback": "",
    "enrolledId": "68479c49614fe33053f4b25d",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c39",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이진희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/34"
      }
    ],
    "feedback": "",
    "enrolledId": "683f18534e1c73fff2105065",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c3b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/20"
      }
    ],
    "feedback": "",
    "enrolledId": "683fa08b4e1c73fff25b6b7e",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c3d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "임두현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/27"
      }
    ],
    "feedback": "",
    "enrolledId": "684149af4e1c73fff27b2528",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c3f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양성진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/42"
      }
    ],
    "feedback": "",
    "enrolledId": "68417c4a4e1c73fff2a66073",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c41",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여찬규",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/61"
      }
    ],
    "feedback": "",
    "enrolledId": "684a8d6184ed0f34595bafbf",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c43",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이가은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/36"
      }
    ],
    "feedback": "",
    "enrolledId": "68479688614fe33053f10a5f",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c49",
    "result": "",
    "isBestPractice": false,
    "name": "김수민",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/50"
      }
    ],
    "feedback": "",
    "enrolledId": "68497d2484ed0f3459b09aca",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c45",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정유열",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/11"
      }
    ],
    "feedback": "",
    "enrolledId": "6847a18a614fe33053f85c23",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c47",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박준형",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/4"
      }
    ],
    "feedback": "",
    "enrolledId": "6847a79c614fe33053fc070a",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c4d",
    "result": "",
    "isBestPractice": false,
    "name": "조영민",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/45"
      }
    ],
    "feedback": "",
    "enrolledId": "684a92b384ed0f34596009d9",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c4f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/23"
      }
    ],
    "feedback": "",
    "enrolledId": "684aad6b84ed0f3459763b8d",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c4b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "강병준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/21"
      }
    ],
    "feedback": "",
    "enrolledId": "684abe3784ed0f345985eaaf",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c51",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이지훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/5"
      }
    ],
    "feedback": "",
    "enrolledId": "6852337e851b4a7da82175ff",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c53",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "정민기",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/8"
      }
    ],
    "feedback": "",
    "enrolledId": "684cd08584ed0f3459eb21b9",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c55",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김효진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/9"
      }
    ],
    "feedback": "",
    "enrolledId": "6852955b851b4a7da86f237b",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c57",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박창준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/17"
      }
    ],
    "feedback": "",
    "enrolledId": "6825b2810a72040b8071d8af",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c59",
    "result": "PASS",
    "isBestPractice": true,
    "name": "김휘린",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/51"
      }
    ],
    "feedback": "",
    "enrolledId": "6853a924851b4a7da8357a5c",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c5d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "현지수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/46"
      }
    ],
    "feedback": "",
    "enrolledId": "68542193851b4a7da8a3a270",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c5b",
    "result": "",
    "isBestPractice": false,
    "name": "장희진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/18"
      }
    ],
    "feedback": "",
    "enrolledId": "6853f85d851b4a7da883412b",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c5f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여진석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/62"
      }
    ],
    "feedback": "",
    "enrolledId": "685aa4a8c85f37c52555e223",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c61",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정건휘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/56"
      }
    ],
    "feedback": "",
    "enrolledId": "6859f165c85f37c525cd8f44",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c63",
    "result": "",
    "isBestPractice": false,
    "name": "정용준",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/12"
      }
    ],
    "feedback": "",
    "enrolledId": "685e1202c85f37c525604396",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c65",
    "result": "",
    "isBestPractice": false,
    "name": "한재원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "685e1e58c85f37c52567068f",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c67",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김유현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/25"
      }
    ],
    "feedback": "",
    "enrolledId": "685f3badc85f37c5250804fa",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c69",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이정우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/54"
      }
    ],
    "feedback": "",
    "enrolledId": "685e5710c85f37c5258cd6b6",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c6b",
    "result": "PASS",
    "isBestPractice": false,
    "name": "윤영서",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/6"
      }
    ],
    "feedback": "",
    "enrolledId": "68623210c85f37c525712305",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c6d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "권지호",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/7"
      }
    ],
    "feedback": "",
    "enrolledId": "686387e2c85f37c52555fc22",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47c6f",
    "result": "",
    "isBestPractice": false,
    "name": "차현빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b5e",
          "name": "STEP07 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.033Z",
          "updatedAt": "2025-07-26T13:56:04.680Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "68678936c85f37c52506d1fc",
    "assignmentId": "688452c320b6a864e1c47b6b",
    "assignmentName": "STEP07 클린 코드 기본과제"
  },
  {
    "_id": "688452c320b6a864e1c47cab",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김유현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/25"
      }
    ],
    "feedback": "안녕하세요 유현님! 4주차 과제 너무 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!!\n\n지금 기본과제에서 심화과제로 이어지는 부분이 어느정도 매끄럽게 느껴지는데 아쉬운 부분도 있어요.\n\n기본과제의 calcCartTotals과 심화과제의 calcCartTotals을 보면 함수는 똑같은데 내용이 조금 상이합니다.\n\n아예 기본과제에서 만든 코드를 심화과제에서 불러와서 사용하는 방식을 상상해보면 어떤식으로 코드를 분리하면 좋았을지 감이 잡혔을 것 같아요!\n\n---\n\n> CartItem에서 매번 find 수행 시 대규모 productList에서의 성능 저하 가능성이 있을 것 같습니다. React.memo 외에 Context API or memoizedProduct 전달이 더 나은 선택일까요?\n\n지금은 아예 ProductList를 넘기고 있는데요,\n딱 필요한 데이터만 가져와서 넘겨주는 방식을 상상해보시면 좋을 것 같아요.\n```tsx\n\n// 어딘가에서 carts와 products를 정규화해서 관리해야 함.\nconst toMap = (items, targetKey) => items.reduce((acc, item) => ({\n\t...acc,\n\t[item[targetKey]]: item\n}), {});\n\nconst carts = cartList => toMap(cartList, 'id');\n\nconst products = productList => toMap(productList, 'id');\n\nconst Cart = ({ carts, products , onCartClick }: CartProps) => {\n\tconst cartWithProduct = useMemo(\n\t\t() => Object.values(carts).map(cart => ({\n\t\t\t...cart,\n\t\t\tproduct: products[cart.id]\n\t\t})),\n\t\t[carts, products]\n\t)\n  return (\n    <div\n      id=\"cart-items\"\n      role=\"group\"\n      aria-label=\"Cart Items\"\n      onClick={onCartClick}\n    >\n      {cartItems.length === 0 ? (\n        <p className=\"text-center text-gray-500 py-10\">\n          장바구니가 비어있습니다.\n        </p>\n      ) : (\n        cartWithProduct.map(({ quantity, product }) => {\n          return (\n            <CartItem key={item.id} {...product} quantity={quantity} />\n          );\n        })\n      )}\n    </div>\n  );\n};\n```\n\n요로코롬..\n그리고 CartItem을 메모이제이션 해주는거죠 ㅎㅎ\n이러면 CartItem의 props 중 객체가 없기 때문에 높은 확률로 메모이제이션이 잘 적용될 수 있어요.\n\n그리고 context를 만약 CartItem에서 불러온다면 결국 최적화가 제대로 안 될 확률이 높답니다.\n차라리 zustand나 jotai 등을 이용하여 최적화를 하는게 더 좋은 방법이라고 생각해요!\n",
    "enrolledId": "685f3badc85f37c5250804fa",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cad",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "이정우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/54"
      }
    ],
    "feedback": "안녕하세요 정우님!\n4주차 과제 잘 진행해주셨네요 ㅎㅎ \n다만 심화과제까지 할 시간적 여유가 부족했나보네요 ㅠㅠ\n\n일단 현재 진행된 모습을 보니 클린 아키텍쳐로 구성해주신 것 같아요!\n이렇게 구성했을 때의 장단점을 정우님께서 기록해주시면 어땠을까 싶네요..!\n\n저의 개인적인 시야로 봤을 때 infra와 domain은 구분이 되어 있으나, infra의 코드가 외부 의존을 하는게 아니라 domain만 의존하고 있어서 사실 없어도 되는 레이어 아닌가!? 라는 생각이 들어요 ㅎㅎ\n\n특별한 질문은 없어서 여기서 마무리하도록 하겠씁니다!",
    "enrolledId": "685e5710c85f37c5258cd6b6",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47caf",
    "result": "PASS",
    "isBestPractice": false,
    "name": "윤영서",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/6"
      }
    ],
    "feedback": "안녕하세요 영서님~ 4주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다.\n이것저것 같이 병행하는게 많아서 쉽지 않았을텐데... 존경합니다.\n\n---\n\nAI 사용 과정에 대한 내용이 재밌네요 ㅋㅋ\n이게 제가 이상한건진 모르겠는데, AI가 다 해줄꺼야! 라는 기대 자체를 별로 안 하고 있다보니.. 어차피 내가 해야돼~ 라고 생각하면 마음이 편안해진답니다.\n\n내가 더 잘 할 수 있는 부분과 AI가 더 잘 할 수 있는 부분을 구분해서 작성하는거죠 ㅎㅎ\n\n그리고 처음부터 Cursor를 채찍질하기보단 ChatGPT 같은 조금 하찮은(?) 녀석에게 명령을 어떻게 하면 잘 동작할까 고민하다보면 Cursor나 Claude 같은 고급 인력을 더 잘 사용할 수 있답니다!\n\n---\n\n과제에 대한 특별한 질문은 없어서 여기서 마무리할게요!\n\n다만, basic에 있는 코드를 advanced에서 잘 활용했는가!? 에 대해 살펴보면 아쉬운 부분이 많이 있어요. service 파일이 몇 개 사라졌다거나... 함수가 그대로 쓰이는게 없다거나... 그렇네요.\n\n아예 basic과 advanced가 코드를 공유하도록 만들었으면 어땠을까 라는 생각도 들어요. advanced가 basic의 코드를 그대로 가져다 사용하는거죠 ㅎㅎ\n\n여튼 고생했어요! 다음주도 화이팅!",
    "enrolledId": "68623210c85f37c525712305",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cb1",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "박의근",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/63"
      }
    ],
    "feedback": "안녕하세요 의근님!\n이번주는 많이 바쁘셨나보군요 ㅎㅎ\n그래도 팀원들이 응원하는 모습을 보니까 마음이 따듯해져서 좋네요!\n\n너무 무리하지 말고 할 수 있는 만큼만 해주세요!! 화이팅입니다!!",
    "enrolledId": "671993df7e7008df3ebb7f4e",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cb3",
    "result": "",
    "isBestPractice": false,
    "name": "정명훈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "6697caec1cfd0ff2d737c0f6",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cb9",
    "result": "",
    "isBestPractice": false,
    "name": "김지혜",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "http://github.com/hanghae-plus/front_6th_chapter2-1/pull/22"
      }
    ],
    "feedback": "",
    "enrolledId": "679ce583ada1879bb5adddf0",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cb5",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김연수",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/58"
      }
    ],
    "feedback": "연수님 고생하셨습니다!\n기본 코드 개선은 잘 해주신 것 같아요 ㅎㅎ\n전반적으로 AI를 활용해 개선해주신 것 같은데요. 지금도 잘 하셨지만 작업 단위를 명확한 기준으로 잡고 차근차근 변경해 나간다면 좀 더 좋을 것 같아요. 테오가 클린코드 관련해서 설명해줬던 여러가지 키워드들을 명시해서 작업을 지시해도 괜찮을 것 같구요. 고생하셨고 지금은 따로 회고가 작성이 되어있지 않은데 과제를 마무리하시고 나서는 회고를 작성하시는게 큰 도움이 되니 더 늦기 전에 작성해보시면 좋을 것 같아요. \n\n담주도 화이팅입니다~",
    "enrolledId": "6792d9a67ea42ce47df4e27e",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cb7",
    "result": "",
    "isBestPractice": false,
    "name": "김수현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/19"
      }
    ],
    "feedback": "",
    "enrolledId": "681dd962e7dc2519a9b4585f",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cbb",
    "result": "PASS",
    "isBestPractice": false,
    "name": "한아름",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/60"
      }
    ],
    "feedback": "수고했습니다! 이번 과제는 레거시 코드를 React 기반의 현대적인 아키텍처로 고도화하는 것이 목표였어요. 회고를 보아하니 시간이 부족해서 원하는 바를 다 하지 못한 부분이 정말로 아쉬웠나봐요. 뭔가 본인이 아쉬운 바가 많아서 그런지 체크포인트들도 비워둔 곳이 많네요ㅎㅎ\n\n그렇지만 결과적으로 잘했습니다. 더티코드가 어쩄든 React위에서 돌아가고 있고 리팩토링이 되었고 적절히 코드 분리도 되었고 테스트도 잘 통과하네요.\n\n아쉽다고 느껴진다는 감각은 좋은 겁니다. 의욕이 있고 내가 목표하고자 하는 이상이 충분히 높다는 것이지요. 물로 내가 만든 이상이 너무 높아서 그 기준치에 도달하지 못한다고 해도 지금까지 내가 한 과정이나 결과물을에 대해서 가치평가를 낮춰서는 안되겠지요. 충분히 잘 했어요.\n\n이러한 아쉬움들 5주차 과제에 충분히 다 녹여내보길 바래요. ㅎ\n\nQ) 이렇게 계산된 파생 상태를 전역 상태로 관리하는게 괜찮은 선택인가요?? 실무에서도 이번 과제처럼 한 번에 페이지에 보여질 값들이 많이 바뀌어야할 때 이 모든 값들을 전역 상태로 관리하는지 궁금합니다!\n\n=> 파생 상태를 전역상태로 관리하는 건 여러가지 측면에서 좋지 않습니다. 당장은 필요하지 않을 데이터를 미리 만들어 두는 것보다는 최대한 lazy하게 구성하는 편이 성능면에서도 좋으니까요. 그래서 지연평가라는 방식으로 파생 상태는 함수로 만들어 주고 원본 데이터들의 조합으로 필요할때에만 만들어두었다가 캐싱이나 메모제이션을 통해서 성능을 확보하는 방식을 쓰고 있습니다. 이미 React에서도 그러한 방법을 쓰고 있죠. 정말로 사용자 동작으로만 바뀌는 상태를 최소화하고 나머지는 useMemo등을 통해서 함수 호출이나 계산을 통해 파생상태를 관리하는 방식이 정배랍니다.\n\n수고많았습니다. 5주차 과제도 화이팅입니다!!",
    "enrolledId": "68205c830a72040b80c72cf1",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cbf",
    "result": "PASS",
    "isBestPractice": false,
    "name": "주산들",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/10"
      }
    ],
    "feedback": "수고하셨습니다! ㅋ \n\n\"수제(직접만들다) 리팩토링에 도전한 나 ~~(악악!!!!!😰)~~ \" ㅋㅋㅋㅋ\n실제로 AI에게 모든 것을 맡기면 생산성이 그렇게 까지 높아지지 않는다는 조사 보고서가 나왔죠. 결국 AI가 만든 것들 중에서 좋은 것 좋지 않은 것을 구분하고 판단하고 재지시하고 하는 일들도 다 시간을 써야 하는 일이니까요.\n\n\"...나는 갈아엎지 않고 꾸준히 진행하고 있으니까 뭔가 잘 진행하고 있는 것 같았고 별의별 생각이 다 들었다.\" 라는 건 중요한 인사이트라고 생각해요. 사실 AI가 나오기전에 리팩토링 과제에서 제일 중요하게 강조했던것은 테스트 코드가 없다고 생각하고 내가 수정한 코드가 절대적으로 기존의 로직을 변경하지 않을거라는 확신을 가진채로 조금씩 수정하는 기술이 중요하다고 했거든요\n\n모든 학문들이 그러하듯 원칙은 변하지 않고 그 원칙 위해서 새로운 개념이나 패러다임이 나오는 만큼 정석대로 해보는건 중요하죠. 수고했습니다.\n\n\"...테오님께 내 코드를 짧게나마 보여드리고 피드백을 받았는데 정말 충격적이었다.\n내 코드는 아주 자연스럽게 DOM에서 Data와 상태를 추출해서 가공해 사용하고 있었다.\"\n\n라는 걸 알게 된 것도 AI를 쓰지 않고 본인이 해봤기 때문에 시행착오를 통해서 알게 되었고 그게 이론을 공부하는게 아니라 실습이라는 과제를 통해서 체득으로 얻게 되는 지혜라고 생각해요. 왜 나쁜 방법은 나쁜 결과를 가져오는지를 해보지 않고서는 '그런가 보다'하고 넘어가지 알 길이 없을테니까요.\n\n\"근데 확실히 과제를 하면서 늘었다고 생각된 부분들은 있다.\n...다소 미련한 도전이었을지도 모르겠으나 나름의 보람과 수확은 있지 않았나 하는 생각이 든다.\" \n미련한 거 아니에요. 한번도 가지 않은 길은 한번은 가야 합니다. 잘했어요!\n\nQ) 테오가 생각했을 때 “AI를 잘 활용해달라” 라는 건 어떤 방식에서의 활용을 기대하시고 한 조언이었나요?\n제가 생각했을 때\n1 많이 질문하고 많은 피드백 받기\n2 다양한 AI를 사용해보며 물어보기\n3 바이브 코딩 체험하기?\n4 좋은 프롬포트를 만들어서 먹이고 성과가 나오는 것을 보기\n\n산들이 말해준 모든 내용들이 있지만 AI를 잘 활용한다라는건 활용법 그 자체라기 보다는 AI를 잘 쓰기 위해서는 결국 내가 원하고자 하는 것을 잘 설명할 수 있을 정도의 지식과 구체적인 표현력이 뒷받침되어야 한다는 것을 느꼈으면 좋겠다고 생각했어요. 내가 모르는데 AI를 구슬려서 해내게 하는 능력도 (생각해보니 중요하네요) 중요하겠지만 내가 알고 있고 원하는 방향대로 만들도록 시켜내기 위해서 결국 기본을 잘해야 하는 구나로 귀결되길 바랬어요.\n\n산들의 수제타코야끼를 굽는 과정을 보니 잘 한것 같네요! 수고 많았습니다. 5주차도 화이팅입니다\n",
    "enrolledId": "6821d2570a72040b80c25f8c",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cbd",
    "result": "",
    "isBestPractice": false,
    "name": "김소희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/43"
      }
    ],
    "feedback": "",
    "enrolledId": "67cae59e3255d88e88383b13",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cc1",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "최용훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/3"
      }
    ],
    "feedback": "안녕하세요 용훈님! 4주차 과제 잘 진행해주셨네요 ㅎㅎ 다만 심화과제까지 할 여유는 없었군요 ㅠㅠ\n\n---\n\n> 주어진 시간 동안 기존 기능을 유지하며 함수를 쪼개보려 노력했습니다. 다만 함수를 분리하는 단위에 대해 의문이 생깁니다. 너무 잘게 쪼개다보면 재사용될 여지가 없는 함수가 발생하고, 큰 단위로 쪼개봐도 재사용이 불가능한 기능을 합니다. 이럴 때 어떤 기준으로 나눠야하는지와 제 코드 내에서 적절히 분리된 함수, 더 분리하는게 바람직한 함수에 대한 피드백을 얻고싶습니다.\n\n함수를 꼭 재사용 때문에 분리하는건 아니라고 생각해요. 저는 재사용보단 \"역할\"과 \"목적\"이 더 중요하다고 생각한답니다!\n자세한 내용은 https://junilhwang.github.io/TIL/clean-code/%EC%A1%B0%EA%B0%81%EB%AA%A8%EC%9D%8C/%EC%B6%94%EC%83%81%ED%99%94%EB%A5%BC-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/ 이 글을 참고해주세요!\n\n\n> 같은 리스트를 순회하는 함수에서 반환 타입이 두개일 떄, 한 함수에서 한번 순회하여 두 타입의 값을 반환하는 것이 좋을까요? 두 함수로 나눠 두번 순회하는 것이 좋을까요?\n\n이에 대한 답변은 멘토링 때 했던걸로 기억해요 ㅎㅎ\n멘토링 노트를 참고해주세요!\n\nhttps://www.notion.so/teamsparta/4-4-7-2302dc3ef51480cb98f8e59ce930d434?source=copy_link#2402dc3ef51480c0949eff9b116273b9\n\n> 함수의 독립성을 유지하기 위해 param으로 값을 받고싶지만, 외부 변수, 함수를 참조하는게 편한 경우가 있을 떄, 어떤 기준으로 합리적인지 판단할 수 있을까요?\n\n음.. 구체적인 예시가 있으면 좋을 것 같은데요, 문장만 봤을 땐 \"어떤 상황이 편한걸까?\"에 대한 의문이 있어요! 보통 훅으로 사용할 때, 훅 내부의 함수가 말씀해주신 모습이긴 합니다 ㅎㅎ\n\n> 최대한 가독성 있는 함수 단위는 어떤 정도의 분리가 이뤄져야할까요? 하나하나의 기능을 모두 함수로 나누면, 그것도 오히려 가독성을 해치는 행위가 아닐까하는 생각이 듭니다.\n\n가독성이 좋다는게 뭘까? 에 대한 고민부터 해보시면 좋답니다!\n저는 가독성이 개인 편차가 있다고 생각해요. 저처럼 맨날맨날 다른 사람의 코드를 보는 사람은, 어떤 코드를 보든 이제 고만고만하게 느껴져요. 내 기준에서 읽기 어려운게 아니라 다른사람이 보면 읽기 어려운 것 같은데? 처럼 판단하는거죠 ㅎㅎ\n\n가령, 함수가 너무 깊게 만들어지면 작성자가 아니면 이해하기 어려운게 맞아요.\n하지만 이 코드를 익숙하게 보는 팀원들이라면 이야기가 다르죠. 오히려 깊이있게 추상화된게 코드를 공유하는 사람들끼리는 이해하기 수월할 수도 있답니다.\n\n뭐랄까.. 우리는 리액트를 쓰면서 useState 라는 함수를 볼 때 이게 어떤 일을 하는지 이해하고 있죠.\n하지만 useState 내부가 정확히 어떻게 동작하는지는 이해하는게 굉장히 어려울 수 있어요.\n\n추상화를 잘 해놓은거죠.\n\n가독성이 좋다는 것. 추상화가 잘 되어있다는 것은 이처럼 input에 대한 output을 예측할 수 있는가에 따라 다르다고 생각해요.\n\n사실 명확하게 \"여기까지 분리해야돼!\" 라고 이야기 하기 어려운 부분인거죠 ㅎㅎ\n다만 함수를 \"합성\"하는 방식으로 만들다보면 깊이를 얕게 유지할 수 있답니다!\n\n마찬가지로 https://junilhwang.github.io/TIL/clean-code/%EC%A1%B0%EA%B0%81%EB%AA%A8%EC%9D%8C/%EC%B6%94%EC%83%81%ED%99%94%EB%A5%BC-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/ 이 글의 내용을 참고해보시면 좋을 것 같아요!\n\nlevel2의 함수를 level3에서 조합하여 사용하는거죠.\n\n",
    "enrolledId": "682334f50a72040b80ba7b91",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cc3",
    "result": "",
    "isBestPractice": false,
    "name": "오하늘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/16"
      }
    ],
    "feedback": "",
    "enrolledId": "682457100a72040b80776d24",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cc5",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "김민지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/29"
      }
    ],
    "feedback": "오우 민지님 아쉽게도 과제가 진행이 되지 않았던 것 같네요 ㅠㅠ\n바쁘신 일이 있었겠죠?ㅎㅎ\n우선 순위에 맞춰서 시간 여유가 생기실 때 과제 진행하시고 항해가 끝나기 전에 다같이 고민했던 그 경험이 있었을 때 이야기를 하는 방향으로 진행하시면 좋을 것 같습니다. ",
    "enrolledId": "68245a760a72040b807a5c2c",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cc7",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박소연",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/30"
      }
    ],
    "feedback": "고생하셨습니다 소연님!\n꽤 과제양이 많았던 것 같은데 그래도 마무리를 잘 해주셨네요!\n전반적으로 작성해주신 코드를 보면 아직까지는 조금 더 개선할 여지가 많이 남아있는 것 같아요! 한 함수 또는 컴포넌트에서 너무 많은 책임을 갖고 있는 부분도 보이고 절차적으로 쭉 나열이 되어있다보니 가독성 측면이나 추후 유지보수를 하는데 있어서도 아쉬운 부분도 있구요!\n\n회고에 작성해주신 것 처럼 리팩토링에 시간을 많이 들이다보니 전반적인 시간 관리가 아쉬웠다고 말씀을 해주셨는데요. \n사실 현업에서 이런 전체적인 리팩토링을 1주일안에 모두 마무리 하는 경우는 크게 없죠 ㅎㅎㅎ 큰 수정인 경우 명확한 검증이 뒤따라야 하니까요. 다만, 경험적인 측면에서 그리고 리팩토링 기법을 훈련한다는 측면에서 작게작게 단위를 나눠보면 좋을 것 같아요. 이런 주제들은 테오가 피피티 또는 블로그를 통해 공유해주신 글들을 참고하면 좋을 것 같은데요. 여기서 등장하는 하나의 소제목 대제목들을 내가 이번 리팩토링 기한내에 이번 모듈에서 해결한다는 관점에서 가는거죠. 요즘은 AI를 활용할 수 있으니 모듈의 범위를 좀 더 넓게 잡고 한번에 개선하고 검토하는 것도 방법이 될 수 있겠죠?\n\n개인적으로는 이런 주제를 전부 AI에게 던지고 수정을 맡기는것보다는 어떤 과정으로 작업을 진행할 지 물어보고 검토를 하면서 수정을 진행하는 형태나 작게 작게 명확한 작업 지침을 주고 검토하는게 작업속도 측면에서 아직 괜찮더라구요. 아니면 rules를 매우 구체적이게 주는 것도 방법일 수 있구요.\n\n아무튼 말이 길었는데, 정리하면 리팩토링의 단위는 작게 그리고 검증 이에 따른 반복이 핵심입니다. 작성해주신 것 처럼 검증 단계를 명확하게 하는 연습이 필요합니다.\n\n담주도 화이팅입니다~",
    "enrolledId": "6824c3ac0a72040b80cbc2a3",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cc9",
    "result": "PASS",
    "isBestPractice": false,
    "name": "유윤우",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/15"
      }
    ],
    "feedback": "윤우님 고생하셨습니다!\n과제가 굉장히 방대했는데, 꼼꼼하게 그리고 시간을 많이 들이신 것 처럼 보이네요. 잘 하셨습니다 ㅎㅎ\n작업을 잘게잘게 나눠 접근하는 방식도 좋았어요 :+1 복잡한 문제나 양이 많은 문제들 특히 지금과 같은 과제들처럼 여러 개선점을 한번에 적용해야 하는 경우에서는 좋은 접근법이였습니다. \n\n추가로 중간 회고에서 '약 main을 400줄로 줄였지만 폴더는 services, modules 등 어떤 개념으로 만들었는지 저조차도 헷갈리는 방향으로 분리가 되어있는걸 보았습니다' 라고 해주셨는데, 결국 AI에게 구체적인 작업 지침을 주지 않으면, 검수를 하는 그 과정 조차도 어려워지더라구요. 가능하면 작업 단위도 주제별로 전달하거나, 그것이 어렵다면 AI에게 계획을 세우고 그 작업의 기준과 지침을 보여달라고 한 다음 확인한 뒤에 작업을 시키면 이런 문제는 줄어들 것 같아요.\n\n그럼 질문 주신 부분 답변 남겨볼게요!\n\n> HTML 관련 로직은 views 로 분리하고 순수함수는 utils, 상태나 렌더링에 관련된건 services로 분리해보려 했는데 약간 역할이 혼재되는 함수들이 있습니다. 예를 들면 카트에 아이템을 넣는 함수면 Services에 존재해야 한다고 생각했는데 새로운 상품을 만드는 부분은 views에 있어야 할 것 같고 이런 역할이 혼재된다고 할때 어떻게든 순수함수를 고려하며 분리해야할까요?\n\n답변은 지금의 레이어 구조를 기준으로만 말해볼게요. 일단 이런 분리는 명확한 규칙이 수립되어야 하는게 기본인 것 같아요. 애매한 부분이 생기면 그 부분에 대한 규칙을 명확하게 만들고 앞으로 작성하는 코드들은 모두 그 위치에 작성하는거죠. 그것만으로도 중간은 가는 것 같아요. \n\n일단 지금의 구조에서 규칙을 만든다면\n* 이 함수가 DOM을 직접 조작하나? → Views\n* 비즈니스 규칙이나 도메인 지식이 필요한가? → Services\n* 순수하게 데이터만 변환하나? → Utils\n* 여러 곳에서 재사용되는가? → Utils (순수함수라면)\n뭐 이런식으로 규칙을 만들어보는거죠. 프로젝트에서는 분리 기준도 중요하지만 일관성이 가장 중요한 것 같아요. \n이런식으로 하다보면 질문 주신 부분에 대해서는 일단 명확해지지 않을까요! 추가로 어떻게든 순수함수를 고려한다기보다는 여러 군데에서 사용할 수 있는 로직들을 재사용성을 높이는 관점에서 역할을 분리한다는 관점에서 순수함수로 분리해야 하기 때문에 어떻게서든지 분리한다 관점으로 접근하지는 않았으면 좋겠어요 ㅎㅎ\n\n> 다른곳에서 재사용이 되지않는 순수함수들도 별도 파일에 분리하는게 좋을까요? 코치님이라면 어떠한 디자인패턴 or 아키텍처를 적용하셨을 것 같나요?\n\n저라면 분리를 안했을 거 같긴한데 이것도 결국 규칙을 만들고 지키기만 하면 되는 문제같아요. 함께 둔다면 사용하는 곳에 가깝게 두는 맥락인거고 분리를 한다면 목적에 맞게 폴더를 구획한다는 관점인거니까요! \n\n지금에 있어서 디자인 패턴이나 아키텍처를 적용한다고 하면 저도 막 엄청 대단한 걸 적용하지는 않았을 것 같아요. 실무 관점이라면 최대한 지금의 구조를 확장성 있게 개선하는 관점, 그리고 제대로 동작하면서 기존 실 서비스에 영향을 주지 않아야 하기 때문에 점진적으로 개선할 수 있는 관점의 아키텍처들을 고민해봤을 것 같아요. 당장 시간이 여유롭지 않다면 윤우님이 작성해주신 패턴을 보면 역할 기반으로 폴더가 나눠지고 단순화 되어있는 구조이기도 하고 서비스 레이어에서 담당하는 일이 많아진 거 같아요. 그러다 보니 비즈니스 로직이나 네트워크 통신, 도메인 규칙 등등이 담기게 될 것 같은데요. 이런 부분을 세분화하고 더 나아가는 형태로 고민해보지 않았을까 싶네요.\n\n> 심화과제에서도 동일하게 utils를 순수함수로 두려고 생각했고 react와 연관이 있다면 컴포넌트 내부 혹은 hooks에 두고 컨트롤하려고 했습니다. priceUtils에 renderPriceWithDiscountStyle 함수는 성질이 컴포넌트에 조금 더 가깝다고 느껴지는데 현재 utils 함수에 두는게 맞을까요?\n\n요것도 위에 작성한 것처럼 규칙을 만들고 그대로 지키면 되지 않을까요! ㅎㅎ\n\n> 클린코드에서 지향하는 방향성이나 지침들이 분명히 있지만 저는 판단이 주관적인 부분도 많이 들어가게 되는 것 같습니다. 이렇게 리팩토링을 진행하며 명확하게 판단이 서지 않을 때 어떤 기준으로 코드의 방향성을 정하시나요?\n\n맞아요. 사실 선배들이 말하는 '이렇게 코드를 짜면 이런 장점이 있다'가 있는 것이지 절대적인 법칙에 해당되는 내용이 아니니까 그런것 같아요. 대신 그 선배들이 말하는 기준들을 왜 그렇게 하라고 했는지 읽어보고 공감하는 내용이 있다면 (또는, 지키는데 크게 어렵지도 않고 노력대비 쉽게 얻을 수 있는 효과도 있고) 그걸 명확하게 해나가면 나만의 클린 코드 규칙이 되지 않을까 싶어요.  (대신 대다수가 싫어하는 규칙이 있으니 그런 부분들이 공감이 안된다고 팀 내에서 고집을 부리면 안되겠죠 ㅎㅎㅎ )\n\n> 비대한 함수에서 (handleCalculateCartStuff) 개선을 시작할 때 이 부분은 순수함수로 빼고 이 부분은 ~~로 처리하고 같은 판단이 잘 서지않는건 클린코드에 대한 아티클이나 레퍼런스같은걸 모르는걸까요? 명령형으로 작성된 코드를 파악해서 기능의 돌아가는 원리는 파악이 되지만 이건 순수함수로 개선이 가능하다! 같은 판단이 어렵습니다..\n\n음 일단 클린코드 책에서 말하기에는 함수는 한 가지 책임만 져야 한다. 의존성을 최소로 져야 한다. 사이드 이펙트를 최소화 해야한다 이런 관점으로 많이 이야기가 될 텐데요. 고민이 된다면 함수에서 몇 가지 역할을 하고 있는지 고민을 해보고 그 역할별로 함수를 나누는게 첫번째 기준일 것 같고 아니면, 해당 부분에 있어서 (함수로 분리가 고민되는 부분에 있어서) 항상 같은 입출력을 내는 부분이 있는가? 외부와 상호작용이 있나? 사이드 이펙트가 발생하지는 않을까? 이런 부분들에 대해 질문을 해보고 항상 같은 입출력을 낸다. 사이드 이펙트 없다. 이런 부분들에 대해서 순수함수로 분리할 수 있을 것 같아요!\n\n이번 주도 고생하셨고 많은 고민하셨던 만큼 다음주도 화이팅입니다!",
    "enrolledId": "68249f4e0a72040b80b3568e",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ccb",
    "result": "PASS",
    "isBestPractice": false,
    "name": "최재환",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/52"
      }
    ],
    "feedback": "재환님 수고많으셨습니다~\n\n구독, 펍섭등 이벤트 기반의 구조는 장점이 정말 많은 아키텍처가 될 수도 있지만 말씀하신대로  흐름을 파악하기 힘든 단점도 있습니다.\n차라리 state.js 요녀석을 펍섭 기반의 상태관리도구로 더 확장해서 액션을 주입하는 형태로 구현했으면 어떨까 싶어요. \n마치 리덕스의 리듀서 , 액션처럼 뭔가 stateManager에  addAction() 해서 콜백을 전달하고 stateManager는 콜백에 필요한 state 메타적인 함수를 전달하는 것이죵..\n그래서 calculator의 코드들은 stateManager의 확장 기능들이 되는 형태를 생각해볼 수도 있을 것 같고욥.\n초기화도 render가 해주는게 아니라 stateManger가 필요한 정보를 받아서 stateManger.init()하면 내부에서 초기화하는 것이죵.\n\n그러면 view단도 조금 개선이 필요한데 흠. 이야기하자면 많이 길어질 것 같네요.  일단 지금구조에서만 보면\nupdateItemCount, updateCartSummary 이런 함수들이  직접적으로 구독하는 형태가 되면 어떨까 싶어요.\n좀더 상태를 구분해서 직접 관심있는 주제나 데이터 이름으로 구독을 할 수 있으면 성능적으로 개선도 가능할 것 같고요..\n컴포넌트별로 렌더함수를 별도로 구현해서 컴포넌트단위로 구독을 걸어도 좋을 것 같은데 그러면 더무 큰변화가 될 것 같아요.\nstate 에 proxy를 걸어서 누가 \"나를\" 사용하는가를 감지해고 데이터 별로 실행되는 컴포넌트 렌더러를 분리하면 조금더 프레임웍 수준으로 끌어올릴 수도 있을 것 같아요.\n기본적으로 vue가 이렇게 반응형시스템을 구현하죵...\n\n수고많으셨습니다 대환님!",
    "enrolledId": "68245c9b0a72040b807c704a",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ccd",
    "result": "",
    "isBestPractice": false,
    "name": "이유진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/53"
      }
    ],
    "feedback": "",
    "enrolledId": "682546800a72040b80150daf",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ccf",
    "result": "",
    "isBestPractice": false,
    "name": "이지현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/48"
      }
    ],
    "feedback": "",
    "enrolledId": "682566140a72040b80300e04",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cd1",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "임규원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "FAIL",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/26"
      }
    ],
    "feedback": "규원님 코드는 작성해주신 것 같은데 테스트가 깨져있고 MR의 체크박스도 체크가 확인이 안되네요~ 제가 지금 채점하는 시점에는 그런상황입니다.\n시간이 충분하지 못했던 것 같습니다 ㅜㅜ\n그래도 일부 코드 작성하시느라 수고많으셨습니다. 솔루션 코드 나오면 확인하는 시간을 가지시면 좋을 것 같습니다!",
    "enrolledId": "68247d1b0a72040b8094ff55",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cd3",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "장루빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/59"
      }
    ],
    "feedback": "안녕하세요 루빈님!\n4주차 과제 잘 진행해주셨네요 ㅎㅎ \n다만 심화과제까지 할 시간적 여유가 부족했나보네요 ㅠㅠ\n\nUI, Event, Data 등으로 레이어를 구분해주신 것 같아요!\n좋은 시도라고 생각합니다 ㅎㅎ\n여기에서 아예 react에서 재활용할 수 있는 부분만 AI에게 문의하여 진행해도 좋았을 것 같아요..!\n\n특별한 질문은 없어서 피드백은 여기서 마무리하도록 하겠습니다. 고생하셨스빈다!",
    "enrolledId": "682578680a72040b803edb7c",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cd5",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여찬규",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/61"
      }
    ],
    "feedback": "안녕하세요 찬규님!\n4주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n---\n\n> app-state에 전역 상태를 몰아넣은 구조가 적절한가?\n\n전역 상태를 몰아넣는 방법은 좋다고 생각해요!\n다만 전역 상태를 props를 통해 계속 하위 컴포넌트로 전달하는 방식은 사실 좋은 방법이 아니라고 생각해요.\n\n불필요한 렌더링이 계속 발생하기 때문이죠 ㅎㅎ\n그래서 이럴 때 상태관리 라이브러리를 통해 관리하면 좋답니다!\n\n> feature 간 의존성(shopping-cart에서 product-selection 타입 참조 등)이 생기는 게 괜찮은가?\n\n상호 참조(shopping-cart가 product를 참조하고, 다시 product가 shopping-cart를 참조)가 생기는게 아니라면 무방하다고 생각합니다! 자연스러운 현상이지 않을까 싶네요!\n\n> 실무에서도 이런 구조를 쓰는가?\n\n저희 팀은 이렇게 작성하는 편입니다 ㅎㅎ 다만 feature라는 이름을 직접적으로 사용하진 않고 있어요.\n\n중요한건 feature가 아니라 \"응집도\" 라고 생각합니다. 응집도를 높일 수 있다면 어떤 구조든 상관없다고 생각해요!\n\n지금은 응집도가 높은 형태로 구성해주셔서 사실 feature인지 아닌지는 중요하지 않은 것 같네요 ㅎㅎ\n\n\n---\n\n다만 조금 아쉬운 점은 basic의 코드를 advanced에서 재활용하면 좋았을텐데 이게 아쉬워요!\n\n가령, basic의 service가 advanced에는 없다거나.. 똑같은 이름의 service여도 내부를 보면 코드가 아예 다르네요..!",
    "enrolledId": "684a8d6184ed0f34595bafbf",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cd7",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이의찬",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/37"
      }
    ],
    "feedback": "수고하셨습니다. AI를 활용하겠다고 마음을 먹으니 AI를 더 잘 쓰기 위한 방법들을 찾아가게 되는 군요. 좋습니다. 개발자란 무릇 해결해야할 문제들을 찾아내고 해결하는 방법을 찾는 사람들이니 이러한 접근도 좋다고 생각합니다. \n\n\"...제가 할 일은 AI한테 일을 어떻게 해야할지 생각하고, 그에 따라서 진행하라는 명령 뿐이였습니다.\" 라는 말에서 한번 생각해보면 \"일을 어떻게 해야할지\"가 앞으로는 더 중요해지는 과제가 될거라고 생각해요. 그리고 어떻게 하는지를 제대로 하는지를 감시한다거나 혹은 어떻게 할지는 AI가 더 잘 수행할 수 있도록 하는 방법을 고민하는게 개발자의 역할이 될거라 생각하네요.\n\n어쩄든 \"...React로 마이그레이션해줘\" 라고 그냥 요청만 한다고 내가 원하는걸 AI가 무슨 수로 알고 그걸 수행해낼까요? 그리고 아직 AI는 내가 원하는 것들을 알아내기 위해서 평소에 생각을 나누거나 물어보거나 하지 않고 일단 자기가 자주 학습한대로 그저 해버리는 도구이니까요.\n\nAI를 사용하지 않고 혼자서 가보는 경험도 필요하다고 생각합니다. 내가 한번 해봤던 것을 그대로 재현시키는 걸 AI를 통해서 진행하는 건 좋은 도구의 활용이지만 한번도 가지 않은 길을 내가 가보면서 학습하고 경험하는걸 AI에게 시키는건 아까운 일이지요. 어떤 성찰이 있을지 블로그 길 기대할게요.\n\n앞으로도 AI에게 지시를 구체적으로 하기 위해서 알아야 하는 지식과 그 표현력은 점점 더 중요해질거라고 생각합니다. 기술적인 부분을 언젠가 AI가 뛰어넘을 수도 있겠지만 무엇을 해야하는지를 현재 맥락에 맞춰서 지시하는건 여전히 사람의 몫이자 능력일거라고 생각해요.\n\n변해가는 시대안에서 함께 항해를 하는 동안 의찬이만의 멋진 철학과 경험, 통찰등이 생겨나기를 응원합니다. 수고하셨습니다!",
    "enrolledId": "682576d80a72040b803dc418",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cd9",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신홍준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/57"
      }
    ],
    "feedback": "홍준님 수고많으셨습니다!\n\nQ. 좋은 커스텀 훅은 무엇인지, 커스텀 훅은 어떤 식으로 작성해야 하는지 궁금합니다.\n\n일단 useAutoEvent 아이디어는 좋다고 생각합니다. 그리고 사실 답이 정해진 것은 아닐 것 같아요.\n저라면 \"번개세일\", \"추천할인\"을 별도의 코드로 구분하지 않고 데이터로 활용할 것 같아요.\n.\n...음 저라면 어떻게 할지 적으려니까 너무 많아지는 것 같아서요. 저라면 할 것을 요약하면..\n\n구조적인 것보다는 코드를 리팩토링해서 중복되는 코드를 제거할 것 같아요.\n핵심은 이벤트를 추상화해서 번개인지 추천할인인지는 데이터로 구분하겠다 입니다.\n그리고 만들어진 이벤트 목록을 start, destory하는 인터페이스를 노출하게 될 것 같아요.\n이렇게되면 n개의 타입을 가진 n개의 이벤트를 관리할 수 있게 확장할 것 같습니다.\n왜냐하면 번개세일과 같은 프로모션 타입은 언제든지 늘어날 수 있으니까요.\n이벤트라는 것을 추상화해서 이 이벤트가 어떤 타입인지를 아는 코드를 줄이겠다는 것이 큰 아이디어입니다.\n\n\nQ. 컴포넌트는 어느 정도 단위로 나누어야 할까요?\n\nA. 정답이 없는 것 같아요~ 다만 컴포넌트를 나누려고 나누기보다는 컴포넌트가 나눠달라고 신호를 보낼때 나눠도 충분하다는게 제 생각입니다\n너무 나누는 것부터 시작하시지 마시고 큰 덩어리 컴포넌트 하나라도 괜찮으니 기본적이 아이디어로만 나누고 일단 시작하면서 코드가 보내는 신호를 보면서 그때그때마다 분리하고 혹은 반대로 합쳐도 됩니다.\n\n그 신호는 로직의 그루핑이 될 수 있고, 코드의 재사용일 수도, 혹은 코드의 길이 일 수도 있습니다. \n너무 나누는 것에 집착하실 필요 전혀 없습니다! 나누면 나눌수록 아시다시피 코드를 읽는 시간이 더 걸립니다!",
    "enrolledId": "682983e90a72040b80d5107f",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cdb",
    "result": "PASS",
    "isBestPractice": false,
    "name": "신희원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/38"
      }
    ],
    "feedback": "수고했습니다! AI에게 질문을 잘하는게 중요하죠. 이번 과제에서 특히나 내가 목적지를 모른채로 해달라고 큰일(?) 날 수 있다는 걸 꼭 알려주고 싶었어요. AI를 잘쓴다라는 건 AI를 잘 아는게 아니라 내가 필요한 관련 지식을 잘 설명하는 능력이라 생각해요.\n\n처음에는 계획했던 대로 진행을 했지만 점점 테스트 통과가 목표에 급급해서 아쉽다해서 테스트 코드에 연연하지 않고 리팩토링을 해야겠다 생각을 했다 하지만 테스트 코드가 없이 리팩토링을 하는건 훨씬 더 어려운 작업이랍니다. \n\n내가 수정한 코드가 문제가 없을 거라는 확신을 가진채로 코드 수정을 해야 하니까요. 내가 한땀 한땀 수정을 한다면 이 코드는 이렇게 변경을 해도 버그가 없을거야 라고 진행할 수도 있겠지만 AI를 활용한다면 AI가 수정한 코드가 문제가 없을거라고 확신하면서 리팩토링을 하는게 참 어렵죠.\n\n물론 그 또한 본인이 느껴보는게 제일 좋죠. 테스트 코드가 없는 상태에서 리팩토링을 한번 도전해보는 것도 흥미로운 경험이 될거에요. 코딩은 학문이 아니라 운동의 일종이라 결국 실습하고 경험을 해봐야 성장할 수 있을테니까요. \n\n어떤 순서인지는 중요하진 않아요. 다만 너무 큰 구조 변경을 한번에 하려고 하기 보다는 이런 수정은 해도 코드에 전혀 문제가 생기지 않는 작업을 시작으로 언제든 분리가 가능할 수 있도록 엉켜있는 걸 풀어 두는게 중요해요. 그래서 줄바꿈, 주석 추가, var -> const, 템플릿 변경, 코드 순서 변경, 이름 변경등 코드의 영향을 주지 않는데 코드가 더 나아지는걸 우선으로 함수 빼내기, 순수함수로 만들기, 등등으로 결합도를 낮추는 작업을 하고 나면 이제 서로 연관이 있는 것끼리 한 곳에 두는 응집도를 높이는 방향으로 진행하게 됩니다.\n\n수고많았어요! 5주차 과제도 화이팅입니다!",
    "enrolledId": "68254af40a72040b801869c8",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cdd",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정도은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/35"
      }
    ],
    "feedback": "오 과제를 아주 알차게 진행해주셨네요!\n여러가지 시도도 많이 하신것도 보이고 그 과정에서 저도 인사이트를 얻을 수 있었네요.  다른 분들도 많이 참고가 될 수 있는 자료가 되지 않을까 싶습니다 :+1\n과제 부분에 있어서도 크게 피드백을 드릴게 없네요 ㅎㅎ 관련해서 테스트도 작성해주셨고요. 테스트에 대한 방식이나 작성방식은 개선이 필요한 부분도 있지만 지금 단계에서는 충분하지 않을까! 싶습니다 ㅎㅎ\n\n다만, 이미 아시는것처럼 아직 코드 내에 있는 복잡한 로직들이나 분리가 가능한 부분도 조금은 남아있어 보여요. 클래스 이름을 정하는 로직이라거나, 조건에 맞는 텍스트를 보여주는 부분도 분리가 가능할 것 같구요 ㅎㅎ\n지금 refactor 가이드라고 되어있는 룰도 추후에 코드를 생성하는데 사용할 수 있도록 만들 수 있을 것 같아서 이 부분도 수정해서 재사용하시면 좋을 것 같습니다.\n\n> 추천하시는 ESLint, Prettier 설정, 권장하는 컨벤션이 있으신지 궁금합니다.\n\n따로 추천드리고 싶은 규칙은 대신 방향은 있는 것 같아요 ㅎㅎ\n느슨한 방향에서 빡빡한 규칙을 생성하는 방향으로 나아가는게 좋을것 같아요. 너무 처음부터 지키기 어려운 규칙을 적용하고 규칙을 풀어나가는 방향은 좋은 접근 법은 아닌것 같더라구요. 지금 단계에서 프로젝트에 필요한 명확한 규칙을 적용하고 점점더 안티패턴을 작성하지 않는 방향으로 필요한 부분들을 채워나가는 방향으로 운영하는게 좋아보여요.\n\n> 레거시 코드를 리팩토링할 때 어떤 순서로 접근하는 것을 추천하시나요? 제가 적용한 우선순위(사용되지 않는 변수 정리 → 매직 넘버 제거 → 함수 분리 → 모듈화)가 적절한지 혹은 더 체계적이고 안전한 접근법이 있는지 조언을 구하고 싶습니다.\n\n코드, 그리고 모듈간에 영향범위가 적은 부분부터 수정하려고 하는 것 같아요. 말씀해주신 우선순위는 사실 그런 관점에서 좋은 접근이죠 ㅎㅎ 중요한건 이번 과제를 진행해주시면서 하셨던 것처럼 작은단위로 작업을 나눠 진행하고 반복하는것 같아요. 이부분만 유념하시면 어떤 관점이든 순서든 상관없을 것 같아요!\n\n고생하셨고 다음주도 화이팅입니다~",
    "enrolledId": "682d428a0a72040b80bf93a5",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cdf",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이은지",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/55"
      }
    ],
    "feedback": "수고했어요, 은지! 이번 과제는 레거시 코드를 React 기반의 현대적인 아키텍처로 고도화하는 것이 목표였어요. 바쁜 일정 속에서도 기본 과제는 AI 활용, 심화 과제는 직접 설계로 명확히 구분해서 접근한 전략이 정말 효율적이었습니다. 커밋 과정에 아주 촘촘하게 개선한 과정이 인상깊네요.\n\nZustnad 도입부터 관심사 분리, 특히 할인정책등을 고민하면서 확장 가능한 구조를 만들기 위해 많은 고민을 하면서 이러한 구조를 만든 부분 아주 좋습니다.\n\n복잡한 할인, 적립 정책에 대해서 보다 좋은 데이터 구조를 설계하고 만들고 싶은 부분에 꽃혀서 고민이 정말 많았었군요. 이 과정에서도 AI와 함께 많은 고민들을 나눠본것 같아요. 아주 좋네요. 앞으로도 뭔가 해보고 싶은게 생겼을 때 고민 파트너 대화 파트너로써 AI를 충분히 활용해보면 좋겠다 생각을 합니다.\n\n---\n\nQ) 확장성, 유지보수성을 고려하여 설계한 현재 할인 정책 관련 데이터 타입과 유틸의 구조가 적절한지 궁금합니다.\n\n좋은 고민입니다. 이번 과제는 리팩토링이고 리팩토링의 목표는 최대한 기존의 코드를 유지하면서 나은 구조를 만드는 것이죠. 지금 고민하는건 재설계에 가까운 고민이라고 생각하는데 함께 생각을 해보도록 하죠.\n\n현재의 구조는 PointPolicy enum을 통해 모든 정책을 관리하면서 text, 포인트 계산등의 함수로 만드는 방식으로 분리한 점입니다. 우선 어떤 정책들이 있는지 한눈에 볼 수 있고 배열을 통해서 순차적으로 조립할 수 있도록 만든 부분은 좋았습니다.\n\n반면 지금의 새로운 정책을 추가하거나 삭제를 할때마다 enum, calculator, text 등 여러 곳을 동시에 수정해야 하는 문제가 있네요. 삭제를 해야할 때 한번에 말끔하게 삭제 되는 구조가 아니라면 응집도를 높다고 말하기는 어려워요. 지금의 구조에서 조금만 더 낫게 고쳐본다면 다음과 같이 정책 자체를 하나로 묶어 버리는게 좋다고 생각합니다.\n\njavascript\nconst POINT_POLICIES = {\n  tuesday: {\n    id: 'tuesday',\n    name: '화요일 2배',\n    calculator: (originalPoint) => originalPoint * POINT_MULTIPLIER_TUESDAY,\n    condition: () => new Date().getDay() === 2\n  },\n  keyboardSet: {\n    id: 'keyboard-set', \n    name: `키보드+마우스 세트 +${POINT_BONUS_KEYBOARD_MOUSE_SET}p`,\n    calculator: (originalPoint) => originalPoint + POINT_BONUS_KEYBOARD_MOUSE_SET,\n    condition: (cartItems) => hasKeyboardAndMouse(cartItems)\n  }\n};\n\nQ) 같은 맥락으로, 실제 이커머스 도메인에서는 복잡한 할인, 포인트, 쿠폰 등의 정책을 어떻게 관리하고 반영하는지 궁금합니다.\n\n사실 필요한만큼만 개발을 한다는 전제대로 지금 정도의 수준이라면 복잡한 설계보다는 위와 같이 적절한 객체나 클래스 정도의 수준으로도 충분합니다. 그러나 소스 코드의 수정으로 정책을 변경할 수 있다라는 것은 정책이 바뀔때마다 소스 코드 배포가 필요하다는 말이기에 해당 기능들은 전부 데이터화 되죠.\n\n그렇게 정책을 다루는 코드들이 데이터 베이스화 되고 API등에서 해당 정책들을 모아서 하나의 계산으로 만들어내는 Rule이나 계산식을 만들어주는 코드가 되죠. 나중에는 우선순위라던가 더 큰 상위정책등 - 가령 더 할인율이 큰거 하나만 적용과 같은 - 도 코드화됩니다. 이런한 경우 모바일, 웹 등의 일원화를 위해서 주로 백엔드가 해당 기능들을 구현하게 되죠.\n\n규모와 수준에 따라 달라지고 정책마다 달라지기에 정해진 답은 없는데 도움이 되는 답변이길 바래요.\n\n수고하셨습니다. 다음 주차도 화이팅입니다!\n",
    "enrolledId": "6833c8d54e1c73fff246f798",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ce1",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "양창훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/39"
      }
    ],
    "feedback": "안녕하세요 창훈님!\n4주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다. 다만 심화과제는 진행할 시간이 없었나보네요 ㅠㅠ\n\n---\n\n> 제가 협업 프로젝트에대한 경험이 없어서 그러는데 실제 큰프로젝트에선 무조건 한개의 함수안에서 한개의 책임만을 가지게 하나요? 아니면 상황에 따라 다르게 구현 할까요?~\n\n무조건... 은 없는 것 같아요 ㅋㅋ\n가능하면 한 개의 함수가 한 개의 일만 하도록 만들어야 유지보수 하기가 수월해지기는 해요!\n\n가령 회사에서 팀장은 팀원이 하는 일에 대한 오케스트레이션을 하거나, 매니징을 하거나, 조금 더 어려운 문제를 찾아서 해결방안을 제시하고 위임하는 등 조금 더 넓은 범위의 일을 해야 하는데 자잘한 업무를 한다거나 직접 실무를 하게 된다면 다른 일을 하기가 어려워져요.\n\n여기서 이야기 하는 \"책임\"과 \"한 가지 일\"의 의미는 이런 것들입니다. 나의 책임과 책임에 맡은 일을 하고 있는가 에 대한 부분인거죠.\n\nhttps://junilhwang.github.io/TIL/clean-code/%EC%A1%B0%EA%B0%81%EB%AA%A8%EC%9D%8C/%EC%B6%94%EC%83%81%ED%99%94%EB%A5%BC-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/\n\n제가 최근에 작성한 글인데요, \"한 가지 일\"을 조금 더 구체적으로 정의한 내용이니 한 번 참고 부탁드려요!",
    "enrolledId": "6835a5664e1c73fff2ddfa55",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ce3",
    "result": "",
    "isBestPractice": false,
    "name": "이태영",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/24"
      }
    ],
    "feedback": "",
    "enrolledId": "6825c7b00a72040b8086a6af",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ce7",
    "result": "",
    "isBestPractice": false,
    "name": "이민재",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/32"
      }
    ],
    "feedback": "",
    "enrolledId": "682b2fc10a72040b80322848",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ce5",
    "result": "PASS",
    "isBestPractice": false,
    "name": "허정석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/41"
      }
    ],
    "feedback": "안녕하세요 정석님!\n정석님이 해주신 과제를 보자면 참 뭐랄까... 항상 감동을 받는 것 같아요 ㅎㅎ\n잘 성장하고 있는게 느껴져서 좋습니다!\n\n---\n\n> 심화과제로 리액트 + 타입스크립트를 적용해봤습니다.\n리액트를 사용을 하지 않는 저에게는 지금 프로젝트 구조가 (src/advanced/**/*) 익숙치 않습니다.\n현재는 도메인 중심 설계(Domain-Driven Design) 로 분류를 해놨는데 이 방식이 보편화가 된 방식인지 궁금합니다. 혹은 코치님이 선호하는 구조가 있는지, A 같은 성향의 프로젝트엔 A` 구조 같은 공식이 있는지도 궁금합니다.\n\n제가 방금 디스코드 채널에도 올렸는데요,\nhttps://discord.com/channels/1288769861589270590/1369931146049359912/1401067166190665748\n\ndomain driven으로 만들어주신 것도 좋은 방법이라고 생각합니다.\n다만 저는 설계를 그렇게까지 중요하게 생각하진 않아요 ㅎㅎ\n\n중요한건 요구사항이고, 이 요구사항에 얼마나 잘 대응할 수 있는가가 중요한거죠.\n\n가령, 지금 만들어주신 구조에서 \"할인율 규칙이 50개 정도 추가 된다면!?\" 이라는 가정이 붙었을 때 코드가 어떻게 변화할지, 잘 대응할 수 있을지 고민해보시면 좋답니다!\n\n선호하는 구조도 딱히 없네요..\n다만 응집도가 높은 형태라면 어떤 형태든 상관없다고 생각해요.\n\n응집도를 높게 만드려면 어떻게 해야 좋을지에 대한 본질적인 고민이 필요한거죠 ㅎㅎ\n\n내 코드의 응집도가 높은지 알 수 있는 방법은 일부 코드를 \"모듈화\" 혹은 \"라이브러리로 만들어서 배포\"한다고 가정했을 때 깔끔하게 떼어낼 수 있는까!? 라고 생각해요.\n\n가령, 장바구니 모듈을 만들어서 다른 프로젝트에 붙여본다고 생각하면 편하답니다!\n\n결론은\n\n- 요구사항이 제일 중요하다\n- 응집도를 높일 수 있는 구조면 뭐든 좋다.\n\n이렇게 볼 수 있겠네요!",
    "enrolledId": "68479c49614fe33053f4b25d",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ce9",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/20"
      }
    ],
    "feedback": "ㅋㅋㅋㅋㅋ상수님 고생하셨어요!\n뭔가 커밋로그나 흔적들을 보면 정말 많은 시도를 하셨던것 같네요.\n근데 결론에 대한 부분에 있어서 저는 죄송하시지 않아도 된다고 생각해요. 지금 회고에서도 작성해주신 것 처럼 정확하게 의도에 맞춘 경험을 하셨다고 생각하거든요.\n\n다만, \"바이브 코딩 절대 안하겠습니다\"는 안돼요 ㅎㅎㅎㅎ\n\"AI한테 딱 맞는 질문을 던져줘야 원하는 결과가 나오고, 그냥 이거 해줘 이런 식으로는 한계가 있다\"로 작성해주셨으니까 우리는 잘 맞춘 적절한 요청을 하는 연습을 해야 하는거죠 ㅎㅎ\n아직은 '~해줘 알아서 똑똑하게' 하면 똑똑하게 뚝딱 만드는 AI는 아니지만 사람을 10명써서 할 일을 AI에게 똑똑하게 질문할 수 있는 2명을 써서 할 수 있게 하는건 맞는 것 같아요. \n그럼 저희는 그 2명이 되어야 하지 않을까 싶습니다. \n\n작업의 단위를 작게 작게 하고 테스트나 명확한 피드백 루프를 만들어서 개선하신다면 지금의 나쁜 경험을 좋은 방향으로 바꿀 수 있다고 저는 확신하니까 포기하지 말고 나아가보시죠\n\n(추가로 대규모 파일 그리고 폴더간의 모듈 구조를 파악하고 전반적인 코드를 개선하는게 용량이 커질수록 지금의 LLM이 별도 지침없이 완벽하게 하는 단계는 아닌것 같아요. 그런 부분에서 응답이 모호하고 추상적이게 나올 수 있는건데 이건 시간이 지나고 모델이 발전함에 따라 자연스럽게 사라질 걱정이라고 개인적으로는 생각합니다 ㅎㅎ)\n\n고생하셨고 다음주도 화이팅입니다!",
    "enrolledId": "683fa08b4e1c73fff25b6b7e",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ceb",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이진희",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/34"
      }
    ],
    "feedback": "진희님 고생하셨습니다~\n과제 전반적으로 많은 고민하시고 잘 적용해주신 것 같은데요!\n아쉬운점에서 남겨주신것처럼 이번 큰 규모의 리팩토링을 진행할때에는 명확한 기준 또는 규칙없이 진행이 되다보면 시간이 많이 들게 되는것 대비 명확한 개선을 이뤄내는게 참 어려운 것 같아요. 다음 과제를 진행하실 때는 이런 부분들에 대해서 작업들을 명확하게 작게 작게 나누고 피드백을 거치면서 진행해가시면 더 좋을 것 같습니다.\n\n그럼 이어서 질문 주신거 답변 드려볼게요!\n\n> 이런 식의 폴더 구조/레이어링 방식이 괜찮은 접근인지, 혹은 불필요하게 복잡도를 높이는 구조인지 궁금합니다.\n\n좋은 접근인 것 같아요. 다만 말씀주신 것 처럼 프로젝트 규모에 맞게 잘못된 또는 너무 복잡한 아키텍처를 선택하는건 복잡성만 높이는 안좋은 선택일 수 있어요. 폴더가 텅텅 빈 채로 유지가 될수도 있겠죠. 지금은 과제를 진행하는 부분이기 때문에 여러 방식으로 구현해보는것도 방법일 수 있겠지만, 실무였다면 현재 시점에서(또는 예측가능한 시점까지 고려해서) 가장 효율적인 작은 방식으로 운영을 하면서 점진적으로 개선하는게 좋지 않을까 싶습니다.\n\n> 도메인 레이어에 getProductById 같은 유틸 함수가 들어가는 구조도 괜찮은지 궁급합니다.\n\n넵 적절합니다! 좋은 접근이에요. \n\n> controller 레이어의 역할을 따로 두는 게 실제로 클린한 구조인지\n\n이 부분에 대한 답변도 처음과 같아요. 컨트롤러 레이어가 생기면 결국 뷰랑 비즈니스로직을 명확하게 구분할 수 있게 되는데 작은 규모의 프로젝트에서는 불필요하게 느껴질 수 있겠죠. 명확하게 구분이 필요할 때 도입하면 충분할 것 같아요. 대신 일관되게 작성하면 될 것 같습니다 ㅎㅎ\n\n> 추가 질문\n\n좋은 접근인데요. 이미 알고 계시는 것 처럼 블록별로 분리를 하게 되면 해당 로직에 대해서만 컴포넌트에서 관리할 수 있기 때문에 이상적인 상황이면 좋을 것 같아요. 다만, 아시겠지만 해당 데이터를 최종적으로 수집해서 전송해줘야 하는 케이스들이 있고 한 필드의 값이 다른 필드에 영향을 줘야 하는 케이스가 생긴다면 결국 이상태를 어디에 둘 것인가에 대한 고민은 동일할 것 같아요. 이런 문제들을 쉽게 다루기 위해서 RHF같은 라이브러리들을 쓰는 것 같은데요. 개인적으로 이런 상황에 적용한다면 개선이 크게 느껴질 것 같아서 고민해보셔도 좋을 것 같아요.\n\n이번 주도 고민하셨고 남은 과제도 화이팅입니다!",
    "enrolledId": "683f18534e1c73fff2105065",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47ced",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정유열",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/11"
      }
    ],
    "feedback": "유열님 고생하셨습니다 ㅎㅎ\n회고에서 느껴지는 고생의 흔적이 있네요.\n더러운 패턴들에 대해서 명확하게 정리하고 그 부분에 대해 개선을 하는 방향 접근법 매우 좋았습니다 :+1\n각 패턴들이 왜 위험한지 왜 개선이 되어야 하는지 정리한 부분이 특히 좋았어요 ㅎㅎ\n\n다만, 리뷰에서 남겨주신 것처럼 저라면 코드, 그리고 모듈간에 영향범위가 적은 부분부터 수정하려고 하는 것 같아요.  지금의 과제에서는 명확하게 검증할 수 있는 시나리오가 없기 때문에 변경 후 검증하는 단계에서 사실 시간을 많이 보내야 할 수 밖에 없거든요. 그런 맥락에서 컴포넌트 분리는 꽤나 영향을 많이 줄 수 있는 작업이기에 다시한다는 관점에서 고민하신게 합리적인 해결책이지 않나 싶네요. 중요한건 이번 과제를 진행해주시면서 하셨던 것처럼 작은단위로 작업을 나눠 진행하고 반복하는것 같아요. 이부분만 유념하시면 어떤 관점이든 순서든 상관없을 것 같아요!\n\n고생하셨고 다음 주차도 화이팅입니다!!",
    "enrolledId": "6847a18a614fe33053f85c23",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cef",
    "result": "PASS",
    "isBestPractice": false,
    "name": "임두현",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/27"
      }
    ],
    "feedback": "\n아니 두현님..\nMR 회고내용이 너무 좋네요!\n와 9팀은 정말 인재들이 많네요 ㅎㅎ\n \n내용중에 객체 맵을 활용한 전략패턴 비스무리한 코드는 정말 특 참 좋은 전략이라고 생각해요. \n복잡한 if-else를 먼저 고려하기전에 비교 조건이 단순화 가능하다면 객체 맵을 활용하는 형태가 자바스크립트 다운 선택이라고 생각합니다.\n성능을 떠나서 코드 자체가 확줄고 가독성이 확 올라가거든요 :)\n\n수고많으셨습니다!",
    "enrolledId": "684149af4e1c73fff27b2528",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cf1",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "박준형",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/4"
      }
    ],
    "feedback": "안녕하세요 준형님! 역시 믿고 보는 준형님의 과제네요 ㅎㅎ\n\n### 1. MVVM 패턴 적용에 대한 방향성\n\n저는 react 자체가 mvvm 이라고 생각했는데요, 제가 생각하는 MVVM은 이렇습니다.\n\n- Model: 데이터\n- View: UI(=HTML)\n- ViewModel: UI를 본따서 만든 데이터\n\nreact에서의 view model은 jsx 인거죠 ㅎㅎ 그리고 이 jsx에 변화를 가하면 ui에도 변화가 생기는 모습이 mvvm 이라고 생각했어요.\n\n여튼, 각설하고\n\n현재 작성해주신 패턴에 대해서는 큰 이견이 없는 상태입니다. 제가 생각하기에 View Model 보다는 VAC 에 조금 더 가깝지 않나!? 라는 생각이 들어요! VAC는 component로 분리하는 모습인데, 준형님께서는 hook으로 분리해주신거죠 ㅎㅎ\n\nhttps://wit.nts-corp.com/2021/08/11/6461\n\n그리고 적합함을 판단하는 기준이 필요할 것 같은데요,\n저는 \"요구사항에 잘 대응할 수 있는가\"를 기준으로 살펴볼 것 같아요.\n\n가령, 할인율에 대한 요구사항이 추가된다고 했을 때 이를 잘 대응하는가!? 에 대한 부분인데요\n컴포넌트는 수정하지 않아도 될 것 같고\nViewModel 내부의 로직들을 수정하면 되기 때문에 나쁘지 않다고 생각해요 ㅎㅎ\n\n그런데 제가 코드를 쭉 살펴봤는데...\n안쓰이는 코드가 너무 많네요 ㅠㅠ\n\n심화과제에서 어디서 어떻게 할인이 이루어지는지 파악하는게 지금... 너무 힘들어요\n다른 이유 때문이 아니라 가짜 코드 때문에 힘들달까..\n이름은 할인율에 대한 코드인데 살펴보면 이 코드를 쓰는 곳이 없어요. 테스트는 작성되어있지만...?\n\n- UI가 수정 될 때 -> 핵심 로직을 그대로 사용하면 됨.\n- 비즈니스 로직이 수정될 때 -> MVVM 때문이라기보단... 현재 정리되지 않은 코드들 때문에 애매한 부분이 있음\n\n이렇게 요약할 수 있겠네요!\n\n\n### 2. 페르소나 기반 협업 전략\n\n개인적으로 \"아키텍쳐 전문가\" 라는 페르소나도 있으면 좋을 것 같아요 ㅎㅎ 현재 설계에 대한 장단점, 확작성에 대해 평가하고 개선점을 제안하는 그런 역할이 있으면 어땠을까 싶네요!\n\n이 외에 부분은 무척 좋은 방향이라고 생각합니다.\n\n다만, \"사용자 시나리오\"를 페르소나 단위 보다는 엣지케이스 단위로 정의하면 어땠을까 싶습니다.\n\n최대한 많은 엣지케이스를 뽑아내고\n이 엣지케이스에 대응하기 적절한 전략을 가져오는거죠.\n\n지금은 \"이 설계대로 만들꺼야!\"를 정의 하여 진행하는 방식인데, 저는 제품과 제품의 도메인 대한 설계 전략이 있어야 한다고 생각해요.\n\n목표가 설계가 되기보단, 목표가 제품이 되고 이 제품에 들어맞는 설계를 찾아내는 방식으로 시도해보는거죠\n\n\n### 3. 마이그레이션 시점과 전략\n\n앞선 내용과 이어지는 부분인데요, 꼭 MVVM을 선택해야 했는가? 에 대한 부분이 의문이랄까...\nMVVM으로 했어야 하는 이유가 있으면 좋았을 것 같아요. 필요한 이유를 산출하는 과정 같은게 필요하지 않을까요!?\n\n진입장벽이 높아졌다는게 아마 코드를 수정할 때 알아야할 것들이 많아졌다 라고 제가 이해했는데요,\n\n제가 아마 이 과제를 수행했다면,\n\n기본과제와 심화과제의 코드를 공유하기 위한 domain package 를 하나 더 추가했을 것 같아요 ㅎㅎ\n그리고 이 코드를 양쪽에서 연결하기 위한 장치가 있으면 좋아겠죠? 아니면 아예 그냥 양쪽 모두 reducer로 개선한다거나.\n\n\n### 4. 테스트 전략 및 ViewModel 단위 테스트\n\n저는 ViewModel에 대해서는 100%의 커버리지를 채워주면 어떨까!? 라는 생각입니다. 충분히 현실적인 테스트 전략이라고 생각해요.\n\n저는 component의 비즈니스 로직을 훅으로 분리하고 이 훅에 대해서는 커버리지를 100% 채우려고 하는 편입니다. 그게 저희 팀에서 PR이 머지되어야 하는 조건 중에 하나이기도 해요.\n\n다만 꼭 훅이 알 필요 없는 UI와 관련된 로직은 그냥 Component에 잔류시키는 편이랍니다 ㅎㅎ\n\n### 5. 성능 최적화 및 상태 관리 전략\n\n성능에 대한 관점으로 보자면.. 최악이라고 할 수 있죠 ㅋㅋ\n모든 값이 다 context를 의존하고 있고 context가 최상위 계층을 의존하고 있어요.\n\nMVVM 구조에서 꼭 context를 선택해야 했는가? 라고 했을 때.. 굳이? 라는 생각이 있어요.\n말씀해주신 것 처럼 zustand를 사용하는 방법도 있고!?\n\n무엇보다 모든 값을 다 최상위에서 관리할 필요는 없다고 생각합니다 ㅎㅎ\n더 정확히는, 도메인에 대한 로직은 한 폴더에 묶어서 관리하면 좋지만 \n이 값을 아예 최상위에서 다 내려주는건 다른 문제라고 생각해요.\n\n### 6. 확장성과 유지보수 관점\n\n말씀해주신 것처럼 가령 멀티뷰나 서버 API 변경 등에 대응하기가 지금 당장은 어려울 수 있겠지만\n그런데 또 그렇게 어려운가? 라고 생각해보면 아니라고 생각해요 ㅎㅎ\n현재 구조에서 외부 의존성을 받아들일 수 있는 구멍을 하나 만들어준다거나 하는 방식으로 확장하면 어떨까 싶어요.\n\n\n---\n\n이번 과제를 아예 MVVM으로 만들꺼야! 라는 목표로 진행해주신 것 같아요.\n다만 MVVM을 꼭 써야만하는 이유나 의사결정 과정이 눈에 보이지 않은게 제일 아쉽달까..\n특히 기본과제와의 연결성이 약해요.\n기본과제에서 작성한 코드가 재활용되면 좋겠는데 구조가 완전히 바뀌면서 연결되는 모습이 흐려졌네요 ㅠㅠ\n\n---\n\n현재 할인율 기능이 누락되어서,\n테오코치님과 상의한 결과 \"그러면 아쉽지만 탈락이라고 생각합니다. 리팩토링에서 제일 중요한건 기존 로직을 누락시키지 않는다는 것인데... 기존 로직이 누락된 리팩토링을 구조가 좋다고 잘했다고 할수는 없다고 생각합니다\" 라는 결론이 내려졌어요.\n\n열심히해주셨는데.. 아쉽지만 불합격입니다 ㅠㅠ",
    "enrolledId": "6847a79c614fe33053fc070a",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cf3",
    "result": "PASS",
    "isBestPractice": false,
    "name": "양성진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/42"
      }
    ],
    "feedback": "안녕하세요 성진님! 4주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n\n> 너무 많은 props 전달이 괜찮은가여? OrderSummary에 10개 이상이 props 전달을 하는데 더 나은 데이터 구조화 방법이 있을까요?\n\n현재 props를 관심사에 따라 그룹핑해주면 어떨까 싶어요.\n일단 제가 임의로 추출한건 4가지인데요\n\n```tsx\n<OrderSummary\n\t장바구니데이터={장바구니데이터}\n\t할인율데이터={할인율데이터}\n\t포인트데이터={포인트데이터}\n\tonCheckout={handleCheckout}\n/>\n```\n\n이렇게 네 가지로 분리해서 넘겨주면 어떨까 싶네요!\n\n꼭 1depth로 모든걸 다 처리할 필요는 없답니다 ㅎㅎ\n\n> Layout 컴포넌트 구조가 적절한가요? leftContent/rightContent로 나눴는데 이런 식으로 구조를 나눠보는게 괜찮은가요?\n\n적절함을 판단하는 기준이 뭘까요? 이런 질문은 사실 모호해서 답변드리기가 어려워요.\n다음부터는 \"저는 이러이러한 기준으로 적절함을 판단했고, 그래서 이렇게 작성했어요. 괜찮을까요?\" 처럼 질문을 주셔야 답변드리기가 수월하답니다!\n\n일단 저의 기준을 토대로 이야기드리자면, 저는 \"다양한 요구사항에 대응할 수 있는가\"를 기준으로 판단할 것 같아요.\n여기서 가령 지금은 PC 버전의 UI만 대응할 수 있는데요, 만약에 모바일 버전의 UI를 동시에 대응해야 한다면 left,right 라는 이름이 병목이 될 수 있겠죠!? 모바일에서는 좌/우 UI가 아니라 상/하 UI로 표현이 되어야 할테니까요 ㅎㅎ\n\n> 타입 정의 위치 기준이 따로 있을까요? 언제 types/ 폴더에 빼고, 언제 컴포넌트 내부에 두나요? 따로 이런걸 판단하거나 하는 기준이 있을까요?\n\n현재 정의한 type과 가장 가까운 곳에 위치시키면 좋답니다!\n가령, 내가 작성한 코드를 라이브러리 혹은 모듈로 똑 떼어서 다른 프로젝트에 적용한다고 했을 때 이게 깔끔하게 도려내져야해요.\n함께 쓰이는 코드의 위치가 멀리 있으면 이걸 분리하기가 굉장히 어렵답니다 ㅎㅎ\n즉, 응집도가 낮은거죠.\n\n응집도가 높다면 라이브러리/모듈 등으로 분리하기가 굉장히 쉬워요!\n\n\n---\n\n기본과제에서 작성한 코드를 심화과제에서도 잘 사용해주신 모습이 인상적이네요!\n회고만 더 체계적으로 작성되어있다면 완벽했을 것 같아요..!",
    "enrolledId": "68417c4a4e1c73fff2a66073",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cf7",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이가은",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/36"
      }
    ],
    "feedback": "안녕하세요 가은님! 4주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n> 멘토링 때 답변 못받고 넘어간 부분인데, 코치님이 리팩토링을 진행하신다면 어떤 절차대로 진행하실지 궁금합니다!\n\nAI를 활용한다면.. 아마 이런 질의를 통해 진행할 것 같아요!\n\n1. 현재 테스트 코드와 구현된 코드를 토대로 실제 이 어플리케이션의 요구사항과 엣지케이스를 추출해줘.\n2. 먼저 현재 코드에서 UI에 대한 부분과 비즈니스(도메인)에 대한 부분을 점진적으로 분리하고 싶어. 어떤 단계로 진행하면 좋을지 알려줄 수 있을까?\n3. 계획을 잘 세워줬네! 여기서 내가 하면 더 효과적인 부분과 너를 사용하면 더 효과적인 부분을 구분해줄 수 있을까?\n4. 잘 구분해줬네! 이제 우리가 서로 협업하면서 진행을 해보자.\n\n~~~ 쭊쭊 진행\n\n5. 어느정도 정리가 된 것 같아. 여태까지 진행한 내용을 문서로 만들어줄 수 있을까?\n(문서화 진행)\n\n그 다음 이제 새로운 채팅을 하나 만들어주세요.\n1. 여태까지 내가 작업한 내용이 XXX.md 에 기록되어있어. 이제 다음 단계를 진행할 차례야. 요구사항/엣지케이스/테스트코드/JS 등을 기반으로 react로 구성하고 싶어. 이 때 재활용할 수 있는 코드가 얼마나 있을까?\n2. 그렇다면 재활용할 수 있는 형태가 최대한 많았으면 좋겠어. 이를 토대로 현재 코드를 리팩토링 하고 싶어. 어떤 코드부터 정리하면 좋을지 알려줄 수 있을까? 작업은 내가 해볼게\n3.. 현재까지 진행한 내용을 문서로 정리해줘.\n\n다시 새로운 채팅을 만든 후에\n1. 여태까지 내가 작업한 내용이 XXXX.md 파일에 있어. 이제 작업을 이어서 해야 돼. 리액트로 코드를 구성해줄 수 있을까? 특히 엣지케이스를 꼼꼼하게 채워주면 좋겠어. 무엇보다 기존 코드를 최대한 재활용하는 방식이어야해!\n2. 여태까지 작성된 코드에 대한 단위테스트를 만들고 싶어. UI보단 hook과 function 위주로 테스트를 만들어주고, 엣지케이스가 최대한 많으면 좋겠어.\n\n...\n\n아마 요로코롬 진행했을 것 같아요 ㅎㅎ\n\n> AI를 적극적으로 활용하는건 너무 좋았는데, 열심히 쓰다보니 이게 맞나..? 해당 주차에서 내가 얻어가는게 뭐가 있을까, AI활용성 고민과 AI로의 문제해결 밖에 안남은 것 같은데 만약 복기하게 된다면 어떻게 복기하면 좋을지 고민입니다.\n\n이번 과제의 핵심이 저는 리팩토링이라고 생각해요. 이걸 AI의 도움을 받아서 해결하는거죠. 그렇다면 리팩토링에서 제일 중요한게 뭘까!? 에 대한 질문을 해보시면 좋아요.\n\n가령, 내가 리팩토링을 통해 달성하고자 하는 목표가 무엇인지.\n어떤 구조가 되길 원하는지\n어떤 요구사항을 잘 수용할 수 있는지\n어떤 요구사항에 대해서는 수용하기가 어려운지\n그렇다면 어떻게 또 코드가 구성이 되어있어야 요구사항을 수용하기가 쉬운지\n\n이런 지점들이랍니다!\n\n이러한 목표를 달성하기 위해 AI에게 어떻게 질의하고 기록해야 매끄럽게 흘러갈 수 있을지 고민해보시면 좋아요!\n",
    "enrolledId": "68479688614fe33053f10a5f",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cf9",
    "result": "FAIL",
    "isBestPractice": false,
    "name": "박상수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/23"
      }
    ],
    "feedback": "상수님 수고 많으셨습니다!\nMR 회고 내용이 없네욥~(제가 못찾은건가요? 지금 리뷰하는시점에는 없습니다~)\n역랑을 궁극적으로 발전시키는데에는 동작하는 코드도 중요하지만 코드에대한 생각 정리와 과정에 대한 복기인 것 같습니다!\n다음에는 과제 수행여부에 상관없이 MR회고 내용도 같이 준비해주시면 좋을 것 같습니다~",
    "enrolledId": "684aad6b84ed0f3459763b8d",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cf5",
    "result": "",
    "isBestPractice": false,
    "name": "조영민",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/45"
      }
    ],
    "feedback": "",
    "enrolledId": "684a92b384ed0f34596009d9",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cfb",
    "result": "",
    "isBestPractice": false,
    "name": "김수민",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/50"
      }
    ],
    "feedback": "",
    "enrolledId": "68497d2484ed0f3459b09aca",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cfd",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정민기",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/8"
      }
    ],
    "feedback": "고생하셨습니다 민기님!\n아쉽게 테스트가 통과하지 않아 기본 과제는 불합격 처리 했습니다.\n과제는 잘 진행해주셨는데요! 이미 알고계신것처럼 조금 더 개선할 여지는 있어보여요. 체크리스트에 남아있지 않은 부분들을 채워나가면서 좀 더 개선해보면 좋을것 같습니다 ㅎㅎ\n\n질문 주신 부분 답변 드려보면요.\n\n> 서비스 관점에서의 개선\n\n우선 지금은 서비스 자체가 단순화 되어있는 구조이기도 하고 그러다보니 서비스 레이어에서 담당하는 일이 많아진 거 같아요. 그러다 보니 비즈니스 로직이나 네트워크 통신, 도메인 규칙 등등이 담기게 될 것 같은데요. 이런 부분을 세분화하고 더 나아가는 형태로 고민해보지 않았을까 싶네요. \n\n우선 질문 주신 첫 번째 질문인 도메인 관련 함수들을 서비스 내에 둬야 하는게 맞냐 라는 건 맞아보입니다. 그리고 너무 많은 책임을 지는 것 같아보이면 별도의 레이어로 나누는 식으로 개선해야 할 것 같아요.\n\n그리고 유틸 함수에 있어서도 지금 보여지는건 UI적인 곳에 보여지는 값들을 위치시키는 내용이니 formatter같은 이름으로 UI에 가깝게 두는 형태면 좋지 않을까 싶은 개인적인 의견이 있습니다 ㅎㅎ\n\n고생하셨고 다음주도 화이팅입니다!",
    "enrolledId": "684cd08584ed0f3459eb21b9",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47cff",
    "result": "PASS",
    "isBestPractice": false,
    "name": "강병준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/21"
      }
    ],
    "feedback": "안녕하세요 병준님!\n\n4주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!!\n\n> 리팩토링이나 기능 개발을 하다 보면 전체 흐름은 잡혔는데 세부 구조에서 계속 맴도는 경우가 종종 있습니다. 너무 깊게 고민하다가 진행이 막히는 이런 상황에서는 어떻게 풀어가야 할까요? (개인 프로젝트나 과제처럼 개인이 수행해야 하는 경우가 궁금합니다!)\n\n이럴 땐 일단 한 파일에 다 몰아넣어버리는 것도 나쁘지 않은 방법이라고 생각해요 ㅎㅎ 다 만들어놓고 그 다음에 세세하게 고민하고 분리하는거죠.\n\n어쨌든 일단 돌아가도록 만들어놓는게 제일 중요하지 않을까 싶어요!\n\n그리고, 이 때 개선에 대한 가치 판단은 \"어떻게 해야 다양한 요구사항을 수용할 수 있을까?\" 에 대해 고민해보는거죠!\n\n> 추가로 기능 구현 및 리팩토링을 위한 설계는 어느정도 수준까지 이루어지는게 적절할까요? (너무 추상적인 질문이긴하지만... 전체적인 틀을 잡아주는 방향으로 대답해주시면 감사하겠습니다!!!)\n\n회사 프로젝트와 개인 학습을 위한 프로젝트가 다르다고 생각해요.\n개인학습을 할 때에는 \"오버엔지니어링\"을 해보는게 좋습니다. 최대한 깊이있게 고민해보는거죠. 그러다보면 \"이런 고민은 지금 단계에서 불필요한데!?\" 라고 판단할 수 있어요. 이걸 또 실무에서 적용해보는거죠 ㅋㅋ\n\n기능 구현 및 리팩토링을 위한 설계도... \"어떤 요구사항까지 수용해야 좋을까?\" 를 토대로 고민해보시면 좋답니다!\n\n가령, 할인율에 대한 규칙이 100개정도로 늘어났을 때 이걸 최대한 자연스럽게 수용하는 구조를 상상해보시면 좋아요!\n\n100개가 아니라 무한대의 경우의 수가 있다면 또 어떨까요?\n백오피스에서 계속 할인율 규칙을 만들고 이게 어플리케이션이랑 실시간으로 동기화가 되어야 하는거죠.\n\n이럴 때 내 코드가 수용할 수 있는 구조인가!? 라는 질문을 던져보면 좋답니다.",
    "enrolledId": "684abe3784ed0f345985eaaf",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d01",
    "result": "PASS",
    "isBestPractice": false,
    "name": "김효진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/9"
      }
    ],
    "feedback": "안녕하세요 효진님! 4주차 과제 잘 진행해주셨네요 ㅎㅎ 너무 고생하셨습니다!\n기본과제에 있는 코드를 심화과제에 재활용 하기 위한 노력들이 많이 보이는데요,\n\nutils 폴더에 작성된 다양한 비즈니스 로직을 아예 공용 폴더로 만들어서 기본과제에서도 사용하고 심화과제에서도 사용하는 방식으로 작성이 되었으면 더 좋았을 것 같아요!\n\n특별한 질문은 없어서 피드백은 여기서 마무리하도록 하겠습니다 ㅎㅎ\n고생하셨어요!!\n\n---\n\n안녕하세요 효진님~ 다시 확인해보니 과제에 질문이 생겼네요 ㅎㅎ\n\n> 리팩토링 진행의 우선순위를 어떻게 잡았으면 좀 더 안정적인 코드 리팩토링을 할 수 있었을까요?\n\nAI를 활용한다면.. 저는 아마 이런 질의를 통해 진행할 것 같아요!\n\n1. 현재 테스트 코드와 구현된 코드를 토대로 실제 이 어플리케이션의 요구사항과 엣지케이스를 추출해줘.\n2. 먼저 현재 코드에서 UI에 대한 부분과 비즈니스(도메인)에 대한 부분을 점진적으로 분리하고 싶어. 어떤 단계로 진행하면 좋을지 알려줄 수 있을까?\n3. 계획을 잘 세워줬네! 여기서 내가 하면 더 효과적인 부분과 너를 사용하면 더 효과적인 부분을 구분해줄 수 있을까?\n4. 잘 구분해줬네! 이제 우리가 서로 협업하면서 진행을 해보자.\n\n~~~ 쭊쭊 진행\n\n5. 어느정도 정리가 된 것 같아. 여태까지 진행한 내용을 문서로 만들어줄 수 있을까?\n(문서화 진행)\n\n그 다음 이제 새로운 채팅을 하나 만들어주세요.\n1. 여태까지 내가 작업한 내용이 XXX.md 에 기록되어있어. 이제 다음 단계를 진행할 차례야. 요구사항/엣지케이스/테스트코드/JS 등을 기반으로 react로 구성하고 싶어. 이 때 재활용할 수 있는 코드가 얼마나 있을까?\n2. 그렇다면 재활용할 수 있는 형태가 최대한 많았으면 좋겠어. 이를 토대로 현재 코드를 리팩토링 하고 싶어. 어떤 코드부터 정리하면 좋을지 알려줄 수 있을까? 작업은 내가 해볼게\n3.. 현재까지 진행한 내용을 문서로 정리해줘.\n\n다시 새로운 채팅을 만든 후에\n1. 여태까지 내가 작업한 내용이 XXXX.md 파일에 있어. 이제 작업을 이어서 해야 돼. 리액트로 코드를 구성해줄 수 있을까? 특히 엣지케이스를 꼼꼼하게 채워주면 좋겠어. 무엇보다 기존 코드를 최대한 재활용하는 방식이어야해!\n2. 여태까지 작성된 코드에 대한 단위테스트를 만들고 싶어. UI보단 hook과 function 위주로 테스트를 만들어주고, 엣지케이스가 최대한 많으면 좋겠어.\n\n> AI로 작업을 할 때 중간중간 룰을 바꾸면서 진행하는게 좋지 않은 방법일까요? 아니면 상황에 따라 룰을 변경해도 크게 상관없을까요?\n\n저는 굉장히 자주 바꾸는 편이랍니다 ㅋㅋ 뭔가 마음에 안 들면 그냥 바꿔버린달까...",
    "enrolledId": "6852955b851b4a7da86f237b",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d03",
    "result": "PASS",
    "isBestPractice": false,
    "name": "이지훈",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/5"
      }
    ],
    "feedback": "안녕하세요 지훈님!\n\n> AI 를 적극 활용해 보면서 느낀 점은 AI 에게 명확하게 지시를 내릴 수 있어야 한다는 점이다. 클린코드에서도 클린코드를 만들기 위한 나의 기준이 없다면 AI 를 아무리 활용해도 마음에 드는 결과물을 얻는 것은 매우 어려울 것 이다.\n\n굉장히 중요한 인사이트네요 ㅎㅎ 전적으로 동의합니다!\n\n> 결국 AI 가 작성한 대부분의 코드를 들어내고 직접 코드를 작성하는데 시간을 많이 사용했다. 직접 코드를 작성하면서 느낀 점은 코드를 작성하는 나만의 기준이 없다는 점이다. 폴더와 파일은 어떻게 나눌지, 함수명은 어떻게 지을지, 함수 인자는 객체 형태로만 받을지, 리턴은 어떤 형태로? 이런 것들에 기준이 없다보니 코드를 작성하면서 일관성을 지키기 어려웠다. 이번 챕터를 진행하면서 나만의 컨벤션을 만들어 보는 것도 의미가 있을 것 같다.\n\n맞아요 ㅋㅋ 그리고 컨벤션을 만들어서 eslint로 만들어 배포해서 적용하는 방식도 재밌을 것 같아요!\n\n> 코치님은 어떤 컨벤션을 가지고 코드를 작성하시는지 궁금합니다.\n\n이전에 지수님께서 제가 이전에 공유드렸던 저희 팀의 컨벤션을 아고라에 올려주셨답니다!\n\nhttps://discord.com/channels/1288769861589270590/1391291029226786816/1395759483149488274\n\n중요한건 여기있는 규칙 하나하나를 팀원들과 합의했다는 점이고, 그렇기 때문에 잘 지켜갈 수 있는 규칙이라고 생각해요..!\n\n> 린트는 어떤 옵션을 사용하시는지 궁금합니다.\n\n흠... 너무 많아서 어디서부터 어디까지 설명드려야 좋을지...\n일단 airbnb rule을 상속하여 팀 컨벤션에 맞게 수정해서 사용하고 있어요.\n거의 컨벤션과 정렬이 되어있답니다 ㅎㅎ\n\n",
    "enrolledId": "6852337e851b4a7da82175ff",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d05",
    "result": "",
    "isBestPractice": false,
    "name": "장희진",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/18"
      }
    ],
    "feedback": "",
    "enrolledId": "6853f85d851b4a7da883412b",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d07",
    "result": "PASS",
    "isBestPractice": false,
    "name": "박창준",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/17"
      }
    ],
    "feedback": "고생하셨습니다 창준님.\n이런 코드를 개선하는데에서 즐거움을 느끼셨다니 대단하신데요 ㅎㅎ\n나름의 흐름을 정의하고 접근 하는 방향은 매우 좋았습니다.\n클린 코드의 관점에서도 많은 부분을 고민하셨던 게 문서에 나와있어서 잘 하셨습니다.\n과제에 있어서는 좀 더 개선이 필요한 부분이 있지만 충분히 시간적 여유가 있다면 지금의 관점으로 접근하면 개선이 가능할 것 같아요. 잘 하셨습니다!\n\n질문 주신 부분 답변 드려보고 마무리해볼게요.\n\n> 특정 서비스에서 아주 일부 기능(1~2개 함수)만 사용하기 위해 전체 서비스를 주입하는 건 과도한 의존일까요?\n\n우선 지금의 설계가 나쁘다고는 전혀 생각이 들지는 않는 것 같아요. 회고에서 작성해주신것처럼 서비스간의 의존성을 낮추는 관점, 테스트의 용이성 관점에서 코드 파악이 쉬워지고 응집도도 높아지는 것 같아요. 변경에 유연하기도 하구요. 전혀 과도해보이지는 않아요!\n\n\n고생하셨고 다음주 과제도 이번 주처럼 잘 진행해보시면 좋겠습니다. 화이팅입니다!",
    "enrolledId": "6825b2810a72040b8071d8af",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d09",
    "result": "PASS",
    "isBestPractice": false,
    "name": "여진석",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/62"
      }
    ],
    "feedback": "안녕하세요 진석님! 4주차 과제 잘 진행해주셨네요 ㅎㅎ 고생하셨습니다!\n\n> 이런 리팩토링을 진행할 때 테스트코드가 제일 중요하다고 느낀 것 같습니다.\nAI한테 기본 과제 테스트코드 내용을 그대로 반영해서 React에서 사용하는 코드 기반으로 테스트코드를 만들어달라고 했는데, 기능 자체를 누락해서 만들어주는 일들이 있었습니다. 테스트 코드에서 이런일이 발생해서는 안될텐데, 테스트코드를 AI에게 작성시키는 것에 대해서 어떻게 생각하시는지 궁금합니다!\n\n이건 AI가 잘못한게 아니라 명령을 잘못한거라고 생각해요 ㅋㅋ\n더 정교하게 요구사항을 전달하면 잘 작성해주었으리라 생각합니다.\n\n이런식으로 진행하면 어땠을까요?\n\n1. 현재 테스트 코드와 구현된 코드를 토대로 실제 이 어플리케이션의 요구사항과 엣지케이스를 추출해줘.\n2. 요구사항/엣지케이스/테스트코드/JS 등을 기반으로 react로 구성하고 싶어. 이 때 재활용할 수 있는 코드가 얼마나 있을까?\n3. 그렇다면 재활용할 수 있는 형태가 최대한 많았으면 좋겠어. 이를 토대로 현재 코드를 리팩토링 해줄 수 있을까?\n4. 현재까지 진행한 내용을 문서로 정리해줘.\n\n그 다음에 새로운 채팅을 만든 후에\n5. 여태까지 내가 작업한 내용이 XXXX.md 파일에 있어. 이제 작업을 이어서 해야 돼. 리액트로 코드를 구성해줄 수 있을까? 특히 엣지케이스를 꼼꼼하게 채워주면 좋겠어. 무엇보다 기존 코드를 최대한 재활용하는 방식이어야해!\n\n요로코롬 진행하면 어땠을까 싶네요 ㅎㅎ\n\n> 이렇게 큰 파일 기반의 리팩토링할 때 AI를 사용했더니 비용이 너무 많이 나가게되는 것 같습니다. 이럴 때 token비용을 절약할 수 있는 노하우가 있을까요?\n\n모든 기능을 AI에게 위임하는건 좋지 않다고 생각해요. 가령, js를 react로 전환할 때 재활용할 수 있는 코드가 많다면 굳이 AI를 사용하지 않고 내가 진행해도 빠르게 진행할 수 있었으리라 생각합니다.\n\n그리고 제가 위에 남긴 피드백처럼, 중간정산을 항상 잘 해주세요 ㅎㅎ 진행한 내용을 문서로 남기고 이 문서를 기반으로 다시 새로운 컨텍스트를 만들어서 진행하는거죠.\n\n이렇게 하면 꽤 많이 절약할 수 있답니다!\n\n---\n\n저는 심화과제를 진행할 때 제일 중요한건 기본과제와의 연결성이라고 생각해요. 이게 지금 약해서 아쉽네요..!",
    "enrolledId": "685aa4a8c85f37c52555e223",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d0b",
    "result": "PASS",
    "isBestPractice": true,
    "name": "김휘린",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/51"
      }
    ],
    "feedback": "수고했어요! 전역변수를 해결하는 방식으로 만든 현대적 방법인 store를 떠올리고 변수를 직접 건드리는 형태가 아니라 액션을 통해서 격리하는 방식을 느껴본 부분이 참 좋네요. 또한 테스트가 제일 중요하다고 이 과제를 통해서 느꼈다고 하니 너무 좋습니다.\n\nstore을 만드는데 걸리는 시간이 거의 대부분이었다니 실제로 현업에서도 UI와 기능이 만들어지고 나면 그 다음에 수정하는 건 전부 데이터와 관련해서죠. \n\nAI를 쓰지 않으니 몰입이 된다는 인사이트도 좋네요. 언젠가 우리 모두 AI를 쓰게 되더라도 그 몰입의 감각을 기억하면서 잘 쓰고 있는지 의존하고 있는지 구분하면 좋겠네요\n\n(웃음) \"... 그냥 마음속으로는 내가 basic을 잘 만들어놔서 AI가 쉽게 가져온걸꺼야.. 라고 생각하는 중이긴 합니다..!!\" 라는건 실제입니다. 좋은 응집도와 분리하기 쉬운 구조를 가지고 만든다면 나머지는 정해진 방법이 있다는 뜻이고 그게 우리가 좋은 구조를 유지해야하는 이유인거죠! 잘했습니다. 만약 AI의 능력이 뛰어난 것이라면 내가 아무것도 하지 않아도 잘 했어야 겠죠ㅎ\n\n함수를 어디까지 쪼개야 하는가? 정답은 있죠. 단일 책임이어야 한다는 거, 추상화 계층을 지켜야 한다는 거. 그렇지만 제가 알려준다고 한들 감은 본인이 잡아야 하는거겠죠? 감이 오지 않기에 최대한 다양한 방법들로 시도하면서 이정도가 좋구나 하는 것들을 이번 5주차 6주차 과제를 하면서 느껴보세요.\n\n감을 찾는데 힌트를 느리자면 좋은 코드는 와! 너무 좋다 이런 느낌은 아니에요. 신경 쓰이지 않는 느낌이랍니다. 그래서 나쁜 코드가 아닌 코드들을에서 왜 나는 이 함수 정도면 괜찮다하고 넘어간거지? 하면서 그걸 말로 표현하거나 서술해보려고 해보세요. 경험적으로 감각은 길러지는데 왜 그런가에 대해서 언어로 정립을 해보려고 하면 훨씬 더 빨리 감을 잡을 수 있을거에요.\n\n수고하셨습니다. 5주차 과제도 화이팅입니다.",
    "enrolledId": "6853a924851b4a7da8357a5c",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d0d",
    "result": "PASS",
    "isBestPractice": false,
    "name": "정건휘",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/56"
      }
    ],
    "feedback": "안녕하세요 건휘님! 4주차 과제 잘 진행해주셨네요. 고생하셨습니다~!\n\n---\n\n> 자바스크립트에서 리액트로 변환할 때, 추천하는 아키텍처가 있을까요?\n\n아키텍쳐가 중요하진 않다고 생각해요 ㅎㅎ\n아마 5주차 발제에서 나올 이야기 중에 \"쏙쏙 들어오는 함수형 프로그래밍\"에 대한 내용이 있을 것 같은데요,\n리액트와 호환되는 코드는 순수함수와 데이터일 것이고 이를 잘 분리하기만 해도 큰 도움이 된답니다!\n\n> 자바스크립트로 개발을 많이 안해보아서 폴더구조나 패턴에 대해서 고민이 됩니다.\n\n저는 '응집도'를 높일 수 있는 방법이면 무엇이든 좋다고 생각해요.\n'응집도'가 높은 모습은... 가령 현재 코드에서 \"장바구니 모듈\"을 만든다고 가정했을 때 이를 깔끔하게 분리하여 제공할 수 있을지 보면 좋답니다. 깔끔하게 분리한다 = 한 폴더를 통째로 옮긴다 이렇게 보셔도 좋을 것 같아요.\n\n가령, 보통 회사에서는 기능조직(개발자들이 한 팀)과 목적조직(제품 중심으로 기획자 / 디자이너 / 개발자 / PO 가 한 팀)이 있는데요\n목적조직을 그대로 다른 회사에 옮겨도 어색함이 없지만, 기능조직으로 뿔뿔히 흩어져잇는 기획자/디자이너/개발자/PO를 다른 회사로 함께 옮긴다고 했을 때는 병목이 무척 많이 생길 수 있답니다. 모듈화가 어려운거죠.\n\n그래서 응집도를 어떻게 높일 수 있을까!? 에 대한 고민을 해보시면 폴더구조에 대한 문제도 자연스럽게 풀이되리라 생각합니다!",
    "enrolledId": "6859f165c85f37c525cd8f44",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d0f",
    "result": "PASS",
    "isBestPractice": false,
    "name": "현지수",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/46"
      }
    ],
    "feedback": "지수님 고생하셨습니다. \n작성하신 문서를 읽는데도 시간이 굉장히 오래걸렸는데요. 꼼꼼하게 잘 작성해주신걸 보니 과제를 어떤 방향으로 진행할 수 있었는지 명확하게 이해할 수 있었습니다.  시각화한 다이어그램도 좋았어요 :+1\n과제는 전반적으로 매우 잘 작성해주셨어요! 크게 피드백 드릴만한 내용이 없는 것 같습니다. \n\n궁금하셨던 내용 답변드려보고 마무리 해볼게요.\n\n> 도메인 중심 설계 + MVC 패턴의 적절성\n\n좋은 접근법이였어요! 비즈니스 로직들을 미리 나눠둔 덕분에 리액트로 마이그레이션 할 때 별도 분리를 진행하면서 코드를 재작성하지 않아도 되었던것으로 생각이 됩니다. :+1\n\n> 2. React 상태 관리\n\n단일 진실 공급원 관점에서는 한 곳에서 관리를 하면 일관성이 보장된다는 점도 있고 상태 변화를 한 곳에서 추적할 수 있기 때문에 함께 업데이트 되어야 하는 값들이 자연스럽게 처리될 수 있긴 한 것 같아요. \n지금의 단계에서는 상품의 양이나 성능 이슈가 발생할 만큼은 걱정하지 않아도 괜찮은 수준인 것 같고, 최적화는 문제가 발생하는 그 시점에 고민을 하면 되기 때문에 갠적으로는 분리를 하면 오히려 복잡도만 높아질수도 있을 것 같네요!\n\n> 전체적인 개선 방향\n\n걱정하실 필요없이 잘 작성해주셨어요. useReducer같은 것들을 사용해서 명확하게 상태를 관리해주시고 관심사의 분리나 훅을 구성하는 부분들도 너무 잘 해주셨습니다. 더 나아간다면 앞선 주차때 했던 메모이제이션이나 에러 바운더리, suspense, 합성 패턴 같은것들이나... 포탈같은 것들을 활용해보는것?들 정도이지 않을까 싶네요!\n\n이번 주 과제 너무 잘해주셨고 다음주도 이번주처럼 잘 하시길 바랍니다!\n",
    "enrolledId": "68542193851b4a7da8a3a270",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d13",
    "result": "",
    "isBestPractice": false,
    "name": "한재원",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "685e1e58c85f37c52567068f",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d11",
    "result": "",
    "isBestPractice": false,
    "name": "정용준",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "FAIL",
      "FAIL",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/12"
      }
    ],
    "feedback": "",
    "enrolledId": "685e1202c85f37c525604396",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d16",
    "result": "PASS",
    "isBestPractice": false,
    "name": "권지호",
    "badge": "블루",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": "https://github.com/hanghae-plus/front_6th_chapter2-1/pull/7"
      }
    ],
    "feedback": "우선 지호님.. 회고문서 정말 대박이네요..\n이렇게 회고 열심히 작성해주신 분은 처음입니다.\n열정이 보입니다!!\n\nQ. FSD기반 슬라이스 구조..\n\nA. 코드를 어떻게 하면 독립적이고 재사용가능성 있게 만들 수 있는지는 저도 아직까지 화두이고 항상 생각이 바뀌는 것 같아요. 어차피 정답은 없는 것일 것 같아요.\n\"이 프로젝트에서는 현재의 구조가 최선으로 보인다\" 정도의 믿음으로 필요한 부분들을 개선하려는 노력이 더 중요한 것 같습니다 끝판왕은 없으니까요.\n\n저도 FSD의 슬라이스와 세그먼트구조는 괜찮다고 생각해요 컴포넌트 기반으로 개발하는 것이 일상화 된 상황에서는 어찌보면 자연스럽게 만들어지는 형태가 아닐까 생각합니다.\n다만 레이어부분은 FSD가 정해놓은 것 보다는 프로덕트에 맞게 팀에서 적절히 다시 구성하는 편이 좋다는 생각정도만 하고 있습니다.\n이렇게 프로젝트에 맞게 레이어를 구성해 위계를 만들고, 각 컴포넌트는 추상화된 개념으로 일관성있게 세그먼트 형태로 나눠서 개발하는 형태, 거기에 더해 수평적으로 공통적으로 사용할 수 있는 레이어정도만 추가되면 저는 일단 기본은 커버하는 구조라고 생각합니다.\n물론 이것도 프로젝트마다 다를 것 같아요. 지금 지호님 이 잡으신 구조는 저는 오히려 FSD를 억지로 구현하려는 것보다, 장점만 취한 심플하고 좋은 구조라고 생각합니다.\n어떻게 보면 제가 말씀드린 요건들을 다 갖춘것 같아요 다만 컴포넌트의 레이어 구분이 없긴하지만 사실 지금 과제를 기준으로 볼때는 레이어 구분은 오히려 오버엔지니어링일지도 모르겠네요.\n\nQ. 훅들의 의존\n\nA. 훅이 하나의 역할로만 잘 나눠지면 나줘질수록 오히려 의존성은 더 높아지는 것 같아요 어떻게보면 중복을 제거하는 과정이니 당연한 것 아닌 가 싶습니다.\n의존은 피할 수 없을 것 같고 다만 훅도 모두 같은 훅으로 보지말고 훅도 적절한 개념의 레이어로 추상화해서 서로 위계를 만들고 의존의 방향을 설정해주 형태로 유지를 하는 편이 저는 옳은 것 같아요. 이것은 코드의 위치로도 구분할 수 있고 단순히 개념적으로 약속하고 네이밍으로 프리픽스나 서픽스를 다는형태로 구분할 수도 있을 것 같아요. 일단 레이어를 구분하기로 했다면 어떤형태로는 구분할 필요는 있어보입니다.\n\nQ. 추상화 레벨의 일관성을 맞추기 위해 이런식으로 다른 훅을 조합하는 역할만 하는 훅이 만들어지는 경우가 생기는 것 같습니다.\n이러한 분리도 의미가 있을까요?\n\nA. 어떻게 보면 2번째 질문의 답변에서 같이 답변된 것 같은데요. 넵 이러한 분리도 당연히 의미가 있는 것 같아요. 기본 재료에 해당하는 훅이 있고 그런 레이어를 베이스훅 뭐 이런 이름으로 부르기로 \"약속\"할 수 있을 것 같아요. 그리고 그 재료들을 활용해서 더 추상화된 개념의 작업을 수행하는 훅도 있겠쭁. 다만 이때 의존의 방향을 한방향으로 흐르는 것으로 약속을 해야할 것 같아요. 레이어 안에서 의존을 허용할지 말지도 규칙을 정해야할 것이고요. 재사용성을 위해 어쩔수 없는 부분이라고 생각합니다.",
    "enrolledId": "686387e2c85f37c52555fc22",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  },
  {
    "_id": "688452c320b6a864e1c47d18",
    "result": "",
    "isBestPractice": false,
    "name": "차현빈",
    "badge": "화이트",
    "stackToLearn": "TypeScript",
    "totalAssignmentProgress": [
      "PASS",
      "PASS",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "answers": [
      {
        "question": {
          "_id": "688452c320b6a864e1c47b63",
          "name": "STEP08 요구사항을 만족한 PR 링크를 제출해주세요.",
          "placeholder": "PR링크를 제출해주세요.",
          "createdAt": "2025-07-26T13:00:03.044Z",
          "updatedAt": "2025-07-26T13:56:13.685Z"
        },
        "answer": ""
      }
    ],
    "feedback": "",
    "enrolledId": "68678936c85f37c52506d1fc",
    "assignmentId": "688452c320b6a864e1c47b79",
    "assignmentName": "STEP08 클린 코드 심화과제"
  }
]